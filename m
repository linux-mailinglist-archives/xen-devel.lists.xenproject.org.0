Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 02FBBE3210
	for <lists+xen-devel@lfdr.de>; Thu, 24 Oct 2019 14:16:11 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iNc0L-0005ZE-3V; Thu, 24 Oct 2019 12:14:13 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=VKnL=YR=redhat.com=david@srs-us1.protection.inumbo.net>)
 id 1iNc0K-0005Ye-1n
 for xen-devel@lists.xenproject.org; Thu, 24 Oct 2019 12:14:12 +0000
X-Inumbo-ID: c6804a9e-f657-11e9-949f-12813bfff9fa
Received: from us-smtp-1.mimecast.com (unknown [205.139.110.120])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTP
 id c6804a9e-f657-11e9-949f-12813bfff9fa;
 Thu, 24 Oct 2019 12:14:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1571919246;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=BdHwj2SGut21P5mUR9vWZhfFecp/N83MWMVJ97x7s00=;
 b=T4nUTKuop9UVBTKArpbw/r4KDrADT1Mw4HZKgwSBG11GnyoBMVGQl/eq0jYD+n/mdG4J4Z
 NHmnQWAyvFIzQRPXmt5gjIrc3kqHt7Qp5f3pR66gzd/qwNpYfGv/0zbCRBU3Qb8higoJqT
 4jaApMQWE5WvnLdHFSZ0Ehx08Fa9vEk=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-376-cghgf-YzMZOgToF4kkZ_Ag-1; Thu, 24 Oct 2019 08:14:04 -0400
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
 [10.5.11.23])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id BEA09801E5C;
 Thu, 24 Oct 2019 12:13:57 +0000 (UTC)
Received: from t460s.redhat.com (ovpn-116-141.ams2.redhat.com [10.36.116.141])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 7969C8088;
 Thu, 24 Oct 2019 12:13:39 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: linux-kernel@vger.kernel.org
Date: Thu, 24 Oct 2019 14:09:37 +0200
Message-Id: <20191024120938.11237-10-david@redhat.com>
In-Reply-To: <20191024120938.11237-1-david@redhat.com>
References: <20191024120938.11237-1-david@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-MC-Unique: cghgf-YzMZOgToF4kkZ_Ag-1
X-Mimecast-Spam-Score: 0
Subject: [Xen-devel] [PATCH v1 09/10] mm/memory_hotplug: Don't mark pages
 PG_reserved when initializing the memmap
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: linux-hyperv@vger.kernel.org, Michal Hocko <mhocko@suse.com>,
 =?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= <rkrcmar@redhat.com>,
 kvm@vger.kernel.org, David Hildenbrand <david@redhat.com>,
 KarimAllah Ahmed <karahmed@amazon.de>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Dave Hansen <dave.hansen@linux.intel.com>,
 Alexander Duyck <alexander.duyck@gmail.com>, Michal Hocko <mhocko@kernel.org>,
 Paul Mackerras <paulus@ozlabs.org>, linux-mm@kvack.org,
 Pavel Tatashin <pavel.tatashin@microsoft.com>,
 Paul Mackerras <paulus@samba.org>, Michael Ellerman <mpe@ellerman.id.au>,
 "H. Peter Anvin" <hpa@zytor.com>, Wanpeng Li <wanpengli@tencent.com>,
 Alexander Duyck <alexander.h.duyck@linux.intel.com>,
 "K. Y. Srinivasan" <kys@microsoft.com>,
 Dan Williams <dan.j.williams@intel.com>, Kees Cook <keescook@chromium.org>,
 devel@driverdev.osuosl.org, Stefano Stabellini <sstabellini@kernel.org>,
 Stephen Hemminger <sthemmin@microsoft.com>,
 "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>,
 Joerg Roedel <joro@8bytes.org>, x86@kernel.org,
 YueHaibing <yuehaibing@huawei.com>,
 "Matthew Wilcox \(Oracle\)" <willy@infradead.org>,
 Mike Rapoport <rppt@linux.ibm.com>, Peter Zijlstra <peterz@infradead.org>,
 Ingo Molnar <mingo@redhat.com>, Vlastimil Babka <vbabka@suse.cz>,
 Anthony Yznaga <anthony.yznaga@oracle.com>, Oscar Salvador <osalvador@suse.de>,
 "Isaac J. Manjarres" <isaacm@codeaurora.org>,
 Matt Sickler <Matt.Sickler@daktronics.com>, Juergen Gross <jgross@suse.com>,
 Anshuman Khandual <anshuman.khandual@arm.com>,
 Haiyang Zhang <haiyangz@microsoft.com>, Sasha Levin <sashal@kernel.org>,
 kvm-ppc@vger.kernel.org, Qian Cai <cai@lca.pw>,
 Alex Williamson <alex.williamson@redhat.com>,
 Mike Rapoport <rppt@linux.vnet.ibm.com>, Borislav Petkov <bp@alien8.de>,
 Nicholas Piggin <npiggin@gmail.com>, Andy Lutomirski <luto@kernel.org>,
 xen-devel@lists.xenproject.org, Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Vitaly Kuznetsov <vkuznets@redhat.com>, Allison Randal <allison@lohutok.net>,
 Jim Mattson <jmattson@google.com>, Christophe Leroy <christophe.leroy@c-s.fr>,
 Mel Gorman <mgorman@techsingularity.net>, Cornelia Huck <cohuck@redhat.com>,
 Pavel Tatashin <pasha.tatashin@soleen.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Thomas Gleixner <tglx@linutronix.de>, Johannes Weiner <hannes@cmpxchg.org>,
 Paolo Bonzini <pbonzini@redhat.com>, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

RXZlcnl0aGluZyBzaG91bGQgYmUgcHJlcGFyZWQgdG8gc3RvcCBzZXR0aW5nIHBhZ2VzIFBHX3Jl
c2VydmVkIHdoZW4KaW5pdGlhbGl6aW5nIHRoZSBtZW1tYXAgb24gbWVtb3J5IGhvdHBsdWcuIE1v
c3QgaW1wb3J0YW50bHksIHdlCnN0b3AgbWFya2luZyBaT05FX0RFVklDRSBwYWdlcyBQR19yZXNl
cnZlZC4KCmEpIFdlIG1hZGUgc3VyZSB0aGF0IGFueSBjb2RlIHRoYXQgcmVsaWVkIG9uIFBHX3Jl
c2VydmVkIHRvIGRldGVjdAogICBaT05FX0RFVklDRSBtZW1vcnkgd2lsbCBubyBsb25nZXIgcmVs
eSBvbiBQR19yZXNlcnZlZCAoZXNwZWNpYWxseSwKICAgYnkgcmVseWluZyBvbiBwZm5fdG9fb25s
aW5lX3BhZ2UoKSBmb3Igbm93KS4gRGV0YWlscyBjYW4gYmUgZm91bmQKICAgYmVsb3cuCmIpIFdl
IG1hZGUgc3VyZSB0aGF0IG1lbW9yeSBibG9ja3Mgd2l0aCBob2xlcyBjYW5ub3QgYmUgb2ZmbGlu
ZWQgYW5kCiAgIHRoZXJlZm9yZSBhbHNvIG5vdCBvbmxpbmVkLiBXZSBoYXZlIHF1aXRlIHNvbWUg
Y29kZSB0aGF0IHJlbGllcyBvbgogICBtZW1vcnkgaG9sZXMgYmVpbmcgbWFya2VkIFBHX3Jlc2Vy
dmVkLiBUaGlzIGlzIG5vdyBub3QgYW4gaXNzdWUKICAgYW55bW9yZS4KCmdlbmVyaWNfb25saW5l
X3BhZ2UoKSBzdGlsbCBjYWxscyBfX2ZyZWVfcGFnZXNfY29yZSgpLCB3aGljaCBwZXJmb3Jtcwpf
X0NsZWFyUGFnZVJlc2VydmVkKHApLiBBRkFJS1MsIHRoaXMgc2hvdWxkIG5vdCBodXJ0LgoKSXQg
aXMgd29ydGggbm90aGluZyB0aGF0IHRoZSB1c2VycyBvZiBvbmxpbmVfcGFnZV9jYWxsYmFja190
IG1pZ2h0IHNlZSBhCmNoYW5nZS4gRS5nLiwgdW50aWwgbm93LCBwYWdlcyBub3QgZnJlZWQgdG8g
dGhlIGJ1ZGR5IGJ5IHRoZSBIeXBlclYKYmFsbG9vbm0gd2VyZSBzZXQgUEdfcmVzZXJ2ZWQgdW50
aWwgZnJlZWQgdmlhIGdlbmVyaWNfb25saW5lX3BhZ2UoKS4gTm93LAp0aGV5IHdvdWxkIGxvb2sg
bGlrZSBvcmRpbmFyaWx5IGFsbG9jYXRlZCBwYWdlcyAocmVmY291bnQgPT0gMSkuIFRoaXMKY2Fs
bGJhY2sgaXMgdXNlZCBieSB0aGUgWEVOIGJhbGxvb24gYW5kIHRoZSBIeXBlclYgYmFsbG9vbi4g
VG8gbm90CmludHJvZHVjZSBhbnkgc2lsZW50IGVycm9ycywga2VlcCBtYXJraW5nIHRoZSBwYWdl
cyBQR19yZXNlcnZlZC4gV2UgY2FuCm1vc3QgcHJvYmFibHkgc3RvcCBkb2luZyB0aGF0LCBidXQg
aGF2ZSB0byBkb3VibGUgY2hlY2sgaWYgdGhlcmUgYXJlCmlzc3VlcyAoZS5nLiwgb2ZmbGluaW5n
IGNvZGUgYWJvcnRzIHJpZ2h0IGF3YXkgaW4gaGFzX3VubW92YWJsZV9wYWdlcygpCndoZW4gaXQg
cnVucyBpbnRvIGEgUGFnZVJlc2VydmVkKHBhZ2UpKQoKVXBkYXRlIHRoZSBkb2N1bWVudGF0aW9u
IGF0IHZhcmlvdXMgcGxhY2VzIGluIHRoZSBNTSBjb3JlLgoKVGhlcmUgYXJlIHRocmVlIFBhZ2VS
ZXNlcnZlZCgpIHVzZXJzIHRoYXQgbWlnaHQgYmUgYWZmZWN0ZWQgYnkgdGhpcyBjaGFuZ2UuCiAt
IGRyaXZlcnMvc3RhZ2luZy9nYXNrZXQvZ2Fza2V0X3BhZ2VfdGFibGUuYzpnYXNrZXRfcmVsZWFz
ZV9wYWdlKCkKICAgLT4gV2UgbWlnaHQgKHVubGlrZWx5KSBzZXQgU2V0UGFnZURpcnR5KCkgb24g
YSBaT05FX0RFVklDRSBwYWdlCiAgIC0+IEkgYXNzdW1lICJ3ZSBkb24ndCBjYXJlIgogLSBkcml2
ZXJzL3N0YWdpbmcva3BjMjAwMC9rcGNfZG1hL2ZpbGVvcHMuYzp0cmFuc2Zlcl9jb21wbGV0ZV9j
YigpCiAgIC0+IFdlIG1pZ2h0ICh1bmxpa2VseSkgc2V0IFNldFBhZ2VEaXJ0eSgpIG9uIGEgWk9O
RV9ERVZJQ0UgcGFnZQogICAtPiBJIGFzc3VtZSAid2UgZG9uJ3QgY2FyZSIKIC0gbW0vdXNlcmNv
cHkuYzogY2hlY2tfcGFnZV9zcGFuKCkKICAgLT4gQWNjb3JkaW5nIHRvIERhbiwgbm9uLUhNTSBa
T05FX0RFVklDRSB1c2FnZSBleGNsdWRlZCB0aGlzIGNvZGUgc2luY2UKICAgICAgY29tbWl0IDUy
ZjQ3NmEzMjNmOSAoImxpYm52ZGltbS9wbWVtOiBCeXBhc3MgQ09ORklHX0hBUkRFTkVEX1VTRVJD
T1BZCiAgICAgIG92ZXJoZWFkIikKICAgLT4gSXQgaXMgdW5jbGVhciB3aGV0aGVyIHdlIHJhbGx5
IGNhcmVkIGFib3V0IFpPTkVfREVWSUNFIGhlcmUgKEhNTSkgb3IKICAgICAgc2ltcGx5IGFib3V0
ICJQR19yZXNlcnZlZCIuIFRoZSB3b3JzdCB0aGluZyB0aGF0IGNvdWxkIGhhcHBlbiBpcyBhCiAg
ICAgIGZhbHNlIG5lZ2F0aXZlIHdpdGggQ09ORklHX0hBUkRFTkVEX1VTRVJDT1BZIHdlIHNob3Vs
ZCBiZSBhYmxlIHRvCiAgICAgIGlkZW50aWZ5IGVhc2lseS4KICAgLT4gVGhlcmUgaXMgYSBkaXNj
dXNzaW9uIHRvIHJpcCBvdXQgdGhhdCBjb2RlIGNvbXBsZXRlbHkKICAgLT4gSSBhc3N1bWUgIm5v
dCByZWxldmFudCIgLyAid2UgZG9uJ3QgY2FyZSIKCkkgYXVkaXRlZCB0aGUgb3RoZXIgUGFnZVJl
c2VydmVkKCkgdXNlcnMuIFRoZXkgZG9uJ3QgYWZmZWN0IFpPTkVfREVWSUNFOgogLSBtbS9wYWdl
X293bmVyLmM6cGFnZXR5cGVpbmZvX3Nob3dtaXhlZGNvdW50X3ByaW50KCkKICAgLT4gTmV2ZXIg
Y2FsbGVkIGZvciBaT05FX0RFVklDRSwgKCsgcGZuX3RvX29ubGluZV9wYWdlKHBmbikpCiAtIG1t
L3BhZ2Vfb3duZXIuYzppbml0X3BhZ2VzX2luX3pvbmUoKQogICAtPiBOZXZlciBjYWxsZWQgZm9y
IFpPTkVfREVWSUNFICghcG9wdWxhdGVkX3pvbmUoem9uZSkpCiAtIG1tL3BhZ2VfZXh0LmM6ZnJl
ZV9wYWdlX2V4dCgpCiAgIC0+IE9ubHkgYSBCVUdfT04oUGFnZVJlc2VydmVkKHBhZ2UpKSwgbm90
IHJlbGV2YW50CiAtIG1tL3BhZ2VfZXh0LmM6aGFzX3VubW92YWJsZV9wYWdlcygpCiAgIC0+IE5v
dCByZWxldmVhbnQgZm9yIFpPTkVfREVWSUNFCiAtIG1tL3BhZ2VfZXh0LmM6cGZuX3JhbmdlX3Zh
bGlkX2NvbnRpZygpCiAgIC0+IHBmbl90b19vbmxpbmVfcGFnZSgpIGFscmVhZHkgZ3VhcmRzIHVz
CiAtIG1tL21lbXBvbGljeS5jOnF1ZXVlX3BhZ2VzX3B0ZV9yYW5nZSgpCiAgIC0+IHZtX25vcm1h
bF9wYWdlKCkgY2hlY2tzIGFnYWluc3QgcHRlX2Rldm1hcCgpCiAtIG1tL21lbW9yeS1mYWlsdXJl
LmM6aHdwb2lzb25fdXNlcl9tYXBwaW5ncygpCiAgIC0+IE5vdCByZWFjaGVkIHZpYSBtZW1vcnlf
ZmFpbHVyZSgpIGR1ZSB0byBwZm5fdG9fb25saW5lX3BhZ2UoKQogICAtPiBBbHNvIG5vdCByZWFj
aGVkIGluZGlyZWN0bHkgdmlhIG1lbW9yeV9mYWlsdXJlX2h1Z2V0bGIoKQogLSBtbS9odWdldGxi
LmM6Z2F0aGVyX2Jvb3RtZW1fcHJlYWxsb2MoKQogICAtPiBPbmx5IGEgV0FSTl9PTihQYWdlUmVz
ZXJ2ZWQocGFnZSkpLCBub3QgcmVsZXZhbnQKIC0ga2VybmVsL3Bvd2VyL3NuYXBzaG90LmM6c2F2
ZWFibGVfaGlnaG1lbV9wYWdlKCkKICAgLT4gcGZuX3RvX29ubGluZV9wYWdlKCkgYWxyZWFkeSBn
dWFyZHMgdXMKIC0ga2VybmVsL3Bvd2VyL3NuYXBzaG90LmM6c2F2ZWFibGVfcGFnZSgpCiAgIC0+
IHBmbl90b19vbmxpbmVfcGFnZSgpIGFscmVhZHkgZ3VhcmRzIHVzCiAtIGZzL3Byb2MvdGFza19t
bXUuYzpjYW5fZ2F0aGVyX251bWFfc3RhdHMoKQogICAtPiB2bV9ub3JtYWxfcGFnZSgpIGNoZWNr
cyBhZ2FpbnN0IHB0ZV9kZXZtYXAoKQogLSBmcy9wcm9jL3Rhc2tfbW11LmM6Y2FuX2dhdGhlcl9u
dW1hX3N0YXRzX3BtZAogICAtPiB2bV9ub3JtYWxfcGFnZV9wbWQoKSBjaGVja3MgYWdhaW5zdCBw
dGVfZGV2bWFwKCkKIC0gZnMvcHJvYy9wYWdlLmM6c3RhYmxlX3BhZ2VfZmxhZ3MoKQogICAtPiBU
aGUgcmVzZXJ2ZWQgYml0IGlzIHNpbXBseSBjb3BpZWQsIGlycmVsZXZhbnQKIC0gZHJpdmVycy9m
aXJtd2FyZS9tZW1tYXAuYzpyZWxlYXNlX2Zpcm13YXJlX21hcF9lbnRyeSgpCiAgIC0+IHJlYWxs
eSBvbmx5IGEgY2hlY2sgdG8gZGV0ZWN0IGJvb3RtZW0uIE5vdCByZWxldmFudCBmb3IgWk9ORV9E
RVZJQ0UKIC0gYXJjaC9pYTY0L2tlcm5lbC9tY2FfZHJ2LmMKIC0gYXJjaC9taXBzL21tL2luaXQu
YwogLSBhcmNoL21pcHMvbW0vaW9yZW1hcC5jCiAtIGFyY2gvbmlvczIvbW0vaW9yZW1hcC5jCiAt
IGFyY2gvcGFyaXNjL21tL2lvcmVtYXAuYwogLSBhcmNoL3NwYXJjL21tL3RsYi5jCiAtIGFyY2gv
eHRlbnNhL21tL2NhY2hlLmMKICAgLT4gTm8gWk9ORV9ERVZJQ0Ugc3VwcG9ydAogLSBhcmNoL3Bv
d2VycGMvbW0vaW5pdF82NC5jOnZtZW1tYXBfZnJlZSgpCiAgIC0+IFNwZWNpYWwtY2FzZXMgbWVt
bWFwIG9uIGFsdG1hcAogICAtPiBPbmx5IGEgY2hlY2sgZm9yIGJvb3RtZW0KIC0gYXJjaC94ODYv
a2VybmVsL2FsdGVybmF0aXZlLmM6X190ZXh0X3Bva2UoKQogICAtPiBPbmx5IGEgV0FSTl9PTigh
UGFnZVJlc2VydmVkKHBhZ2VzWzBdKSkgdG8gdmVyaWZ5IGl0IGlzIGJvb3RtZW0KIC0gYXJjaC94
ODYvbW0vaW5pdF82NC5jCiAgIC0+IE9ubHkgYSBjaGVjayBmb3IgYm9vdG1lbQoKQ2M6ICJLLiBZ
LiBTcmluaXZhc2FuIiA8a3lzQG1pY3Jvc29mdC5jb20+CkNjOiBIYWl5YW5nIFpoYW5nIDxoYWl5
YW5nekBtaWNyb3NvZnQuY29tPgpDYzogU3RlcGhlbiBIZW1taW5nZXIgPHN0aGVtbWluQG1pY3Jv
c29mdC5jb20+CkNjOiBTYXNoYSBMZXZpbiA8c2FzaGFsQGtlcm5lbC5vcmc+CkNjOiBCb3JpcyBP
c3Ryb3Zza3kgPGJvcmlzLm9zdHJvdnNreUBvcmFjbGUuY29tPgpDYzogSnVlcmdlbiBHcm9zcyA8
amdyb3NzQHN1c2UuY29tPgpDYzogU3RlZmFubyBTdGFiZWxsaW5pIDxzc3RhYmVsbGluaUBrZXJu
ZWwub3JnPgpDYzogQW5kcmV3IE1vcnRvbiA8YWtwbUBsaW51eC1mb3VuZGF0aW9uLm9yZz4KQ2M6
IEFsZXhhbmRlciBEdXljayA8YWxleGFuZGVyLmguZHV5Y2tAbGludXguaW50ZWwuY29tPgpDYzog
UGF2ZWwgVGF0YXNoaW4gPHBhdmVsLnRhdGFzaGluQG1pY3Jvc29mdC5jb20+CkNjOiBWbGFzdGlt
aWwgQmFia2EgPHZiYWJrYUBzdXNlLmN6PgpDYzogSm9oYW5uZXMgV2VpbmVyIDxoYW5uZXNAY21w
eGNoZy5vcmc+CkNjOiBBbnRob255IFl6bmFnYSA8YW50aG9ueS55em5hZ2FAb3JhY2xlLmNvbT4K
Q2M6IE1pY2hhbCBIb2NrbyA8bWhvY2tvQHN1c2UuY29tPgpDYzogT3NjYXIgU2FsdmFkb3IgPG9z
YWx2YWRvckBzdXNlLmRlPgpDYzogRGFuIFdpbGxpYW1zIDxkYW4uai53aWxsaWFtc0BpbnRlbC5j
b20+CkNjOiBNZWwgR29ybWFuIDxtZ29ybWFuQHRlY2hzaW5ndWxhcml0eS5uZXQ+CkNjOiBNaWtl
IFJhcG9wb3J0IDxycHB0QGxpbnV4LnZuZXQuaWJtLmNvbT4KQ2M6IEFuc2h1bWFuIEtoYW5kdWFs
IDxhbnNodW1hbi5raGFuZHVhbEBhcm0uY29tPgpDYzogTWF0dCBTaWNrbGVyIDxNYXR0LlNpY2ts
ZXJAZGFrdHJvbmljcy5jb20+CkNjOiBLZWVzIENvb2sgPGtlZXNjb29rQGNocm9taXVtLm9yZz4K
U3VnZ2VzdGVkLWJ5OiBNaWNoYWwgSG9ja28gPG1ob2Nrb0BrZXJuZWwub3JnPgpTaWduZWQtb2Zm
LWJ5OiBEYXZpZCBIaWxkZW5icmFuZCA8ZGF2aWRAcmVkaGF0LmNvbT4KLS0tCiBkcml2ZXJzL2h2
L2h2X2JhbGxvb24uYyAgICB8ICA2ICsrKysrKwogZHJpdmVycy94ZW4vYmFsbG9vbi5jICAgICAg
fCAgNyArKysrKysrCiBpbmNsdWRlL2xpbnV4L3BhZ2UtZmxhZ3MuaCB8ICA4ICstLS0tLS0tCiBt
bS9tZW1vcnlfaG90cGx1Zy5jICAgICAgICB8IDE3ICsrKysrKystLS0tLS0tLS0tCiBtbS9wYWdl
X2FsbG9jLmMgICAgICAgICAgICB8IDExIC0tLS0tLS0tLS0tCiA1IGZpbGVzIGNoYW5nZWQsIDIx
IGluc2VydGlvbnMoKyksIDI4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaHYv
aHZfYmFsbG9vbi5jIGIvZHJpdmVycy9odi9odl9iYWxsb29uLmMKaW5kZXggYzcyMjA3OWQzYzI0
Li4zMjE0YjBlZjUyNDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaHYvaHZfYmFsbG9vbi5jCisrKyBi
L2RyaXZlcnMvaHYvaHZfYmFsbG9vbi5jCkBAIC02NzAsNiArNjcwLDEyIEBAIHN0YXRpYyBzdHJ1
Y3Qgbm90aWZpZXJfYmxvY2sgaHZfbWVtb3J5X25iID0gewogLyogQ2hlY2sgaWYgdGhlIHBhcnRp
Y3VsYXIgcGFnZSBpcyBiYWNrZWQgYW5kIGNhbiBiZSBvbmxpbmVkIGFuZCBvbmxpbmUgaXQuICov
CiBzdGF0aWMgdm9pZCBodl9wYWdlX29ubGluZV9vbmUoc3RydWN0IGh2X2hvdGFkZF9zdGF0ZSAq
aGFzLCBzdHJ1Y3QgcGFnZSAqcGcpCiB7CisJLyoKKwkgKiBUT0RPOiBUaGUgY29yZSB1c2VkIHRv
IG1hcmsgdGhlIHBhZ2VzIHJlc2VydmVkLiBNb3N0IHByb2JhYmx5CisJICogd2UgY2FuIHN0b3Ag
ZG9pbmcgdGhhdCBub3cuCisJICovCisJX19TZXRQYWdlUmVzZXJ2ZWQocGcpOworCiAJaWYgKCFo
YXNfcGZuX2lzX2JhY2tlZChoYXMsIHBhZ2VfdG9fcGZuKHBnKSkpIHsKIAkJaWYgKCFQYWdlT2Zm
bGluZShwZykpCiAJCQlfX1NldFBhZ2VPZmZsaW5lKHBnKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
eGVuL2JhbGxvb24uYyBiL2RyaXZlcnMveGVuL2JhbGxvb24uYwppbmRleCA0ZjJlNzhhNWU0ZGIu
LmFmNjlmMDU3OTEzYSAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vYmFsbG9vbi5jCisrKyBiL2Ry
aXZlcnMveGVuL2JhbGxvb24uYwpAQCAtMzc0LDYgKzM3NCwxMyBAQCBzdGF0aWMgdm9pZCB4ZW5f
b25saW5lX3BhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsIHVuc2lnbmVkIGludCBvcmRlcikKIAltdXRl
eF9sb2NrKCZiYWxsb29uX211dGV4KTsKIAlmb3IgKGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CiAJ
CXAgPSBwZm5fdG9fcGFnZShzdGFydF9wZm4gKyBpKTsKKwkJLyoKKwkJICogVE9ETzogVGhlIGNv
cmUgdXNlZCB0byBtYXJrIHRoZSBwYWdlcyByZXNlcnZlZC4gTW9zdCBwcm9iYWJseQorCQkgKiB3
ZSBjYW4gc3RvcCBkb2luZyB0aGF0IG5vdy4gSG93ZXZlciwgZXNwZWNpYWxseQorCQkgKiBhbGxv
Y194ZW5iYWxsb29uZWRfcGFnZXMoKSBsZWZ0IFBHX3Jlc2VydmVkIHNldAorCQkgKiBvbiBwYWdl
cyB0aGF0IGNhbiBnZXQgbWFwcGVkIHRvIHVzZXIgc3BhY2UuCisJCSAqLworCQlfX1NldFBhZ2VS
ZXNlcnZlZChwKTsKIAkJYmFsbG9vbl9hcHBlbmQocCk7CiAJfQogCW11dGV4X3VubG9jaygmYmFs
bG9vbl9tdXRleCk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3BhZ2UtZmxhZ3MuaCBiL2lu
Y2x1ZGUvbGludXgvcGFnZS1mbGFncy5oCmluZGV4IDNiOGU1YzVmN2UxZi4uZTlhNzQ2NTIxOWQx
IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3BhZ2UtZmxhZ3MuaAorKysgYi9pbmNsdWRlL2xp
bnV4L3BhZ2UtZmxhZ3MuaApAQCAtMzAsMjQgKzMwLDE4IEBACiAgKiAtIFBhZ2VzIGZhbGxpbmcg
aW50byBwaHlzaWNhbCBtZW1vcnkgZ2FwcyAtIG5vdCBJT1JFU09VUkNFX1NZU1JBTS4gVHJ5aW5n
CiAgKiAgIHRvIHJlYWQvd3JpdGUgdGhlc2UgcGFnZXMgbWlnaHQgZW5kIGJhZGx5LiBEb24ndCB0
b3VjaCEKICAqIC0gVGhlIHplcm8gcGFnZShzKQotICogLSBQYWdlcyBub3QgYWRkZWQgdG8gdGhl
IHBhZ2UgYWxsb2NhdG9yIHdoZW4gb25saW5pbmcgYSBzZWN0aW9uIGJlY2F1c2UKLSAqICAgdGhl
eSB3ZXJlIGV4Y2x1ZGVkIHZpYSB0aGUgb25saW5lX3BhZ2VfY2FsbGJhY2soKSBvciBiZWNhdXNl
IHRoZXkgYXJlCi0gKiAgIFBHX2h3cG9pc29uLgogICogLSBQYWdlcyBhbGxvY2F0ZWQgaW4gdGhl
IGNvbnRleHQgb2Yga2V4ZWMva2R1bXAgKGxvYWRlZCBrZXJuZWwgaW1hZ2UsCiAgKiAgIGNvbnRy
b2wgcGFnZXMsIHZtY29yZWluZm8pCiAgKiAtIE1NSU8vRE1BIHBhZ2VzLiBTb21lIGFyY2hpdGVj
dHVyZXMgZG9uJ3QgYWxsb3cgdG8gaW9yZW1hcCBwYWdlcyB0aGF0IGFyZQogICogICBub3QgbWFy
a2VkIFBHX3Jlc2VydmVkIChhcyB0aGV5IG1pZ2h0IGJlIGluIHVzZSBieSBzb21lYm9keSBlbHNl
IHdobyBkb2VzCiAgKiAgIG5vdCByZXNwZWN0IHRoZSBjYWNoaW5nIHN0cmF0ZWd5KS4KLSAqIC0g
UGFnZXMgcGFydCBvZiBhbiBvZmZsaW5lIHNlY3Rpb24gKHN0cnVjdCBwYWdlcyBvZiBvZmZsaW5l
IHNlY3Rpb25zIHNob3VsZAotICogICBub3QgYmUgdHJ1c3RlZCBhcyB0aGV5IHdpbGwgYmUgaW5p
dGlhbGl6ZWQgd2hlbiBmaXJzdCBvbmxpbmVkKS4KICAqIC0gTUNBIHBhZ2VzIG9uIGlhNjQKICAq
IC0gUGFnZXMgaG9sZGluZyBDUFUgbm90ZXMgZm9yIFBPV0VSIEZpcm13YXJlIEFzc2lzdGVkIER1
bXAKLSAqIC0gRGV2aWNlIG1lbW9yeSAoZS5nLiBQTUVNLCBEQVgsIEhNTSkKICAqIFNvbWUgUEdf
cmVzZXJ2ZWQgcGFnZXMgd2lsbCBiZSBleGNsdWRlZCBmcm9tIHRoZSBoaWJlcm5hdGlvbiBpbWFn
ZS4KICAqIFBHX3Jlc2VydmVkIGRvZXMgaW4gZ2VuZXJhbCBub3QgaGluZGVyIGFueWJvZHkgZnJv
bSBkdW1waW5nIG9yIHN3YXBwaW5nCiAgKiBhbmQgaXMgbm8gbG9uZ2VyIHJlcXVpcmVkIGZvciBy
ZW1hcF9wZm5fcmFuZ2UoKS4gaW9yZW1hcCBtaWdodCByZXF1aXJlIGl0LgogICogQ29uc2VxdWVu
dGx5LCBQR19yZXNlcnZlZCBmb3IgYSBwYWdlIG1hcHBlZCBpbnRvIHVzZXIgc3BhY2UgY2FuIGlu
ZGljYXRlCi0gKiB0aGUgemVybyBwYWdlLCB0aGUgdkRTTywgTU1JTyBwYWdlcyBvciBkZXZpY2Ug
bWVtb3J5LgorICogdGhlIHplcm8gcGFnZSwgdGhlIHZEU08sIG9yIE1NSU8gcGFnZXMuCiAgKgog
ICogVGhlIFBHX3ByaXZhdGUgYml0ZmxhZyBpcyBzZXQgb24gcGFnZWNhY2hlIHBhZ2VzIGlmIHRo
ZXkgY29udGFpbiBmaWxlc3lzdGVtCiAgKiBzcGVjaWZpYyBkYXRhICh3aGljaCBpcyBub3JtYWxs
eSBhdCBwYWdlLT5wcml2YXRlKS4gSXQgY2FuIGJlIHVzZWQgYnkKZGlmZiAtLWdpdCBhL21tL21l
bW9yeV9ob3RwbHVnLmMgYi9tbS9tZW1vcnlfaG90cGx1Zy5jCmluZGV4IDhkODE3MzBjZjAzNi4u
MjcxNGVkY2U5OGRkIDEwMDY0NAotLS0gYS9tbS9tZW1vcnlfaG90cGx1Zy5jCisrKyBiL21tL21l
bW9yeV9ob3RwbHVnLmMKQEAgLTUwMSw5ICs1MDEsNyBAQCBzdGF0aWMgdm9pZCBfX3JlbW92ZV9z
ZWN0aW9uKHVuc2lnbmVkIGxvbmcgcGZuLCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAogICogQGFs
dG1hcDogYWx0ZXJuYXRpdmUgZGV2aWNlIHBhZ2UgbWFwIG9yICVOVUxMIGlmIGRlZmF1bHQgbWVt
bWFwIGlzIHVzZWQKICAqCiAgKiBHZW5lcmljIGhlbHBlciBmdW5jdGlvbiB0byByZW1vdmUgc2Vj
dGlvbiBtYXBwaW5ncyBhbmQgc3lzZnMgZW50cmllcwotICogZm9yIHRoZSBzZWN0aW9uIG9mIHRo
ZSBtZW1vcnkgd2UgYXJlIHJlbW92aW5nLiBDYWxsZXIgbmVlZHMgdG8gbWFrZQotICogc3VyZSB0
aGF0IHBhZ2VzIGFyZSBtYXJrZWQgcmVzZXJ2ZWQgYW5kIHpvbmVzIGFyZSBhZGp1c3QgcHJvcGVy
bHkgYnkKLSAqIGNhbGxpbmcgb2ZmbGluZV9wYWdlcygpLgorICogZm9yIHRoZSBzZWN0aW9uIG9m
IHRoZSBtZW1vcnkgd2UgYXJlIHJlbW92aW5nLgogICovCiB2b2lkIF9fcmVtb3ZlX3BhZ2VzKHVu
c2lnbmVkIGxvbmcgcGZuLCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAogCQkgICAgc3RydWN0IHZt
ZW1fYWx0bWFwICphbHRtYXApCkBAIC01ODQsOSArNTgyLDkgQEAgc3RhdGljIGludCBvbmxpbmVf
cGFnZXNfcmFuZ2UodW5zaWduZWQgbG9uZyBzdGFydF9wZm4sIHVuc2lnbmVkIGxvbmcgbnJfcGFn
ZXMsCiAJaW50IG9yZGVyOwogCiAJLyoKLQkgKiBPbmxpbmUgdGhlIHBhZ2VzLiBUaGUgY2FsbGJh
Y2sgbWlnaHQgZGVjaWRlIHRvIGtlZXAgc29tZSBwYWdlcwotCSAqIFBHX3Jlc2VydmVkICh0byBh
ZGQgdGhlbSB0byB0aGUgYnVkZHkgbGF0ZXIpLCBidXQgd2Ugc3RpbGwgYWNjb3VudAotCSAqIHRo
ZW0gYXMgYmVpbmcgb25saW5lL2JlbG9uZ2luZyB0byB0aGlzIHpvbmUgKCJwcmVzZW50IikuCisJ
ICogT25saW5lIHRoZSBwYWdlcy4gVGhlIGNhbGxiYWNrIG1pZ2h0IGRlY2lkZSB0byBub3QgZnJl
ZSBzb21lIHBhZ2VzCisJICogKHRvIGFkZCB0aGVtIHRvIHRoZSBidWRkeSBsYXRlciksIGJ1dCB3
ZSBzdGlsbCBhY2NvdW50IHRoZW0gYXMKKwkgKiBiZWluZyBvbmxpbmUvYmVsb25naW5nIHRvIHRo
aXMgem9uZSAoInByZXNlbnQiKS4KIAkgKi8KIAlmb3IgKHBmbiA9IHN0YXJ0X3BmbjsgcGZuIDwg
ZW5kX3BmbjsgcGZuICs9IDF1bCA8PCBvcmRlcikgewogCQlvcmRlciA9IG1pbihNQVhfT1JERVIg
LSAxLCBnZXRfb3JkZXIoUEZOX1BIWVMoZW5kX3BmbiAtIHBmbikpKTsKQEAgLTY1OSw4ICs2NTcs
NyBAQCBzdGF0aWMgdm9pZCBfX21lbWluaXQgcmVzaXplX3BnZGF0X3JhbmdlKHN0cnVjdCBwZ2xp
c3RfZGF0YSAqcGdkYXQsIHVuc2lnbmVkIGxvbgogfQogLyoKICAqIEFzc29jaWF0ZSB0aGUgcGZu
IHJhbmdlIHdpdGggdGhlIGdpdmVuIHpvbmUsIGluaXRpYWxpemluZyB0aGUgbWVtbWFwcwotICog
YW5kIHJlc2l6aW5nIHRoZSBwZ2RhdC96b25lIGRhdGEgdG8gc3BhbiB0aGUgYWRkZWQgcGFnZXMu
IEFmdGVyIHRoaXMKLSAqIGNhbGwsIGFsbCBhZmZlY3RlZCBwYWdlcyBhcmUgUEdfcmVzZXJ2ZWQu
CisgKiBhbmQgcmVzaXppbmcgdGhlIHBnZGF0L3pvbmUgZGF0YSB0byBzcGFuIHRoZSBhZGRlZCBw
YWdlcy4KICAqLwogdm9pZCBfX3JlZiBtb3ZlX3Bmbl9yYW5nZV90b196b25lKHN0cnVjdCB6b25l
ICp6b25lLCB1bnNpZ25lZCBsb25nIHN0YXJ0X3BmbiwKIAkJdW5zaWduZWQgbG9uZyBucl9wYWdl
cywgc3RydWN0IHZtZW1fYWx0bWFwICphbHRtYXApCkBAIC02ODQsOCArNjgxLDggQEAgdm9pZCBf
X3JlZiBtb3ZlX3Bmbl9yYW5nZV90b196b25lKHN0cnVjdCB6b25lICp6b25lLCB1bnNpZ25lZCBs
b25nIHN0YXJ0X3BmbiwKIAkvKgogCSAqIFRPRE8gbm93IHdlIGhhdmUgYSB2aXNpYmxlIHJhbmdl
IG9mIHBhZ2VzIHdoaWNoIGFyZSBub3QgYXNzb2NpYXRlZAogCSAqIHdpdGggdGhlaXIgem9uZSBw
cm9wZXJseS4gTm90IG5pY2UgYnV0IHNldF9wZm5ibG9ja19mbGFnc19tYXNrCi0JICogZXhwZWN0
cyB0aGUgem9uZSBzcGFucyB0aGUgcGZuIHJhbmdlLiBBbGwgdGhlIHBhZ2VzIGluIHRoZSByYW5n
ZQotCSAqIGFyZSByZXNlcnZlZCBzbyBub2JvZHkgc2hvdWxkIGJlIHRvdWNoaW5nIHRoZW0gc28g
d2Ugc2hvdWxkIGJlIHNhZmUKKwkgKiBleHBlY3RzIHRoZSB6b25lIHNwYW5zIHRoZSBwZm4gcmFu
Z2UuIFRoZSBzZWN0aW9ucyBhcmUgbm90IHlldAorCSAqIG1hcmtlZCBvbmxpbmUgc28gbm9ib2R5
IHNob3VsZCBiZSB0b3VjaGluZyB0aGUgbWVtbWFwLgogCSAqLwogCW1lbW1hcF9pbml0X3pvbmUo
bnJfcGFnZXMsIG5pZCwgem9uZV9pZHgoem9uZSksIHN0YXJ0X3BmbiwKIAkJCU1FTU1BUF9IT1RQ
TFVHLCBhbHRtYXApOwpkaWZmIC0tZ2l0IGEvbW0vcGFnZV9hbGxvYy5jIGIvbW0vcGFnZV9hbGxv
Yy5jCmluZGV4IGY5NDg4ZWZmZjY4MC4uYWE2ZWNhYzI3YjY4IDEwMDY0NAotLS0gYS9tbS9wYWdl
X2FsbG9jLmMKKysrIGIvbW0vcGFnZV9hbGxvYy5jCkBAIC01OTI3LDggKzU5MjcsNiBAQCB2b2lk
IF9fbWVtaW5pdCBtZW1tYXBfaW5pdF96b25lKHVuc2lnbmVkIGxvbmcgc2l6ZSwgaW50IG5pZCwg
dW5zaWduZWQgbG9uZyB6b25lLAogCiAJCXBhZ2UgPSBwZm5fdG9fcGFnZShwZm4pOwogCQlfX2lu
aXRfc2luZ2xlX3BhZ2UocGFnZSwgcGZuLCB6b25lLCBuaWQpOwotCQlpZiAoY29udGV4dCA9PSBN
RU1NQVBfSE9UUExVRykKLQkJCV9fU2V0UGFnZVJlc2VydmVkKHBhZ2UpOwogCiAJCS8qCiAJCSAq
IE1hcmsgdGhlIGJsb2NrIG1vdmFibGUgc28gdGhhdCBibG9ja3MgYXJlIHJlc2VydmVkIGZvcgpA
QCAtNTk4MCwxNSArNTk3OCw2IEBAIHZvaWQgX19yZWYgbWVtbWFwX2luaXRfem9uZV9kZXZpY2Uo
c3RydWN0IHpvbmUgKnpvbmUsCiAKIAkJX19pbml0X3NpbmdsZV9wYWdlKHBhZ2UsIHBmbiwgem9u
ZV9pZHgsIG5pZCk7CiAKLQkJLyoKLQkJICogTWFyayBwYWdlIHJlc2VydmVkIGFzIGl0IHdpbGwg
bmVlZCB0byB3YWl0IGZvciBvbmxpbmluZwotCQkgKiBwaGFzZSBmb3IgaXQgdG8gYmUgZnVsbHkg
YXNzb2NpYXRlZCB3aXRoIGEgem9uZS4KLQkJICoKLQkJICogV2UgY2FuIHVzZSB0aGUgbm9uLWF0
b21pYyBfX3NldF9iaXQgb3BlcmF0aW9uIGZvciBzZXR0aW5nCi0JCSAqIHRoZSBmbGFnIGFzIHdl
IGFyZSBzdGlsbCBpbml0aWFsaXppbmcgdGhlIHBhZ2VzLgotCQkgKi8KLQkJX19TZXRQYWdlUmVz
ZXJ2ZWQocGFnZSk7Ci0KIAkJLyoKIAkJICogWk9ORV9ERVZJQ0UgcGFnZXMgdW5pb24gLT5scnUg
d2l0aCBhIC0+cGdtYXAgYmFjayBwb2ludGVyCiAJCSAqIGFuZCB6b25lX2RldmljZV9kYXRhLiAg
SXQgaXMgYSBidWcgaWYgYSBaT05FX0RFVklDRSBwYWdlIGlzCi0tIAoyLjIxLjAKCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGlu
ZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnBy
b2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

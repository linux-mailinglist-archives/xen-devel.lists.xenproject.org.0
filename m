Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id AA276B095B
	for <lists+xen-devel@lfdr.de>; Thu, 12 Sep 2019 09:21:37 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1i8JNb-0001W7-Eq; Thu, 12 Sep 2019 07:18:59 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=+knL=XH=intel.com=chao.gao@srs-us1.protection.inumbo.net>)
 id 1i8JNZ-0001VH-5E
 for xen-devel@lists.xenproject.org; Thu, 12 Sep 2019 07:18:57 +0000
X-Inumbo-ID: 8fea8882-d52d-11e9-83e3-12813bfff9fa
Received: from mga01.intel.com (unknown [192.55.52.88])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 8fea8882-d52d-11e9-83e3-12813bfff9fa;
 Thu, 12 Sep 2019 07:18:47 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Sep 2019 00:18:47 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,492,1559545200"; d="scan'208";a="189906249"
Received: from gao-cwp.sh.intel.com ([10.239.159.26])
 by orsmga006.jf.intel.com with ESMTP; 12 Sep 2019 00:18:45 -0700
From: Chao Gao <chao.gao@intel.com>
To: xen-devel@lists.xenproject.org
Date: Thu, 12 Sep 2019 15:22:19 +0800
Message-Id: <1568272949-1086-7-git-send-email-chao.gao@intel.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1568272949-1086-1-git-send-email-chao.gao@intel.com>
References: <1568272949-1086-1-git-send-email-chao.gao@intel.com>
Subject: [Xen-devel] [PATCH v10 06/16] microcode: remove pointless 'cpu'
 parameter
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sergey Dyasli <sergey.dyasli@citrix.com>, Ashok Raj <ashok.raj@intel.com>,
 Wei Liu <wl@xen.org>, Andrew Cooper <andrew.cooper3@citrix.com>,
 Jan Beulich <jbeulich@suse.com>, Chao Gao <chao.gao@intel.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

U29tZSBjYWxsYmFja3MgaW4gbWljcm9jb2RlX29wcyBvciByZWxhdGVkIGZ1bmN0aW9ucyB0YWtl
IGEgY3B1CmlkIHBhcmFtZXRlci4gQnV0IGF0IGN1cnJlbnQgY2FsbCBzaXRlcywgdGhlIGNwdSBp
ZCBwYXJhbWV0ZXIgaXMKYWx3YXlzIGVxdWFsIHRvIGN1cnJlbnQgY3B1IGlkLiBTb21lIG9mIHRo
ZW0gZXZlbiB1c2UgYW4gYXNzZXJ0aW9uCnRvIGd1YXJhbnRlZSB0aGlzLiBSZW1vdmUgdGhpcyBy
ZWR1bmRlbnQgJ2NwdScgcGFyYW1ldGVyLgoKU2lnbmVkLW9mZi1ieTogQ2hhbyBHYW8gPGNoYW8u
Z2FvQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEphbiBCZXVsaWNoIDxqYmV1bGljaEBzdXNlLmNv
bT4KLS0tCkNoYW5nZXMgaW4gdjk6CiAtIHVzZSBhIGNvbnZlbmllbmNlIHZhcmlhYmxlICdjcHUn
IGluIGNvbGxlY3RfY3B1X2luZm8oKSBvbiBBTUQgc2lkZQogLSByZWJhc2UgYW5kIGZpeCBjb25m
bGljdHMKCkNoYW5nZXMgaW4gdjg6CiAtIFVzZSBjdXJyZW50X2NwdV9kYXRhIGluIGNvbGxlY3Rf
Y3B1X2luZm8oKQogLSBrZWVwIHRoZSBjcHUgcGFyYW1ldGVyIG9mIGNoZWNrX2ZpbmFsX3BhdGNo
X2xldmVscygpCiAtIHVzZSBzbXBfcHJvY2Vzc29yX2lkKCkgaW4gZ2V0X21hdGNoaW5nX21pY3Jv
Y29kZSgpIHJhdGhlciB0aGFuCiBkZWZpbmUgYSBsb2NhbCB2YXJpYWJsZSBhbmQgbGFiZWwgaXQg
Il9fbWF5YmVfdW51c2VkIgotLS0KIHhlbi9hcmNoL3g4Ni9hY3BpL3Bvd2VyLmMgICAgICAgfCAg
MiArLQogeGVuL2FyY2gveDg2L21pY3JvY29kZS5jICAgICAgICB8IDIwICsrKysrKysrLS0tLS0t
LS0tLS0tCiB4ZW4vYXJjaC94ODYvbWljcm9jb2RlX2FtZC5jICAgIHwgMzQgKysrKysrKysrKysr
Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLQogeGVuL2FyY2gveDg2L21pY3JvY29kZV9pbnRlbC5jICB8
IDQxICsrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiB4ZW4vYXJjaC94
ODYvc21wYm9vdC5jICAgICAgICAgIHwgIDIgKy0KIHhlbi9pbmNsdWRlL2FzbS14ODYvbWljcm9j
b2RlLmggfCAgNyArKystLS0tCiB4ZW4vaW5jbHVkZS9hc20teDg2L3Byb2Nlc3Nvci5oIHwgIDIg
Ky0KIDcgZmlsZXMgY2hhbmdlZCwgNDIgaW5zZXJ0aW9ucygrKSwgNjYgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L2FjcGkvcG93ZXIuYyBiL3hlbi9hcmNoL3g4Ni9hY3Bp
L3Bvd2VyLmMKaW5kZXggZTM5NTRlZS4uMjY5YjE0MCAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2
L2FjcGkvcG93ZXIuYworKysgYi94ZW4vYXJjaC94ODYvYWNwaS9wb3dlci5jCkBAIC0yNzgsNyAr
Mjc4LDcgQEAgc3RhdGljIGludCBlbnRlcl9zdGF0ZSh1MzIgc3RhdGUpCiAKICAgICBjb25zb2xl
X2VuZF9zeW5jKCk7CiAKLSAgICBtaWNyb2NvZGVfcmVzdW1lX2NwdSgwKTsKKyAgICBtaWNyb2Nv
ZGVfcmVzdW1lX2NwdSgpOwogCiAgICAgaWYgKCAhcmVjaGVja19jcHVfZmVhdHVyZXMoMCkgKQog
ICAgICAgICBwYW5pYygiTWlzc2luZyBwcmV2aW91c2x5IGF2YWlsYWJsZSBmZWF0dXJlKHMpXG4i
KTsKZGlmZiAtLWdpdCBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGUuYyBiL3hlbi9hcmNoL3g4Ni9t
aWNyb2NvZGUuYwppbmRleCBkMTdkYmVjLi44OWE4ZDJiIDEwMDY0NAotLS0gYS94ZW4vYXJjaC94
ODYvbWljcm9jb2RlLmMKKysrIGIveGVuL2FyY2gveDg2L21pY3JvY29kZS5jCkBAIC0xOTYsMTkg
KzE5NiwxOSBAQCBzdHJ1Y3QgbWljcm9jb2RlX2luZm8gewogICAgIGNoYXIgYnVmZmVyWzFdOwog
fTsKIAotaW50IG1pY3JvY29kZV9yZXN1bWVfY3B1KHVuc2lnbmVkIGludCBjcHUpCitpbnQgbWlj
cm9jb2RlX3Jlc3VtZV9jcHUodm9pZCkKIHsKICAgICBpbnQgZXJyOwotICAgIHN0cnVjdCBjcHVf
c2lnbmF0dXJlICpzaWcgPSAmcGVyX2NwdShjcHVfc2lnLCBjcHUpOworICAgIHN0cnVjdCBjcHVf
c2lnbmF0dXJlICpzaWcgPSAmdGhpc19jcHUoY3B1X3NpZyk7CiAKICAgICBpZiAoICFtaWNyb2Nv
ZGVfb3BzICkKICAgICAgICAgcmV0dXJuIDA7CiAKICAgICBzcGluX2xvY2soJm1pY3JvY29kZV9t
dXRleCk7CiAKLSAgICBlcnIgPSBtaWNyb2NvZGVfb3BzLT5jb2xsZWN0X2NwdV9pbmZvKGNwdSwg
c2lnKTsKKyAgICBlcnIgPSBtaWNyb2NvZGVfb3BzLT5jb2xsZWN0X2NwdV9pbmZvKHNpZyk7CiAg
ICAgaWYgKCBsaWtlbHkoIWVycikgKQotICAgICAgICBlcnIgPSBtaWNyb2NvZGVfb3BzLT5hcHBs
eV9taWNyb2NvZGUoY3B1KTsKKyAgICAgICAgZXJyID0gbWljcm9jb2RlX29wcy0+YXBwbHlfbWlj
cm9jb2RlKCk7CiAgICAgc3Bpbl91bmxvY2soJm1pY3JvY29kZV9tdXRleCk7CiAKICAgICByZXR1
cm4gZXJyOwpAQCAtMjU3LDkgKzI1Nyw5IEBAIHN0YXRpYyBpbnQgbWljcm9jb2RlX3VwZGF0ZV9j
cHUoY29uc3Qgdm9pZCAqYnVmLCBzaXplX3Qgc2l6ZSkKIAogICAgIHNwaW5fbG9jaygmbWljcm9j
b2RlX211dGV4KTsKIAotICAgIGVyciA9IG1pY3JvY29kZV9vcHMtPmNvbGxlY3RfY3B1X2luZm8o
Y3B1LCBzaWcpOworICAgIGVyciA9IG1pY3JvY29kZV9vcHMtPmNvbGxlY3RfY3B1X2luZm8oc2ln
KTsKICAgICBpZiAoIGxpa2VseSghZXJyKSApCi0gICAgICAgIGVyciA9IG1pY3JvY29kZV9vcHMt
PmNwdV9yZXF1ZXN0X21pY3JvY29kZShjcHUsIGJ1Ziwgc2l6ZSk7CisgICAgICAgIGVyciA9IG1p
Y3JvY29kZV9vcHMtPmNwdV9yZXF1ZXN0X21pY3JvY29kZShidWYsIHNpemUpOwogICAgIHNwaW5f
dW5sb2NrKCZtaWNyb2NvZGVfbXV0ZXgpOwogCiAgICAgcmV0dXJuIGVycjsKQEAgLTM0OCw4ICsz
NDgsNiBAQCBfX2luaXRjYWxsKG1pY3JvY29kZV9pbml0KTsKIAogaW50IF9faW5pdCBlYXJseV9t
aWNyb2NvZGVfdXBkYXRlX2NwdShib29sIHN0YXJ0X3VwZGF0ZSkKIHsKLSAgICB1bnNpZ25lZCBp
bnQgY3B1ID0gc21wX3Byb2Nlc3Nvcl9pZCgpOwotICAgIHN0cnVjdCBjcHVfc2lnbmF0dXJlICpz
aWcgPSAmcGVyX2NwdShjcHVfc2lnLCBjcHUpOwogICAgIGludCByYyA9IDA7CiAgICAgdm9pZCAq
ZGF0YSA9IE5VTEw7CiAgICAgc2l6ZV90IGxlbjsKQEAgLTM2OCw3ICszNjYsNyBAQCBpbnQgX19p
bml0IGVhcmx5X21pY3JvY29kZV91cGRhdGVfY3B1KGJvb2wgc3RhcnRfdXBkYXRlKQogICAgICAg
ICBkYXRhID0gYm9vdHN0cmFwX21hcCgmdWNvZGVfbW9kKTsKICAgICB9CiAKLSAgICBtaWNyb2Nv
ZGVfb3BzLT5jb2xsZWN0X2NwdV9pbmZvKGNwdSwgc2lnKTsKKyAgICBtaWNyb2NvZGVfb3BzLT5j
b2xsZWN0X2NwdV9pbmZvKCZ0aGlzX2NwdShjcHVfc2lnKSk7CiAKICAgICBpZiAoIGRhdGEgKQog
ICAgIHsKQEAgLTM4Niw4ICszODQsNiBAQCBpbnQgX19pbml0IGVhcmx5X21pY3JvY29kZV91cGRh
dGVfY3B1KGJvb2wgc3RhcnRfdXBkYXRlKQogCiBpbnQgX19pbml0IGVhcmx5X21pY3JvY29kZV9p
bml0KHZvaWQpCiB7Ci0gICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9wcm9jZXNzb3JfaWQoKTsK
LSAgICBzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqc2lnID0gJnBlcl9jcHUoY3B1X3NpZywgY3B1KTsK
ICAgICBpbnQgcmM7CiAKICAgICByYyA9IG1pY3JvY29kZV9pbml0X2ludGVsKCk7CkBAIC00MDAs
NyArMzk2LDcgQEAgaW50IF9faW5pdCBlYXJseV9taWNyb2NvZGVfaW5pdCh2b2lkKQogCiAgICAg
aWYgKCBtaWNyb2NvZGVfb3BzICkKICAgICB7Ci0gICAgICAgIG1pY3JvY29kZV9vcHMtPmNvbGxl
Y3RfY3B1X2luZm8oY3B1LCBzaWcpOworICAgICAgICBtaWNyb2NvZGVfb3BzLT5jb2xsZWN0X2Nw
dV9pbmZvKCZ0aGlzX2NwdShjcHVfc2lnKSk7CiAKICAgICAgICAgaWYgKCB1Y29kZV9tb2QubW9k
X2VuZCB8fCB1Y29kZV9ibG9iLnNpemUgKQogICAgICAgICAgICAgcmMgPSBlYXJseV9taWNyb2Nv
ZGVfdXBkYXRlX2NwdSh0cnVlKTsKZGlmZiAtLWdpdCBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGVf
YW1kLmMgYi94ZW4vYXJjaC94ODYvbWljcm9jb2RlX2FtZC5jCmluZGV4IDY5YzljZmUuLjFkMjdj
NzEgMTAwNjQ0Ci0tLSBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGVfYW1kLmMKKysrIGIveGVuL2Fy
Y2gveDg2L21pY3JvY29kZV9hbWQuYwpAQCAtNzgsOCArNzgsOSBAQCBzdHJ1Y3QgbXBiaGRyIHsK
IHN0YXRpYyBERUZJTkVfU1BJTkxPQ0sobWljcm9jb2RlX3VwZGF0ZV9sb2NrKTsKIAogLyogU2Vl
IGNvbW1lbnQgaW4gc3RhcnRfdXBkYXRlKCkgZm9yIGNhc2VzIHdoZW4gdGhpcyByb3V0aW5lIGZh
aWxzICovCi1zdGF0aWMgaW50IGNvbGxlY3RfY3B1X2luZm8odW5zaWduZWQgaW50IGNwdSwgc3Ry
dWN0IGNwdV9zaWduYXR1cmUgKmNzaWcpCitzdGF0aWMgaW50IGNvbGxlY3RfY3B1X2luZm8oc3Ry
dWN0IGNwdV9zaWduYXR1cmUgKmNzaWcpCiB7CisgICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9w
cm9jZXNzb3JfaWQoKTsKICAgICBzdHJ1Y3QgY3B1aW5mb194ODYgKmMgPSAmY3B1X2RhdGFbY3B1
XTsKIAogICAgIG1lbXNldChjc2lnLCAwLCBzaXplb2YoKmNzaWcpKTsKQEAgLTE1MywxNyArMTU0
LDE1IEBAIHN0YXRpYyBib29sX3QgZmluZF9lcXVpdl9jcHVfaWQoY29uc3Qgc3RydWN0IGVxdWl2
X2NwdV9lbnRyeSAqZXF1aXZfY3B1X3RhYmxlLAogfQogCiBzdGF0aWMgZW51bSBtaWNyb2NvZGVf
bWF0Y2hfcmVzdWx0IG1pY3JvY29kZV9maXRzKAotICAgIGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVf
YW1kICptY19hbWQsIHVuc2lnbmVkIGludCBjcHUpCisgICAgY29uc3Qgc3RydWN0IG1pY3JvY29k
ZV9hbWQgKm1jX2FtZCkKIHsKKyAgICB1bnNpZ25lZCBpbnQgY3B1ID0gc21wX3Byb2Nlc3Nvcl9p
ZCgpOwogICAgIGNvbnN0IHN0cnVjdCBjcHVfc2lnbmF0dXJlICpzaWcgPSAmcGVyX2NwdShjcHVf
c2lnLCBjcHUpOwogICAgIGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfaGVhZGVyX2FtZCAqbWNfaGVh
ZGVyID0gbWNfYW1kLT5tcGI7CiAgICAgY29uc3Qgc3RydWN0IGVxdWl2X2NwdV9lbnRyeSAqZXF1
aXZfY3B1X3RhYmxlID0gbWNfYW1kLT5lcXVpdl9jcHVfdGFibGU7CiAgICAgdW5zaWduZWQgaW50
IGN1cnJlbnRfY3B1X2lkOwogICAgIHVuc2lnbmVkIGludCBlcXVpdl9jcHVfaWQ7CiAKLSAgICAv
KiBXZSBzaG91bGQgYmluZCB0aGUgdGFzayB0byB0aGUgQ1BVICovCi0gICAgQlVHX09OKGNwdSAh
PSByYXdfc21wX3Byb2Nlc3Nvcl9pZCgpKTsKLQogICAgIGN1cnJlbnRfY3B1X2lkID0gY3B1aWRf
ZWF4KDB4MDAwMDAwMDEpOwogCiAgICAgaWYgKCAhZmluZF9lcXVpdl9jcHVfaWQoZXF1aXZfY3B1
X3RhYmxlLCBjdXJyZW50X2NwdV9pZCwgJmVxdWl2X2NwdV9pZCkgKQpAQCAtMTkyLDkgKzE5MSw3
IEBAIHN0YXRpYyBlbnVtIG1pY3JvY29kZV9tYXRjaF9yZXN1bHQgbWljcm9jb2RlX2ZpdHMoCiAK
IHN0YXRpYyBib29sIG1hdGNoX2NwdShjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRj
aCkKIHsKLSAgICBpZiAoICFwYXRjaCApCi0gICAgICAgIHJldHVybiBmYWxzZTsKLSAgICByZXR1
cm4gbWljcm9jb2RlX2ZpdHMocGF0Y2gtPm1jX2FtZCwgc21wX3Byb2Nlc3Nvcl9pZCgpKSA9PSBO
RVdfVUNPREU7CisgICAgcmV0dXJuIHBhdGNoICYmIChtaWNyb2NvZGVfZml0cyhwYXRjaC0+bWNf
YW1kKSA9PSBORVdfVUNPREUpOwogfQogCiBzdGF0aWMgc3RydWN0IG1pY3JvY29kZV9wYXRjaCAq
YWxsb2NfbWljcm9jb2RlX3BhdGNoKApAQCAtMjQ2LDggKzI0Myw4IEBAIHN0YXRpYyBlbnVtIG1p
Y3JvY29kZV9tYXRjaF9yZXN1bHQgY29tcGFyZV9wYXRjaCgKICAgICBjb25zdCBzdHJ1Y3QgbWlj
cm9jb2RlX2hlYWRlcl9hbWQgKm9sZF9oZWFkZXIgPSBvbGQtPm1jX2FtZC0+bXBiOwogCiAgICAg
LyogQm90aCBwYXRjaGVzIHRvIGNvbXBhcmUgYXJlIHN1cHBvc2VkIHRvIGJlIGFwcGxpY2FibGUg
dG8gbG9jYWwgQ1BVLiAqLwotICAgIEFTU0VSVChtaWNyb2NvZGVfZml0cyhuZXctPm1jX2FtZCwg
c21wX3Byb2Nlc3Nvcl9pZCgpKSAhPSBNSVNfVUNPREUpOwotICAgIEFTU0VSVChtaWNyb2NvZGVf
Zml0cyhuZXctPm1jX2FtZCwgc21wX3Byb2Nlc3Nvcl9pZCgpKSAhPSBNSVNfVUNPREUpOworICAg
IEFTU0VSVChtaWNyb2NvZGVfZml0cyhuZXctPm1jX2FtZCkgIT0gTUlTX1VDT0RFKTsKKyAgICBB
U1NFUlQobWljcm9jb2RlX2ZpdHMobmV3LT5tY19hbWQpICE9IE1JU19VQ09ERSk7CiAKICAgICBp
ZiAoIG5ld19oZWFkZXItPnByb2Nlc3Nvcl9yZXZfaWQgPT0gb2xkX2hlYWRlci0+cHJvY2Vzc29y
X3Jldl9pZCApCiAgICAgICAgIHJldHVybiAobmV3X2hlYWRlci0+cGF0Y2hfaWQgPiBvbGRfaGVh
ZGVyLT5wYXRjaF9pZCkgPwpAQCAtMjU2LDE4ICsyNTMsMTYgQEAgc3RhdGljIGVudW0gbWljcm9j
b2RlX21hdGNoX3Jlc3VsdCBjb21wYXJlX3BhdGNoKAogICAgIHJldHVybiBNSVNfVUNPREU7CiB9
CiAKLXN0YXRpYyBpbnQgYXBwbHlfbWljcm9jb2RlKHVuc2lnbmVkIGludCBjcHUpCitzdGF0aWMg
aW50IGFwcGx5X21pY3JvY29kZSh2b2lkKQogewogICAgIHVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAg
ICAgdWludDMyX3QgcmV2OwogICAgIGludCBod19lcnI7CisgICAgdW5zaWduZWQgaW50IGNwdSA9
IHNtcF9wcm9jZXNzb3JfaWQoKTsKICAgICBzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqc2lnID0gJnBl
cl9jcHUoY3B1X3NpZywgY3B1KTsKICAgICBjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX2hlYWRlcl9h
bWQgKmhkcjsKICAgICBjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCA9IG1pY3Jv
Y29kZV9nZXRfY2FjaGUoKTsKIAotICAgIC8qIFdlIHNob3VsZCBiaW5kIHRoZSB0YXNrIHRvIHRo
ZSBDUFUgKi8KLSAgICBCVUdfT04ocmF3X3NtcF9wcm9jZXNzb3JfaWQoKSAhPSBjcHUpOwotCiAg
ICAgaWYgKCAhcGF0Y2ggKQogICAgICAgICByZXR1cm4gLUVOT0VOVDsKIApAQCAtNDYxLDE5ICs0
NTYsMTYgQEAgc3RhdGljIGJvb2xfdCBjaGVja19maW5hbF9wYXRjaF9sZXZlbHModW5zaWduZWQg
aW50IGNwdSkKICAgICByZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBjcHVfcmVxdWVzdF9taWNy
b2NvZGUodW5zaWduZWQgaW50IGNwdSwgY29uc3Qgdm9pZCAqYnVmLAotICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgc2l6ZV90IGJ1ZnNpemUpCitzdGF0aWMgaW50IGNwdV9yZXF1ZXN0
X21pY3JvY29kZShjb25zdCB2b2lkICpidWYsIHNpemVfdCBidWZzaXplKQogewogICAgIHN0cnVj
dCBtaWNyb2NvZGVfYW1kICptY19hbWQ7CiAgICAgc2l6ZV90IG9mZnNldCA9IDA7CiAgICAgaW50
IGVycm9yID0gMDsKICAgICB1bnNpZ25lZCBpbnQgY3VycmVudF9jcHVfaWQ7CiAgICAgdW5zaWdu
ZWQgaW50IGVxdWl2X2NwdV9pZDsKKyAgICB1bnNpZ25lZCBpbnQgY3B1ID0gc21wX3Byb2Nlc3Nv
cl9pZCgpOwogICAgIGNvbnN0IHN0cnVjdCBjcHVfc2lnbmF0dXJlICpzaWcgPSAmcGVyX2NwdShj
cHVfc2lnLCBjcHUpOwogCi0gICAgLyogV2Ugc2hvdWxkIGJpbmQgdGhlIHRhc2sgdG8gdGhlIENQ
VSAqLwotICAgIEJVR19PTihjcHUgIT0gcmF3X3NtcF9wcm9jZXNzb3JfaWQoKSk7Ci0KICAgICBj
dXJyZW50X2NwdV9pZCA9IGNwdWlkX2VheCgweDAwMDAwMDAxKTsKIAogICAgIGlmICggKihjb25z
dCB1aW50MzJfdCAqKWJ1ZiAhPSBVQ09ERV9NQUdJQyApCkBAIC01NjYsMTQgKzU1OCwxNCBAQCBz
dGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNpZ25lZCBpbnQgY3B1LCBjb25zdCB2
b2lkICpidWYsCiAgICAgICAgIH0KIAogICAgICAgICAvKiBVcGRhdGUgY2FjaGUgaWYgdGhpcyBw
YXRjaCBjb3ZlcnMgY3VycmVudCBDUFUgKi8KLSAgICAgICAgaWYgKCBtaWNyb2NvZGVfZml0cyhu
ZXdfcGF0Y2gtPm1jX2FtZCwgY3B1KSAhPSBNSVNfVUNPREUgKQorICAgICAgICBpZiAoIG1pY3Jv
Y29kZV9maXRzKG5ld19wYXRjaC0+bWNfYW1kKSAhPSBNSVNfVUNPREUgKQogICAgICAgICAgICAg
bWljcm9jb2RlX3VwZGF0ZV9jYWNoZShuZXdfcGF0Y2gpOwogICAgICAgICBlbHNlCiAgICAgICAg
ICAgICBtaWNyb2NvZGVfZnJlZV9wYXRjaChuZXdfcGF0Y2gpOwogCiAgICAgICAgIGlmICggbWF0
Y2hfY3B1KG1pY3JvY29kZV9nZXRfY2FjaGUoKSkgKQogICAgICAgICB7Ci0gICAgICAgICAgICBl
cnJvciA9IGFwcGx5X21pY3JvY29kZShjcHUpOworICAgICAgICAgICAgZXJyb3IgPSBhcHBseV9t
aWNyb2NvZGUoKTsKICAgICAgICAgICAgIGlmICggZXJyb3IgKQogICAgICAgICAgICAgICAgIGJy
ZWFrOwogICAgICAgICB9CmRpZmYgLS1naXQgYS94ZW4vYXJjaC94ODYvbWljcm9jb2RlX2ludGVs
LmMgYi94ZW4vYXJjaC94ODYvbWljcm9jb2RlX2ludGVsLmMKaW5kZXggZjYzZTRiZC4uNWYxYWUy
ZiAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L21pY3JvY29kZV9pbnRlbC5jCisrKyBiL3hlbi9h
cmNoL3g4Ni9taWNyb2NvZGVfaW50ZWwuYwpAQCAtOTYsMTMgKzk2LDEyIEBAIHN0cnVjdCBleHRl
bmRlZF9zaWd0YWJsZSB7CiAvKiBzZXJpYWxpemUgYWNjZXNzIHRvIHRoZSBwaHlzaWNhbCB3cml0
ZSB0byBNU1IgMHg3OSAqLwogc3RhdGljIERFRklORV9TUElOTE9DSyhtaWNyb2NvZGVfdXBkYXRl
X2xvY2spOwogCi1zdGF0aWMgaW50IGNvbGxlY3RfY3B1X2luZm8odW5zaWduZWQgaW50IGNwdV9u
dW0sIHN0cnVjdCBjcHVfc2lnbmF0dXJlICpjc2lnKQorc3RhdGljIGludCBjb2xsZWN0X2NwdV9p
bmZvKHN0cnVjdCBjcHVfc2lnbmF0dXJlICpjc2lnKQogeworICAgIHVuc2lnbmVkIGludCBjcHVf
bnVtID0gc21wX3Byb2Nlc3Nvcl9pZCgpOwogICAgIHN0cnVjdCBjcHVpbmZvX3g4NiAqYyA9ICZj
cHVfZGF0YVtjcHVfbnVtXTsKICAgICB1aW50NjRfdCBtc3JfY29udGVudDsKIAotICAgIEJVR19P
TihjcHVfbnVtICE9IHNtcF9wcm9jZXNzb3JfaWQoKSk7Ci0KICAgICBtZW1zZXQoY3NpZywgMCwg
c2l6ZW9mKCpjc2lnKSk7CiAKICAgICBpZiAoIChjLT54ODZfdmVuZG9yICE9IFg4Nl9WRU5ET1Jf
SU5URUwpIHx8IChjLT54ODYgPCA2KSApCkBAIC0yMjYsMTIgKzIyNSwxMiBAQCBzdGF0aWMgaW50
IG1pY3JvY29kZV9zYW5pdHlfY2hlY2soY29uc3Qgdm9pZCAqbWMpCiAKIC8qIENoZWNrIGFuIHVw
ZGF0ZSBhZ2FpbnN0IHRoZSBDUFUgc2lnbmF0dXJlIGFuZCBjdXJyZW50IHVwZGF0ZSByZXZpc2lv
biAqLwogc3RhdGljIGVudW0gbWljcm9jb2RlX21hdGNoX3Jlc3VsdCBtaWNyb2NvZGVfdXBkYXRl
X21hdGNoKAotICAgIGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfaGVhZGVyX2ludGVsICptY19oZWFk
ZXIsIHVuc2lnbmVkIGludCBjcHUpCisgICAgY29uc3Qgc3RydWN0IG1pY3JvY29kZV9oZWFkZXJf
aW50ZWwgKm1jX2hlYWRlcikKIHsKICAgICBjb25zdCBzdHJ1Y3QgZXh0ZW5kZWRfc2lndGFibGUg
KmV4dF9oZWFkZXI7CiAgICAgY29uc3Qgc3RydWN0IGV4dGVuZGVkX3NpZ25hdHVyZSAqZXh0X3Np
ZzsKICAgICB1bnNpZ25lZCBpbnQgaTsKLSAgICBzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqY3B1X3Np
ZyA9ICZwZXJfY3B1KGNwdV9zaWcsIGNwdSk7CisgICAgc3RydWN0IGNwdV9zaWduYXR1cmUgKmNw
dV9zaWcgPSAmdGhpc19jcHUoY3B1X3NpZyk7CiAgICAgdW5zaWduZWQgaW50IHNpZyA9IGNwdV9z
aWctPnNpZzsKICAgICB1bnNpZ25lZCBpbnQgcGYgPSBjcHVfc2lnLT5wZjsKICAgICB1bnNpZ25l
ZCBpbnQgcmV2ID0gY3B1X3NpZy0+cmV2OwpAQCAtMjY1LDggKzI2NCw3IEBAIHN0YXRpYyBib29s
IG1hdGNoX2NwdShjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCkKICAgICBpZiAo
ICFwYXRjaCApCiAgICAgICAgIHJldHVybiBmYWxzZTsKIAotICAgIHJldHVybiBtaWNyb2NvZGVf
dXBkYXRlX21hdGNoKCZwYXRjaC0+bWNfaW50ZWwtPmhkciwKLSAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBzbXBfcHJvY2Vzc29yX2lkKCkpID09IE5FV19VQ09ERTsKKyAgICByZXR1
cm4gbWljcm9jb2RlX3VwZGF0ZV9tYXRjaCgmcGF0Y2gtPm1jX2ludGVsLT5oZHIpID09IE5FV19V
Q09ERTsKIH0KIAogc3RhdGljIHZvaWQgZnJlZV9wYXRjaCh2b2lkICptYykKQEAgLTI4MSwxMCAr
Mjc5LDggQEAgc3RhdGljIGVudW0gbWljcm9jb2RlX21hdGNoX3Jlc3VsdCBjb21wYXJlX3BhdGNo
KAogICAgICAqIEJvdGggcGF0Y2hlcyB0byBjb21wYXJlIGFyZSBzdXBwb3NlZCB0byBiZSBhcHBs
aWNhYmxlIHRvIGxvY2FsIENQVS4KICAgICAgKiBKdXN0IGNvbXBhcmUgdGhlIHJldmlzaW9uIG51
bWJlci4KICAgICAgKi8KLSAgICBBU1NFUlQobWljcm9jb2RlX3VwZGF0ZV9tYXRjaCgmb2xkLT5t
Y19pbnRlbC0+aGRyLCBzbXBfcHJvY2Vzc29yX2lkKCkpICE9Ci0gICAgICAgICAgICAgICBNSVNf
VUNPREUpOwotICAgIEFTU0VSVChtaWNyb2NvZGVfdXBkYXRlX21hdGNoKCZuZXctPm1jX2ludGVs
LT5oZHIsIHNtcF9wcm9jZXNzb3JfaWQoKSkgIT0KLSAgICAgICAgICAgICAgIE1JU19VQ09ERSk7
CisgICAgQVNTRVJUKG1pY3JvY29kZV91cGRhdGVfbWF0Y2goJm9sZC0+bWNfaW50ZWwtPmhkcikg
IT0gTUlTX1VDT0RFKTsKKyAgICBBU1NFUlQobWljcm9jb2RlX3VwZGF0ZV9tYXRjaCgmbmV3LT5t
Y19pbnRlbC0+aGRyKSAhPSBNSVNfVUNPREUpOwogCiAgICAgcmV0dXJuIChuZXctPm1jX2ludGVs
LT5oZHIucmV2ID4gb2xkLT5tY19pbnRlbC0+aGRyLnJldikgPyBORVdfVUNPREUKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IE9M
RF9VQ09ERTsKQEAgLTI5NSw3ICsyOTEsNyBAQCBzdGF0aWMgZW51bSBtaWNyb2NvZGVfbWF0Y2hf
cmVzdWx0IGNvbXBhcmVfcGF0Y2goCiAgKiByZXR1cm4gMSAtIGZvdW5kIHVwZGF0ZQogICogcmV0
dXJuIDwgMCAtIGVycm9yCiAgKi8KLXN0YXRpYyBpbnQgZ2V0X21hdGNoaW5nX21pY3JvY29kZShj
b25zdCB2b2lkICptYywgdW5zaWduZWQgaW50IGNwdSkKK3N0YXRpYyBpbnQgZ2V0X21hdGNoaW5n
X21pY3JvY29kZShjb25zdCB2b2lkICptYykKIHsKICAgICBjb25zdCBzdHJ1Y3QgbWljcm9jb2Rl
X2hlYWRlcl9pbnRlbCAqbWNfaGVhZGVyID0gbWM7CiAgICAgdW5zaWduZWQgbG9uZyB0b3RhbF9z
aXplID0gZ2V0X3RvdGFsc2l6ZShtY19oZWFkZXIpOwpAQCAtMzEyLDcgKzMwOCw3IEBAIHN0YXRp
YyBpbnQgZ2V0X21hdGNoaW5nX21pY3JvY29kZShjb25zdCB2b2lkICptYywgdW5zaWduZWQgaW50
IGNwdSkKICAgICBuZXdfcGF0Y2gtPm1jX2ludGVsID0gbmV3X21jOwogCiAgICAgLyogTWFrZSBz
dXJlIHRoYXQgdGhpcyBwYXRjaCBjb3ZlcnMgY3VycmVudCBDUFUgKi8KLSAgICBpZiAoIG1pY3Jv
Y29kZV91cGRhdGVfbWF0Y2gobWMsIGNwdSkgPT0gTUlTX1VDT0RFICkKKyAgICBpZiAoIG1pY3Jv
Y29kZV91cGRhdGVfbWF0Y2gobWMpID09IE1JU19VQ09ERSApCiAgICAgewogICAgICAgICBtaWNy
b2NvZGVfZnJlZV9wYXRjaChuZXdfcGF0Y2gpOwogICAgICAgICByZXR1cm4gMDsKQEAgLTMyMiwy
NCArMzE4LDIxIEBAIHN0YXRpYyBpbnQgZ2V0X21hdGNoaW5nX21pY3JvY29kZShjb25zdCB2b2lk
ICptYywgdW5zaWduZWQgaW50IGNwdSkKIAogICAgIHByX2RlYnVnKCJtaWNyb2NvZGU6IENQVSVk
IGZvdW5kIGEgbWF0Y2hpbmcgbWljcm9jb2RlIHVwZGF0ZSB3aXRoIgogICAgICAgICAgICAgICIg
dmVyc2lvbiAlI3ggKGN1cnJlbnQ9JSN4KVxuIiwKLSAgICAgICAgICAgICBjcHUsIG1jX2hlYWRl
ci0+cmV2LCBwZXJfY3B1KGNwdV9zaWcsIGNwdSkucmV2KTsKKyAgICAgICAgICAgICBzbXBfcHJv
Y2Vzc29yX2lkKCksIG1jX2hlYWRlci0+cmV2LCB0aGlzX2NwdShjcHVfc2lnKS5yZXYpOwogCiAg
ICAgcmV0dXJuIDE7CiB9CiAKLXN0YXRpYyBpbnQgYXBwbHlfbWljcm9jb2RlKHVuc2lnbmVkIGlu
dCBjcHUpCitzdGF0aWMgaW50IGFwcGx5X21pY3JvY29kZSh2b2lkKQogewogICAgIHVuc2lnbmVk
IGxvbmcgZmxhZ3M7CiAgICAgdWludDY0X3QgbXNyX2NvbnRlbnQ7CiAgICAgdW5zaWduZWQgaW50
IHZhbFsyXTsKICAgICB1bnNpZ25lZCBpbnQgY3B1X251bSA9IHJhd19zbXBfcHJvY2Vzc29yX2lk
KCk7Ci0gICAgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZwZXJfY3B1KGNwdV9zaWcsIGNw
dSk7CisgICAgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZ0aGlzX2NwdShjcHVfc2lnKTsK
ICAgICBjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX2ludGVsICptY19pbnRlbDsKICAgICBjb25zdCBz
dHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCA9IG1pY3JvY29kZV9nZXRfY2FjaGUoKTsKIAot
ICAgIC8qIFdlIHNob3VsZCBiaW5kIHRoZSB0YXNrIHRvIHRoZSBDUFUgKi8KLSAgICBCVUdfT04o
Y3B1X251bSAhPSBjcHUpOwotCiAgICAgaWYgKCAhcGF0Y2ggKQogICAgICAgICByZXR1cm4gLUVO
T0VOVDsKIApAQCAtNDA3LDIyICs0MDAsMTggQEAgc3RhdGljIGxvbmcgZ2V0X25leHRfdWNvZGVf
ZnJvbV9idWZmZXIodm9pZCAqKm1jLCBjb25zdCB1OCAqYnVmLAogICAgIHJldHVybiBvZmZzZXQg
KyB0b3RhbF9zaXplOwogfQogCi1zdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNp
Z25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCi0gICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBzaXplX3Qgc2l6ZSkKK3N0YXRpYyBpbnQgY3B1X3JlcXVlc3RfbWljcm9jb2RlKGNv
bnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IHNpemUpCiB7CiAgICAgbG9uZyBvZmZzZXQgPSAwOwogICAg
IGludCBlcnJvciA9IDA7CiAgICAgdm9pZCAqbWM7CiAKLSAgICAvKiBXZSBzaG91bGQgYmluZCB0
aGUgdGFzayB0byB0aGUgQ1BVICovCi0gICAgQlVHX09OKGNwdSAhPSByYXdfc21wX3Byb2Nlc3Nv
cl9pZCgpKTsKLQogICAgIHdoaWxlICggKG9mZnNldCA9IGdldF9uZXh0X3Vjb2RlX2Zyb21fYnVm
ZmVyKCZtYywgYnVmLCBzaXplLCBvZmZzZXQpKSA+IDAgKQogICAgIHsKICAgICAgICAgZXJyb3Ig
PSBtaWNyb2NvZGVfc2FuaXR5X2NoZWNrKG1jKTsKICAgICAgICAgaWYgKCBlcnJvciApCiAgICAg
ICAgICAgICBicmVhazsKLSAgICAgICAgZXJyb3IgPSBnZXRfbWF0Y2hpbmdfbWljcm9jb2RlKG1j
LCBjcHUpOworICAgICAgICBlcnJvciA9IGdldF9tYXRjaGluZ19taWNyb2NvZGUobWMpOwogICAg
ICAgICBpZiAoIGVycm9yIDwgMCApCiAgICAgICAgICAgICBicmVhazsKICAgICAgICAgLyoKQEAg
LTQ0MCw3ICs0MjksNyBAQCBzdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNpZ25l
ZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCiAgICAgICAgIGVycm9yID0gb2Zmc2V0OwogCiAg
ICAgaWYgKCAhZXJyb3IgJiYgbWF0Y2hfY3B1KG1pY3JvY29kZV9nZXRfY2FjaGUoKSkgKQotICAg
ICAgICBlcnJvciA9IGFwcGx5X21pY3JvY29kZShjcHUpOworICAgICAgICBlcnJvciA9IGFwcGx5
X21pY3JvY29kZSgpOwogCiAgICAgcmV0dXJuIGVycm9yOwogfQpkaWZmIC0tZ2l0IGEveGVuL2Fy
Y2gveDg2L3NtcGJvb3QuYyBiL3hlbi9hcmNoL3g4Ni9zbXBib290LmMKaW5kZXggOTExNDE2Yy4u
NzNhMWFmYyAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L3NtcGJvb3QuYworKysgYi94ZW4vYXJj
aC94ODYvc21wYm9vdC5jCkBAIC0zNjMsNyArMzYzLDcgQEAgdm9pZCBzdGFydF9zZWNvbmRhcnko
dm9pZCAqdW51c2VkKQogICAgIGlmICggc3lzdGVtX3N0YXRlIDw9IFNZU19TVEFURV9zbXBfYm9v
dCApCiAgICAgICAgIGVhcmx5X21pY3JvY29kZV91cGRhdGVfY3B1KGZhbHNlKTsKICAgICBlbHNl
Ci0gICAgICAgIG1pY3JvY29kZV9yZXN1bWVfY3B1KGNwdSk7CisgICAgICAgIG1pY3JvY29kZV9y
ZXN1bWVfY3B1KCk7CiAKICAgICAvKgogICAgICAqIElmIE1TUl9TUEVDX0NUUkwgaXMgYXZhaWxh
YmxlLCBhcHBseSBYZW4ncyBkZWZhdWx0IHNldHRpbmcgYW5kIGRpc2NhcmQKZGlmZiAtLWdpdCBh
L3hlbi9pbmNsdWRlL2FzbS14ODYvbWljcm9jb2RlLmggYi94ZW4vaW5jbHVkZS9hc20teDg2L21p
Y3JvY29kZS5oCmluZGV4IDNmNGM0YmUuLmYyYTVlYTQgMTAwNjQ0Ci0tLSBhL3hlbi9pbmNsdWRl
L2FzbS14ODYvbWljcm9jb2RlLmgKKysrIGIveGVuL2luY2x1ZGUvYXNtLXg4Ni9taWNyb2NvZGUu
aApAQCAtMjAsMTAgKzIwLDkgQEAgc3RydWN0IG1pY3JvY29kZV9wYXRjaCB7CiB9OwogCiBzdHJ1
Y3QgbWljcm9jb2RlX29wcyB7Ci0gICAgaW50ICgqY3B1X3JlcXVlc3RfbWljcm9jb2RlKSh1bnNp
Z25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCi0gICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBzaXplX3Qgc2l6ZSk7Ci0gICAgaW50ICgqY29sbGVjdF9jcHVfaW5mbykodW5zaWdu
ZWQgaW50IGNwdSwgc3RydWN0IGNwdV9zaWduYXR1cmUgKmNzaWcpOwotICAgIGludCAoKmFwcGx5
X21pY3JvY29kZSkodW5zaWduZWQgaW50IGNwdSk7CisgICAgaW50ICgqY3B1X3JlcXVlc3RfbWlj
cm9jb2RlKShjb25zdCB2b2lkICpidWYsIHNpemVfdCBzaXplKTsKKyAgICBpbnQgKCpjb2xsZWN0
X2NwdV9pbmZvKShzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqY3NpZyk7CisgICAgaW50ICgqYXBwbHlf
bWljcm9jb2RlKSh2b2lkKTsKICAgICBpbnQgKCpzdGFydF91cGRhdGUpKHZvaWQpOwogICAgIHZv
aWQgKCpmcmVlX3BhdGNoKSh2b2lkICptYyk7CiAgICAgYm9vbCAoKm1hdGNoX2NwdSkoY29uc3Qg
c3RydWN0IG1pY3JvY29kZV9wYXRjaCAqcGF0Y2gpOwpkaWZmIC0tZ2l0IGEveGVuL2luY2x1ZGUv
YXNtLXg4Ni9wcm9jZXNzb3IuaCBiL3hlbi9pbmNsdWRlL2FzbS14ODYvcHJvY2Vzc29yLmgKaW5k
ZXggMzY2MDIzOC4uYTY3MzM3MiAxMDA2NDQKLS0tIGEveGVuL2luY2x1ZGUvYXNtLXg4Ni9wcm9j
ZXNzb3IuaAorKysgYi94ZW4vaW5jbHVkZS9hc20teDg2L3Byb2Nlc3Nvci5oCkBAIC01NjksNyAr
NTY5LDcgQEAgaW50IGd1ZXN0X3dybXNyX3hlbihzdHJ1Y3QgdmNwdSAqdiwgdWludDMyX3QgaWR4
LCB1aW50NjRfdCB2YWwpOwogCiB2b2lkIG1pY3JvY29kZV9zZXRfbW9kdWxlKHVuc2lnbmVkIGlu
dCk7CiBpbnQgbWljcm9jb2RlX3VwZGF0ZShYRU5fR1VFU1RfSEFORExFX1BBUkFNKGNvbnN0X3Zv
aWQpLCB1bnNpZ25lZCBsb25nIGxlbik7Ci1pbnQgbWljcm9jb2RlX3Jlc3VtZV9jcHUodW5zaWdu
ZWQgaW50IGNwdSk7CitpbnQgbWljcm9jb2RlX3Jlc3VtZV9jcHUodm9pZCk7CiBpbnQgZWFybHlf
bWljcm9jb2RlX3VwZGF0ZV9jcHUoYm9vbCBzdGFydF91cGRhdGUpOwogaW50IGVhcmx5X21pY3Jv
Y29kZV9pbml0KHZvaWQpOwogaW50IG1pY3JvY29kZV9pbml0X2ludGVsKHZvaWQpOwotLSAKMS44
LjMuMQoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhl
bi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBz
Oi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

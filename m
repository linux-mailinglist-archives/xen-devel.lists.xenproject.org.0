Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 309D2A299BD
	for <lists+xen-devel@lfdr.de>; Wed,  5 Feb 2025 20:07:58 +0100 (CET)
Received: from list by lists.xenproject.org with outflank-mailman.882318.1292472 (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1tfkkS-00072r-Rp; Wed, 05 Feb 2025 19:07:44 +0000
X-Outflank-Mailman: Message body and most headers restored to incoming version
Received: by outflank-mailman (output) from mailman id 882318.1292472; Wed, 05 Feb 2025 19:07:44 +0000
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1tfkkS-000701-OZ; Wed, 05 Feb 2025 19:07:44 +0000
Received: by outflank-mailman (input) for mailman id 882318;
 Wed, 05 Feb 2025 19:07:43 +0000
Received: from se1-gles-sth1-in.inumbo.com ([159.253.27.254]
 helo=se1-gles-sth1.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.92)
 (envelope-from <SRS0=mYcB=U4=kernel.org=conor@srs-se1.protection.inumbo.net>)
 id 1tfkkR-0006zv-Ar
 for xen-devel@lists.xenproject.org; Wed, 05 Feb 2025 19:07:43 +0000
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by se1-gles-sth1.inumbo.com (Halon) with ESMTPS
 id 78c0d6c0-e3f4-11ef-a0e7-8be0dac302b0;
 Wed, 05 Feb 2025 20:07:41 +0100 (CET)
Received: from smtp.kernel.org (transwarp.subspace.kernel.org [100.75.92.58])
 by dfw.source.kernel.org (Postfix) with ESMTP id 794645C6E52;
 Wed,  5 Feb 2025 19:07:00 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id BE81AC4CEDD;
 Wed,  5 Feb 2025 19:07:37 +0000 (UTC)
X-BeenThere: xen-devel@lists.xenproject.org
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Errors-To: xen-devel-bounces@lists.xenproject.org
Precedence: list
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>
X-Inumbo-ID: 78c0d6c0-e3f4-11ef-a0e7-8be0dac302b0
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1738782459;
	bh=NFUl64MxiZHFZZzXDggLIbl2MqhNbPelbIOeTF+PF9Q=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=rVM9hu9nr45mqJmIg9rduupgmDvqVSh5AXec6ZHkTYzrHArpyMP8/WyuV4gfkPZJT
	 yHI0uDaPolJ2iTp4gHTK3WFN3H1CFFnGkFGFZT2SVpoJ9NtqeayvXkr6DJca9Uvumd
	 Rw+JYMikqkFiR7CxyWD7vD09z+VcYsVkxke2vEjuNT82GUTTU4AO8wK3nHo9xAKGvd
	 uTWFBGvO5VZ56DpvBKu0biZMEhTMdjVziwYFd0DQCzsls6SQpN06bOeDjg2m+rKMb7
	 v+ZLiC/FUyMNKsfl+ZEa/X0J2Yx/JipmHXZrgZCTd9y8R/SaTqAVsz0tp1pwUf4kCU
	 Kvz2xuDpsyuWg==
Date: Wed, 5 Feb 2025 19:07:35 +0000
From: Conor Dooley <conor@kernel.org>
To: Oleksii Kurochko <oleksii.kurochko@gmail.com>
Cc: xen-devel@lists.xenproject.org,
	Alistair Francis <alistair.francis@wdc.com>,
	Bob Eshleman <bobbyeshleman@gmail.com>,
	Connor Davis <connojdavis@gmail.com>,
	Andrew Cooper <andrew.cooper3@citrix.com>,
	Anthony PERARD <anthony.perard@vates.tech>,
	Michal Orzel <michal.orzel@amd.com>,
	Jan Beulich <jbeulich@suse.com>, Julien Grall <julien@xen.org>,
	Roger Pau =?iso-8859-1?Q?Monn=E9?= <roger.pau@citrix.com>,
	Stefano Stabellini <sstabellini@kernel.org>
Subject: Re: [PATCH v3] xen/riscv: identify specific ISA supported by cpu
Message-ID: <20250205-chariot-blandness-7e9a791f7f34@spud>
References: <ddf678bb829003b2c4a0a85166a29b61e75bcea9.1737643226.git.oleksii.kurochko@gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="jS9hyMnfKmqUyNnA"
Content-Disposition: inline
In-Reply-To: <ddf678bb829003b2c4a0a85166a29b61e75bcea9.1737643226.git.oleksii.kurochko@gmail.com>


--jS9hyMnfKmqUyNnA
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Yo,

On Thu, Jan 23, 2025 at 03:46:36PM +0100, Oleksii Kurochko wrote:
> Supported ISA extensions are specified in the device tree within the CPU
> node, using two properties: `riscv,isa-extensions` and `riscv,isa`.
>=20
> Currently, Xen does not support the `riscv,isa-extensions` property, as
> all available device tree source (DTS) files in the Linux kernel (v6.12-r=
c3)
> and DTBs generated by QEMU use only the `riscv,isa` property.

That's not true? The riscv,isa-extensions property went into linux in
late 2023 (6.7 or so) and QEMU in v9.0.0 about a year ago, so all source
files in linux and blobs generated by QEMU should have both. OpenSBI &
U-Boot support both also. Might not affect your decision about what to
support here - but the rationale provided for implementing the deprecated
(per the binding at least) property isn't accurate.

> Therefore, only `riscv,isa` parsing is implemented.
>=20
> The `riscv,isa` property is parsed for each CPU, and the common extensions
> are stored in the `host_riscv_isa` bitmap.
> This bitmap is then used by `riscv_isa_extension_available()` to check
> if a specific extension is supported.
>=20
> The current implementation is based on Linux kernel v6.12-rc3
> implementation with the following changes:
>  - Drop unconditional setting of {RISCV_ISA_EXT_ZICSR,
>    RISCV_ISA_EXT_ZIFENCEI, RISCV_ISA_EXT_ZICNTR, RISCV_ISA_EXT_ZIHPM} as =
they
>    are now part of the riscv,isa string.

Hmm, not sure I follow your logic here. Linux unconditionally sets these
extensions because the binding was written when these these were part of
the base instruction set*. That they can be put into the "riscv,isa"
string is actually the reason that the code setting them unconditionally
in linux exists! Linux cannot tell the difference between an "old" dtb
containing "rv64ima" meaning that Zicsr is present & a "new" one containing
"rv64ima" meaning that it is not! For backwards compatibility reasons,
linux is then forced to set its internal flags for Zicsr et al when it sees
"i" in riscv,isa. If you were to use the "new" definition of "i", and use
that to construct a dtb to pass to a linux guest, things would blow up.

This is the whole reason that riscv,isa is marked deprecated in the binding
and replaced by riscv,isa-extensions - there are no concrete definitions
for what extensions mean using "riscv,isa".

I suppose you're free to decide to interpret the property in Xen
differently to linux - particularly because the hypervisor extension
requirement means that you're only going to run on hardware produced after
the aforementioned extensions were split out of "i" - but if you are
doing that, the rationale for a differing interpretation should be correct
IMO.

Perhaps the wording of my comment in linux was not "strong" enough, and
the "can be set" should be changed to "must be set"?
		/*
		 * These ones were as they were part of the base ISA when the
		 * port & dt-bindings were upstreamed, and so can be set
		 * unconditionally where `i` is in riscv,isa on DT systems.
		 */
		if (acpi_disabled) {
			set_bit(RISCV_ISA_EXT_ZICSR, source_isa);
			set_bit(RISCV_ISA_EXT_ZIFENCEI, source_isa);
			set_bit(RISCV_ISA_EXT_ZICNTR, source_isa);
			set_bit(RISCV_ISA_EXT_ZIHPM, source_isa);
		}



* IIRC only 2 of them were part of i, the other two were assumed to be pres=
ent
  by Linux etc and only became independent extensions later on.

>  - Remove saving of the ISA for each CPU, only the common available ISA is
>    saved.
>  - Remove ACPI-related code as ACPI is not supported by Xen.
>  - Drop handling of elf_hwcap, since Xen does not provide hwcap to
>    userspace.
>  - Replace of_cpu_device_node_get() API, which is not available in Xen,
>    with a combination of dt_for_each_child_node(), dt_device_type_is_equa=
l(),
>    and dt_get_cpuid_from_node() to retrieve cpuid and riscv,isa in
>    riscv_fill_hwcap_from_isa_string().
>  - Rename arguments of __RISCV_ISA_EXT_DATA() from _name to ext_name, and
>    _id to ext_id for clarity.
>  - Replace instances of __RISCV_ISA_EXT_DATA with RISCV_ISA_EXT_DATA.
>  - Replace instances of __riscv_isa_extension_available with
>    riscv_isa_extension_available for consistency. Also, update the type of
>    `bit` argument of riscv_isa_extension_available().
>  - Redefine RISCV_ISA_EXT_DATA() to work only with ext_name and ext_id,
>    as other fields are not used in Xen currently.
>  - Add check of first 4 letters of riscv,isa string to
>    riscv_isa_parse_string() as Xen doesn't do this check before so it is
>    necessary to check correctness of riscv,isa string. ( it should start =
with
>    rv{32,64} with taking into account upper and lower case of "rv").
>  - Drop an argument of riscv_fill_hwcap() and riscv_fill_hwcap_from_isa_s=
tring()
>    as it isn't used, at the moment.

>  - Update the comment message about QEMU workaround.

Does Xen (for riscv) even work with QEMU 7.1?

Cheers,
Conor.

--jS9hyMnfKmqUyNnA
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iHUEABYIAB0WIQRh246EGq/8RLhDjO14tDGHoIJi0gUCZ6O29wAKCRB4tDGHoIJi
0rUkAP438x7Bb2WYsJ6n28SXfj4X8pdMd2yqQD/26bHccG8vDAEArGo3DUCHjvAc
VK/rNPsDLp2k91w+whYet8JCM2zNEQ8=
=3PXC
-----END PGP SIGNATURE-----

--jS9hyMnfKmqUyNnA--


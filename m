Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 32D277AA03
	for <lists+xen-devel@lfdr.de>; Tue, 30 Jul 2019 15:47:16 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hsSQc-0005Cg-Te; Tue, 30 Jul 2019 13:44:34 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=3sDM=V3=citrix.com=paul.durrant@srs-us1.protection.inumbo.net>)
 id 1hsSQa-0005B3-W8
 for xen-devel@lists.xenproject.org; Tue, 30 Jul 2019 13:44:33 +0000
X-Inumbo-ID: 2806ec86-b2d0-11e9-8980-bc764e045a96
Received: from esa4.hc3370-68.iphmx.com (unknown [216.71.155.144])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id 2806ec86-b2d0-11e9-8980-bc764e045a96;
 Tue, 30 Jul 2019 13:44:30 +0000 (UTC)
Authentication-Results: esa4.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none;
 spf=None smtp.pra=paul.durrant@citrix.com;
 spf=Pass smtp.mailfrom=Paul.Durrant@citrix.com;
 spf=None smtp.helo=postmaster@mail.citrix.com
Received-SPF: None (esa4.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 paul.durrant@citrix.com) identity=pra;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="Paul.Durrant@citrix.com";
 x-sender="paul.durrant@citrix.com"; x-conformance=sidf_compatible
Received-SPF: Pass (esa4.hc3370-68.iphmx.com: domain of
 Paul.Durrant@citrix.com designates 162.221.158.21 as
 permitted sender) identity=mailfrom;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="Paul.Durrant@citrix.com";
 x-sender="Paul.Durrant@citrix.com";
 x-conformance=sidf_compatible; x-record-type="v=spf1";
 x-record-text="v=spf1 ip4:209.167.231.154 ip4:178.63.86.133
 ip4:195.66.111.40/30 ip4:85.115.9.32/28 ip4:199.102.83.4
 ip4:192.28.146.160 ip4:192.28.146.107 ip4:216.52.6.88
 ip4:216.52.6.188 ip4:162.221.158.21 ip4:162.221.156.83 ~all"
Received-SPF: None (esa4.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 postmaster@mail.citrix.com) identity=helo;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="Paul.Durrant@citrix.com";
 x-sender="postmaster@mail.citrix.com";
 x-conformance=sidf_compatible
IronPort-SDR: dt9CKyPUHyXyPon9yNfp+SXuYqWeodB7GHVXt+czIYrjDKf9gqYYj0bpfBpM/Zs1tHo1HIgb7E
 QHWEqFYOjrxzgdr/Sr1A/DFIO+AIQOILjRGzvYox0/hGjxVqXHTpUxPo8gqvyOuW9wF/huTqSv
 5ulLHqjYAcxoFU1ViUUcVpswxjZxE6Zl7EKS6u60syYO4fYzaKAxEZ29hyTrF3of3CuyYBOcg1
 iMjLwciQLSmh3hyDXN/5O2qq+ECaxtdCzOj+AJKd7n7/MJZ4w0wqZqxyuKAxGfV0kUAjOny+Vp
 3/U=
X-SBRS: 2.7
X-MesageID: 3760812
X-Ironport-Server: esa4.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.64,326,1559534400"; 
   d="scan'208";a="3760812"
From: Paul Durrant <paul.durrant@citrix.com>
To: <xen-devel@lists.xenproject.org>
Date: Tue, 30 Jul 2019 14:44:19 +0100
Message-ID: <20190730134419.2739-7-paul.durrant@citrix.com>
X-Mailer: git-send-email 2.20.1.2.gb21ebb671
In-Reply-To: <20190730134419.2739-1-paul.durrant@citrix.com>
References: <20190730134419.2739-1-paul.durrant@citrix.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH 6/6] introduce a 'passthrough' configuration
 option to xl.cfg...
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wl@xen.org>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Tim Deegan <tim@xen.org>,
 Julien Grall <julien.grall@arm.com>, Paul Durrant <paul.durrant@citrix.com>,
 Jan Beulich <jbeulich@suse.com>, Anthony PERARD <anthony.perard@citrix.com>,
 Volodymyr Babchuk <Volodymyr_Babchuk@epam.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

Li4uYW5kIGhlbmNlIHRoZSBhYmlsaXR5IHRvIGRpc2FibGUgSU9NTVUgbWFwcGluZ3MsIGFuZCBj
b250cm9sIEVQVApzaGFyaW5nLgoKVGhpcyBwYXRjaCBpbnRyb2R1Y2VzIGEgbmV3ICdsaWJ4bF9w
YXNzdGhyb3VnaCcgZW51bWVyYXRpb24gaW50bwpsaWJ4bF9kb21haW5fY3JlYXRlX2luZm8uIFRo
ZSB2YWx1ZSB3aWxsIGJlIHNldCBieSB4bCBlaXRoZXIgd2hlbiBpdCBwYXJzZXMKYSBuZXcgJ3Bh
c3N0aHJvdWdoJyBvcHRpb24gaW4geGwuY2ZnLCBvciBpbXBsaWNpdGx5IGlmIHRoZXJlIGlzIHBh
c3N0aHJvdWdoCmhhcmR3YXJlIHNwZWNpZmllZCBmb3IgdGhlIGRvbWFpbi4KCklmIHRoZSB2YWx1
ZSBvZiB0aGUgcGFzc3Rocm91Z2ggY29uZmlndXJhdGlvbiBvcHRpb24gaXMgJ2Rpc2FibGVkJyB0
aGVuCnRoZSBYRU5fRE9NQ1RMX0NERl9pb21tdSBmbGFnIHdpbGwgYmUgY2xlYXIgaW4gdGhlIHhl
bl9kb21jdGxfY3JlYXRlZG9tYWluCmZsYWdzLCB0aHVzIGFsbG93aW5nIHRoZSB0b29sc3RhY2sg
dG8gY29udHJvbCB3aGV0aGVyIHRoZSBkb21haW4gZ2V0cwpJT01NVSBtYXBwaW5ncyBvciBub3Qg
KHdoZXJlIHByZXZpb3VzbHkgdGhleSB3ZXJlIGdsb2JhbGx5IHNldCkuCgpJZiB0aGUgdmFsdWUg
b2YgdGhlIHBhc3N0aHJvdWdoIGNvbmZpZ3VyYXRpb24gb3B0aW9uIGlzICdzeW5jX3B0JyB0aGVu
CmEgbmV3ICdpb21tdV9vcHRzJyBmaWVsZCBpbiB4ZW5fZG9tY3RsX2NyZWF0ZWRvbWFpbiB3aWxs
IGJlIHNldCB3aXRoIHRoZQp2YWx1ZSBYRU5fRE9NQ1RMX0lPTU1VX25vX3NoYXJlcHQuIFRoaXMg
d2lsbCBvdmVycmlkZSB0aGUgZ2xvYmFsIGRlZmF1bHQKc2V0IGluIGlvbW11X2hhcF9wdF9zaGFy
ZSwgdGh1cyBhbGxvd2luZyB0aGUgdG9vbHN0YWNrIHRvIGNvbnRyb2wgd2hldGhlcgpFUFQgc2hh
cmluZyBpcyB1c2VkIGZvciB0aGUgZG9tYWluLgoKTk9URTogVGhlIGNhbGwgdG8gbGlieGxfZ2V0
X3BoeXNpbmZvKCkgaW4gbGlieGxfX2RvbWFpbl9tYWtlKCkgaXMgbGVmdAogICAgICBpbiBwbGFj
ZSB0byBhbGxvdyBhdHRlbXB0cyB0byBwYXNzdGhyb3VnaCBoYXJkd2FyZSBvbiBhIGh5cGVydmlz
b3IKICAgICAgd2l0aCBkaXNhYmxlZCBJT01NVSBzdXBwb3J0IHRvIGJlIHJlamVjdGVkIGVhcmx5
LgoKU2lnbmVkLW9mZi1ieTogUGF1bCBEdXJyYW50IDxwYXVsLmR1cnJhbnRAY2l0cml4LmNvbT4K
LS0tCkNjOiBJYW4gSmFja3NvbiA8aWFuLmphY2tzb25AZXUuY2l0cml4LmNvbT4KQ2M6IFdlaSBM
aXUgPHdsQHhlbi5vcmc+CkNjOiBBbmRyZXcgQ29vcGVyIDxhbmRyZXcuY29vcGVyM0BjaXRyaXgu
Y29tPgpDYzogR2VvcmdlIER1bmxhcCA8R2VvcmdlLkR1bmxhcEBldS5jaXRyaXguY29tPgpDYzog
SmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgpDYzogSnVsaWVuIEdyYWxsIDxqdWxpZW4u
Z3JhbGxAYXJtLmNvbT4KQ2M6IEtvbnJhZCBSemVzenV0ZWsgV2lsayA8a29ucmFkLndpbGtAb3Jh
Y2xlLmNvbT4KQ2M6IFN0ZWZhbm8gU3RhYmVsbGluaSA8c3N0YWJlbGxpbmlAa2VybmVsLm9yZz4K
Q2M6IFRpbSBEZWVnYW4gPHRpbUB4ZW4ub3JnPgpDYzogQW50aG9ueSBQRVJBUkQgPGFudGhvbnku
cGVyYXJkQGNpdHJpeC5jb20+CkNjOiBWb2xvZHlteXIgQmFiY2h1ayA8Vm9sb2R5bXlyX0JhYmNo
dWtAZXBhbS5jb20+CkNjOiAiUm9nZXIgUGF1IE1vbm7DqSIgPHJvZ2VyLnBhdUBjaXRyaXguY29t
PgotLS0KIGRvY3MvbWFuL3hsLmNmZy41LnBvZC5pbiAgICAgICAgfCA1MiArKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysKIHRvb2xzL2xpYnhsL2xpYnhsLmggICAgICAgICAgICAgfCAg
NSArKysrCiB0b29scy9saWJ4bC9saWJ4bF9jcmVhdGUuYyAgICAgIHwgMTYgKysrKysrKysrLQog
dG9vbHMvbGlieGwvbGlieGxfdHlwZXMuaWRsICAgICB8ICA3ICsrKysrCiB0b29scy94bC94bF9w
YXJzZS5jICAgICAgICAgICAgIHwgMzggKysrKysrKysrKysrKysrKysrKysrKysrCiB4ZW4vYXJj
aC9hcm0vZG9tYWluLmMgICAgICAgICAgIHwgMTEgKysrKysrLQogeGVuL2FyY2gveDg2L2RvbWFp
bi5jICAgICAgICAgICB8ICAzICstCiB4ZW4vY29tbW9uL2RvbWFpbi5jICAgICAgICAgICAgIHwg
IDcgKysrKysKIHhlbi9kcml2ZXJzL3Bhc3N0aHJvdWdoL2lvbW11LmMgfCAxMyArKysrKysrKy0K
IHhlbi9pbmNsdWRlL3B1YmxpYy9kb21jdGwuaCAgICAgfCAgNiArKystCiB4ZW4vaW5jbHVkZS94
ZW4vaW9tbXUuaCAgICAgICAgIHwgMTcgKysrKysrKy0tLS0KIDExIGZpbGVzIGNoYW5nZWQsIDE2
NSBpbnNlcnRpb25zKCspLCAxMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kb2NzL21hbi94
bC5jZmcuNS5wb2QuaW4gYi9kb2NzL21hbi94bC5jZmcuNS5wb2QuaW4KaW5kZXggYzk5ZDQwMzA3
ZS4uYzY2OTUyNGJlYyAxMDA2NDQKLS0tIGEvZG9jcy9tYW4veGwuY2ZnLjUucG9kLmluCisrKyBi
L2RvY3MvbWFuL3hsLmNmZy41LnBvZC5pbgpAQCAtNjA1LDYgKzYwNSw1OCBAQCBvcHRpb24gc2hv
dWxkIG9ubHkgYmUgdXNlZCB3aXRoIGEgdHJ1c3RlZCBkZXZpY2UgdHJlZS4KIE5vdGUgdGhhdCB0
aGUgcGFydGlhbCBkZXZpY2UgdHJlZSBzaG91bGQgYXZvaWQgdXNpbmcgdGhlIHBoYW5kbGUgNjUw
MDAKIHdoaWNoIGlzIHJlc2VydmVkIGJ5IHRoZSB0b29sc3RhY2suCiAKKz1pdGVtIEI8cGFzc3Ro
cm91Z2g9IlNUUklORyI+CisKK1NwZWNpZnkgd2hldGhlciBJT01NVSBtYXBwaW5ncyBhcmUgZW5h
YmxlZCBmb3IgdGhlIGRvbWFpbiBhbmQgaGVuY2Ugd2hldGhlcgoraXQgd2lsbCBiZSBlbmFibGVk
IGZvciBwYXNzdGhyb3VnaCBoYXJkd2FyZS4gVmFsaWQgdmFsdWVzIGZvciB0aGlzIG9wdGlvbgor
YXJlOgorCis9b3ZlciA0CisKKz1pdGVtIEI8ZGlzYWJsZWQ+CisKK0lPTU1VIG1hcHBpbmdzIGFy
ZSBkaXNhYmxlZCBmb3IgdGhlIGRvbWFpbiBhbmQgc28gaGFyZHdhcmUgbWF5IG5vdCBiZQorcGFz
c2VkIHRocm91Z2guCisKK1RoaXMgb3B0aW9uIGlzIHRoZSBkZWZhdWx0IGlmIG5vIHBhc3N0aHJv
dWdoIGhhcmR3YXJlIGlzIHNwZWNpZmllZAoraW4gdGhlIGRvbWFpbidzIGNvbmZpZ3VyYXRpb24u
CisKKz1pdGVtIEI8c3luY19wdD4KKworVGhpcyBvcHRpb24gbWVhbnMgdGhhdCBJT01NVSBtYXBw
aW5ncyB3aWxsIGJlIHN5bmNocm9uaXplZCB3aXRoIHRoZQorZG9tYWluJ3MgUDJNIHRhYmxlIGFz
IGZvbGxvd3M6CisKK0ZvciBhIFBWIGRvbWFpbiwgYWxsIHdyaXRhYmxlIHBhZ2VzIGFzc2lnbmVk
IHRvIHRoZSBkb21haW4gYXJlIGlkZW50aXR5CittYXBwZWQgYnkgTUZOIGluIHRoZSBJT01NVSBw
YWdlIHRhYmxlLiBUaHVzIGEgZGV2aWNlIGRyaXZlciBydW5uaW5nIGluIHRoZQorZG9tYWluIG1h
eSBwcm9ncmFtIHBhc3N0aHJvdWdoIGhhcmR3YXJlIGZvciBETUEgdXNpbmcgTUZOIHZhbHVlcwor
KGkuZS4gaG9zdC9tYWNoaW5lIGZyYW1lIG51bWJlcnMpIGxvb2tlZCB1cCBpbiBpdHMgUDJNLgor
CitGb3IgYW4gSFZNIGRvbWFpbiwgYWxsIG5vbi1mb3JlaWduIFJBTSBwYWdlcyBwcmVzZW50IGlu
IGl0cyBQMk0gd2lsbCBiZQorbWFwcGVkIGJ5IEdGTiBpbiB0aGUgSU9NTVUgcGFnZSB0YWJsZS4g
VGh1cyBhIGRldmljZSBkcml2ZXIgcnVubmluZyBpbiB0aGUKK2RvbWFpbiBtYXkgcHJvZ3JhbSBw
YXNzdGhyb3VnaCBoYXJkd2FyZSB1c2luZyBHRk4gdmFsdWVzIChpLmUuIGd1ZXN0CitwaHlzaWNh
bCBmcmFtZSBudW1iZXJzKSB3aXRob3V0IGFueSBmdXJ0aGVyIHRyYW5zbGF0aW9uLgorCitUaGlz
IG9wdGlvbiBpcyB0aGUgZGVmYXVsdCBpZiB0aGUgZG9tYWluIGlzIFBWIGFuZCBwYXNzdGhyb3Vn
aCBoYXJkd2FyZQoraXMgc3BlY2lmaWVkIGluIHRoZSBjb25maWd1cmF0aW9uLgorCitUaGlzIG9w
dGlvbiBpcyBub3QgYXZhaWxhYmxlIG9uIEFybS4KKworPWl0ZW0gQjxzaGFyZV9wdD4KKworVGhp
cyBvcHRpb24gaXMgdW5hdmFpbGFibGUgZm9yIGEgUFYgZG9tYWluLiBGb3IgYW4gSFZNIGRvbWFp
biwgdGhpcyBvcHRpb24KK21lYW5zIHRoYXQgdGhlIElPTU1VIHdpbGwgYmUgcHJvZ3JhbW1lZCB0
byBkaXJlY3RseSByZWZlcmVuY2UgdGhlIGRvbWFpbidzCitQMk0gdGFibGUgYXMgaXRzIHBhZ2Ug
dGFibGUuIEZyb20gdGhlIHBvaW50IG9mIHZpZXcgb2YgYSBkZXZpY2UgZHJpdmVyCitydW5uaW5n
IGluIHRoZSBkb21haW4gdGhpcyBpcyBmdW5jdGlvbmFsbHkgZXF1aXZhbGVudCB0byBCPHN5bmNf
cHQ+IGJ1dAorcGxhY2VzIGxlc3MgbG9hZCBvbiB0aGUgaHlwZXJ2aXNvciBhbmQgc28gc2hvdWxk
IGdlbmVyYWxseSBiZSBzZWxlY3RlZCBpbgorcHJlZmVyZW5jZS4gSG93ZXZlciwgdGhlIGF2YWls
YWJpbGl0eSBvZiB0aGlzIG9wdGlvbiBpcyBoYXJkd2FyZSBzcGVjaWZpYworYW5kIHRodXMsIGlm
IGl0IGlzIHNwZWNpZmllZCBmb3IgYSBkb21haW4gcnVubmluZyBvbiBoYXJkd2FyZSB0aGF0IGRv
ZXMKK25vdCBhbGxvdyBpdCwgQjxzeW5jX3B0PiB3aWxsIGJlIHVzZWQgaW5zdGVhZC4KKworVGhp
cyBvcHRpb24gaXMgdGhlIGRlZmF1bHQgaWYgdGhlIGRvbWFpbiBpcyBIVk0gYW5kIHBhc3N0aHJv
dWdoIGhhcmR3YXJlCitpcyBzcGVjaWZpZWQgaW4gdGhlIGNvbmZpZ3VyYXRpb24uCisKKz1iYWNr
CisKID1iYWNrCiAKID1oZWFkMiBEZXZpY2VzCmRpZmYgLS1naXQgYS90b29scy9saWJ4bC9saWJ4
bC5oIGIvdG9vbHMvbGlieGwvbGlieGwuaAppbmRleCA5YmFjZmI5N2YwLi41ZGU3YzA3YTQxIDEw
MDY0NAotLS0gYS90b29scy9saWJ4bC9saWJ4bC5oCisrKyBiL3Rvb2xzL2xpYnhsL2xpYnhsLmgK
QEAgLTM5NCw2ICszOTQsMTEgQEAKICAqLwogI2RlZmluZSBMSUJYTF9IQVZFX0VYVEVOREVEX1ZL
QiAxCiAKKy8qCisgKiBsaWJ4bF9kb21haW5fY3JlYXRlX2luZm8gaGFzIGxpYnhsX3Bhc3N0aHJv
dWdoIGVudW1lcmF0aW9uLgorICovCisjZGVmaW5lIExJQlhMX0hBVkVfQ1JFQVRFSU5GT19QQVNT
VEhST1VHSCAxCisKIC8qCiAgKiBsaWJ4bCBBQkkgY29tcGF0aWJpbGl0eQogICoKZGlmZiAtLWdp
dCBhL3Rvb2xzL2xpYnhsL2xpYnhsX2NyZWF0ZS5jIGIvdG9vbHMvbGlieGwvbGlieGxfY3JlYXRl
LmMKaW5kZXggZmViOWYxY2UwYy4uYWQ1ZjM2NDg0YSAxMDA2NDQKLS0tIGEvdG9vbHMvbGlieGwv
bGlieGxfY3JlYXRlLmMKKysrIGIvdG9vbHMvbGlieGwvbGlieGxfY3JlYXRlLmMKQEAgLTU2NSwx
MiArNTY1LDI2IEBAIGludCBsaWJ4bF9fZG9tYWluX21ha2UobGlieGxfX2djICpnYywgbGlieGxf
ZG9tYWluX2NvbmZpZyAqZF9jb25maWcsCiAgICAgICAgICAgICAgICAgbGlieGxfZGVmYm9vbF92
YWwoaW5mby0+b29zKSA/IDAgOiBYRU5fRE9NQ1RMX0NERl9vb3Nfb2ZmOwogICAgICAgICB9CiAK
KyAgICAgICAgTE9HKERFVEFJTCwgInBhc3N0aHJvdWdoOiAlcyIsCisgICAgICAgICAgICBsaWJ4
bF9wYXNzdGhyb3VnaF90b19zdHJpbmcoaW5mby0+cGFzc3Rocm91Z2gpKTsKKwogICAgICAgICBy
YyA9IGxpYnhsX2dldF9waHlzaW5mbyhjdHgsICZwaHlzaW5mbyk7CiAgICAgICAgIGlmIChyYyA8
IDApCiAgICAgICAgICAgICBnb3RvIG91dDsKIAotICAgICAgICBpZiAoIHBoeXNpbmZvLmNhcF9o
dm1fZGlyZWN0aW8gKQorICAgICAgICBpZiAoaW5mby0+cGFzc3Rocm91Z2ggIT0gTElCWExfUEFT
U1RIUk9VR0hfRElTQUJMRUQpCisgICAgICAgIHsKKyAgICAgICAgICAgIGlmICghcGh5c2luZm8u
Y2FwX2h2bV9kaXJlY3RpbykgeworICAgICAgICAgICAgICAgIExPR0VEKEVSUk9SLCAqZG9taWQs
ICJwYXNzdGhyb3VnaCBub3QgYXZhaWxhYmxlIik7CisgICAgICAgICAgICAgICAgcmMgPSBFUlJP
Ul9GQUlMOworICAgICAgICAgICAgICAgIGdvdG8gb3V0OworICAgICAgICAgICAgfQorCiAgICAg
ICAgICAgICBjcmVhdGUuZmxhZ3MgfD0gWEVOX0RPTUNUTF9DREZfaW9tbXU7CisgICAgICAgIH0K
KworICAgICAgICBpZiAoaW5mby0+cGFzc3Rocm91Z2ggPT0gTElCWExfUEFTU1RIUk9VR0hfU1lO
Q19QVCkKKyAgICAgICAgICAgIGNyZWF0ZS5pb21tdV9vcHRzIHw9IFhFTl9ET01DVExfSU9NTVVf
bm9fc2hhcmVwdDsKIAogICAgICAgICAvKiBVbHRpbWF0ZWx5LCBoYW5kbGUgaXMgYW4gYXJyYXkg
b2YgMTYgdWludDhfdCwgc2FtZSBhcyB1dWlkICovCiAgICAgICAgIGxpYnhsX3V1aWRfY29weShj
dHgsIChsaWJ4bF91dWlkICopJmNyZWF0ZS5oYW5kbGUsICZpbmZvLT51dWlkKTsKZGlmZiAtLWdp
dCBhL3Rvb2xzL2xpYnhsL2xpYnhsX3R5cGVzLmlkbCBiL3Rvb2xzL2xpYnhsL2xpYnhsX3R5cGVz
LmlkbAppbmRleCBiNjEzOTljZTM2Li43ZTM3ZGU4NjQ2IDEwMDY0NAotLS0gYS90b29scy9saWJ4
bC9saWJ4bF90eXBlcy5pZGwKKysrIGIvdG9vbHMvbGlieGwvbGlieGxfdHlwZXMuaWRsCkBAIC0y
NjMsNiArMjYzLDEyIEBAIGxpYnhsX3ZrYl9iYWNrZW5kID0gRW51bWVyYXRpb24oInZrYl9iYWNr
ZW5kIiwgWwogICAgICgyLCAiTElOVVgiKQogICAgIF0pCiAKK2xpYnhsX3Bhc3N0aHJvdWdoID0g
RW51bWVyYXRpb24oInBhc3N0aHJvdWdoIiwgWworICAgICgwLCAiZGlzYWJsZWQiKSwKKyAgICAo
MSwgInN5bmNfcHQiKSwKKyAgICAoMiwgInNoYXJlX3B0IiksCisgICAgXSkKKwogIwogIyBDb21w
bGV4IGxpYnhsIHR5cGVzCiAjCkBAIC00MDgsNiArNDE0LDcgQEAgbGlieGxfZG9tYWluX2NyZWF0
ZV9pbmZvID0gU3RydWN0KCJkb21haW5fY3JlYXRlX2luZm8iLFsKICAgICAoInBvb2xfbmFtZSIs
ICAgIHN0cmluZyksCiAgICAgKCJydW5faG90cGx1Z19zY3JpcHRzIixsaWJ4bF9kZWZib29sKSwK
ICAgICAoImRyaXZlcl9kb21haW4iLGxpYnhsX2RlZmJvb2wpLAorICAgICgicGFzc3Rocm91Z2gi
LCAgbGlieGxfcGFzc3Rocm91Z2gpLAogICAgIF0sIGRpcj1ESVJfSU4pCiAKIGxpYnhsX2RvbWFp
bl9yZXN0b3JlX3BhcmFtcyA9IFN0cnVjdCgiZG9tYWluX3Jlc3RvcmVfcGFyYW1zIiwgWwpkaWZm
IC0tZ2l0IGEvdG9vbHMveGwveGxfcGFyc2UuYyBiL3Rvb2xzL3hsL3hsX3BhcnNlLmMKaW5kZXgg
ZTEwNWJkYTJiYi4uYzkwNDYwNDAwOCAxMDA2NDQKLS0tIGEvdG9vbHMveGwveGxfcGFyc2UuYwor
KysgYi90b29scy94bC94bF9wYXJzZS5jCkBAIC0yMzI2LDYgKzIzMjYsNDQgQEAgc2tpcF92ZmI6
CiAgICAgICAgIH0KICAgICB9CiAKKyAgICBpZiAoIXhsdV9jZmdfZ2V0X3N0cmluZyhjb25maWcs
ICJwYXNzdGhyb3VnaCIsICZidWYsIDApKSB7CisgICAgICAgIGxpYnhsX3Bhc3N0aHJvdWdoIG87
CisKKyAgICAgICAgZSA9IGxpYnhsX3Bhc3N0aHJvdWdoX2Zyb21fc3RyaW5nKGJ1ZiwgJm8pOwor
ICAgICAgICBpZiAoZSkgeworICAgICAgICAgICAgZnByaW50ZihzdGRlcnIsCisgICAgICAgICAg
ICAgICAgICAgICJFUlJPUjogdW5rbm93biBwYXNzdGhyb3VnaCBvcHRpb24gJyVzJ1xuIiwKKyAg
ICAgICAgICAgICAgICAgICAgYnVmKTsKKyAgICAgICAgICAgIGV4aXQoLUVSUk9SX0ZBSUwpOwor
ICAgICAgICB9CisKKyAgICAgICAgc3dpdGNoIChvKSB7CisgICAgICAgIGNhc2UgTElCWExfUEFT
U1RIUk9VR0hfRElTQUJMRUQ6CisgICAgICAgICAgICBpZiAoZF9jb25maWctPm51bV9wY2lkZXZz
IHx8IGRfY29uZmlnLT5udW1fZHRkZXZzKSB7CisgICAgICAgICAgICAgICAgZnByaW50ZihzdGRl
cnIsCisgICAgICAgICAgICAgICAgICAgICAgICAiRVJST1I6IHBhc3N0aHJvdWdoIGRpc2FibGVk
IGJ1dCBkZXZpY2VzIGFyZSBzcGVjaWZpZWRcbiIpOworICAgICAgICAgICAgICAgIGV4aXQoLUVS
Uk9SX0ZBSUwpOworICAgICAgICAgICAgfQorICAgICAgICBjYXNlIExJQlhMX1BBU1NUSFJPVUdI
X1NIQVJFX1BUOgorICAgICAgICAgICAgaWYgKGNfaW5mby0+dHlwZSA9PSBMSUJYTF9ET01BSU5f
VFlQRV9QVikgeworICAgICAgICAgICAgICAgIGZwcmludGYoc3RkZXJyLAorICAgICAgICAgICAg
ICAgICAgICAgICAgIkVSUk9SOiBwYXNzdGhyb3VnaD1cInNoYXJlX3B0XCIgbm90IHZhbGlkIGZv
ciBQViBkb21haW5cbiIpOworICAgICAgICAgICAgICAgIGV4aXQoLUVSUk9SX0ZBSUwpOworICAg
ICAgICAgICAgfQorICAgICAgICBkZWZhdWx0OgorICAgICAgICAgICAgYnJlYWs7CisgICAgICAg
IH0KKworICAgICAgICBjX2luZm8tPnBhc3N0aHJvdWdoID0gbzsKKyAgICB9IGVsc2UgaWYgKGRf
Y29uZmlnLT5udW1fcGNpZGV2cyB8fCBkX2NvbmZpZy0+bnVtX2R0ZGV2cykgeworICAgICAgICAv
KgorICAgICAgICAgKiBQYXNzdGhyb3VnaCBkZXZpY2VzIGFyZSBzcGVjaWZpZWQgc28gc2V0IGFu
IGFwcHJvcHJpYXRlCisgICAgICAgICAqIGRlZmF1bHQgdmFsdWUuCisgICAgICAgICAqLworICAg
ICAgICBjX2luZm8tPnBhc3N0aHJvdWdoID0gKGNfaW5mby0+dHlwZSA9PSBMSUJYTF9ET01BSU5f
VFlQRV9QVikgPworICAgICAgICAgICAgTElCWExfUEFTU1RIUk9VR0hfU1lOQ19QVCA6IExJQlhM
X1BBU1NUSFJPVUdIX1NIQVJFX1BUOworICAgIH0KKwogICAgIGlmICgheGx1X2NmZ19nZXRfbGlz
dChjb25maWcsICJ1c2JjdHJsIiwgJnVzYmN0cmxzLCAwLCAwKSkgewogICAgICAgICBkX2NvbmZp
Zy0+bnVtX3VzYmN0cmxzID0gMDsKICAgICAgICAgZF9jb25maWctPnVzYmN0cmxzID0gTlVMTDsK
ZGlmZiAtLWdpdCBhL3hlbi9hcmNoL2FybS9kb21haW4uYyBiL3hlbi9hcmNoL2FybS9kb21haW4u
YwppbmRleCBlMDZiZDI3ZGFkLi4yMzNkYzRkNTlkIDEwMDY0NAotLS0gYS94ZW4vYXJjaC9hcm0v
ZG9tYWluLmMKKysrIGIveGVuL2FyY2gvYXJtL2RvbWFpbi5jCkBAIC02MTQsNiArNjE0LDE0IEBA
IGludCBhcmNoX3Nhbml0aXNlX2RvbWFpbl9jb25maWcoc3RydWN0IHhlbl9kb21jdGxfY3JlYXRl
ZG9tYWluICpjb25maWcpCiAgICAgICAgIHJldHVybiAtRUlOVkFMOwogICAgIH0KIAorICAgIC8q
IEFsd2F5cyBzaGFyZSBQMk0gVGFibGUgYmV0d2VlbiB0aGUgQ1BVIGFuZCB0aGUgSU9NTVUgKi8K
KyAgICBpZiAoIGNvbmZpZy0+aW9tbXVfb3B0cyAmIFhFTl9ET01DVExfSU9NTVVfbm9fc2hhcmVw
dCApCisgICAgeworICAgICAgICBkcHJpbnRrKFhFTkxPR19JTkZPLAorICAgICAgICAgICAgICAg
ICJVbnN1cHBvcnRlZCBpb21tdSBvcHRpb246IFhFTl9ET01DVExfSU9NTVVfbm9fc2hhcmVwdFxu
Iik7CisgICAgICAgIHJldHVybiAtRUlOVkFMOworICAgIH0KKwogICAgIC8qIEZpbGwgaW4gdGhl
IG5hdGl2ZSBHSUMgdmVyc2lvbiwgcGFzc2VkIGJhY2sgdG8gdGhlIHRvb2xzdGFjay4gKi8KICAg
ICBpZiAoIGNvbmZpZy0+YXJjaC5naWNfdmVyc2lvbiA9PSBYRU5fRE9NQ1RMX0NPTkZJR19HSUNf
TkFUSVZFICkKICAgICB7CkBAIC02NzMsNyArNjgxLDggQEAgaW50IGFyY2hfZG9tYWluX2NyZWF0
ZShzdHJ1Y3QgZG9tYWluICpkLAogCiAgICAgQVNTRVJUKGNvbmZpZyAhPSBOVUxMKTsKIAotICAg
IGlmICggaXNfaW9tbXVfZW5hYmxlZChkKSAmJiAocmMgPSBpb21tdV9kb21haW5faW5pdChkKSkg
IT0gMCApCisgICAgaWYgKCBpc19pb21tdV9lbmFibGVkKGQpICYmCisgICAgICAgICAocmMgPSBp
b21tdV9kb21haW5faW5pdChkLCBjb25maWctPmlvbW11X29wdHMpKSAhPSAwICkKICAgICAgICAg
Z290byBmYWlsOwogCiAgICAgaWYgKCAocmMgPSBwMm1faW5pdChkKSkgIT0gMCApCmRpZmYgLS1n
aXQgYS94ZW4vYXJjaC94ODYvZG9tYWluLmMgYi94ZW4vYXJjaC94ODYvZG9tYWluLmMKaW5kZXgg
NDI3NzgwOTlkYS4uNGJiZDhkZTY2MyAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L2RvbWFpbi5j
CisrKyBiL3hlbi9hcmNoL3g4Ni9kb21haW4uYwpAQCAtNjA0LDcgKzYwNCw4IEBAIGludCBhcmNo
X2RvbWFpbl9jcmVhdGUoc3RydWN0IGRvbWFpbiAqZCwKICAgICBpZiAoIChyYyA9IGluaXRfZG9t
YWluX2lycV9tYXBwaW5nKGQpKSAhPSAwICkKICAgICAgICAgZ290byBmYWlsOwogCi0gICAgaWYg
KCBpc19pb21tdV9lbmFibGVkKGQpICYmIChyYyA9IGlvbW11X2RvbWFpbl9pbml0KGQpKSAhPSAw
ICkKKyAgICBpZiAoIGlzX2lvbW11X2VuYWJsZWQoZCkgJiYKKyAgICAgICAgIChyYyA9IGlvbW11
X2RvbWFpbl9pbml0KGQsIGNvbmZpZy0+aW9tbXVfb3B0cykpICE9IDAgKQogICAgICAgICBnb3Rv
IGZhaWw7CiAKICAgICBwc3JfZG9tYWluX2luaXQoZCk7CmRpZmYgLS1naXQgYS94ZW4vY29tbW9u
L2RvbWFpbi5jIGIveGVuL2NvbW1vbi9kb21haW4uYwppbmRleCAwZGY0YjQ3MzUyLi5iMGI5YTE3
YTE4IDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL2RvbWFpbi5jCisrKyBiL3hlbi9jb21tb24vZG9t
YWluLmMKQEAgLTMwOCw2ICszMDgsMTMgQEAgc3RhdGljIGludCBzYW5pdGlzZV9kb21haW5fY29u
ZmlnKHN0cnVjdCB4ZW5fZG9tY3RsX2NyZWF0ZWRvbWFpbiAqY29uZmlnKQogICAgICAgICByZXR1
cm4gLUVJTlZBTDsKICAgICB9CiAKKyAgICBpZiAoICEoY29uZmlnLT5mbGFncyAmIFhFTl9ET01D
VExfQ0RGX2lvbW11KSAmJiBjb25maWctPmlvbW11X29wdHMgKQorICAgIHsKKyAgICAgICAgZHBy
aW50ayhYRU5MT0dfSU5GTywKKyAgICAgICAgICAgICAgICAiSU9NTVUgb3B0aW9ucyBzcGVjaWZp
ZWQgYnV0IElPTU1VIG5vdCBlbmFibGVkXG4iKTsKKyAgICAgICAgcmV0dXJuIC1FSU5WQUw7Cisg
ICAgfQorCiAgICAgaWYgKCBjb25maWctPm1heF92Y3B1cyA8IDEgKQogICAgIHsKICAgICAgICAg
ZHByaW50ayhYRU5MT0dfSU5GTywgIk5vIHZDUFVTXG4iKTsKZGlmZiAtLWdpdCBhL3hlbi9kcml2
ZXJzL3Bhc3N0aHJvdWdoL2lvbW11LmMgYi94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9pb21tdS5j
CmluZGV4IDY3ODU1ZWVlZDUuLjFjNTU2ZTM5YWIgMTAwNjQ0Ci0tLSBhL3hlbi9kcml2ZXJzL3Bh
c3N0aHJvdWdoL2lvbW11LmMKKysrIGIveGVuL2RyaXZlcnMvcGFzc3Rocm91Z2gvaW9tbXUuYwpA
QCAtMTU5LDcgKzE1OSw3IEBAIHN0YXRpYyB2b2lkIF9faHdkb21faW5pdCBjaGVja19od2RvbV9y
ZXFzKHN0cnVjdCBkb21haW4gKmQpCiAgICAgaW9tbXVfaHdkb21fc3RyaWN0ID0gdHJ1ZTsKIH0K
IAotaW50IGlvbW11X2RvbWFpbl9pbml0KHN0cnVjdCBkb21haW4gKmQpCitpbnQgaW9tbXVfZG9t
YWluX2luaXQoc3RydWN0IGRvbWFpbiAqZCwgdW5zaWduZWQgaW50IG9wdHMpCiB7CiAgICAgc3Ry
dWN0IGRvbWFpbl9pb21tdSAqaGQgPSBkb21faW9tbXUoZCk7CiAgICAgaW50IHJldCA9IDA7CkBA
IC0xNzYsNiArMTc2LDE1IEBAIGludCBpb21tdV9kb21haW5faW5pdChzdHJ1Y3QgZG9tYWluICpk
KQogICAgIGlmICggcmV0ICkKICAgICAgICAgcmV0dXJuIHJldDsKIAorICAgIC8qCisgICAgICog
VXNlIHNoYXJlZCBwYWdlIHRhYmxlcyBmb3IgSEFQIGFuZCBJT01NVSBpZiB0aGUgZ2xvYmFsIG9w
dGlvbgorICAgICAqIGlzIGVuYWJsZWQgKGZyb20gd2hpY2ggd2UgY2FuIGluZmVyIHRoZSBoL3cg
aXMgY2FwYWJsZSkgYW5kCisgICAgICogdGhlIGRvbWFpbiBvcHRpb25zIGRvIG5vdCBkaXNhbGxv
dyBpdC4gSEFQIG11c3QsIG9mIGNvdXJzZSwgYWxzbworICAgICAqIGJlIGVuYWJsZWQuCisgICAg
ICovCisgICAgaGQtPmhhcF9wdF9zaGFyZSA9IGhhcF9lbmFibGVkKGQpICYmIGlvbW11X2hhcF9w
dF9zaGFyZSAmJgorICAgICAgICAhKG9wdHMgJiBYRU5fRE9NQ1RMX0lPTU1VX25vX3NoYXJlcHQp
OworCiAgICAgLyoKICAgICAgKiBOQjogJ3JlbGF4ZWQnIGgvdyBkb21haW5zIGRvbid0IG5lZWQg
dGhlIElPTU1VIG1hcHBpbmdzIHRvIGJlIGtlcHQKICAgICAgKiAgICAgaW4tc3luYyB3aXRoIHRo
ZWlyIGFzc2lnbmVkIHBhZ2VzIGJlY2F1c2UgYWxsIGhvc3QgUkFNIHdpbGwgYmUKQEAgLTE4Nyw2
ICsxOTYsOCBAQCBpbnQgaW9tbXVfZG9tYWluX2luaXQoc3RydWN0IGRvbWFpbiAqZCkKICAgICBp
ZiAoICFpc19oYXJkd2FyZV9kb21haW4oZCkgfHwgaW9tbXVfaHdkb21fc3RyaWN0ICkKICAgICAg
ICAgaGQtPm5lZWRfc3luYyA9ICFpb21tdV91c2VfaGFwX3B0KGQpOwogCisgICAgQVNTRVJUKCEo
aGQtPm5lZWRfc3luYyAmJiBoZC0+aGFwX3B0X3NoYXJlKSk7CisKICAgICByZXR1cm4gMDsKIH0K
IApkaWZmIC0tZ2l0IGEveGVuL2luY2x1ZGUvcHVibGljL2RvbWN0bC5oIGIveGVuL2luY2x1ZGUv
cHVibGljL2RvbWN0bC5oCmluZGV4IDNmODJjNzg4NzAuLmViYWI2NTNjYWMgMTAwNjQ0Ci0tLSBh
L3hlbi9pbmNsdWRlL3B1YmxpYy9kb21jdGwuaAorKysgYi94ZW4vaW5jbHVkZS9wdWJsaWMvZG9t
Y3RsLmgKQEAgLTY4LDcgKzY4LDExIEBAIHN0cnVjdCB4ZW5fZG9tY3RsX2NyZWF0ZWRvbWFpbiB7
CiAjZGVmaW5lIF9YRU5fRE9NQ1RMX0NERl9pb21tdSAgICAgICAgIDUKICNkZWZpbmUgWEVOX0RP
TUNUTF9DREZfaW9tbXUgICAgICAgICAgKDFVPDxfWEVOX0RPTUNUTF9DREZfaW9tbXUpCiAKLSAg
ICB1aW50MzJfdCBmbGFnczsKKyAgICB1aW50MTZfdCBmbGFnczsKKworI2RlZmluZSBfWEVOX0RP
TUNUTF9JT01NVV9ub19zaGFyZXB0ICAwCisjZGVmaW5lIFhFTl9ET01DVExfSU9NTVVfbm9fc2hh
cmVwdCAgICgxVTw8X1hFTl9ET01DVExfSU9NTVVfbm9fc2hhcmVwdCkKKyAgICB1aW50MTZfdCBp
b21tdV9vcHRzOwogCiAgICAgLyoKICAgICAgKiBWYXJpb3VzIGRvbWFpbiBsaW1pdHMsIHdoaWNo
IGltcGFjdCB0aGUgcXVhbnRpdHkgb2YgcmVzb3VyY2VzIChnbG9iYWwKZGlmZiAtLWdpdCBhL3hl
bi9pbmNsdWRlL3hlbi9pb21tdS5oIGIveGVuL2luY2x1ZGUveGVuL2lvbW11LmgKaW5kZXggNDVl
YzZjZmU0NC4uNDBlNTlhNGZiZiAxMDA2NDQKLS0tIGEveGVuL2luY2x1ZGUveGVuL2lvbW11LmgK
KysrIGIveGVuL2luY2x1ZGUveGVuL2lvbW11LmgKQEAgLTY3LDcgKzY3LDcgQEAgZXh0ZXJuIHVu
c2lnbmVkIGludCBpb21tdV9kZXZfaW90bGJfdGltZW91dDsKIGludCBpb21tdV9zZXR1cCh2b2lk
KTsKIGludCBpb21tdV9oYXJkd2FyZV9zZXR1cCh2b2lkKTsKIAotaW50IGlvbW11X2RvbWFpbl9p
bml0KHN0cnVjdCBkb21haW4gKmQpOworaW50IGlvbW11X2RvbWFpbl9pbml0KHN0cnVjdCBkb21h
aW4gKmQsIHVuc2lnbmVkIGludCBvcHRzKTsKIHZvaWQgaW9tbXVfaHdkb21faW5pdChzdHJ1Y3Qg
ZG9tYWluICpkKTsKIHZvaWQgaW9tbXVfZG9tYWluX2Rlc3Ryb3koc3RydWN0IGRvbWFpbiAqZCk7
CiAKQEAgLTI1NiwxMCArMjU2LDE4IEBAIHN0cnVjdCBkb21haW5faW9tbXUgewogICAgIC8qIEZl
YXR1cmVzIHN1cHBvcnRlZCBieSB0aGUgSU9NTVUgKi8KICAgICBERUNMQVJFX0JJVE1BUChmZWF0
dXJlcywgSU9NTVVfRkVBVF9jb3VudCk7CiAKKyAgICAvKgorICAgICAqIERvZXMgdGhlIGd1ZXN0
IHNoYXJlIEhBUCBtYXBwaW5nIHdpdGggdGhlIElPTU1VPyBUaGlzIGlzIGFsd2F5cworICAgICAq
IHRydWUgZm9yIEFSTSBzeXN0ZW1zIGFuZCBtYXkgYmUgdHJ1ZSBmb3IgeDg2IHN5c3RlbXMgd2hl
cmUgdGhlCisgICAgICogdGhlIGhhcmR3YXJlIGlzIGNhcGFibGUuCisgICAgICovCisgICAgYm9v
bCBoYXBfcHRfc2hhcmU7CisKICAgICAvKgogICAgICAqIERvZXMgdGhlIGd1ZXN0IHJlcWlyZSBt
YXBwaW5ncyB0byBiZSBzeW5jaG9uaXplZCwgdG8gbWFpbnRhaW4KLSAgICAgKiB0aGUgZGVmYXVs
dCBkZm4gPT0gcGZuIG1hcC4gKFNlZSBjb21tZW50IG9uIGRmbiBhdCB0aGUgdG9wIG9mCi0gICAg
ICogaW5jbHVkZS94ZW4vbW0uaCkuCisgICAgICogdGhlIGRlZmF1bHQgZGZuID09IHBmbiBtYXA/
IChTZWUgY29tbWVudCBvbiBkZm4gYXQgdGhlIHRvcCBvZgorICAgICAqIGluY2x1ZGUveGVuL21t
LmgpLiBOb3RlIHRoYXQgaGFwX3B0X3NoYXJlID09IGZhbHNlIGRvZXMgbm90CisgICAgICogbmVj
ZXNzYXJpbHkgaW1wbHkgdGhpcyBpcyB0cnVlLgogICAgICAqLwogICAgIGJvb2wgbmVlZF9zeW5j
OwogfTsKQEAgLTI2OSw4ICsyNzcsNyBAQCBzdHJ1Y3QgZG9tYWluX2lvbW11IHsKICNkZWZpbmUg
aW9tbXVfY2xlYXJfZmVhdHVyZShkLCBmKSBjbGVhcl9iaXQoZiwgZG9tX2lvbW11KGQpLT5mZWF0
dXJlcykKIAogLyogQXJlIHdlIHVzaW5nIHRoZSBkb21haW4gUDJNIHRhYmxlIGFzIGl0cyBJT01N
VSBwYWdldGFibGU/ICovCi0jZGVmaW5lIGlvbW11X3VzZV9oYXBfcHQoZCkgXAotICAgIChoYXBf
ZW5hYmxlZChkKSAmJiBpc19pb21tdV9lbmFibGVkKGQpICYmIGlvbW11X2hhcF9wdF9zaGFyZSkK
KyNkZWZpbmUgaW9tbXVfdXNlX2hhcF9wdChkKSAgICAgICAoZG9tX2lvbW11KGQpLT5oYXBfcHRf
c2hhcmUpCiAKIC8qIERvZXMgdGhlIElPTU1VIHBhZ2V0YWJsZSBuZWVkIHRvIGJlIGtlcHQgc3lu
Y2hyb25pemVkIHdpdGggdGhlIFAyTSAqLwogI2RlZmluZSBuZWVkX2lvbW11X3B0X3N5bmMoZCkg
ICAgIChkb21faW9tbXUoZCktPm5lZWRfc3luYykKLS0gCjIuMjAuMS4yLmdiMjFlYmI2NzEKCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwg
bWFpbGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3Rz
LnhlbnByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

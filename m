Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 253BF10C8C9
	for <lists+xen-devel@lfdr.de>; Thu, 28 Nov 2019 13:43:33 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iaJ6N-00048P-Db; Thu, 28 Nov 2019 12:40:55 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=REUg=ZU=xenproject.org=osstest-admin@srs-us1.protection.inumbo.net>)
 id 1iaJ6L-00048K-Fs
 for xen-devel@lists.xenproject.org; Thu, 28 Nov 2019 12:40:53 +0000
X-Inumbo-ID: 4d8ccc20-11dc-11ea-a55d-bc764e2007e4
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 4d8ccc20-11dc-11ea-a55d-bc764e2007e4;
 Thu, 28 Nov 2019 12:40:48 +0000 (UTC)
Received: from host146.205.237.98.conversent.net ([205.237.98.146]
 helo=infra.test-lab.xenproject.org)
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1iaJ6F-0008R2-LU; Thu, 28 Nov 2019 12:40:47 +0000
Received: from [172.16.144.3] (helo=osstest.test-lab.xenproject.org)
 by infra.test-lab.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1iaJ6F-0006W4-DM; Thu, 28 Nov 2019 12:40:47 +0000
Received: from osstest by osstest.test-lab.xenproject.org with local (Exim
 4.89) (envelope-from <osstest-admin@xenproject.org>)
 id 1iaJ6F-00081c-Cn; Thu, 28 Nov 2019 12:40:47 +0000
To: xen-devel@lists.xenproject.org,
    osstest-admin@xenproject.org
Message-ID: <osstest-144345-mainreport@xen.org>
MIME-Version: 1.0
X-Osstest-Failures: libvirt:test-arm64-arm64-libvirt-qcow2:guest-start/debian.repeat:fail:regression
 libvirt:test-armhf-armhf-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:saverestore-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-vhd:migrate-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:migrate-support-check:fail:nonblocking
X-Osstest-Versions-This: libvirt=83254ea750b476b5041c838a583d9ea3f632a6a2
X-Osstest-Versions-That: libvirt=9d6920bd7de3f92be1894790adeb689060ab25eb
From: osstest service owner <osstest-admin@xenproject.org>
Date: Thu, 28 Nov 2019 12:40:47 +0000
Subject: [Xen-devel] [libvirt test] 144345: regressions - FAIL
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

ZmxpZ2h0IDE0NDM0NSBsaWJ2aXJ0IHJlYWwgW3JlYWxdCmh0dHA6Ly9sb2dzLnRlc3QtbGFiLnhl
bnByb2plY3Qub3JnL29zc3Rlc3QvbG9ncy8xNDQzNDUvCgpSZWdyZXNzaW9ucyA6LSgKClRlc3Rz
IHdoaWNoIGRpZCBub3Qgc3VjY2VlZCBhbmQgYXJlIGJsb2NraW5nLAppbmNsdWRpbmcgdGVzdHMg
d2hpY2ggY291bGQgbm90IGJlIHJ1bjoKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293MiAx
NSBndWVzdC1zdGFydC9kZWJpYW4ucmVwZWF0IGZhaWwgUkVHUi4gdnMuIDE0NDMwNAoKVGVzdHMg
d2hpY2ggZGlkIG5vdCBzdWNjZWVkLCBidXQgYXJlIG5vdCBibG9ja2luZzoKIHRlc3QtYXJtaGYt
YXJtaGYtbGlidmlydCAgICAgMTQgc2F2ZXJlc3RvcmUtc3VwcG9ydC1jaGVjayAgICBmYWlsICBs
aWtlIDE0NDMwNAogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0LXJhdyAxMyBzYXZlcmVzdG9yZS1z
dXBwb3J0LWNoZWNrICAgIGZhaWwgIGxpa2UgMTQ0MzA0CiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZp
cnQgICAgIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MK
IHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC14c20gMTMgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAg
ICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQteHNtICAxMyBt
aWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFtZDY0
LWkzODYtbGlidmlydCAgICAgIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAg
IG5ldmVyIHBhc3MKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2
NC14c20gMTEgbWlncmF0ZS1zdXBwb3J0LWNoZWNrIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2
NC1hbWQ2NC1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gMTEgbWlncmF0ZS1zdXBw
b3J0LWNoZWNrIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0ICAgICAx
MyBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFy
bTY0LWFybTY0LWxpYnZpcnQgICAgIDE0IHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAgZmFp
bCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC14c20gMTMgbWlncmF0ZS1z
dXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1s
aWJ2aXJ0LXhzbSAxNCBzYXZlcmVzdG9yZS1zdXBwb3J0LWNoZWNrICAgIGZhaWwgICBuZXZlciBw
YXNzCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQtcWNvdzIgMTIgbWlncmF0ZS1zdXBwb3J0LWNo
ZWNrICAgICAgICBmYWlsIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293
MiAxMyBzYXZlcmVzdG9yZS1zdXBwb3J0LWNoZWNrICAgIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1h
bWQ2NC1hbWQ2NC1saWJ2aXJ0LXZoZCAxMiBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZh
aWwgICBuZXZlciBwYXNzCiB0ZXN0LWFybWhmLWFybWhmLWxpYnZpcnQgICAgIDEzIG1pZ3JhdGUt
c3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtaGYtYXJtaGYt
bGlidmlydC1yYXcgMTIgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIg
cGFzcwoKdmVyc2lvbiB0YXJnZXRlZCBmb3IgdGVzdGluZzoKIGxpYnZpcnQgICAgICAgICAgICAg
IDgzMjU0ZWE3NTBiNDc2YjUwNDFjODM4YTU4M2Q5ZWEzZjYzMmE2YTIKYmFzZWxpbmUgdmVyc2lv
bjoKIGxpYnZpcnQgICAgICAgICAgICAgIDlkNjkyMGJkN2RlM2Y5MmJlMTg5NDc5MGFkZWI2ODkw
NjBhYjI1ZWIKCkxhc3QgdGVzdCBvZiBiYXNpcyAgIDE0NDMwNCAgMjAxOS0xMS0yNiAwNDoxOTox
NCBaICAgIDIgZGF5cwpGYWlsaW5nIHNpbmNlICAgICAgICAxNDQzMTggIDIwMTktMTEtMjcgMDQ6
MTk6MjggWiAgICAxIGRheXMgICAgMiBhdHRlbXB0cwpUZXN0aW5nIHNhbWUgc2luY2UgICAxNDQz
NDUgIDIwMTktMTEtMjggMDQ6MTk6MzMgWiAgICAwIGRheXMgICAgMSBhdHRlbXB0cwoKLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClBl
b3BsZSB3aG8gdG91Y2hlZCByZXZpc2lvbnMgdW5kZXIgdGVzdDoKICBEYW5pZWwgUC4gQmVycmFu
Z8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgogIE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJl
ZGhhdC5jb20+CiAgUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+Cgpqb2JzOgogYnVp
bGQtYW1kNjQteHNtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IHBhc3MgICAgCiBidWlsZC1hcm02NC14c20gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWkzODYteHNtICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYW1kNjQgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWls
ZC1hcm02NCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
cGFzcyAgICAKIGJ1aWxkLWFybWhmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtaTM4NiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hbWQ2NC1saWJ2aXJ0
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxk
LWFybTY0LWxpYnZpcnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBw
YXNzICAgIAogYnVpbGQtYXJtaGYtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1pMzg2LWxpYnZpcnQgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFtZDY0LXB2b3BzICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQt
YXJtNjQtcHZvcHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBh
c3MgICAgCiBidWlsZC1hcm1oZi1wdm9wcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWkzODYtcHZvcHMgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1hbWQ2NC1saWJ2
aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFt
ZDY0LWkzODYtbGlidmlydC1xZW11dS1kZWJpYW5odm0tYW1kNjQteHNtICAgICAgICAgICAgcGFz
cyAgICAKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC14c20gICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0LXhzbSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0LWkzODYtbGlidmly
dC14c20gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1k
NjQtYW1kNjQtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNz
ICAgIAogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFybWhmLWFybWhmLWxpYnZpcnQgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2
NC1hbWQ2NC1saWJ2aXJ0LXBhaXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3Mg
ICAgCiB0ZXN0LWFtZDY0LWkzODYtbGlidmlydC1wYWlyICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgcGFzcyAgICAKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293MiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBmYWlsICAgIAogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0
LXJhdyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0
LWFtZDY0LWxpYnZpcnQtdmhkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAg
ICAKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0Kc2ctcmVwb3J0LWZsaWdodCBvbiBvc3N0ZXN0LnRlc3QtbGFiLnhlbnByb2plY3Qu
b3JnCmxvZ3M6IC9ob21lL2xvZ3MvbG9ncwppbWFnZXM6IC9ob21lL2xvZ3MvaW1hZ2VzCgpMb2dz
LCBjb25maWcgZmlsZXMsIGV0Yy4gYXJlIGF2YWlsYWJsZSBhdAogICAgaHR0cDovL2xvZ3MudGVz
dC1sYWIueGVucHJvamVjdC5vcmcvb3NzdGVzdC9sb2dzCgpFeHBsYW5hdGlvbiBvZiB0aGVzZSBy
ZXBvcnRzLCBhbmQgb2Ygb3NzdGVzdCBpbiBnZW5lcmFsLCBpcyBhdAogICAgaHR0cDovL3hlbmJp
dHMueGVuLm9yZy9naXR3ZWIvP3A9b3NzdGVzdC5naXQ7YT1ibG9iO2Y9UkVBRE1FLmVtYWlsO2hi
PW1hc3RlcgogICAgaHR0cDovL3hlbmJpdHMueGVuLm9yZy9naXR3ZWIvP3A9b3NzdGVzdC5naXQ7
YT1ibG9iO2Y9UkVBRE1FO2hiPW1hc3RlcgoKVGVzdCBoYXJuZXNzIGNvZGUgY2FuIGJlIGZvdW5k
IGF0CiAgICBodHRwOi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYj9wPW9zc3Rlc3QuZ2l0O2E9c3Vt
bWFyeQoKCk5vdCBwdXNoaW5nLgoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmNvbW1pdCA4MzI1NGVhNzUwYjQ3NmI1MDQxYzgzOGE1
ODNkOWVhM2Y2MzJhNmEyCkF1dGhvcjogTWljaGFsIFByaXZvem5payA8bXByaXZvem5AcmVkaGF0
LmNvbT4KRGF0ZTogICBXZWQgTm92IDI3IDExOjE5OjQ3IDIwMTkgKzAxMDAKCiAgICBuZXdzOiBV
cGRhdGUgZm9yIDUuMTAuMCByZWxlYXNlCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IE1pY2hhbCBQ
cml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogSsOhbiBUb21r
byA8anRvbWtvQHJlZGhhdC5jb20+Cgpjb21taXQgZDMxMGIwODY5NzUzYTg2MGU0OTljNjY4MjNm
YjRmZTQyN2Q0NmFmOApBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgpE
YXRlOiAgIFR1ZSBOb3YgMjYgMTU6MTM6NTcgMjAxOSArMDEwMAoKICAgIHFlbXU6IGJsb2Nram9i
OiBGaW5pc2ggaGFuZGxpbmcgam9iIHdpdGggYnJva2VuIGRhdGEKICAgIAogICAgTm93IHRoYXQg
d2UgaGF2ZSBhIHNlcGFyYXRlIGpvYiB0eXBlIHdoaWNoIHdpbGwgbm90IHRyaWdnZXIgbm9ybWFs
IGNvZGUKICAgIHBhdGhzIGZvciB0ZXJtaW5hdGluZyBqb2Igd2UgY2FuIHJlbW92ZSB0aGUgYWQt
aG9jIGhhbmRsaW5nLgogICAgCiAgICBUaGlzIHBvc3NpYmx5IGZpeGVzIHRoZSBpc3N1ZSBvZiBh
IGJyb2tlbiBqb2IgaW5oZXJpdGluZyB0aGUgZGlzayBhbmQKICAgIHRoZW4gZmluaXNoaW5nIGlu
IHdoaWNoIGNhc2Ugd2UnZCBub3QgZGV0YWNoIHRoZSBiYWNraW5nIGNoYWluLgogICAgCiAgICBT
aWduZWQtb2ZmLWJ5OiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmll
d2VkLWJ5OiBDb2xlIFJvYmluc29uIDxjcm9iaW5zb0ByZWRoYXQuY29tPgoKY29tbWl0IGU2N2U4
YzU0NWE4OGIxZWUzZGEwZjU5MWRhOTZlNmQ0YzU3MDQ2YjAKQXV0aG9yOiBQZXRlciBLcmVtcGEg
PHBrcmVtcGFAcmVkaGF0LmNvbT4KRGF0ZTogICBUdWUgTm92IDI2IDE0OjU1OjA1IDIwMTkgKzAx
MDAKCiAgICBxZW11OiBibG9ja2pvYjogSW50cm9kdWNlICJicm9rZW4iIGJsb2NrIGpvYiB0eXBl
CiAgICAKICAgIFRvIGJldHRlciB0cmFjayBqb2JzIHdlIGNvdWxkbid0IHBhcnNlIGxldCdzIGlu
dHJvZHVjZSBhIG5ldyBqb2IgdHlwZQogICAgd2hpY2ggd2lsbCBjbGFyaWZ5IHNlbWFudGljcyBp
bnRlcm5hbGx5IGluIGZldyBwbGFjZXMuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IFBldGVyIEty
ZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IENvbGUgUm9iaW5zb24g
PGNyb2JpbnNvQHJlZGhhdC5jb20+Cgpjb21taXQgMjYyNGM2ZDJkMmJlOTZhOTRjMTY3OGI4M2Zk
ZTQwN2ZmYjNhYTQ5ZgpBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgpE
YXRlOiAgIFR1ZSBOb3YgMjYgMTM6Mzk6MTggMjAxOSArMDEwMAoKICAgIHFlbXU6IGJsb2Nram9i
OiBTZXBhcmF0ZSBjbGVhcmluZyBvZiBwZXItam9iIGRhdGEKICAgIAogICAgV2Ugd2lsbCBuZWVk
IHRvIGNsZWFyIHBlci1qb2IgdHlwZSBkYXRhIHdoZW4gd2Ugd2lsbCBiZSBtYXJraW5nIGEKICAg
IGJsb2Nram9iIGFzIGJyb2tlbiBpbiB0aGUgbmV3IHdheS4gRXh0cmFjdCB0aGUgY29kZSBmb3Ig
ZnV0dXJlIHJldXNlLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQZXRlciBLcmVtcGEgPHBrcmVt
cGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBDb2xlIFJvYmluc29uIDxjcm9iaW5zb0By
ZWRoYXQuY29tPgoKY29tbWl0IDBjYjMwNjE5NDNhODkxZGM1YzU0MjlhYzZhMzMyZWI4YjJjMTQz
MDAKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KRGF0ZTogICBUdWUg
Tm92IDI2IDE0OjI5OjQyIDIwMTkgKzAxMDAKCiAgICBxZW11OiBibG9ja2pvYjogRG9uJ3Qgc3Rv
cCBwcm9jZXNzaW5nIHRoZSBmaW5pc2hlZCBqb2IgZWFybHkKICAgIAogICAgQm90aCBmYWlsdXJl
IHRvIHJlZnJlc2ggYW5kIHRvIGRpc21pc3MgdGhlIGpvYiBhcmUgdmVyeSB1bmxpa2VseSBidXQg
aWYKICAgIHRoZXkgaGFwcGVuIHRoZXJlJ3Mgbm90IG11Y2ggd2UgY2FuIGRvIGFib3V0IHRoZSBi
bG9ja2pvYi4KICAgIAogICAgVGhlIGNvbmNsdWRlZCBqb2IgaGFuZGxlcnMgdHJlYXQgaXQgYXMg
aWYgdGhlIGpvYiBmYWlsZWQgaWYgd2UgZG9uJ3QKICAgIHVwZGF0ZSB0aGUgc3RhdGUgdG8gJ1FF
TVVfQkxPQ0tKT0JfU1RBVEVfQ09NUExFVEVEJyB3aGljaCBpcyBwcm9iYWJseQogICAgdGhlIHNh
ZmVzdCB0aGluZyB0byBkbyBoZXJlLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQZXRlciBLcmVt
cGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBDb2xlIFJvYmluc29uIDxj
cm9iaW5zb0ByZWRoYXQuY29tPgoKY29tbWl0IDViMjljN2RjMjc2ZGE5ZDM2ZWFlNDM2MWQyMGQz
MDk1ZGIyNjJiYWEKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KRGF0
ZTogICBUdWUgTm92IDI2IDE0OjE2OjM3IDIwMTkgKzAxMDAKCiAgICBxZW11OiBibG9ja2pvYjog
TWFyayBqb2Igd2l0aCBicm9rZW4gZGF0YSBidXQgdHJhY2tlZCBieSBxZW11IGFzIHJlY29ubmVj
dGVkCiAgICAKICAgIE90aGVyd2lzZSBpdCB3b3VsZCBnZXQgZHJvcHBlZCBsYXRlciBvbiBhcyB1
bnRyYWNrZWQgZGVzcGl0ZSB1cyBrbm93aW5nCiAgICBhYm91dCBpdC4gQWRkaXRpb25hbGx5IHNp
bmNlIHdlIGNhbmNlbGxlZCBpdCB3ZSBtdXN0IHdhaXQgdG8gZGlzbWlzcyBpdAogICAgd2hpY2gg
d291bGQgbm90IGJlIHBvc3NpYmxlIGlmIHdlIHVucmVnaXN0ZXIgaXQuIFRoaXMgYWxzbyBvcGVu
ZWQgYQogICAgd2luZG93IGZvciBhIHJhY2UgY29uZGl0aW9uIHNpbmNlIHRoZSBqb2Igc3RhdGUg
Y2hhbmdlIGV2ZW50IG9mIHRoZQogICAganVzdC1jYW5jZWxsZWQgam9iIG1pZ2h0IGJlIGRlbGl2
ZXJlZCBwcmlvciB0byB1cyB1bnJlZ2lzdGVyaW5nIHRoZSBqb2IKICAgIGluIHdoaWNoIGNhc2Ug
ZXZlcnl0aGluZyB3b3VsZCB3b3JrIHByb3Blcmx5LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQ
ZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBDb2xlIFJv
Ymluc29uIDxjcm9iaW5zb0ByZWRoYXQuY29tPgoKY29tbWl0IGYxNWQ0Y2IxYzg2OWZmNjkxYjJk
NmNkZGJlODQ2M2JlMjhkNTI2ZTEKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0
LmNvbT4KRGF0ZTogICBUdWUgTm92IDI2IDE0OjE0OjU0IDIwMTkgKzAxMDAKCiAgICBxZW11OiBi
bG9ja2pvYjogTG9nIGJsb2Nram9icyB3aGljaCBhcmUgZHJvcHBlZCB3aGVuIHVudHJhY2tlZCBi
eSBxZW11CiAgICAKICAgIFNpbmNlIHdlIGRvbid0IGtub3cgd2hhdCBoYXBwZW5lZCB0byB0aGUg
am9iIHdlIGNhbid0IGRvIG11Y2ggYWJvdXQgaXQKICAgIGJ1dCB3ZSBjYW4gYXQgbGVhc3QgbG9n
IHRoYXQgdGhpcyBoYXBwZW5lZC4KICAgIAogICAgU2lnbmVkLW9mZi1ieTogUGV0ZXIgS3JlbXBh
IDxwa3JlbXBhQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogQ29sZSBSb2JpbnNvbiA8Y3Jv
Ymluc29AcmVkaGF0LmNvbT4KCmNvbW1pdCA4NjIyNDk4ZjZlNDJkMjkxNDBmNWNhNjMzOTNlZjI5
ZTJmZmMwZDUxCkF1dGhvcjogUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+CkRhdGU6
ICAgVHVlIE5vdiAyNiAxMzoxNjozNiAyMDE5ICswMTAwCgogICAgcWVtdTogYmxvY2tqb2I6IEZp
eCBkZWFkbG9jayB3aGVuIHRlcm1pbmF0aW5nIGpvYiB3aXRoIGludmFsaWQgZGF0YQogICAgCiAg
ICBXZSBtdXN0IGV4aXQgdGhlIG1vbml0b3IgcHJpb3IgdG8gcmVmdXNpbmcgb3RoZXIgd29yaywg
b3RoZXJ3aXNlIHRoZSBWTQogICAgb2JqZWN0IHdpbGwgYmVjb21lIHVudXNhYmxlLgogICAgCiAg
ICBUaGlzIGJ1ZyB3YXMgaW50cm9kdWNlZCBpbiBjb21taXQgdjUuNS4wLTI0NC1nYzQxMjM4Mzc5
NiBidXQgdGhhbmtmdWxseQogICAgdGhlIGNvZGUgcGF0aCB3YXMgbm90IGV4Y2VyY2lzZWQgd2l0
aG91dCBRRU1VX0NBUFNfQkxPQ0tERVYuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IFBldGVyIEty
ZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IENvbGUgUm9iaW5zb24g
PGNyb2JpbnNvQHJlZGhhdC5jb20+Cgpjb21taXQgY2NkZTljYTFmNGZhNWMyZjFhM2EyZmFjNTM2
NjFjMjdmYWVhZWExYwpBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgpE
YXRlOiAgIFR1ZSBOb3YgMjYgMTM6MDQ6MzAgMjAxOSArMDEwMAoKICAgIHFlbXU6IHByb2Nlc3M6
IE1vdmUgYmxvY2sgam9iIHJlZnJlc2ggYWZ0ZXIgYXN5bmMgam9iIHJlY292ZXJ5CiAgICAKICAg
IEJsb2NrIGpvYnMgbWF5IGJlIG1lbWJlcnMgb2YgYXN5bmMgam9icyBzbyBpdCBtYWtlcyBtb3Jl
IHNlbnNlIHRvCiAgICByZWZyZXNoIGJsb2NrIGpvYiBzdGF0ZSBhZnRlciB3ZSBkbyBzdGVwcyBm
b3IgYXN5bmMgam9iIHJlY292ZXJ5LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQZXRlciBLcmVt
cGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBDb2xlIFJvYmluc29uIDxj
cm9iaW5zb0ByZWRoYXQuY29tPgoKY29tbWl0IGE4ODdkYTUyOWNkMmQxNmY3ZmE3MWRhYmIxYmFl
OTBmNmEyZGEzMWIKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KRGF0
ZTogICBUdWUgTm92IDI2IDA5OjI4OjIyIDIwMTkgKzAxMDAKCiAgICBxZW11OiBibG9ja2pvYjog
UHJvcGVybHkgcHJvcGFnYXRlIGNhbmNlbGxhdGlvbiBvZiBibG9ja2pvYnMKICAgIAogICAgcWVt
dSByZXR1cm5zIGFuIGVycm9yIG1lc3NhZ2UgaW4gdGhlIGpvYiBzdGF0aXN0aWNzIGV2ZW4gaWYg
dGhlIGpvYiB3YXMKICAgIGNhbmNlbGxlZCB0byBlbXBoYXNpemUgaXQgd2FzIG5vdCBzdWNjZXNz
ZnVsLiBMaWJ2aXJ0IGRpZG4ndCBwcm9wZXJseQogICAgdHJhbnNmb3JtIGl0IGludG8gUUVNVV9C
TE9DS0pPQl9TVEFURV9DQU5DRUxMRUQgdGhvdWdoLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQ
ZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBDb2xlIFJv
Ymluc29uIDxjcm9iaW5zb0ByZWRoYXQuY29tPgoKY29tbWl0IDAxMjcwYTlhNWZiMDY3MGI4ZDA1
OGFhNGRlYTBkYjVjMjY4NjQyZDMKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0
LmNvbT4KRGF0ZTogICBNb24gTm92IDI1IDIxOjI4OjE0IDIwMTkgKzAxMDAKCiAgICBxZW11OiBt
b25pdG9yOiBGaW5pc2ggaW1wbGVtZW50YXRpb24gb2YgaW5mcmFzdHJ1Y3R1cmUgZm9yICdxdWVy
eS1qb2JzJwogICAgCiAgICBDb21taXQgZWQ1Njg1MWYxYmM2ZjUgZGlkbid0IHdpcmUgdXAgZmV0
Y2hpbmcgb2YgdGhlIHN0YXRpc3RpY3MgZm9yIHRoZQogICAgam9iIHdoaWNoIGFyZSByZXBvcnRl
ZCBieSAncXVlcnktam9icycuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IFBldGVyIEtyZW1wYSA8
cGtyZW1wYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IENvbGUgUm9iaW5zb24gPGNyb2Jp
bnNvQHJlZGhhdC5jb20+Cgpjb21taXQgMjc2NjBmNzk5MGYyOTJiYmUzYzhhNTllYWI5ZmEwZmEw
ODU5NzFiNApBdXRob3I6IERhbmllbCBQLiBCZXJyYW5nw6kgPGJlcnJhbmdlQHJlZGhhdC5jb20+
CkRhdGU6ICAgVHVlIE5vdiAyNiAxNjoyOTo0NyAyMDE5ICswMDAwCgogICAgdXRpbDogd2hpdGVs
aXN0IE9yYWNsZSBBQ0ZTIGFzIGEgc2hhcmVkIGZpbGVzeXN0ZW0KICAgIAogICAgVGhlIG1hZ2lj
IG51bWJlciBpcyB0YWtlbiBmcm9tIHRoZSBjb3JldXRpbHMgc3RhdC5jIGZpbGUgc2luY2UKICAg
IHRoZXJlIGlzIG5vIGNvbnN0YW50IGZvciBpdCBpbiBub3JtYWwgc3lzdGVtIGhlYWRlcnMuCiAg
ICAKICAgIFJldmlld2VkLWJ5OiBEYW5pZWwgSGVucmlxdWUgQmFyYm96YSA8ZGFuaWVsaGI0MTNA
Z21haWwuY29tPgogICAgU2lnbmVkLW9mZi1ieTogRGFuaWVsIFAuIEJlcnJhbmfDqSA8YmVycmFu
Z2VAcmVkaGF0LmNvbT4KCmNvbW1pdCA2ODgxZWYyZTRlYjUzNjU5YTg5ODMwMjA0Y2U0MzRhOTY0
N2UyMDAxCkF1dGhvcjogRGFuaWVsIFAuIEJlcnJhbmfDqSA8YmVycmFuZ2VAcmVkaGF0LmNvbT4K
RGF0ZTogICBUdWUgTm92IDI2IDE1OjU5OjEzIDIwMTkgKzAwMDAKCiAgICBsaWJ4bDogZml4IHR5
cG8gaW4gZXJyb3IgbWVzc2FnZQogICAgCiAgICBSZXZpZXdlZC1ieTogRmFiaWFubyBGaWTDqm5j
aW8gPGZpZGVuY2lvQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogRGFuaWVsIEhlbnJpcXVl
IEJhcmJvemEgPGRhbmllbGhiNDEzQGdtYWlsLmNvbT4KICAgIFNpZ25lZC1vZmYtYnk6IERhbmll
bCBQLiBCZXJyYW5nw6kgPGJlcnJhbmdlQHJlZGhhdC5jb20+Cgpjb21taXQgYTEwZWI2MTM0MDRm
ZWRiNGNlNDRlYzQ3ODQ4NzEwZmRiM2Q3YTkxZApBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1w
YUByZWRoYXQuY29tPgpEYXRlOiAgIFdlZCBOb3YgMjcgMTM6NDA6MTQgMjAxOSArMDEwMAoKICAg
IFJldmVydCAicWVtdTogRG9uJ3QgcmVwZWF0IHZpckRvbWFpbk9iakVuZEFQSSBpbiBxZW11RG9t
YWluQmxvY2tQdWxsIgogICAgCiAgICBUaGlzIHJldmVydHMgY29tbWl0IDQyMWM5NTUwZjU0NDY3
MjliNTEzZWU1MGY1YzQ0ZTZmNjk2OWI1YTIKICAgIAogICAgcWVtdURvbWFpbkJsb2NrUHVsbENv
bW1vbiBjYWxscyB2aXJEb21haW5PYmpFbmRBUEkgaW50ZXJuYWxseSBzbyB0aGUKICAgIG9yaWdp
bmFsIGNvbW1pdCBtYWRlIHVzIHNoZWQgdHdvIHJlZmVyZW5jZXMgb2YgQHZtIGluc3RlYWQgb2Yg
b25lCiAgICBnZXR0aW5nIHVzIGludG8gYSBwcmVtYXR1cmUgZnJlZSBvZiBAdm0uCiAgICAKICAg
IFRoaXMgaXMgbm90IGEgc3RyYWlnaHQgcmV2ZXJ0IGFzIHFlbXVEb21haW5CbG9ja1B1bGwgd2Fz
IG1vZGlmaWVkCiAgICBtZWFud2hpbGUuIEkndmUgYWxzbyBhZGRlZCBhIHdhcm5pbmcgY29tbWVu
dCB0aGF0IEB2bSBpcyBjb25zdW1lZC4KICAgIAogICAgaHR0cHM6Ly9idWd6aWxsYS5yZWRoYXQu
Y29tL3Nob3dfYnVnLmNnaT9pZD0xNzc3MjMwCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IFBldGVy
IEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IErDoW4gVG9ta28g
PGp0b21rb0ByZWRoYXQuY29tPgoKY29tbWl0IGM4NTc5ODcxYTk4MGU3Y2Q0MWRmNTBhZmFkNjJl
OWMzMTgzNTM0YzYKQXV0aG9yOiBNaWNoYWwgUHJpdm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29t
PgpEYXRlOiAgIFR1ZSBOb3YgMjYgMTU6Mjg6MjIgMjAxOSArMDEwMAoKICAgIGFsbDogZG9uJ3Qg
d2FpdCBmb3IgZHJpdmVyIGxvY2sgZHVyaW5nIHN0YXJ0dXAKICAgIAogICAgVGhlcmUgYXJlIHR3
byBkYWVtb25zIHRoYXQgd2FpdCBmb3IgYWNxdWlyaW5nIHRoZWlyIHBpZCBmaWxlczoKICAgIHZp
cnRuZXR3b3JrZCBhbmQgdmlydHN0b3JhZ2VkLiBUaGlzIGlzIHVuZGVzaXJhYmxlIGFzIHRoZSBp
ZGVhCiAgICBpcyB0byBxdWl0IGVhcmx5IGlmIHVuYWJsZSB0byBhY3F1aXJlIHRoZSBwaWQgZmls
ZS4KICAgIAogICAgRml4ZXM6IHY1LjYuMC1yYzF+MjA3LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5
OiBNaWNoYWwgUHJpdm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6
IErDoW4gVG9ta28gPGp0b21rb0ByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IERhbmllbCBQ
LiBCZXJyYW5nw6kgPGJlcnJhbmdlQHJlZGhhdC5jb20+Cgpjb21taXQgM2I5MzU5Y2Q0NGI1YTk3
ZmU1ZDY3MGVlMzNmZjEzYzRiZjI5N2VhOApBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUBy
ZWRoYXQuY29tPgpEYXRlOiAgIE1vbiBOb3YgMjUgMTY6MzM6NTMgMjAxOSArMDEwMAoKICAgIGNo
ZWNrLXN5bWZpbGU6IFVzZSBweXRob25lc3F1ZSBzdHJpbmcgZm9ybWF0dGluZyBpbnN0ZWFkIG9m
IHBlcmwKICAgIAogICAgQ29tbWl0IGQzMGExYWQwNDQzIHRyYW5zbGF0ZWQgdGhlIHN5bWJvbCBm
aWxlIGNoZWNrZXIgZnJvbSBwZXJsIHRvCiAgICBweXRob24gYnkgZG9pbmcgYSBsaXRlcmFsIHRy
YW5zbGF0aW9uIGluIG1vc3QgY2FzZXMuIFVuZm9ydHVuYXRlbHkgb25lCiAgICBzdHJpbmcgZm9y
bWF0dGluZyBvcGVyYXRpb24gd2FzIG5vdCByZWFsbHkgdHJhbnNsYXRlZCBpbnRvIHB5dGhvbgog
ICAgbGVhdmluZyB1c2VycyB3aXRoIG5vbi1oZWxwZnVsIGVycm9yOgogICAgCiAgICAnU3ltYm9s
ICQxIGlzIGxpc3RlZCB0d2ljZScKICAgIAogICAgU2lnbmVkLW9mZi1ieTogUGV0ZXIgS3JlbXBh
IDxwa3JlbXBhQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogRXJpayBTa3VsdGV0eSA8ZXNr
dWx0ZXRAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBNaWNoYWwgUHJpdm96bmlrIDxtcHJp
dm96bkByZWRoYXQuY29tPgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KWGVuLWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVj
dC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1k
ZXZlbA==

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id B83779BC2F
	for <lists+xen-devel@lfdr.de>; Sat, 24 Aug 2019 08:15:59 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1i1PIk-0005HF-VA; Sat, 24 Aug 2019 06:13:26 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=Fuan=WU=gmail.com=nadav.amit@srs-us1.protection.inumbo.net>)
 id 1i1PIi-0005HA-Tu
 for xen-devel@lists.xenproject.org; Sat, 24 Aug 2019 06:13:24 +0000
X-Inumbo-ID: 4714a6ac-c636-11e9-adf1-12813bfff9fa
Received: from mail-pl1-f194.google.com (unknown [209.85.214.194])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 4714a6ac-c636-11e9-adf1-12813bfff9fa;
 Sat, 24 Aug 2019 06:13:23 +0000 (UTC)
Received: by mail-pl1-f194.google.com with SMTP id bj8so6888359plb.4
 for <xen-devel@lists.xenproject.org>; Fri, 23 Aug 2019 23:13:23 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references;
 bh=INVtJHgm0b2/J/2q5zY54fqZ7ZxoyrSsmyIhQis+AsE=;
 b=UxinXedy2MEXIZ4IBqEYeoK/QFG5RS+VI+t9AM7I0GIDUVFy4CUvM4dEyF7uWvQKzS
 nfykEGKNJGx1cbZ2hoZLp5P6w7a/HTSaycdy8TmmAftJT/F8PIChxbdVrobCnub8bDsD
 mL7iVcE1mCl5OYAdpHGoQuG2I0nLQ5dHzaHB8kpITeIQh0UamR+4VYnoB2DgMp/1LTIC
 WkqMT4mtfwVuPC/dHCBbBz3eXjNHQ+1KSGD7w2acONp2ARGZovy4w3ys+yWZckV141TJ
 MujlDlxku9BY1JT2SngV/s3fmbt1YZQkxiqLG61I9WoVJhYO9D9MzejBucYJ8T9YUIsh
 qR/w==
X-Gm-Message-State: APjAAAUOctJa4KQLigeRBh0sKhcgH5O4T0640uxp3VDZYm44izc4XFt9
 8D3HPiTMpW7F+7RpjFJyRf0=
X-Google-Smtp-Source: APXvYqytAgy02S76SH8accLSf7pTZnLDb+ENFHy9Yggx8T6t29mNQNPLuwfRP/1hMekGtarTgvgKRw==
X-Received: by 2002:a17:902:b186:: with SMTP id
 s6mr8683551plr.343.1566627202825; 
 Fri, 23 Aug 2019 23:13:22 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
 by smtp.gmail.com with ESMTPSA id o9sm3691360pgv.19.2019.08.23.23.13.21
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 23 Aug 2019 23:13:22 -0700 (PDT)
From: Nadav Amit <namit@vmware.com>
To: Andy Lutomirski <luto@kernel.org>,
 Dave Hansen <dave.hansen@linux.intel.com>
Date: Fri, 23 Aug 2019 15:52:46 -0700
Message-Id: <20190823225248.15597-2-namit@vmware.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190823225248.15597-1-namit@vmware.com>
References: <20190823225248.15597-1-namit@vmware.com>
Subject: [Xen-devel] [RFC PATCH v2 1/3] x86/mm/tlb: Change
 __flush_tlb_one_user interface
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>,
 Peter Zijlstra <peterz@infradead.org>, x86@kernel.org,
 linux-kernel@vger.kernel.org, Ingo Molnar <mingo@redhat.com>,
 Nadav Amit <namit@vmware.com>, xen-devel@lists.xenproject.org,
 Thomas Gleixner <tglx@linutronix.de>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

X19mbHVzaF90bGJfb25lX3VzZXIoKSBjdXJyZW50bHkgZmx1c2hlcyBhIHNpbmdsZSBlbnRyeSwg
YW5kIGZsdXNoZXMgaXQKYm90aCBpbiB0aGUga2VybmVsIGFuZCB1c2VyIHBhZ2UtdGFibGVzLCB3
aGVuIFBUSSBpcyBlbmFibGVkLgoKQ2hhbmdlIF9fZmx1c2hfdGxiX29uZV91c2VyKCkgYW5kIHJl
bGF0ZWQgaW50ZXJmYWNlcyBpbnRvCl9fZmx1c2hfdGxiX3JhbmdlKCkgdGhhdCBmbHVzaGVzIGEg
cmFuZ2UgYW5kIGRvZXMgbm90IGZsdXNoIHRoZSB1c2VyCnBhZ2UtdGFibGUuCgpUaGlzIHJlZmFj
dG9yaW5nIGlzIG5lZWRlZCBmb3IgdGhlIG5leHQgcGF0Y2gsIGJ1dCByZWdhcmRsZXNzIG1ha2Vz
CnNlbnNlIGFuZCBoYXMgc2V2ZXJhbCBhZHZhbnRhZ2VzLiBGaXJzdCwgb25seSBYZW4tUFYsIHdo
aWNoIGRvZXMgbm90CnVzZSBQVEksIGltcGxlbWVudHMgdGhlIHBhcmF2aXJ0dWFsIGludGVyZmFj
ZSBvZiBmbHVzaF90bGJfb25lX3VzZXIoKSBzbwpub3RoaW5nIGlzIGJyb2tlbiBieSBzZXBhcmF0
aW5nIHRoZSB1c2VyIGFuZCBrZXJuZWwgcGFnZS10YWJsZSBmbHVzaGVzLAphbmQgdGhlIGludGVy
ZmFjZSBpcyBtb3JlIGludHVpdGl2ZS4KClNlY29uZCwgSU5WTFBHIGNhbiBmbHVzaCB1bnJlbGF0
ZWQgbWFwcGluZ3MsIGFuZCBpdCBpcyBhbHNvIGEKc2VyaWFsaXppbmcgaW5zdHJ1Y3Rpb24uIEl0
IGlzIGJldHRlciB0byBoYXZlIGEgdGlnaHQgbG9vcCB0aGF0IGZsdXNoZXMKdGhlIGVudHJpZXMu
CgpUaGlyZCwgY3VycmVudGx5IF9fZmx1c2hfdGxiX29uZV9rZXJuZWwoKSBhbHNvIGZsdXNoZXMg
dGhlIHVzZXIKcGFnZS10YWJsZXMsIHdoaWNoIGlzIG5vdCBuZWVkZWQuIFRoaXMgYWxsb3dzIHRv
IGF2b2lkIHRoaXMgcmVkdW5kYW50CmZsdXNoLgoKQ2M6IEJvcmlzIE9zdHJvdnNreSA8Ym9yaXMu
b3N0cm92c2t5QG9yYWNsZS5jb20+CkNjOiBKdWVyZ2VuIEdyb3NzIDxqZ3Jvc3NAc3VzZS5jb20+
CkNjOiBTdGVmYW5vIFN0YWJlbGxpbmkgPHNzdGFiZWxsaW5pQGtlcm5lbC5vcmc+CkNjOiB4ZW4t
ZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKU2lnbmVkLW9mZi1ieTogTmFkYXYgQW1pdCA8bmFt
aXRAdm13YXJlLmNvbT4KLS0tCiBhcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydC5oICAgICAg
IHwgIDUgKystLQogYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnRfdHlwZXMuaCB8ICAzICsr
LQogYXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaCAgICAgICB8IDI0ICsrKysrLS0tLS0t
LS0tLS0tCiBhcmNoL3g4Ni9rZXJuZWwvcGFyYXZpcnQuYyAgICAgICAgICAgIHwgIDcgKystLS0K
IGFyY2gveDg2L21tL3RsYi5jICAgICAgICAgICAgICAgICAgICAgfCAzOSArKysrKysrKysrKysr
KysrKysrKysrLS0tLS0KIGFyY2gveDg2L3hlbi9tbXVfcHYuYyAgICAgICAgICAgICAgICAgfCAy
MSArKysrKysrKystLS0tLS0KIDYgZmlsZXMgY2hhbmdlZCwgNjIgaW5zZXJ0aW9ucygrKSwgMzcg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnQu
aCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0LmgKaW5kZXggYmM0ODI5YzliM2Y5Li43
MzQ3MzI4ZWFjZDMgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0LmgK
KysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnQuaApAQCAtNTcsOSArNTcsMTAgQEAg
c3RhdGljIGlubGluZSB2b2lkIF9fZmx1c2hfdGxiX2dsb2JhbCh2b2lkKQogCVBWT1BfVkNBTEww
KG1tdS5mbHVzaF90bGJfa2VybmVsKTsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIF9fZmx1c2hf
dGxiX29uZV91c2VyKHVuc2lnbmVkIGxvbmcgYWRkcikKK3N0YXRpYyBpbmxpbmUgdm9pZCBfX2Zs
dXNoX3RsYl9yYW5nZSh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCwKKwkJ
CQkgICAgIHU4IHN0cmlkZV9zaGlmdCkKIHsKLQlQVk9QX1ZDQUxMMShtbXUuZmx1c2hfdGxiX29u
ZV91c2VyLCBhZGRyKTsKKwlQVk9QX1ZDQUxMMyhtbXUuZmx1c2hfdGxiX3JhbmdlLCBzdGFydCwg
ZW5kLCBzdHJpZGVfc2hpZnQpOwogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQgZmx1c2hfdGxiX211
bHRpKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNrLApkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
aW5jbHVkZS9hc20vcGFyYXZpcnRfdHlwZXMuaCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2
aXJ0X3R5cGVzLmgKaW5kZXggNjNmYTc1MTM0NGJmLi5hODdhNWYyMzYyNTEgMTAwNjQ0Ci0tLSBh
L2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0X3R5cGVzLmgKKysrIGIvYXJjaC94ODYvaW5j
bHVkZS9hc20vcGFyYXZpcnRfdHlwZXMuaApAQCAtMjA1LDcgKzIwNSw4IEBAIHN0cnVjdCBwdl9t
bXVfb3BzIHsKIAkvKiBUTEIgb3BlcmF0aW9ucyAqLwogCXZvaWQgKCpmbHVzaF90bGJfdXNlciko
dm9pZCk7CiAJdm9pZCAoKmZsdXNoX3RsYl9rZXJuZWwpKHZvaWQpOwotCXZvaWQgKCpmbHVzaF90
bGJfb25lX3VzZXIpKHVuc2lnbmVkIGxvbmcgYWRkcik7CisJdm9pZCAoKmZsdXNoX3RsYl9yYW5n
ZSkodW5zaWduZWQgbG9uZyBzdGFydCwgdW5zaWduZWQgbG9uZyBlbmQsCisJCQkJdTggc3RyaWRl
X3NoaWZ0KTsKIAl2b2lkICgqZmx1c2hfdGxiX211bHRpKShjb25zdCBzdHJ1Y3QgY3B1bWFzayAq
Y3B1cywKIAkJCQljb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmluZm8pOwogCmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS90bGJmbHVzaC5oIGIvYXJjaC94ODYvaW5jbHVkZS9h
c20vdGxiZmx1c2guaAppbmRleCAxZjg4ZWE0MTBmZjMuLjQyMWJjODI1MDRlMiAxMDA2NDQKLS0t
IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRl
L2FzbS90bGJmbHVzaC5oCkBAIC0xNDUsNyArMTQ1LDcgQEAgc3RhdGljIGlubGluZSB1bnNpZ25l
ZCBsb25nIGJ1aWxkX2NyM19ub2ZsdXNoKHBnZF90ICpwZ2QsIHUxNiBhc2lkKQogI2Vsc2UKICNk
ZWZpbmUgX19mbHVzaF90bGIoKSBfX25hdGl2ZV9mbHVzaF90bGIoKQogI2RlZmluZSBfX2ZsdXNo
X3RsYl9nbG9iYWwoKSBfX25hdGl2ZV9mbHVzaF90bGJfZ2xvYmFsKCkKLSNkZWZpbmUgX19mbHVz
aF90bGJfb25lX3VzZXIoYWRkcikgX19uYXRpdmVfZmx1c2hfdGxiX29uZV91c2VyKGFkZHIpCisj
ZGVmaW5lIF9fZmx1c2hfdGxiX3JhbmdlKHN0YXJ0LCBlbmQsIHN0cmlkZV9zaGlmdCkgX19uYXRp
dmVfZmx1c2hfdGxiX3JhbmdlKHN0YXJ0LCBlbmQsIHN0cmlkZV9zaGlmdCkKICNlbmRpZgogCiBz
dHJ1Y3QgdGxiX2NvbnRleHQgewpAQCAtNDU0LDIzICs0NTQsMTMgQEAgc3RhdGljIGlubGluZSB2
b2lkIF9fbmF0aXZlX2ZsdXNoX3RsYl9nbG9iYWwodm9pZCkKIC8qCiAgKiBmbHVzaCBvbmUgcGFn
ZSBpbiB0aGUgdXNlciBtYXBwaW5nCiAgKi8KLXN0YXRpYyBpbmxpbmUgdm9pZCBfX25hdGl2ZV9m
bHVzaF90bGJfb25lX3VzZXIodW5zaWduZWQgbG9uZyBhZGRyKQorc3RhdGljIGlubGluZSB2b2lk
IF9fbmF0aXZlX2ZsdXNoX3RsYl9yYW5nZSh1bnNpZ25lZCBsb25nIHN0YXJ0LAorCQkJCXVuc2ln
bmVkIGxvbmcgZW5kLCB1OCBzdHJpZGVfc2hpZnQpCiB7Ci0JdTMyIGxvYWRlZF9tbV9hc2lkID0g
dGhpc19jcHVfcmVhZChjcHVfdGxic3RhdGUubG9hZGVkX21tX2FzaWQpOworCXVuc2lnbmVkIGxv
bmcgYWRkcjsKIAotCWFzbSB2b2xhdGlsZSgiaW52bHBnICglMCkiIDo6InIiIChhZGRyKSA6ICJt
ZW1vcnkiKTsKLQotCWlmICghc3RhdGljX2NwdV9oYXMoWDg2X0ZFQVRVUkVfUFRJKSkKLQkJcmV0
dXJuOwotCi0JLyoKLQkgKiBTb21lIHBsYXRmb3JtcyAjR1AgaWYgd2UgY2FsbCBpbnZwY2lkKHR5
cGU9MS8yKSBiZWZvcmUgQ1I0LlBDSURFPTEuCi0JICogSnVzdCB1c2UgaW52YWxpZGF0ZV91c2Vy
X2FzaWQoKSBpbiBjYXNlIHdlIGFyZSBjYWxsZWQgZWFybHkuCi0JICovCi0JaWYgKCF0aGlzX2Nw
dV9oYXMoWDg2X0ZFQVRVUkVfSU5WUENJRF9TSU5HTEUpKQotCQlpbnZhbGlkYXRlX3VzZXJfYXNp
ZChsb2FkZWRfbW1fYXNpZCk7Ci0JZWxzZQotCQlpbnZwY2lkX2ZsdXNoX29uZSh1c2VyX3BjaWQo
bG9hZGVkX21tX2FzaWQpLCBhZGRyKTsKKwlmb3IgKGFkZHIgPSBzdGFydDsgYWRkciA8IGVuZDsg
YWRkciArPSAxdWwgPDwgc3RyaWRlX3NoaWZ0KQorCQlhc20gdm9sYXRpbGUoImludmxwZyAoJTAp
IiA6OiJyIiAoYWRkcikgOiAibWVtb3J5Iik7CiB9CiAKIC8qCkBAIC01MTIsNyArNTAyLDcgQEAg
c3RhdGljIGlubGluZSB2b2lkIF9fZmx1c2hfdGxiX29uZV9rZXJuZWwodW5zaWduZWQgbG9uZyBh
ZGRyKQogCSAqIGtlcm5lbCBhZGRyZXNzIHNwYWNlIGFuZCBmb3IgaXRzIHVzZXJtb2RlIGNvdW50
ZXJwYXJ0LCBidXQgaXQgZG9lcwogCSAqIG5vdCBmbHVzaCBpdCBmb3Igb3RoZXIgYWRkcmVzcyBz
cGFjZXMuCiAJICovCi0JX19mbHVzaF90bGJfb25lX3VzZXIoYWRkcik7CisJX19mbHVzaF90bGJf
cmFuZ2UoYWRkciwgYWRkciArIFBBR0VfU0laRSwgUEFHRV9TSElGVCk7CiAKIAlpZiAoIXN0YXRp
Y19jcHVfaGFzKFg4Nl9GRUFUVVJFX1BUSSkpCiAJCXJldHVybjsKZGlmZiAtLWdpdCBhL2FyY2gv
eDg2L2tlcm5lbC9wYXJhdmlydC5jIGIvYXJjaC94ODYva2VybmVsL3BhcmF2aXJ0LmMKaW5kZXgg
NTUyMGEwNGM4NGJhLi4xOTVmNTU3N2QwZDUgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2tlcm5lbC9w
YXJhdmlydC5jCisrKyBiL2FyY2gveDg2L2tlcm5lbC9wYXJhdmlydC5jCkBAIC0xNzMsOSArMTcz
LDEwIEBAIHN0YXRpYyB2b2lkIG5hdGl2ZV9mbHVzaF90bGJfZ2xvYmFsKHZvaWQpCiAJX19uYXRp
dmVfZmx1c2hfdGxiX2dsb2JhbCgpOwogfQogCi1zdGF0aWMgdm9pZCBuYXRpdmVfZmx1c2hfdGxi
X29uZV91c2VyKHVuc2lnbmVkIGxvbmcgYWRkcikKK3N0YXRpYyB2b2lkIG5hdGl2ZV9mbHVzaF90
bGJfcmFuZ2UodW5zaWduZWQgbG9uZyBzdGFydCwgdW5zaWduZWQgbG9uZyBlbmQsCisJCQkJICAg
dTggc3RyaWRlX3NoaWZ0KQogewotCV9fbmF0aXZlX2ZsdXNoX3RsYl9vbmVfdXNlcihhZGRyKTsK
KwlfX25hdGl2ZV9mbHVzaF90bGJfcmFuZ2Uoc3RhcnQsIGVuZCwgc3RyaWRlX3NoaWZ0KTsKIH0K
IAogc3RydWN0IHN0YXRpY19rZXkgcGFyYXZpcnRfc3RlYWxfZW5hYmxlZDsKQEAgLTM1OCw3ICsz
NTksNyBAQCBzdHJ1Y3QgcGFyYXZpcnRfcGF0Y2hfdGVtcGxhdGUgcHZfb3BzID0gewogCS8qIE1t
dSBvcHMuICovCiAJLm1tdS5mbHVzaF90bGJfdXNlcgk9IG5hdGl2ZV9mbHVzaF90bGIsCiAJLm1t
dS5mbHVzaF90bGJfa2VybmVsCT0gbmF0aXZlX2ZsdXNoX3RsYl9nbG9iYWwsCi0JLm1tdS5mbHVz
aF90bGJfb25lX3VzZXIJPSBuYXRpdmVfZmx1c2hfdGxiX29uZV91c2VyLAorCS5tbXUuZmx1c2hf
dGxiX3JhbmdlCT0gbmF0aXZlX2ZsdXNoX3RsYl9yYW5nZSwKIAkubW11LmZsdXNoX3RsYl9tdWx0
aQk9IG5hdGl2ZV9mbHVzaF90bGJfbXVsdGksCiAJLm1tdS50bGJfcmVtb3ZlX3RhYmxlCT0KIAkJ
CSh2b2lkICgqKShzdHJ1Y3QgbW11X2dhdGhlciAqLCB2b2lkICopKXRsYl9yZW1vdmVfcGFnZSwK
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L21tL3RsYi5jIGIvYXJjaC94ODYvbW0vdGxiLmMKaW5kZXgg
MGFkZGM2ZTg0MTI2Li5hZDE1ZmMyYzA3OTAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL3RsYi5j
CisrKyBiL2FyY2gveDg2L21tL3RsYi5jCkBAIC01MTIsNiArNTEyLDM1IEBAIHZvaWQgaW5pdGlh
bGl6ZV90bGJzdGF0ZV9hbmRfZmx1c2godm9pZCkKIAkJdGhpc19jcHVfd3JpdGUoY3B1X3RsYnN0
YXRlLmN0eHNbaV0uY3R4X2lkLCAwKTsKIH0KIAorc3RhdGljIHZvaWQgZmx1c2hfdGxiX3VzZXJf
cHRfcmFuZ2UodTE2IGFzaWQsIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqZikKK3sKKwl1
bnNpZ25lZCBsb25nIHN0YXJ0LCBlbmQsIGFkZHI7CisJdTggc3RyaWRlX3NoaWZ0OworCisJaWYg
KCFzdGF0aWNfY3B1X2hhcyhYODZfRkVBVFVSRV9QVEkpKQorCQlyZXR1cm47CisKKwkvKgorCSAq
IFJlYWQgdGhlIGRhdGEgaW50byB2YXJpYWJsZSBvbiB0aGUgc3RhY2sgdG8gcHJldmVudCBpdCBm
cm9tIGJlaW5nCisJICogcmVldmFsdWF0ZWQgZHVlIHRvIGludnBjaWQgbWVtb3J5IGNsb2JiZXIu
CisJICovCisJc3RhcnQgPSBmLT5zdGFydDsKKwllbmQgPSBmLT5lbmQ7CisJc3RyaWRlX3NoaWZ0
ID0gZi0+c3RyaWRlX3NoaWZ0OworCisJLyoKKwkgKiBTb21lIHBsYXRmb3JtcyAjR1AgaWYgd2Ug
Y2FsbCBpbnZwY2lkKHR5cGU9MS8yKSBiZWZvcmUgQ1I0LlBDSURFPTEuCisJICogSnVzdCB1c2Ug
aW52YWxpZGF0ZV91c2VyX2FzaWQoKSBpbiBjYXNlIHdlIGFyZSBjYWxsZWQgZWFybHkuCisJICov
CisJaWYgKCF0aGlzX2NwdV9oYXMoWDg2X0ZFQVRVUkVfSU5WUENJRF9TSU5HTEUpKSB7CisJCWlu
dmFsaWRhdGVfdXNlcl9hc2lkKGFzaWQpOworCQlyZXR1cm47CisJfQorCisJZm9yIChhZGRyID0g
c3RhcnQ7IGFkZHIgPCBlbmQ7IGFkZHIgKz0gMXVsIDw8IHN0cmlkZV9zaGlmdCkKKwkJaW52cGNp
ZF9mbHVzaF9vbmUodXNlcl9wY2lkKGFzaWQpLCBhZGRyKTsKK30KKwogLyoKICAqIGZsdXNoX3Rs
Yl9mdW5jKCkncyBtZW1vcnkgb3JkZXJpbmcgcmVxdWlyZW1lbnQgaXMgdGhhdCBhbnkKICAqIFRM
QiBmaWxscyB0aGF0IGhhcHBlbiBhZnRlciB3ZSBmbHVzaCB0aGUgVExCIGFyZSBvcmRlcmVkIGFm
dGVyIHdlCkBAIC02MjQsMTQgKzY1MywxMiBAQCBzdGF0aWMgdm9pZCBmbHVzaF90bGJfZnVuYyh2
b2lkICppbmZvKQogCSAgICBmLT5uZXdfdGxiX2dlbiA9PSBsb2NhbF90bGJfZ2VuICsgMSAmJgog
CSAgICBmLT5uZXdfdGxiX2dlbiA9PSBtbV90bGJfZ2VuKSB7CiAJCS8qIFBhcnRpYWwgZmx1c2gg
Ki8KLQkJdW5zaWduZWQgbG9uZyBhZGRyID0gZi0+c3RhcnQ7Ci0KIAkJbnJfaW52YWxpZGF0ZSA9
IChmLT5lbmQgLSBmLT5zdGFydCkgPj4gZi0+c3RyaWRlX3NoaWZ0OwogCi0JCXdoaWxlIChhZGRy
IDwgZi0+ZW5kKSB7Ci0JCQlfX2ZsdXNoX3RsYl9vbmVfdXNlcihhZGRyKTsKLQkJCWFkZHIgKz0g
MVVMIDw8IGYtPnN0cmlkZV9zaGlmdDsKLQkJfQorCQlfX2ZsdXNoX3RsYl9yYW5nZShmLT5zdGFy
dCwgZi0+ZW5kLCBmLT5zdHJpZGVfc2hpZnQpOworCisJCWZsdXNoX3RsYl91c2VyX3B0X3Jhbmdl
KGxvYWRlZF9tbV9hc2lkLCBmKTsKKwogCQlpZiAobG9jYWwpCiAJCQljb3VudF92bV90bGJfZXZl
bnRzKE5SX1RMQl9MT0NBTF9GTFVTSF9PTkUsIG5yX2ludmFsaWRhdGUpOwogCX0gZWxzZSB7CmRp
ZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vbW11X3B2LmMgYi9hcmNoL3g4Ni94ZW4vbW11X3B2LmMK
aW5kZXggNDhmN2M3ZWI0ZGJjLi5lZDY4NjU3ZjVlNzcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hl
bi9tbXVfcHYuYworKysgYi9hcmNoL3g4Ni94ZW4vbW11X3B2LmMKQEAgLTEzMjUsMjIgKzEzMjUs
MjcgQEAgc3RhdGljIG5vaW5saW5lIHZvaWQgeGVuX2ZsdXNoX3RsYih2b2lkKQogCXByZWVtcHRf
ZW5hYmxlKCk7CiB9CiAKLXN0YXRpYyB2b2lkIHhlbl9mbHVzaF90bGJfb25lX3VzZXIodW5zaWdu
ZWQgbG9uZyBhZGRyKQorc3RhdGljIHZvaWQgeGVuX2ZsdXNoX3RsYl9yYW5nZSh1bnNpZ25lZCBs
b25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCwKKwkJCQl1OCBzdHJpZGVfc2hpZnQpCiB7CiAJ
c3RydWN0IG1tdWV4dF9vcCAqb3A7CiAJc3RydWN0IG11bHRpY2FsbF9zcGFjZSBtY3M7Ci0KLQl0
cmFjZV94ZW5fbW11X2ZsdXNoX3RsYl9vbmVfdXNlcihhZGRyKTsKKwl1bnNpZ25lZCBsb25nIGFk
ZHI7CiAKIAlwcmVlbXB0X2Rpc2FibGUoKTsKIAogCW1jcyA9IHhlbl9tY19lbnRyeShzaXplb2Yo
Km9wKSk7CiAJb3AgPSBtY3MuYXJnczsKLQlvcC0+Y21kID0gTU1VRVhUX0lOVkxQR19MT0NBTDsK
LQlvcC0+YXJnMS5saW5lYXJfYWRkciA9IGFkZHIgJiBQQUdFX01BU0s7Ci0JTVVMVElfbW11ZXh0
X29wKG1jcy5tYywgb3AsIDEsIE5VTEwsIERPTUlEX1NFTEYpOwogCi0JeGVuX21jX2lzc3VlKFBB
UkFWSVJUX0xBWllfTU1VKTsKKwlmb3IgKGFkZHIgPSBzdGFydDsgYWRkciA8IGVuZDsgYWRkciAr
PSAxdWwgPDwgc3RyaWRlX3NoaWZ0KSB7CisJCXRyYWNlX3hlbl9tbXVfZmx1c2hfdGxiX29uZV91
c2VyKGFkZHIpOworCisJCW9wLT5jbWQgPSBNTVVFWFRfSU5WTFBHX0xPQ0FMOworCQlvcC0+YXJn
MS5saW5lYXJfYWRkciA9IGFkZHIgJiBQQUdFX01BU0s7CisJCU1VTFRJX21tdWV4dF9vcChtY3Mu
bWMsIG9wLCAxLCBOVUxMLCBET01JRF9TRUxGKTsKKworCQl4ZW5fbWNfaXNzdWUoUEFSQVZJUlRf
TEFaWV9NTVUpOworCX0KIAogCXByZWVtcHRfZW5hYmxlKCk7CiB9CkBAIC0yMzk0LDcgKzIzOTks
NyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHB2X21tdV9vcHMgeGVuX21tdV9vcHMgX19pbml0Y29u
c3QgPSB7CiAKIAkuZmx1c2hfdGxiX3VzZXIgPSB4ZW5fZmx1c2hfdGxiLAogCS5mbHVzaF90bGJf
a2VybmVsID0geGVuX2ZsdXNoX3RsYiwKLQkuZmx1c2hfdGxiX29uZV91c2VyID0geGVuX2ZsdXNo
X3RsYl9vbmVfdXNlciwKKwkuZmx1c2hfdGxiX3JhbmdlID0geGVuX2ZsdXNoX3RsYl9yYW5nZSwK
IAkuZmx1c2hfdGxiX211bHRpID0geGVuX2ZsdXNoX3RsYl9tdWx0aSwKIAkudGxiX3JlbW92ZV90
YWJsZSA9IHRsYl9yZW1vdmVfdGFibGUsCiAKLS0gCjIuMTcuMQoKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVu
LWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcv
bWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

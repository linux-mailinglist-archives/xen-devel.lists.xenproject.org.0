Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 07C71122E33
	for <lists+xen-devel@lfdr.de>; Tue, 17 Dec 2019 15:11:45 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1ihDWp-0000dl-1U; Tue, 17 Dec 2019 14:08:47 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=6FKB=2H=citrix.com=sergey.dyasli@srs-us1.protection.inumbo.net>)
 id 1ihDWm-0000d9-VB
 for xen-devel@lists.xen.org; Tue, 17 Dec 2019 14:08:44 +0000
X-Inumbo-ID: b6c09f38-20d6-11ea-8ed4-12813bfff9fa
Received: from esa2.hc3370-68.iphmx.com (unknown [216.71.145.153])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id b6c09f38-20d6-11ea-8ed4-12813bfff9fa;
 Tue, 17 Dec 2019 14:08:35 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=citrix.com; s=securemail; t=1576591715;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version;
 bh=u2UPCwCRKdLZ5GeCl7b3ekyiD3VnQVvAIq0xoa4hsrU=;
 b=Di7JDY+JiYV33syvHf9hg4VCCNUwbaIqVJEVUqEqAkztSzZ/SQtXezxr
 vlkx1QQ9iEMRydFL/gLs6ASY5bYjpdZr3Mjx1UUKsnxxAkihklGpNcxof
 GoSHatT8xo7bBB3BJBzVBzOj9ve5NJH7kR+MuaisqymQa68wOkg9lQN+s s=;
Authentication-Results: esa2.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none;
 spf=None smtp.pra=sergey.dyasli@citrix.com;
 spf=Pass smtp.mailfrom=sergey.dyasli@citrix.com;
 spf=None smtp.helo=postmaster@mail.citrix.com
Received-SPF: None (esa2.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 sergey.dyasli@citrix.com) identity=pra;
 client-ip=162.221.158.21; receiver=esa2.hc3370-68.iphmx.com;
 envelope-from="sergey.dyasli@citrix.com";
 x-sender="sergey.dyasli@citrix.com";
 x-conformance=sidf_compatible
Received-SPF: Pass (esa2.hc3370-68.iphmx.com: domain of
 sergey.dyasli@citrix.com designates 162.221.158.21 as
 permitted sender) identity=mailfrom;
 client-ip=162.221.158.21; receiver=esa2.hc3370-68.iphmx.com;
 envelope-from="sergey.dyasli@citrix.com";
 x-sender="sergey.dyasli@citrix.com";
 x-conformance=sidf_compatible; x-record-type="v=spf1";
 x-record-text="v=spf1 ip4:209.167.231.154 ip4:178.63.86.133
 ip4:195.66.111.40/30 ip4:85.115.9.32/28 ip4:199.102.83.4
 ip4:192.28.146.160 ip4:192.28.146.107 ip4:216.52.6.88
 ip4:216.52.6.188 ip4:162.221.158.21 ip4:162.221.156.83
 ip4:168.245.78.127 ~all"
Received-SPF: None (esa2.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 postmaster@mail.citrix.com) identity=helo;
 client-ip=162.221.158.21; receiver=esa2.hc3370-68.iphmx.com;
 envelope-from="sergey.dyasli@citrix.com";
 x-sender="postmaster@mail.citrix.com";
 x-conformance=sidf_compatible
IronPort-SDR: vTNHCHh/5quroKztrA/VQaZHeqhEeaqLFGVh7RsQIpPaIn2P5hLV2/P8ElTYM1ye+vK8PdN4vI
 EM/B4CNPsHIZJNfn5D98SRqCeY8dQ4iY2x0rNpsawnWgBMMUrR5Wd4lx8MFY4GB6/h/RnxX5Rh
 DXzoFiKbulmk9Thb6ePUROwDYo6FOg7veYQ3GEGS4q3xYkJf2pN8df6mCUJWToiiOZtwDa252J
 iCpOdkz8HNA0AgnQqnehmxFc0zj5ZzL3HU8VRrCRxr7VpjtGgQKWKk3+E7jDrZFER7AKWUM9M8
 5PE=
X-SBRS: 2.7
X-MesageID: 9817032
X-Ironport-Server: esa2.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.69,325,1571716800"; 
   d="scan'208";a="9817032"
From: Sergey Dyasli <sergey.dyasli@citrix.com>
To: <xen-devel@lists.xen.org>, <kasan-dev@googlegroups.com>,
 <linux-kernel@vger.kernel.org>
Date: Tue, 17 Dec 2019 14:08:02 +0000
Message-ID: <20191217140804.27364-2-sergey.dyasli@citrix.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191217140804.27364-1-sergey.dyasli@citrix.com>
References: <20191217140804.27364-1-sergey.dyasli@citrix.com>
MIME-Version: 1.0
Subject: [Xen-devel] [RFC PATCH 1/3] x86/xen: add basic KASAN support for PV
 kernel
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, Sergey Dyasli <sergey.dyasli@citrix.com>,
 Stefano
 Stabellini <sstabellini@kernel.org>, George Dunlap <george.dunlap@citrix.com>,
 Ross Lagerwall <ross.lagerwall@citrix.com>,
 Alexander Potapenko <glider@google.com>,
 Andrey Ryabinin <aryabinin@virtuozzo.com>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Dmitry Vyukov <dvyukov@google.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhpcyBlbmFibGVzIHRvIHVzZSBPdXRsaW5lIGluc3RydW1lbnRhdGlvbiBmb3IgWGVuIFBWIGtl
cm5lbHMuCgpLQVNBTl9JTkxJTkUgYW5kIEtBU0FOX1ZNQUxMT0Mgb3B0aW9ucyBjdXJyZW50bHkg
bGVhZCB0byBib290IGNyYXNoZXMKYW5kIGhlbmNlIGRpc2FibGVkLgoKUm91Z2ggZWRnZXMgaW4g
dGhlIHBhdGNoIGFyZSBtYXJrZWQgd2l0aCBYWFguCgpTaWduZWQtb2ZmLWJ5OiBTZXJnZXkgRHlh
c2xpIDxzZXJnZXkuZHlhc2xpQGNpdHJpeC5jb20+Ci0tLQogYXJjaC94ODYvbW0vaW5pdC5jICAg
ICAgICAgIHwgMTQgKysrKysrKysrKysrKysKIGFyY2gveDg2L21tL2thc2FuX2luaXRfNjQuYyB8
IDI4ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGFyY2gveDg2L3hlbi9NYWtlZmlsZSAg
ICAgICB8ICA3ICsrKysrKysKIGFyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHYuYyB8ICAzICsrKwog
YXJjaC94ODYveGVuL21tdV9wdi5jICAgICAgIHwgMTMgKysrKysrKysrKystLQogYXJjaC94ODYv
eGVuL211bHRpY2FsbHMuYyAgIHwgMTAgKysrKysrKysrKwogZHJpdmVycy94ZW4vTWFrZWZpbGUg
ICAgICAgIHwgIDIgKysKIGtlcm5lbC9NYWtlZmlsZSAgICAgICAgICAgICB8ICAyICsrCiBsaWIv
S2NvbmZpZy5rYXNhbiAgICAgICAgICAgfCAgMyArKy0KIDkgZmlsZXMgY2hhbmdlZCwgNzkgaW5z
ZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9tbS9pbml0
LmMgYi9hcmNoL3g4Ni9tbS9pbml0LmMKaW5kZXggZTdiYjQ4MzU1N2M5Li4wYzk4YTQ1ZWVjNmMg
MTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL2luaXQuYworKysgYi9hcmNoL3g4Ni9tbS9pbml0LmMK
QEAgLTgsNiArOCw4IEBACiAjaW5jbHVkZSA8bGludXgva21lbWxlYWsuaD4KICNpbmNsdWRlIDxs
aW51eC9zY2hlZC90YXNrLmg+CiAKKyNpbmNsdWRlIDx4ZW4veGVuLmg+CisKICNpbmNsdWRlIDxh
c20vc2V0X21lbW9yeS5oPgogI2luY2x1ZGUgPGFzbS9lODIwL2FwaS5oPgogI2luY2x1ZGUgPGFz
bS9pbml0Lmg+CkBAIC04MzUsNiArODM3LDE4IEBAIHZvaWQgZnJlZV9rZXJuZWxfaW1hZ2VfcGFn
ZXMoY29uc3QgY2hhciAqd2hhdCwgdm9pZCAqYmVnaW4sIHZvaWQgKmVuZCkKIAl1bnNpZ25lZCBs
b25nIGVuZF91bCA9ICh1bnNpZ25lZCBsb25nKWVuZDsKIAl1bnNpZ25lZCBsb25nIGxlbl9wYWdl
cyA9IChlbmRfdWwgLSBiZWdpbl91bCkgPj4gUEFHRV9TSElGVDsKIAorCS8qCisJICogWFhYOiBz
a2lwIHRoaXMgZm9yIG5vdy4gT3RoZXJ3aXNlIGl0IGxlYWRzIHRvOgorCSAqCisJICogKFhFTikg
bW0uYzoyNzEzOmQxNTd2MCBCYWQgdHlwZSAoc2F3IDhjMDAwMDAwMDAwMDAwMDEgIT0gZXhwIGUw
MDAwMDAwMDAwMDAwMDApIGZvciBtZm4gMzZmNDAgKHBmbiAwMmY0MCkKKwkgKiAoWEVOKSBtbS5j
OjEwNDM6ZDE1N3YwIENvdWxkIG5vdCBnZXQgcGFnZSB0eXBlIFBHVF93cml0YWJsZV9wYWdlCisJ
ICogKFhFTikgbW0uYzoxMDk2OmQxNTd2MCBFcnJvciBnZXR0aW5nIG1mbiAzNmY0MCAocGZuIDAy
ZjQwKSBmcm9tIEwxIGVudHJ5IDgwMTAwMDAwMzZmNDAwNjcgZm9yIGwxZV9vd25lciBkMTU3LCBw
Z19vd25lciBkMTU3CisJICoKKwkgKiBhbmQgZnVydGhlciAjUEYgZXJyb3I6IFtQUk9UXSBbV1JJ
VEVdIGluIHRoZSBrZXJuZWwuCisJICovCisJaWYgKHhlbl9wdl9kb21haW4oKSAmJiBJU19FTkFC
TEVEKENPTkZJR19LQVNBTikpCisJCXJldHVybjsKKwogCWZyZWVfaW5pdF9wYWdlcyh3aGF0LCBi
ZWdpbl91bCwgZW5kX3VsKTsKIAogCS8qCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9tbS9rYXNhbl9p
bml0XzY0LmMgYi9hcmNoL3g4Ni9tbS9rYXNhbl9pbml0XzY0LmMKaW5kZXggY2Y1YmMzN2M5MGFj
Li5jYWVlMjAyMmY4YjAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL2thc2FuX2luaXRfNjQuYwor
KysgYi9hcmNoL3g4Ni9tbS9rYXNhbl9pbml0XzY0LmMKQEAgLTEzLDYgKzEzLDggQEAKICNpbmNs
dWRlIDxsaW51eC9zY2hlZC90YXNrLmg+CiAjaW5jbHVkZSA8bGludXgvdm1hbGxvYy5oPgogCisj
aW5jbHVkZSA8eGVuL3hlbi5oPgorCiAjaW5jbHVkZSA8YXNtL2U4MjAvdHlwZXMuaD4KICNpbmNs
dWRlIDxhc20vcGdhbGxvYy5oPgogI2luY2x1ZGUgPGFzbS90bGJmbHVzaC5oPgpAQCAtMjAsNiAr
MjIsOSBAQAogI2luY2x1ZGUgPGFzbS9wZ3RhYmxlLmg+CiAjaW5jbHVkZSA8YXNtL2NwdV9lbnRy
eV9hcmVhLmg+CiAKKyNpbmNsdWRlIDx4ZW4vaW50ZXJmYWNlL3hlbi5oPgorI2luY2x1ZGUgPGFz
bS94ZW4vaHlwZXJ2aXNvci5oPgorCiBleHRlcm4gc3RydWN0IHJhbmdlIHBmbl9tYXBwZWRbRTgy
MF9NQVhfRU5UUklFU107CiAKIHN0YXRpYyBwNGRfdCB0bXBfcDRkX3RhYmxlW01BWF9QVFJTX1BF
Ul9QNERdIF9faW5pdGRhdGEgX19hbGlnbmVkKFBBR0VfU0laRSk7CkBAIC0zMDUsNiArMzEwLDEy
IEBAIHN0YXRpYyBzdHJ1Y3Qgbm90aWZpZXJfYmxvY2sga2FzYW5fZGllX25vdGlmaWVyID0gewog
fTsKICNlbmRpZgogCisjaWZkZWYgQ09ORklHX1hFTgorLyogWFhYOiB0aGlzIHNob3VsZCBnbyB0
byBzb21lIGhlYWRlciAqLwordm9pZCBfX2luaXQgc2V0X3BhZ2VfcHJvdCh2b2lkICphZGRyLCBw
Z3Byb3RfdCBwcm90KTsKK3ZvaWQgX19pbml0IHBpbl9wYWdldGFibGVfcGZuKHVuc2lnbmVkIGNt
ZCwgdW5zaWduZWQgbG9uZyBwZm4pOworI2VuZGlmCisKIHZvaWQgX19pbml0IGthc2FuX2Vhcmx5
X2luaXQodm9pZCkKIHsKIAlpbnQgaTsKQEAgLTMzMiw2ICszNDMsMTYgQEAgdm9pZCBfX2luaXQg
a2FzYW5fZWFybHlfaW5pdCh2b2lkKQogCWZvciAoaSA9IDA7IHBndGFibGVfbDVfZW5hYmxlZCgp
ICYmIGkgPCBQVFJTX1BFUl9QNEQ7IGkrKykKIAkJa2FzYW5fZWFybHlfc2hhZG93X3A0ZFtpXSA9
IF9fcDRkKHA0ZF92YWwpOwogCisJaWYgKHhlbl9wdl9kb21haW4oKSkgeworCQkvKiBQViBwYWdl
IHRhYmxlcyBtdXN0IGhhdmUgUEFHRV9LRVJORUxfUk8gKi8KKwkJc2V0X3BhZ2VfcHJvdChrYXNh
bl9lYXJseV9zaGFkb3dfcHVkLCBQQUdFX0tFUk5FTF9STyk7CisJCXNldF9wYWdlX3Byb3Qoa2Fz
YW5fZWFybHlfc2hhZG93X3BtZCwgUEFHRV9LRVJORUxfUk8pOworCQlzZXRfcGFnZV9wcm90KGth
c2FuX2Vhcmx5X3NoYWRvd19wdGUsIFBBR0VfS0VSTkVMX1JPKTsKKworCQkvKiBBZGQgbWFwcGlu
Z3MgdG8gdGhlIGluaXRpYWwgUFYgcGFnZSB0YWJsZXMgKi8KKwkJa2FzYW5fbWFwX2Vhcmx5X3No
YWRvdygocGdkX3QgKil4ZW5fc3RhcnRfaW5mby0+cHRfYmFzZSk7CisJfQorCiAJa2FzYW5fbWFw
X2Vhcmx5X3NoYWRvdyhlYXJseV90b3BfcGd0KTsKIAlrYXNhbl9tYXBfZWFybHlfc2hhZG93KGlu
aXRfdG9wX3BndCk7CiB9CkBAIC0zNjksNiArMzkwLDEzIEBAIHZvaWQgX19pbml0IGthc2FuX2lu
aXQodm9pZCkKIAkJCQlfX3BnZChfX3BhKHRtcF9wNGRfdGFibGUpIHwgX0tFUk5QR19UQUJMRSkp
OwogCX0KIAorCWlmICh4ZW5fcHZfZG9tYWluKCkpIHsKKwkJLyogUFYgcGFnZSB0YWJsZXMgbXVz
dCBiZSBwaW5uZWQgKi8KKwkJc2V0X3BhZ2VfcHJvdChlYXJseV90b3BfcGd0LCBQQUdFX0tFUk5F
TF9STyk7CisJCXBpbl9wYWdldGFibGVfcGZuKE1NVUVYVF9QSU5fTDRfVEFCTEUsCisJCQkJICBQ
Rk5fRE9XTihfX3BhX3N5bWJvbChlYXJseV90b3BfcGd0KSkpOworCX0KKwogCWxvYWRfY3IzKGVh
cmx5X3RvcF9wZ3QpOwogCV9fZmx1c2hfdGxiX2FsbCgpOwogCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni94ZW4vTWFrZWZpbGUgYi9hcmNoL3g4Ni94ZW4vTWFrZWZpbGUKaW5kZXggMDg0ZGU3N2ExMDll
Li4xMDJmYWQwYjBiY2EgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9NYWtlZmlsZQorKysgYi9h
cmNoL3g4Ni94ZW4vTWFrZWZpbGUKQEAgLTEsMyArMSwxMCBAQAorS0FTQU5fU0FOSVRJWkVfZW5s
aWdodGVuX3B2Lm8gOj0gbgorS0FTQU5fU0FOSVRJWkVfZW5saWdodGVuLm8gOj0gbgorS0FTQU5f
U0FOSVRJWkVfaXJxLm8gOj0gbgorS0FTQU5fU0FOSVRJWkVfbW11X3B2Lm8gOj0gbgorS0FTQU5f
U0FOSVRJWkVfcDJtLm8gOj0gbgorS0FTQU5fU0FOSVRJWkVfbXVsdGljYWxscy5vIDo9IG4KKwog
IyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAogT0JKRUNUX0ZJTEVTX05PTl9TVEFO
REFSRF94ZW4tYXNtXyQoQklUUykubyA6PSB5CiAKZGlmZiAtLWdpdCBhL2FyY2gveDg2L3hlbi9l
bmxpZ2h0ZW5fcHYuYyBiL2FyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHYuYwppbmRleCBhZTRhNDFj
YTE5ZjYuLjI3ZGU1NTY5OWYyNCAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL2VubGlnaHRlbl9w
di5jCisrKyBiL2FyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHYuYwpAQCAtNzIsNiArNzIsNyBAQAog
I2luY2x1ZGUgPGFzbS9td2FpdC5oPgogI2luY2x1ZGUgPGFzbS9wY2lfeDg2Lmg+CiAjaW5jbHVk
ZSA8YXNtL2NwdS5oPgorI2luY2x1ZGUgPGFzbS9rYXNhbi5oPgogCiAjaWZkZWYgQ09ORklHX0FD
UEkKICNpbmNsdWRlIDxsaW51eC9hY3BpLmg+CkBAIC0xMjMxLDYgKzEyMzIsOCBAQCBhc21saW5r
YWdlIF9fdmlzaWJsZSB2b2lkIF9faW5pdCB4ZW5fc3RhcnRfa2VybmVsKHZvaWQpCiAJLyogR2V0
IG1mbiBsaXN0ICovCiAJeGVuX2J1aWxkX2R5bmFtaWNfcGh5c190b19tYWNoaW5lKCk7CiAKKwlr
YXNhbl9lYXJseV9pbml0KCk7CisKIAkvKgogCSAqIFNldCB1cCBrZXJuZWwgR0RUIGFuZCBzZWdt
ZW50IHJlZ2lzdGVycywgbWFpbmx5IHNvIHRoYXQKIAkgKiAtZnN0YWNrLXByb3RlY3RvciBjb2Rl
IGNhbiBiZSBleGVjdXRlZC4KZGlmZiAtLWdpdCBhL2FyY2gveDg2L3hlbi9tbXVfcHYuYyBiL2Fy
Y2gveDg2L3hlbi9tbXVfcHYuYwppbmRleCBjOGRiZWU2MmVjMmEuLmVhZjYzZjFmMjZhZiAxMDA2
NDQKLS0tIGEvYXJjaC94ODYveGVuL21tdV9wdi5jCisrKyBiL2FyY2gveDg2L3hlbi9tbXVfcHYu
YwpAQCAtMTA3OSw3ICsxMDc5LDcgQEAgc3RhdGljIHZvaWQgeGVuX2V4aXRfbW1hcChzdHJ1Y3Qg
bW1fc3RydWN0ICptbSkKIAogc3RhdGljIHZvaWQgeGVuX3Bvc3RfYWxsb2NhdG9yX2luaXQodm9p
ZCk7CiAKLXN0YXRpYyB2b2lkIF9faW5pdCBwaW5fcGFnZXRhYmxlX3Bmbih1bnNpZ25lZCBjbWQs
IHVuc2lnbmVkIGxvbmcgcGZuKQordm9pZCBfX2luaXQgcGluX3BhZ2V0YWJsZV9wZm4odW5zaWdu
ZWQgY21kLCB1bnNpZ25lZCBsb25nIHBmbikKIHsKIAlzdHJ1Y3QgbW11ZXh0X29wIG9wOwogCkBA
IC0xNzY3LDcgKzE3NjcsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgc2V0X3BhZ2VfcHJvdF9mbGFn
cyh2b2lkICphZGRyLCBwZ3Byb3RfdCBwcm90LAogCWlmIChIWVBFUlZJU09SX3VwZGF0ZV92YV9t
YXBwaW5nKCh1bnNpZ25lZCBsb25nKWFkZHIsIHB0ZSwgZmxhZ3MpKQogCQlCVUcoKTsKIH0KLXN0
YXRpYyB2b2lkIF9faW5pdCBzZXRfcGFnZV9wcm90KHZvaWQgKmFkZHIsIHBncHJvdF90IHByb3Qp
Cit2b2lkIF9faW5pdCBzZXRfcGFnZV9wcm90KHZvaWQgKmFkZHIsIHBncHJvdF90IHByb3QpCiB7
CiAJcmV0dXJuIHNldF9wYWdlX3Byb3RfZmxhZ3MoYWRkciwgcHJvdCwgVVZNRl9OT05FKTsKIH0K
QEAgLTE5NDMsNiArMTk0MywxNSBAQCB2b2lkIF9faW5pdCB4ZW5fc2V0dXBfa2VybmVsX3BhZ2V0
YWJsZShwZ2RfdCAqcGdkLCB1bnNpZ25lZCBsb25nIG1heF9wZm4pCiAJaWYgKGkgJiYgaSA8IHBn
ZF9pbmRleChfX1NUQVJUX0tFUk5FTF9tYXApKQogCQlpbml0X3RvcF9wZ3RbaV0gPSAoKHBnZF90
ICopeGVuX3N0YXJ0X2luZm8tPnB0X2Jhc2UpW2ldOwogCisjaWZkZWYgQ09ORklHX0tBU0FOCisJ
LyoKKwkgKiBDb3B5IEtBU0FOIG1hcHBpbmdzCisJICogZmZmZmVjMDAwMDAwMDAwMCAtIGZmZmZm
YmZmZmZmZmZmZmYgKD00NCBiaXRzKSBrYXNhbiBzaGFkb3cgbWVtb3J5ICgxNlRCKQorCSAqLwor
CWZvciAoaSA9IDB4ZWMwID4+IDM7IGkgPCAweGZjMCA+PiAzOyBpKyspCisJCWluaXRfdG9wX3Bn
dFtpXSA9ICgocGdkX3QgKil4ZW5fc3RhcnRfaW5mby0+cHRfYmFzZSlbaV07CisjZW5kaWYKKwog
CS8qIE1ha2UgcGFnZXRhYmxlIHBpZWNlcyBSTyAqLwogCXNldF9wYWdlX3Byb3QoaW5pdF90b3Bf
cGd0LCBQQUdFX0tFUk5FTF9STyk7CiAJc2V0X3BhZ2VfcHJvdChsZXZlbDNfaWRlbnRfcGd0LCBQ
QUdFX0tFUk5FTF9STyk7CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vbXVsdGljYWxscy5jIGIv
YXJjaC94ODYveGVuL211bHRpY2FsbHMuYwppbmRleCAwNzA1NDU3MjI5N2YuLjVlNDcyOWVmYmJl
MiAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL211bHRpY2FsbHMuYworKysgYi9hcmNoL3g4Ni94
ZW4vbXVsdGljYWxscy5jCkBAIC05OSw2ICs5OSwxNSBAQCB2b2lkIHhlbl9tY19mbHVzaCh2b2lk
KQogCQkJCXJldCsrOwogCX0KIAorCS8qCisJICogWFhYOiBLYXNhbiBwcm9kdWNlcyBxdWl0ZSBh
IGxvdCAofjIwMDApIG9mIHdhcm5pbmdzIGluIGEgZm9ybSBvZjoKKwkgKgorCSAqICAgICAoWEVO
KSBtbS5jOjMyMjI6ZDE1NXYwIG1mbiAzNzA0YiBhbHJlYWR5IHBpbm5lZAorCSAqCisJICogZHVy
aW5nIGthc2FuX2luaXQoKS4gVGhleSBhcmUgYmVuaWduLCBidXQgc2lsZW5jZSB0aGVtIGZvciBu
b3cuCisJICogT3RoZXJ3aXNlLCBib290aW5nIHRha2VzIHRvbyBsb25nIGR1ZSB0byBwcmludGso
KSBzcGFtLgorCSAqLworI2lmbmRlZiBDT05GSUdfS0FTQU4KIAlpZiAoV0FSTl9PTihyZXQpKSB7
CiAJCXByX2VycigiJWQgb2YgJWQgbXVsdGljYWxsKHMpIGZhaWxlZDogY3B1ICVkXG4iLAogCQkg
ICAgICAgcmV0LCBiLT5tY2lkeCwgc21wX3Byb2Nlc3Nvcl9pZCgpKTsKQEAgLTEyMSw2ICsxMzAs
NyBAQCB2b2lkIHhlbl9tY19mbHVzaCh2b2lkKQogCQkJfQogCQl9CiAJfQorI2VuZGlmIC8qIENP
TkZJR19LQVNBTiAqLwogCiAJYi0+bWNpZHggPSAwOwogCWItPmFyZ2lkeCA9IDA7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3hlbi9NYWtlZmlsZSBiL2RyaXZlcnMveGVuL01ha2VmaWxlCmluZGV4IDBj
NGVmYTZmZTQ1MC4uMWU5ZTFlNDFjMGE4IDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9NYWtlZmls
ZQorKysgYi9kcml2ZXJzL3hlbi9NYWtlZmlsZQpAQCAtMSw0ICsxLDYgQEAKICMgU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKK0tBU0FOX1NBTklUSVpFX2ZlYXR1cmVzLm8gOj0gbgor
CiBvYmotJChDT05GSUdfSE9UUExVR19DUFUpCQkrPSBjcHVfaG90cGx1Zy5vCiBvYmoteQkrPSBn
cmFudC10YWJsZS5vIGZlYXR1cmVzLm8gYmFsbG9vbi5vIG1hbmFnZS5vIHByZWVtcHQubyB0aW1l
Lm8KIG9iai15CSs9IG1lbS1yZXNlcnZhdGlvbi5vCmRpZmYgLS1naXQgYS9rZXJuZWwvTWFrZWZp
bGUgYi9rZXJuZWwvTWFrZWZpbGUKaW5kZXggZjJjYzBkMTE4YTBiLi4xZGE2ZmQ5M2MwMGMgMTAw
NjQ0Ci0tLSBhL2tlcm5lbC9NYWtlZmlsZQorKysgYi9rZXJuZWwvTWFrZWZpbGUKQEAgLTEyLDYg
KzEyLDggQEAgb2JqLXkgICAgID0gZm9yay5vIGV4ZWNfZG9tYWluLm8gcGFuaWMubyBcCiAJICAg
IG5vdGlmaWVyLm8ga3N5c2ZzLm8gY3JlZC5vIHJlYm9vdC5vIFwKIAkgICAgYXN5bmMubyByYW5n
ZS5vIHNtcGJvb3QubyB1Y291bnQubwogCitLQVNBTl9TQU5JVElaRV9jcHUubyA6PSBuCisKIG9i
ai0kKENPTkZJR19NT0RVTEVTKSArPSBrbW9kLm8KIG9iai0kKENPTkZJR19NVUxUSVVTRVIpICs9
IGdyb3Vwcy5vCiAKZGlmZiAtLWdpdCBhL2xpYi9LY29uZmlnLmthc2FuIGIvbGliL0tjb25maWcu
a2FzYW4KaW5kZXggODFmNTQ2NGVhOWUxLi40MjlhNjM4NjI1ZWEgMTAwNjQ0Ci0tLSBhL2xpYi9L
Y29uZmlnLmthc2FuCisrKyBiL2xpYi9LY29uZmlnLmthc2FuCkBAIC05OCw2ICs5OCw3IEBAIGNv
bmZpZyBLQVNBTl9PVVRMSU5FCiAKIGNvbmZpZyBLQVNBTl9JTkxJTkUKIAlib29sICJJbmxpbmUg
aW5zdHJ1bWVudGF0aW9uIgorCWRlcGVuZHMgb24gIVhFTl9QVgogCWhlbHAKIAkgIENvbXBpbGVy
IGRpcmVjdGx5IGluc2VydHMgY29kZSBjaGVja2luZyBzaGFkb3cgbWVtb3J5IGJlZm9yZQogCSAg
bWVtb3J5IGFjY2Vzc2VzLiBUaGlzIGlzIGZhc3RlciB0aGFuIG91dGxpbmUgKGluIHNvbWUgd29y
a2xvYWRzCkBAIC0xNDcsNyArMTQ4LDcgQEAgY29uZmlnIEtBU0FOX1NXX1RBR1NfSURFTlRJRlkK
IAogY29uZmlnIEtBU0FOX1ZNQUxMT0MKIAlib29sICJCYWNrIG1hcHBpbmdzIGluIHZtYWxsb2Mg
c3BhY2Ugd2l0aCByZWFsIHNoYWRvdyBtZW1vcnkiCi0JZGVwZW5kcyBvbiBLQVNBTiAmJiBIQVZF
X0FSQ0hfS0FTQU5fVk1BTExPQworCWRlcGVuZHMgb24gS0FTQU4gJiYgSEFWRV9BUkNIX0tBU0FO
X1ZNQUxMT0MgJiYgIVhFTl9QVgogCWhlbHAKIAkgIEJ5IGRlZmF1bHQsIHRoZSBzaGFkb3cgcmVn
aW9uIGZvciB2bWFsbG9jIHNwYWNlIGlzIHRoZSByZWFkLW9ubHkKIAkgIHplcm8gcGFnZS4gVGhp
cyBtZWFucyB0aGF0IEtBU0FOIGNhbm5vdCBkZXRlY3QgZXJyb3JzIGludm9sdmluZwotLSAKMi4x
Ny4xCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVu
LWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6
Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

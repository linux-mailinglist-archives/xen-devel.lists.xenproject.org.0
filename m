Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 7AB912DAD02
	for <lists+xen-devel@lfdr.de>; Tue, 15 Dec 2020 13:21:40 +0100 (CET)
Received: from list by lists.xenproject.org with outflank-mailman.53162.92916 (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1kp9KE-0005pP-62; Tue, 15 Dec 2020 12:21:06 +0000
X-Outflank-Mailman: Message body and most headers restored to incoming version
Received: by outflank-mailman (output) from mailman id 53162.92916; Tue, 15 Dec 2020 12:21:06 +0000
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1kp9KD-0005oU-TS; Tue, 15 Dec 2020 12:21:05 +0000
Received: by outflank-mailman (input) for mailman id 53162;
 Tue, 15 Dec 2020 12:21:04 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.92) (envelope-from
 <SRS0=tdgx=FT=xenbits.xen.org=gdunlap@srs-us1.protection.inumbo.net>)
 id 1kp9KC-0004tM-2d
 for xen-devel@lists.xen.org; Tue, 15 Dec 2020 12:21:04 +0000
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 1d23f9e1-ab82-4fdc-b89f-7f821d98b274;
 Tue, 15 Dec 2020 12:20:24 +0000 (UTC)
Received: from xenbits.xenproject.org ([104.239.192.120])
 by mail.xenproject.org with esmtp (Exim 4.92)
 (envelope-from <gdunlap@xenbits.xen.org>)
 id 1kp9JT-0005hR-Ll; Tue, 15 Dec 2020 12:20:19 +0000
Received: from gdunlap by xenbits.xenproject.org with local (Exim 4.92)
 (envelope-from <gdunlap@xenbits.xen.org>)
 id 1kp9JT-00072J-Kk; Tue, 15 Dec 2020 12:20:19 +0000
X-BeenThere: xen-devel@lists.xenproject.org
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Errors-To: xen-devel-bounces@lists.xenproject.org
Precedence: list
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>
X-Inumbo-ID: 1d23f9e1-ab82-4fdc-b89f-7f821d98b274
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=xen.org;
	s=20200302mail; h=Date:Message-Id:Subject:CC:From:To:MIME-Version:
	Content-Transfer-Encoding:Content-Type;
	bh=1bDBiyLhlk4nGk6n3SWFRgf//RkPkraAVoSImLu4VEI=; b=nmjV25fXYBtL58vhuMbdXuNH2x
	9YVHNzENv/A93yaYS3ATPtA5oyqnselZZP/dAWH4ZxuVtwxyUrvt1Bdk6/eXnxMCjs04ePEg91sTQ
	4sjw2audUgS50RCWdHLqdcmbbCBUaEA1GcjN+H22AIu8h9uyhsF1MeGpDfRtRZo7xg/U=;
Content-Type: multipart/mixed; boundary="=separator"; charset="utf-8"
Content-Transfer-Encoding: binary
MIME-Version: 1.0
X-Mailer: MIME-tools 5.509 (Entity 5.509)
To: xen-announce@lists.xen.org, xen-devel@lists.xen.org,
 xen-users@lists.xen.org, oss-security@lists.openwall.com
From: Xen.org security team <security@xen.org>
CC: Xen.org security team <security-team-members@xen.org>
Subject: Xen Security Advisory 325 v3 (CVE-2020-29483) - Xenstore: guests
 can disturb domain cleanup
Message-Id: <E1kp9JT-00072J-Kk@xenbits.xenproject.org>
Date: Tue, 15 Dec 2020 12:20:19 +0000

--=separator
Content-Type: text/plain; charset="utf-8"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

            Xen Security Advisory CVE-2020-29483 / XSA-325
                               version 3

              Xenstore: guests can disturb domain cleanup

UPDATES IN VERSION 3
====================

Public release.

ISSUE DESCRIPTION
=================

Xenstored and guests communicate via a shared memory page using a
specific protocol. When a guest violates this protocol, xenstored will
drop the connection to that guest.

Unfortunately this is done by just removing the guest from xenstored's
internal management, resulting in the same actions as if the guest had
been destroyed, including sending an @releaseDomain event.

@releaseDomain events do not say guest has been removed.  All watchers
of this event must look at the states of all guests to find the guest
which has been removed.  When an @releaseDomain is generated due to
domain xenstored protocol violation, As the guest is still running, so
the watchers will not react.

Later, when the guest is actually destroyed, xenstored will no longer
have it stored in its internal data base, so no further @releaseDomain
event will be sent. This can lead to a zombie domain; memory mappings
of that guest's memory will not be removed, due to the missing
event. This zombie domain will be cleaned up only after another domain
is destroyed, as that will trigger another @releaseDomain event.

If the device model of the guest which violated the Xenstore protocol
is running in a stub-domain, a use-after-free case could happen in
xenstored, after having removed the guest from its internal data base,
possibly resulting in a crash of xenstored.

IMPACT
======

A malicious guest can block resources of the host for a period after
its own death.

Guests with a stub domain device model can eventually crash xenstored,
resulting in a more serious denial of service (the prevention of any
further domain management operations).

VULNERABLE SYSTEMS
==================

All versions of Xen are affected.

Only the C variant of Xenstore is affected, the Ocaml variant is not
affected.

Only HVM guests with a stubdom device model can cause a serious DoS.

MITIGATION
==========

Using the Ocaml variant of Xenstore (oxenstored) avoids the issue;
Running HVM domains with a dom0 device model rather than a stubdom
device model will avoid the more serious DoS.

However, given the other vulnerabilities in both versions of xenstored
being reported at this time, changing xenstored implementation, or
switching to dom0 xenstored, is not a recommended approach to
mitigation of individual issues.

CREDITS
=======

This issue was discovered by Pawel Wieczorkiewicz of Amazon.

RESOLUTION
==========

Applying the appropriate attached patch resolves this issue.

Note that patches for released versions are generally prepared to
apply to the stable branches, and may not apply cleanly to the most
recent release tarball.  Downstreams are encouraged to update to the
tip of the stable branch before applying these patches.

xsa325.patch           xen-unstable
xsa325-4.14.patch      Xen 4.14 - 4.10

$ sha256sum xsa325*
29a81606e9c0e036dcc39b2a7e6ec0b1ce7d658972a368907b02d56f2aae3dc2  xsa325.meta
56e09d92fa3d623b2896fd6e6a08805514b2ff9b1cde526968be3925fda28705  xsa325.patch
702f0f4c20e685d2e23a9c1a31c0e0fda1824c9209bd8affca9dd3489dfbd23d  xsa325-4.14.patch
$

DEPLOYMENT DURING EMBARGO
=========================

Deployment of the patches and/or mitigations described above (or
others which are substantially similar) is permitted during the
embargo, even on public-facing systems with untrusted guest users and
administrators.

But: Distribution of updated software is prohibited (except to other
members of the predisclosure list).

Predisclosure list members who wish to deploy significantly different
patches and/or mitigations, please contact the Xen Project Security
Team.

(Note: this during-embargo deployment notice is retained in
post-embargo publicly released Xen Project advisories, even though it
is then no longer applicable.  This is to enable the community to have
oversight of the Xen Project Security Team's decisionmaking.)

For more information about permissible uses of embargoed information,
consult the Xen Project community's agreed Security Policy:
  http://www.xenproject.org/security-policy.html
-----BEGIN PGP SIGNATURE-----

iQFABAEBCAAqFiEEI+MiLBRfRHX6gGCng/4UyVfoK9kFAl/Yqd4MHHBncEB4ZW4u
b3JnAAoJEIP+FMlX6CvZ7AEH/0fHBNU0Sd9iVVcGmZvJblI3mKy9TA3Z8vcdiN7I
j0TXOQlmjp90WPC8nYo/XtsFpCx5dhg0yLX1Unxe1R0twvt2OrXWRZTa0dbVFcou
t8yq3lSRiOqzwNK186wzS2LSyAH7yit9CpWLGsXuL6WnocL84Hb3PSsJBP4nTZzm
dcol+h85SvfQ5S+aMUTPqxdm+uE9qoSAN6rJU2Fill3jCThpJSfRUy1vIz5CDYes
oD8Oq+H1sdfzCtDHGzgRveDqkHTr6rxCmlenxAI3UCshkhM6VJypoNQ4jQpS/yfN
nrim4XntIOdy1HR4UgnHRYcnFOnn2qs7dkIU449KVzs1KCg=
=83j/
-----END PGP SIGNATURE-----

--=separator
Content-Type: application/octet-stream; name="xsa325.meta"
Content-Disposition: attachment; filename="xsa325.meta"
Content-Transfer-Encoding: base64

ewogICJYU0EiOiAzMjUsCiAgIlN1cHBvcnRlZFZlcnNpb25zIjogWwogICAg
Im1hc3RlciIsCiAgICAiNC4xNCIsCiAgICAiNC4xMyIsCiAgICAiNC4xMiIs
CiAgICAiNC4xMSIsCiAgICAiNC4xMCIKICBdLAogICJUcmVlcyI6IFsKICAg
ICJ4ZW4iCiAgXSwKICAiUmVjaXBlcyI6IHsKICAgICI0LjEwIjogewogICAg
ICAiUmVjaXBlcyI6IHsKICAgICAgICAieGVuIjogewogICAgICAgICAgIlN0
YWJsZVJlZiI6ICIxZDcyZDk5MTVlZGZmMGRkNDFmNjAxYmJiMGIxZjgzYzAy
ZmYxNjg5IiwKICAgICAgICAgICJQcmVyZXFzIjogWwogICAgICAgICAgICAz
NTMsCiAgICAgICAgICAgIDExNSwKICAgICAgICAgICAgMzIyLAogICAgICAg
ICAgICAzMjMsCiAgICAgICAgICAgIDMyNAogICAgICAgICAgXSwKICAgICAg
ICAgICJQYXRjaGVzIjogWwogICAgICAgICAgICAieHNhMzI1LTQuMTQucGF0
Y2giCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAg
IjQuMTEiOiB7CiAgICAgICJSZWNpcGVzIjogewogICAgICAgICJ4ZW4iOiB7
CiAgICAgICAgICAiU3RhYmxlUmVmIjogIjQxYTgyMmMzOTI2MzUwZjI2OTE3
ZDc0N2M4ZGZlZDFjNDRhMmNmNDIiLAogICAgICAgICAgIlByZXJlcXMiOiBb
CiAgICAgICAgICAgIDM1MywKICAgICAgICAgICAgMTE1LAogICAgICAgICAg
ICAzMjIsCiAgICAgICAgICAgIDMyMywKICAgICAgICAgICAgMzI0CiAgICAg
ICAgICBdLAogICAgICAgICAgIlBhdGNoZXMiOiBbCiAgICAgICAgICAgICJ4
c2EzMjUtNC4xNC5wYXRjaCIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAg
IH0KICAgIH0sCiAgICAiNC4xMiI6IHsKICAgICAgIlJlY2lwZXMiOiB7CiAg
ICAgICAgInhlbiI6IHsKICAgICAgICAgICJTdGFibGVSZWYiOiAiODE0NWQz
OGI0ODAwOTI1NWEzMmFiODdhMDJlNDgxY2QwOWM4MTFmOSIsCiAgICAgICAg
ICAiUHJlcmVxcyI6IFsKICAgICAgICAgICAgMzUzLAogICAgICAgICAgICAx
MTUsCiAgICAgICAgICAgIDMyMiwKICAgICAgICAgICAgMzIzLAogICAgICAg
ICAgICAzMjQKICAgICAgICAgIF0sCiAgICAgICAgICAiUGF0Y2hlcyI6IFsK
ICAgICAgICAgICAgInhzYTMyNS00LjE0LnBhdGNoIgogICAgICAgICAgXQog
ICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICI0LjEzIjogewogICAgICAi
UmVjaXBlcyI6IHsKICAgICAgICAieGVuIjogewogICAgICAgICAgIlN0YWJs
ZVJlZiI6ICJiNTMwMjI3M2UyYzUxOTQwMTcyNDAwNDg2NjQ0NjM2ZjJmNGZj
NjRhIiwKICAgICAgICAgICJQcmVyZXFzIjogWwogICAgICAgICAgICAzNTMs
CiAgICAgICAgICAgIDExNSwKICAgICAgICAgICAgMzIyLAogICAgICAgICAg
ICAzMjMsCiAgICAgICAgICAgIDMyNAogICAgICAgICAgXSwKICAgICAgICAg
ICJQYXRjaGVzIjogWwogICAgICAgICAgICAieHNhMzI1LTQuMTQucGF0Y2gi
CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIjQu
MTQiOiB7CiAgICAgICJSZWNpcGVzIjogewogICAgICAgICJ4ZW4iOiB7CiAg
ICAgICAgICAiU3RhYmxlUmVmIjogIjFkMWQxZjUzOTE5NzY0NTZhNzlkYWFj
MGRjZmU3MTU3ZGExZTU0ZjciLAogICAgICAgICAgIlByZXJlcXMiOiBbCiAg
ICAgICAgICAgIDM1MywKICAgICAgICAgICAgMTE1LAogICAgICAgICAgICAz
MjIsCiAgICAgICAgICAgIDMyMywKICAgICAgICAgICAgMzI0CiAgICAgICAg
ICBdLAogICAgICAgICAgIlBhdGNoZXMiOiBbCiAgICAgICAgICAgICJ4c2Ez
MjUtNC4xNC5wYXRjaCIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0K
ICAgIH0sCiAgICAibWFzdGVyIjogewogICAgICAiUmVjaXBlcyI6IHsKICAg
ICAgICAieGVuIjogewogICAgICAgICAgIlN0YWJsZVJlZiI6ICIzYWU0Njlh
ZjhlNjgwZGYzMWVlY2QwYTJhYzZhODNiNThhZDdjZTUzIiwKICAgICAgICAg
ICJQcmVyZXFzIjogWwogICAgICAgICAgICAzNTMsCiAgICAgICAgICAgIDEx
NSwKICAgICAgICAgICAgMzIyLAogICAgICAgICAgICAzMjMsCiAgICAgICAg
ICAgIDMyNAogICAgICAgICAgXSwKICAgICAgICAgICJQYXRjaGVzIjogWwog
ICAgICAgICAgICAieHNhMzI1LnBhdGNoIgogICAgICAgICAgXQogICAgICAg
IH0KICAgICAgfQogICAgfQogIH0KfQ==

--=separator
Content-Type: application/octet-stream; name="xsa325.patch"
Content-Disposition: attachment; filename="xsa325.patch"
Content-Transfer-Encoding: base64

RnJvbTogSGFyc2hhIFNoYW1zdW5kYXJhIEhhdmFudXIgPGhhdmFudXJAYW1h
em9uLmNvbT4KU3ViamVjdDogdG9vbHMveGVuc3RvcmU6IFByZXNlcnZlIGJh
ZCBjbGllbnQgdW50aWwgdGhleSBhcmUgZGVzdHJveWVkCgpYZW5TdG9yZWQg
d2lsbCBraWxsIGFueSBjb25uZWN0aW9uIHRoYXQgaXQgdGhpbmtzIGhhcyBt
aXNiZWhhdmVkLAp0aGlzIGlzIGN1cnJlbnRseSBoYXBwZW5pbmcgaW4gdHdv
IHBsYWNlczoKICogSW4gYGhhbmRsZV9pbnB1dCgpYCBpZiB0aGUgc2FuaXR5
IGNoZWNrIG9uIHRoZSByaW5nIGFuZCB0aGUgbWVzc2FnZQogICBmYWlscy4K
ICogSW4gYGhhbmRsZV9vdXRwdXQoKWAgd2hlbiBmYWlsaW5nIHRvIHdyaXRl
IHRoZSByZXNwb25zZSBpbiB0aGUgcmluZy4KCkFzIHRoZSBkb21haW4gc3Ry
dWN0dXJlIGlzIGEgY2hpbGQgb2YgdGhlIGNvbm5lY3Rpb24sIFhlblN0b3Jl
ZCB3aWxsCmRlc3Ryb3kgaXRzIHZpZXcgb2YgdGhlIGRvbWFpbiB3aGVuIGtp
bGxpbmcgdGhlIGNvbm5lY3Rpb24uIFRoaXMgd2lsbApyZXN1bHQgaW4gc2Vu
ZGluZyBAcmVsZWFzZURvbWFpbiBldmVudCB0byBhbGwgdGhlIHdhdGNoZXJz
LgoKQXMgdGhlIHdhdGNoIGV2ZW50IGRvZXNuJ3QgY2Fycnkgd2hpY2ggZG9t
YWluIGhhcyBiZWVuIHJlbGVhc2VkLAp0aGUgd2F0Y2hlciAoc3VjaCBhcyBY
ZW5TdG9yZWQpIHdpbGwgZ2VuZXJhbGx5IGdvIHRocm91Z2ggdGhlIGxpc3Qg
b2YKZG9tYWlucyByZWdpc3RlcnMgYW5kIGNoZWNrIGlmIG9uZSBvZiB0aGVt
IGlzIHNodXR0aW5nIGRvd24vZHlpbmcuCkluIHRoZSBjYXNlIG9mIGEgY2xp
ZW50IG1pc2JlaGF2aW5nLCB0aGUgZG9tYWluIHdpbGwgbGlrZWx5IHRvIGJl
CnJ1bm5pbmcsIHNvIG5vIGFjdGlvbiB3aWxsIGJlIHBlcmZvcm1lZC4KCldo
ZW4gdGhlIGRvbWFpbiBpcyBlZmZlY3RpdmVseSBkZXN0cm95ZWQsIFhlblN0
b3JlZCB3aWxsIG5vdCBiZSBhd2FyZSBvZgp0aGUgZG9tYWluIGFueW1vcmUu
IFNvIHRoZSB3YXRjaCBldmVudCBpcyBub3QgZ29pbmcgdG8gYmUgc2VudC4K
QnkgY29uc2VxdWVuY2UsIHRoZSB3YXRjaGVycyBvZiB0aGUgZXZlbnQgd2ls
bCBub3QgcmVsZWFzZSBtYXBwaW5ncwp0aGV5IG1heSBoYXZlIG9uIHRoZSBk
b21haW4uIFRoaXMgd2lsbCByZXN1bHQgaW4gYSB6b21iaWUgZG9tYWluLgoK
SW4gb3JkZXIgdG8gc2VuZCBAcmVsZWFzZURvbWFpbiBldmVudCBhdCB0aGUg
Y29ycmVjdCB0aW1lLCB3ZSB3YW50CnRvIGtlZXAgdGhlIGRvbWFpbiBzdHJ1
Y3R1cmUgdW50aWwgdGhlIGRvbWFpbiBpcyBlZmZlY3RpdmVseQpzaHV0dGlu
Zy1kb3duL2R5aW5nLgoKV2UgYWxzbyB3YW50IHRvIGtlZXAgdGhlIGNvbm5l
Y3Rpb24gYXJvdW5kIHNvIHdlIGNvdWxkIHBvc3NpYmx5IHJldml2ZQp0aGUg
Y29ubmVjdGlvbiBpbiB0aGUgZnV0dXJlLgoKQSBuZXcgZmxhZyAnaXNfaWdu
b3JlZCcgaXMgYWRkZWQgdG8gbWFyayB3aGV0aGVyIGEgY29ubmVjdGlvbiBz
aG91bGQgYmUKaWdub3JlZCB3aGVuIGNoZWNraW5nIGlmIHRoZXJlIGFyZSB3
b3JrIHRvIGRvLiBBZGRpdGlvbmFsbHkgYW55CnRyYW5zYWN0aW9ucywgd2F0
Y2hlcywgYnVmZmVycyBhc3NvY2lhdGVkIHRvIHRoZSBjb25uZWN0aW9uIHdp
bGwgYmUKZnJlZWQgYXMgeW91IGNhbid0IGRvIG11Y2ggd2l0aCB0aGVtIChy
ZXN0YXJ0aW5nIHRoZSBjb25uZWN0aW9uIHdpbGwKbGlrZWx5IG5lZWQgYSBy
ZXNldCkuCgpBcyBhIHNpZGUgbm90ZSwgd2hlbiB0aGUgZGV2aWNlIG1vZGVs
IHdlcmUgcnVubmluZyBpbiBhIHN0dWJkb21haW4sIGEKZ3Vlc3Qgd291bGQg
aGF2ZSBiZWVuIGFibGUgdG8gaW50cm9kdWNlIGEgdXNlLWFmdGVyLWZyZWUg
YmVjYXVzZSB0aGVyZQppcyB0d28gcGFyZW50cyBmb3IgYSBndWVzdCBjb25u
ZWN0aW9uLgoKVGhpcyBpcyBYU0EtMzI1LgoKUmVwb3J0ZWQtYnk6IFBhd2Vs
IFdpZWN6b3JraWV3aWN6IDx3aXBhd2VsQGFtYXpvbi5kZT4KU2lnbmVkLW9m
Zi1ieTogSGFyc2hhIFNoYW1zdW5kYXJhIEhhdmFudXIgPGhhdmFudXJAYW1h
em9uLmNvbT4KU2lnbmVkLW9mZi1ieTogSnVsaWVuIEdyYWxsIDxqZ3JhbGxA
YW1hem9uLmNvbT4KUmV2aWV3ZWQtYnk6IEp1ZXJnZW4gR3Jvc3MgPGpncm9z
c0BzdXNlLmNvbT4KUmV2aWV3ZWQtYnk6IFBhdWwgRHVycmFudCA8cGF1bEB4
ZW4ub3JnPgoKZGlmZiAtLWdpdCBhL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3Jl
ZF9jb3JlLmMgYi90b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfY29yZS5jCmlu
ZGV4IGM5MjljYmJjM2IuLjc0NmExMjQ3YjMgMTAwNjQ0Ci0tLSBhL3Rvb2xz
L3hlbnN0b3JlL3hlbnN0b3JlZF9jb3JlLmMKKysrIGIvdG9vbHMveGVuc3Rv
cmUveGVuc3RvcmVkX2NvcmUuYwpAQCAtMTMzNyw2ICsxMzM3LDMyIEBAIHN0
YXRpYyBzdHJ1Y3QgewogCVtYU19ESVJFQ1RPUllfUEFSVF0gICAgPSB7ICJE
SVJFQ1RPUllfUEFSVCIsICAgIHNlbmRfZGlyZWN0b3J5X3BhcnQgfSwKIH07
CiAKKy8qCisgKiBLZWVwIHRoZSBjb25uZWN0aW9uIGFsaXZlIGJ1dCBzdG9w
IHByb2Nlc3NpbmcgYW55IG5ldyByZXF1ZXN0IG9yIHNlbmRpbmcKKyAqIHJl
cG9uc2UuIFRoaXMgaXMgdG8gYWxsb3cgc2VuZGluZyBAcmVsZWFzZURvbWFp
biB3YXRjaCBldmVudCBhdCB0aGUgY29ycmVjdAorICogbW9tZW50IGFuZC9v
ciB0byBhbGxvdyB0aGUgY29ubmVjdGlvbiB0byByZXN0YXJ0IChub3QgeWV0
IGltcGxlbWVudGVkKS4KKyAqCisgKiBBbGwgd2F0Y2hlcywgdHJhbnNhY3Rp
b25zLCBidWZmZXJzIHdpbGwgYmUgZnJlZWQuCisgKi8KK3N0YXRpYyB2b2lk
IGlnbm9yZV9jb25uZWN0aW9uKHN0cnVjdCBjb25uZWN0aW9uICpjb25uKQor
eworCXN0cnVjdCBidWZmZXJlZF9kYXRhICpvdXQsICp0bXA7CisKKwl0cmFj
ZSgiQ09OTiAlcCBpZ25vcmVkXG4iLCBjb25uKTsKKworCWNvbm4tPmlzX2ln
bm9yZWQgPSB0cnVlOworCWNvbm5fZGVsZXRlX2FsbF93YXRjaGVzKGNvbm4p
OworCWNvbm5fZGVsZXRlX2FsbF90cmFuc2FjdGlvbnMoY29ubik7CisKKwls
aXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUob3V0LCB0bXAsICZjb25uLT5vdXRf
bGlzdCwgbGlzdCkgeworCQlsaXN0X2RlbCgmb3V0LT5saXN0KTsKKwkJdGFs
bG9jX2ZyZWUob3V0KTsKKwl9CisKKwl0YWxsb2NfZnJlZShjb25uLT5pbik7
CisJY29ubi0+aW4gPSBOVUxMOworfQorCiBzdGF0aWMgY29uc3QgY2hhciAq
c29ja21zZ19zdHJpbmcoZW51bSB4c2Rfc29ja21zZ190eXBlIHR5cGUpCiB7
CiAJaWYgKCh1bnNpZ25lZCBpbnQpdHlwZSA8IEFSUkFZX1NJWkUod2lyZV9m
dW5jcykgJiYgd2lyZV9mdW5jc1t0eXBlXS5zdHIpCkBAIC0xMzk1LDggKzE0
MjEsMTAgQEAgc3RhdGljIHZvaWQgY29uc2lkZXJfbWVzc2FnZShzdHJ1Y3Qg
Y29ubmVjdGlvbiAqY29ubikKIAlhc3NlcnQoY29ubi0+aW4gPT0gTlVMTCk7
CiB9CiAKLS8qIEVycm9ycyBpbiByZWFkaW5nIG9yIGFsbG9jYXRpbmcgaGVy
ZSBtZWFuIHdlIGdldCBvdXQgb2Ygc3luYywgc28gd2UKLSAqIGRyb3AgdGhl
IHdob2xlIGNsaWVudCBjb25uZWN0aW9uLiAqLworLyoKKyAqIEVycm9ycyBp
biByZWFkaW5nIG9yIGFsbG9jYXRpbmcgaGVyZSBtZWFucyB3ZSBnZXQgb3V0
IG9mIHN5bmMsIHNvIHdlIG1hcmsKKyAqIHRoZSBjb25uZWN0aW9uIGFzIGln
bm9yZWQuCisgKi8KIHN0YXRpYyB2b2lkIGhhbmRsZV9pbnB1dChzdHJ1Y3Qg
Y29ubmVjdGlvbiAqY29ubikKIHsKIAlpbnQgYnl0ZXM7CkBAIC0xNDUzLDE0
ICsxNDgxLDE0IEBAIHN0YXRpYyB2b2lkIGhhbmRsZV9pbnB1dChzdHJ1Y3Qg
Y29ubmVjdGlvbiAqY29ubikKIAlyZXR1cm47CiAKIGJhZF9jbGllbnQ6Ci0J
LyogS2lsbCBpdC4gKi8KLQl0YWxsb2NfZnJlZShjb25uKTsKKwlpZ25vcmVf
Y29ubmVjdGlvbihjb25uKTsKIH0KIAogc3RhdGljIHZvaWQgaGFuZGxlX291
dHB1dChzdHJ1Y3QgY29ubmVjdGlvbiAqY29ubikKIHsKKwkvKiBJZ25vcmUg
dGhlIGNvbm5lY3Rpb24gaWYgYW4gZXJyb3Igb2NjdXJlZCAqLwogCWlmICgh
d3JpdGVfbWVzc2FnZXMoY29ubikpCi0JCXRhbGxvY19mcmVlKGNvbm4pOwor
CQlpZ25vcmVfY29ubmVjdGlvbihjb25uKTsKIH0KIAogc3RydWN0IGNvbm5l
Y3Rpb24gKm5ld19jb25uZWN0aW9uKGNvbm53cml0ZWZuX3QgKndyaXRlLCBj
b25ucmVhZGZuX3QgKnJlYWQpCkBAIC0xNDc1LDYgKzE1MDMsNyBAQCBzdHJ1
Y3QgY29ubmVjdGlvbiAqbmV3X2Nvbm5lY3Rpb24oY29ubndyaXRlZm5fdCAq
d3JpdGUsIGNvbm5yZWFkZm5fdCAqcmVhZCkKIAluZXctPnBvbGxmZF9pZHgg
PSAtMTsKIAluZXctPndyaXRlID0gd3JpdGU7CiAJbmV3LT5yZWFkID0gcmVh
ZDsKKwluZXctPmlzX2lnbm9yZWQgPSBmYWxzZTsKIAluZXctPnRyYW5zYWN0
aW9uX3N0YXJ0ZWQgPSAwOwogCUlOSVRfTElTVF9IRUFEKCZuZXctPm91dF9s
aXN0KTsKIAlJTklUX0xJU1RfSEVBRCgmbmV3LT53YXRjaGVzKTsKQEAgLTIx
MzYsOCArMjE2NSw5IEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICphcmd2
W10pCiAJCQkJCWlmIChmZHNbY29ubi0+cG9sbGZkX2lkeF0ucmV2ZW50cwog
CQkJCQkgICAgJiB+KFBPTExJTnxQT0xMT1VUKSkKIAkJCQkJCXRhbGxvY19m
cmVlKGNvbm4pOwotCQkJCQllbHNlIGlmIChmZHNbY29ubi0+cG9sbGZkX2lk
eF0ucmV2ZW50cwotCQkJCQkJICYgUE9MTElOKQorCQkJCQllbHNlIGlmICgo
ZmRzW2Nvbm4tPnBvbGxmZF9pZHhdLnJldmVudHMKKwkJCQkJCSAgJiBQT0xM
SU4pICYmCisJCQkJCQkgIWNvbm4tPmlzX2lnbm9yZWQpCiAJCQkJCQloYW5k
bGVfaW5wdXQoY29ubik7CiAJCQkJfQogCQkJCWlmICh0YWxsb2NfZnJlZShj
b25uKSA9PSAwKQpAQCAtMjE0OSw4ICsyMTc5LDkgQEAgaW50IG1haW4oaW50
IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAkJCQkJaWYgKGZkc1tjb25uLT5wb2xs
ZmRfaWR4XS5yZXZlbnRzCiAJCQkJCSAgICAmIH4oUE9MTElOfFBPTExPVVQp
KQogCQkJCQkJdGFsbG9jX2ZyZWUoY29ubik7Ci0JCQkJCWVsc2UgaWYgKGZk
c1tjb25uLT5wb2xsZmRfaWR4XS5yZXZlbnRzCi0JCQkJCQkgJiBQT0xMT1VU
KQorCQkJCQllbHNlIGlmICgoZmRzW2Nvbm4tPnBvbGxmZF9pZHhdLnJldmVu
dHMKKwkJCQkJCSAgJiBQT0xMT1VUKSAmJgorCQkJCQkJICFjb25uLT5pc19p
Z25vcmVkKQogCQkJCQkJaGFuZGxlX291dHB1dChjb25uKTsKIAkJCQl9CiAJ
CQkJaWYgKHRhbGxvY19mcmVlKGNvbm4pID09IDApCmRpZmYgLS1naXQgYS90
b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfY29yZS5oIGIvdG9vbHMveGVuc3Rv
cmUveGVuc3RvcmVkX2NvcmUuaAppbmRleCA2YzIxZDViYjlhLi40YzZjM2Q2
ZjIwIDEwMDY0NAotLS0gYS90b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfY29y
ZS5oCisrKyBiL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3JlZF9jb3JlLmgKQEAg
LTc3LDYgKzc3LDkgQEAgc3RydWN0IGNvbm5lY3Rpb24KIAkvKiBXaG8gYW0g
ST8gMCBmb3Igc29ja2V0IGNvbm5lY3Rpb25zLiAqLwogCXVuc2lnbmVkIGlu
dCBpZDsKIAorCS8qIElzIHRoaXMgY29ubmVjdGlvbiBpZ25vcmVkPyAqLwor
CWJvb2wgaXNfaWdub3JlZDsKKwogCS8qIEJ1ZmZlcmVkIGluY29taW5nIGRh
dGEuICovCiAJc3RydWN0IGJ1ZmZlcmVkX2RhdGEgKmluOwogCmRpZmYgLS1n
aXQgYS90b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfZG9tYWluLmMgYi90b29s
cy94ZW5zdG9yZS94ZW5zdG9yZWRfZG9tYWluLmMKaW5kZXggNzE2OWRhOTg1
MS4uN2QzNDhkNTdmMyAxMDA2NDQKLS0tIGEvdG9vbHMveGVuc3RvcmUveGVu
c3RvcmVkX2RvbWFpbi5jCisrKyBiL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3Jl
ZF9kb21haW4uYwpAQCAtMjg2LDYgKzI4NiwxMCBAQCBib29sIGRvbWFpbl9j
YW5fcmVhZChzdHJ1Y3QgY29ubmVjdGlvbiAqY29ubikKIAogCWlmIChkb21h
aW5faXNfdW5wcml2aWxlZ2VkKGNvbm4pICYmIGNvbm4tPmRvbWFpbi0+d3Js
X2NyZWRpdCA8IDApCiAJCXJldHVybiBmYWxzZTsKKworCWlmIChjb25uLT5p
c19pZ25vcmVkKQorCQlyZXR1cm4gZmFsc2U7CisKIAlyZXR1cm4gKGludGYt
PnJlcV9jb25zICE9IGludGYtPnJlcV9wcm9kKTsKIH0KIApAQCAtMzAzLDYg
KzMwNywxMCBAQCBib29sIGRvbWFpbl9pc191bnByaXZpbGVnZWQoc3RydWN0
IGNvbm5lY3Rpb24gKmNvbm4pCiBib29sIGRvbWFpbl9jYW5fd3JpdGUoc3Ry
dWN0IGNvbm5lY3Rpb24gKmNvbm4pCiB7CiAJc3RydWN0IHhlbnN0b3JlX2Rv
bWFpbl9pbnRlcmZhY2UgKmludGYgPSBjb25uLT5kb21haW4tPmludGVyZmFj
ZTsKKworCWlmIChjb25uLT5pc19pZ25vcmVkKQorCQlyZXR1cm4gZmFsc2U7
CisKIAlyZXR1cm4gKChpbnRmLT5yc3BfcHJvZCAtIGludGYtPnJzcF9jb25z
KSAhPSBYRU5TVE9SRV9SSU5HX1NJWkUpOwogfQogCg==

--=separator
Content-Type: application/octet-stream; name="xsa325-4.14.patch"
Content-Disposition: attachment; filename="xsa325-4.14.patch"
Content-Transfer-Encoding: base64

RnJvbTogSGFyc2hhIFNoYW1zdW5kYXJhIEhhdmFudXIgPGhhdmFudXJAYW1h
em9uLmNvbT4KU3ViamVjdDogdG9vbHMveGVuc3RvcmU6IFByZXNlcnZlIGJh
ZCBjbGllbnQgdW50aWwgdGhleSBhcmUgZGVzdHJveWVkCgpYZW5TdG9yZWQg
d2lsbCBraWxsIGFueSBjb25uZWN0aW9uIHRoYXQgaXQgdGhpbmtzIGhhcyBt
aXNiZWhhdmVkLAp0aGlzIGlzIGN1cnJlbnRseSBoYXBwZW5pbmcgaW4gdHdv
IHBsYWNlczoKICogSW4gYGhhbmRsZV9pbnB1dCgpYCBpZiB0aGUgc2FuaXR5
IGNoZWNrIG9uIHRoZSByaW5nIGFuZCB0aGUgbWVzc2FnZQogICBmYWlscy4K
ICogSW4gYGhhbmRsZV9vdXRwdXQoKWAgd2hlbiBmYWlsaW5nIHRvIHdyaXRl
IHRoZSByZXNwb25zZSBpbiB0aGUgcmluZy4KCkFzIHRoZSBkb21haW4gc3Ry
dWN0dXJlIGlzIGEgY2hpbGQgb2YgdGhlIGNvbm5lY3Rpb24sIFhlblN0b3Jl
ZCB3aWxsCmRlc3Ryb3kgaXRzIHZpZXcgb2YgdGhlIGRvbWFpbiB3aGVuIGtp
bGxpbmcgdGhlIGNvbm5lY3Rpb24uIFRoaXMgd2lsbApyZXN1bHQgaW4gc2Vu
ZGluZyBAcmVsZWFzZURvbWFpbiBldmVudCB0byBhbGwgdGhlIHdhdGNoZXJz
LgoKQXMgdGhlIHdhdGNoIGV2ZW50IGRvZXNuJ3QgY2Fycnkgd2hpY2ggZG9t
YWluIGhhcyBiZWVuIHJlbGVhc2VkLAp0aGUgd2F0Y2hlciAoc3VjaCBhcyBY
ZW5TdG9yZWQpIHdpbGwgZ2VuZXJhbGx5IGdvIHRocm91Z2ggdGhlIGxpc3Qg
b2YKZG9tYWlucyByZWdpc3RlcnMgYW5kIGNoZWNrIGlmIG9uZSBvZiB0aGVt
IGlzIHNodXR0aW5nIGRvd24vZHlpbmcuCkluIHRoZSBjYXNlIG9mIGEgY2xp
ZW50IG1pc2JlaGF2aW5nLCB0aGUgZG9tYWluIHdpbGwgbGlrZWx5IHRvIGJl
CnJ1bm5pbmcsIHNvIG5vIGFjdGlvbiB3aWxsIGJlIHBlcmZvcm1lZC4KCldo
ZW4gdGhlIGRvbWFpbiBpcyBlZmZlY3RpdmVseSBkZXN0cm95ZWQsIFhlblN0
b3JlZCB3aWxsIG5vdCBiZSBhd2FyZSBvZgp0aGUgZG9tYWluIGFueW1vcmUu
IFNvIHRoZSB3YXRjaCBldmVudCBpcyBub3QgZ29pbmcgdG8gYmUgc2VudC4K
QnkgY29uc2VxdWVuY2UsIHRoZSB3YXRjaGVycyBvZiB0aGUgZXZlbnQgd2ls
bCBub3QgcmVsZWFzZSBtYXBwaW5ncwp0aGV5IG1heSBoYXZlIG9uIHRoZSBk
b21haW4uIFRoaXMgd2lsbCByZXN1bHQgaW4gYSB6b21iaWUgZG9tYWluLgoK
SW4gb3JkZXIgdG8gc2VuZCBAcmVsZWFzZURvbWFpbiBldmVudCBhdCB0aGUg
Y29ycmVjdCB0aW1lLCB3ZSB3YW50CnRvIGtlZXAgdGhlIGRvbWFpbiBzdHJ1
Y3R1cmUgdW50aWwgdGhlIGRvbWFpbiBpcyBlZmZlY3RpdmVseQpzaHV0dGlu
Zy1kb3duL2R5aW5nLgoKV2UgYWxzbyB3YW50IHRvIGtlZXAgdGhlIGNvbm5l
Y3Rpb24gYXJvdW5kIHNvIHdlIGNvdWxkIHBvc3NpYmx5IHJldml2ZQp0aGUg
Y29ubmVjdGlvbiBpbiB0aGUgZnV0dXJlLgoKQSBuZXcgZmxhZyAnaXNfaWdu
b3JlZCcgaXMgYWRkZWQgdG8gbWFyayB3aGV0aGVyIGEgY29ubmVjdGlvbiBz
aG91bGQgYmUKaWdub3JlZCB3aGVuIGNoZWNraW5nIGlmIHRoZXJlIGFyZSB3
b3JrIHRvIGRvLiBBZGRpdGlvbmFsbHkgYW55CnRyYW5zYWN0aW9ucywgd2F0
Y2hlcywgYnVmZmVycyBhc3NvY2lhdGVkIHRvIHRoZSBjb25uZWN0aW9uIHdp
bGwgYmUKZnJlZWQgYXMgeW91IGNhbid0IGRvIG11Y2ggd2l0aCB0aGVtIChy
ZXN0YXJ0aW5nIHRoZSBjb25uZWN0aW9uIHdpbGwKbGlrZWx5IG5lZWQgYSBy
ZXNldCkuCgpBcyBhIHNpZGUgbm90ZSwgd2hlbiB0aGUgZGV2aWNlIG1vZGVs
IHdlcmUgcnVubmluZyBpbiBhIHN0dWJkb21haW4sIGEKZ3Vlc3Qgd291bGQg
aGF2ZSBiZWVuIGFibGUgdG8gaW50cm9kdWNlIGEgdXNlLWFmdGVyLWZyZWUg
YmVjYXVzZSB0aGVyZQppcyB0d28gcGFyZW50cyBmb3IgYSBndWVzdCBjb25u
ZWN0aW9uLgoKVGhpcyBpcyBYU0EtMzI1LgoKUmVwb3J0ZWQtYnk6IFBhd2Vs
IFdpZWN6b3JraWV3aWN6IDx3aXBhd2VsQGFtYXpvbi5kZT4KU2lnbmVkLW9m
Zi1ieTogSGFyc2hhIFNoYW1zdW5kYXJhIEhhdmFudXIgPGhhdmFudXJAYW1h
em9uLmNvbT4KU2lnbmVkLW9mZi1ieTogSnVsaWVuIEdyYWxsIDxqZ3JhbGxA
YW1hem9uLmNvbT4KUmV2aWV3ZWQtYnk6IEp1ZXJnZW4gR3Jvc3MgPGpncm9z
c0BzdXNlLmNvbT4KUmV2aWV3ZWQtYnk6IFBhdWwgRHVycmFudCA8cGF1bEB4
ZW4ub3JnPgoKZGlmZiAtLWdpdCBhL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3Jl
ZF9jb3JlLmMgYi90b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfY29yZS5jCmlu
ZGV4IGFmM2QxNzAwNGIzZi4uMjdkOGYxNWI2Yjc2IDEwMDY0NAotLS0gYS90
b29scy94ZW5zdG9yZS94ZW5zdG9yZWRfY29yZS5jCisrKyBiL3Rvb2xzL3hl
bnN0b3JlL3hlbnN0b3JlZF9jb3JlLmMKQEAgLTEzNTUsNiArMTM1NSwzMiBA
QCBzdGF0aWMgc3RydWN0IHsKIAlbWFNfRElSRUNUT1JZX1BBUlRdICAgID0g
eyAiRElSRUNUT1JZX1BBUlQiLCAgICBzZW5kX2RpcmVjdG9yeV9wYXJ0IH0s
CiB9OwogCisvKgorICogS2VlcCB0aGUgY29ubmVjdGlvbiBhbGl2ZSBidXQg
c3RvcCBwcm9jZXNzaW5nIGFueSBuZXcgcmVxdWVzdCBvciBzZW5kaW5nCisg
KiByZXBvbnNlLiBUaGlzIGlzIHRvIGFsbG93IHNlbmRpbmcgQHJlbGVhc2VE
b21haW4gd2F0Y2ggZXZlbnQgYXQgdGhlIGNvcnJlY3QKKyAqIG1vbWVudCBh
bmQvb3IgdG8gYWxsb3cgdGhlIGNvbm5lY3Rpb24gdG8gcmVzdGFydCAobm90
IHlldCBpbXBsZW1lbnRlZCkuCisgKgorICogQWxsIHdhdGNoZXMsIHRyYW5z
YWN0aW9ucywgYnVmZmVycyB3aWxsIGJlIGZyZWVkLgorICovCitzdGF0aWMg
dm9pZCBpZ25vcmVfY29ubmVjdGlvbihzdHJ1Y3QgY29ubmVjdGlvbiAqY29u
bikKK3sKKwlzdHJ1Y3QgYnVmZmVyZWRfZGF0YSAqb3V0LCAqdG1wOworCisJ
dHJhY2UoIkNPTk4gJXAgaWdub3JlZFxuIiwgY29ubik7CisKKwljb25uLT5p
c19pZ25vcmVkID0gdHJ1ZTsKKwljb25uX2RlbGV0ZV9hbGxfd2F0Y2hlcyhj
b25uKTsKKwljb25uX2RlbGV0ZV9hbGxfdHJhbnNhY3Rpb25zKGNvbm4pOwor
CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKG91dCwgdG1wLCAmY29ubi0+
b3V0X2xpc3QsIGxpc3QpIHsKKwkJbGlzdF9kZWwoJm91dC0+bGlzdCk7CisJ
CXRhbGxvY19mcmVlKG91dCk7CisJfQorCisJdGFsbG9jX2ZyZWUoY29ubi0+
aW4pOworCWNvbm4tPmluID0gTlVMTDsKK30KKwogc3RhdGljIGNvbnN0IGNo
YXIgKnNvY2ttc2dfc3RyaW5nKGVudW0geHNkX3NvY2ttc2dfdHlwZSB0eXBl
KQogewogCWlmICgodW5zaWduZWQgaW50KXR5cGUgPCBBUlJBWV9TSVpFKHdp
cmVfZnVuY3MpICYmIHdpcmVfZnVuY3NbdHlwZV0uc3RyKQpAQCAtMTQxMyw4
ICsxNDM5LDEwIEBAIHN0YXRpYyB2b2lkIGNvbnNpZGVyX21lc3NhZ2Uoc3Ry
dWN0IGNvbm5lY3Rpb24gKmNvbm4pCiAJYXNzZXJ0KGNvbm4tPmluID09IE5V
TEwpOwogfQogCi0vKiBFcnJvcnMgaW4gcmVhZGluZyBvciBhbGxvY2F0aW5n
IGhlcmUgbWVhbiB3ZSBnZXQgb3V0IG9mIHN5bmMsIHNvIHdlCi0gKiBkcm9w
IHRoZSB3aG9sZSBjbGllbnQgY29ubmVjdGlvbi4gKi8KKy8qCisgKiBFcnJv
cnMgaW4gcmVhZGluZyBvciBhbGxvY2F0aW5nIGhlcmUgbWVhbnMgd2UgZ2V0
IG91dCBvZiBzeW5jLCBzbyB3ZSBtYXJrCisgKiB0aGUgY29ubmVjdGlvbiBh
cyBpZ25vcmVkLgorICovCiBzdGF0aWMgdm9pZCBoYW5kbGVfaW5wdXQoc3Ry
dWN0IGNvbm5lY3Rpb24gKmNvbm4pCiB7CiAJaW50IGJ5dGVzOwpAQCAtMTQ3
MSwxNCArMTQ5OSwxNCBAQCBzdGF0aWMgdm9pZCBoYW5kbGVfaW5wdXQoc3Ry
dWN0IGNvbm5lY3Rpb24gKmNvbm4pCiAJcmV0dXJuOwogCiBiYWRfY2xpZW50
OgotCS8qIEtpbGwgaXQuICovCi0JdGFsbG9jX2ZyZWUoY29ubik7CisJaWdu
b3JlX2Nvbm5lY3Rpb24oY29ubik7CiB9CiAKIHN0YXRpYyB2b2lkIGhhbmRs
ZV9vdXRwdXQoc3RydWN0IGNvbm5lY3Rpb24gKmNvbm4pCiB7CisJLyogSWdu
b3JlIHRoZSBjb25uZWN0aW9uIGlmIGFuIGVycm9yIG9jY3VyZWQgKi8KIAlp
ZiAoIXdyaXRlX21lc3NhZ2VzKGNvbm4pKQotCQl0YWxsb2NfZnJlZShjb25u
KTsKKwkJaWdub3JlX2Nvbm5lY3Rpb24oY29ubik7CiB9CiAKIHN0cnVjdCBj
b25uZWN0aW9uICpuZXdfY29ubmVjdGlvbihjb25ud3JpdGVmbl90ICp3cml0
ZSwgY29ubnJlYWRmbl90ICpyZWFkKQpAQCAtMTQ5NCw2ICsxNTIyLDcgQEAg
c3RydWN0IGNvbm5lY3Rpb24gKm5ld19jb25uZWN0aW9uKGNvbm53cml0ZWZu
X3QgKndyaXRlLCBjb25ucmVhZGZuX3QgKnJlYWQpCiAJbmV3LT53cml0ZSA9
IHdyaXRlOwogCW5ldy0+cmVhZCA9IHJlYWQ7CiAJbmV3LT5jYW5fd3JpdGUg
PSB0cnVlOworCW5ldy0+aXNfaWdub3JlZCA9IGZhbHNlOwogCW5ldy0+dHJh
bnNhY3Rpb25fc3RhcnRlZCA9IDA7CiAJSU5JVF9MSVNUX0hFQUQoJm5ldy0+
b3V0X2xpc3QpOwogCUlOSVRfTElTVF9IRUFEKCZuZXctPndhdGNoZXMpOwpA
QCAtMjE4Niw4ICsyMjE1LDkgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIg
KmFyZ3ZbXSkKIAkJCQkJaWYgKGZkc1tjb25uLT5wb2xsZmRfaWR4XS5yZXZl
bnRzCiAJCQkJCSAgICAmIH4oUE9MTElOfFBPTExPVVQpKQogCQkJCQkJdGFs
bG9jX2ZyZWUoY29ubik7Ci0JCQkJCWVsc2UgaWYgKGZkc1tjb25uLT5wb2xs
ZmRfaWR4XS5yZXZlbnRzCi0JCQkJCQkgJiBQT0xMSU4pCisJCQkJCWVsc2Ug
aWYgKChmZHNbY29ubi0+cG9sbGZkX2lkeF0ucmV2ZW50cworCQkJCQkJICAm
IFBPTExJTikgJiYKKwkJCQkJCSAhY29ubi0+aXNfaWdub3JlZCkKIAkJCQkJ
CWhhbmRsZV9pbnB1dChjb25uKTsKIAkJCQl9CiAJCQkJaWYgKHRhbGxvY19m
cmVlKGNvbm4pID09IDApCkBAIC0yMTk5LDggKzIyMjksOSBAQCBpbnQgbWFp
bihpbnQgYXJnYywgY2hhciAqYXJndltdKQogCQkJCQlpZiAoZmRzW2Nvbm4t
PnBvbGxmZF9pZHhdLnJldmVudHMKIAkJCQkJICAgICYgfihQT0xMSU58UE9M
TE9VVCkpCiAJCQkJCQl0YWxsb2NfZnJlZShjb25uKTsKLQkJCQkJZWxzZSBp
ZiAoZmRzW2Nvbm4tPnBvbGxmZF9pZHhdLnJldmVudHMKLQkJCQkJCSAmIFBP
TExPVVQpCisJCQkJCWVsc2UgaWYgKChmZHNbY29ubi0+cG9sbGZkX2lkeF0u
cmV2ZW50cworCQkJCQkJICAmIFBPTExPVVQpICYmCisJCQkJCQkgIWNvbm4t
PmlzX2lnbm9yZWQpCiAJCQkJCQloYW5kbGVfb3V0cHV0KGNvbm4pOwogCQkJ
CX0KIAkJCQlpZiAodGFsbG9jX2ZyZWUoY29ubikgPT0gMCkKZGlmZiAtLWdp
dCBhL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3JlZF9jb3JlLmggYi90b29scy94
ZW5zdG9yZS94ZW5zdG9yZWRfY29yZS5oCmluZGV4IGViMTliNzFmNWY0Ni4u
MTk2YTZmZDJiMGJlIDEwMDY0NAotLS0gYS90b29scy94ZW5zdG9yZS94ZW5z
dG9yZWRfY29yZS5oCisrKyBiL3Rvb2xzL3hlbnN0b3JlL3hlbnN0b3JlZF9j
b3JlLmgKQEAgLTgwLDYgKzgwLDkgQEAgc3RydWN0IGNvbm5lY3Rpb24KIAkv
KiBJcyB0aGlzIGEgcmVhZC1vbmx5IGNvbm5lY3Rpb24/ICovCiAJYm9vbCBj
YW5fd3JpdGU7CiAKKwkvKiBJcyB0aGlzIGNvbm5lY3Rpb24gaWdub3JlZD8g
Ki8KKwlib29sIGlzX2lnbm9yZWQ7CisKIAkvKiBCdWZmZXJlZCBpbmNvbWlu
ZyBkYXRhLiAqLwogCXN0cnVjdCBidWZmZXJlZF9kYXRhICppbjsKIApkaWZm
IC0tZ2l0IGEvdG9vbHMveGVuc3RvcmUveGVuc3RvcmVkX2RvbWFpbi5jIGIv
dG9vbHMveGVuc3RvcmUveGVuc3RvcmVkX2RvbWFpbi5jCmluZGV4IGRjNjM1
ZTliZTMwYy4uZDVlMWUzZTlkNDJkIDEwMDY0NAotLS0gYS90b29scy94ZW5z
dG9yZS94ZW5zdG9yZWRfZG9tYWluLmMKKysrIGIvdG9vbHMveGVuc3RvcmUv
eGVuc3RvcmVkX2RvbWFpbi5jCkBAIC0yODYsNiArMjg2LDEwIEBAIGJvb2wg
ZG9tYWluX2Nhbl9yZWFkKHN0cnVjdCBjb25uZWN0aW9uICpjb25uKQogCiAJ
aWYgKGRvbWFpbl9pc191bnByaXZpbGVnZWQoY29ubikgJiYgY29ubi0+ZG9t
YWluLT53cmxfY3JlZGl0IDwgMCkKIAkJcmV0dXJuIGZhbHNlOworCisJaWYg
KGNvbm4tPmlzX2lnbm9yZWQpCisJCXJldHVybiBmYWxzZTsKKwogCXJldHVy
biAoaW50Zi0+cmVxX2NvbnMgIT0gaW50Zi0+cmVxX3Byb2QpOwogfQogCkBA
IC0zMDMsNiArMzA3LDEwIEBAIGJvb2wgZG9tYWluX2lzX3VucHJpdmlsZWdl
ZChzdHJ1Y3QgY29ubmVjdGlvbiAqY29ubikKIGJvb2wgZG9tYWluX2Nhbl93
cml0ZShzdHJ1Y3QgY29ubmVjdGlvbiAqY29ubikKIHsKIAlzdHJ1Y3QgeGVu
c3RvcmVfZG9tYWluX2ludGVyZmFjZSAqaW50ZiA9IGNvbm4tPmRvbWFpbi0+
aW50ZXJmYWNlOworCisJaWYgKGNvbm4tPmlzX2lnbm9yZWQpCisJCXJldHVy
biBmYWxzZTsKKwogCXJldHVybiAoKGludGYtPnJzcF9wcm9kIC0gaW50Zi0+
cnNwX2NvbnMpICE9IFhFTlNUT1JFX1JJTkdfU0laRSk7CiB9CiAKLS0gCjIu
MTcuMQoK

--=separator--


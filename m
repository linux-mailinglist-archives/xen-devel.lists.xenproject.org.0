Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 19AA3144E2
	for <lists+xen-devel@lfdr.de>; Mon,  6 May 2019 09:02:14 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hNXam-0005aM-D0; Mon, 06 May 2019 06:59:16 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=XZcu=TG=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1hNXak-0005Yn-U2
 for xen-devel@lists.xenproject.org; Mon, 06 May 2019 06:59:14 +0000
X-Inumbo-ID: 212aa696-6fcc-11e9-bf18-97dfa072d23c
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 212aa696-6fcc-11e9-bf18-97dfa072d23c;
 Mon, 06 May 2019 06:56:53 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 27077AECD;
 Mon,  6 May 2019 06:56:51 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: xen-devel@lists.xenproject.org
Date: Mon,  6 May 2019 08:56:08 +0200
Message-Id: <20190506065644.7415-10-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190506065644.7415-1-jgross@suse.com>
References: <20190506065644.7415-1-jgross@suse.com>
Subject: [Xen-devel] [PATCH RFC V2 09/45] xen/sched: move per cpu scheduler
 private data into struct sched_resource
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, Tim Deegan <tim@xen.org>,
 Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wei.liu2@citrix.com>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <george.dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>,
 Robert VanVossen <robert.vanvossen@dornerworks.com>,
 Dario Faggioli <dfaggioli@suse.com>, Julien Grall <julien.grall@arm.com>,
 Josh Whitehead <josh.whitehead@dornerworks.com>,
 Meng Xu <mengxu@cis.upenn.edu>, Jan Beulich <jbeulich@suse.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhpcyBwcmVwYXJlcyBzdXBwb3J0IG9mIGxhcmdlciBzY2hlZHVsaW5nIGdyYW51bGFyaXRpZXMs
IGUuZy4gY29yZQpzY2hlZHVsaW5nLgoKU2lnbmVkLW9mZi1ieTogSnVlcmdlbiBHcm9zcyA8amdy
b3NzQHN1c2UuY29tPgotLS0KIHhlbi9jb21tb24vc2NoZWRfYXJpbmM2NTMuYyAgIHwgIDYgKyst
LS0KIHhlbi9jb21tb24vc2NoZWRfY3JlZGl0LmMgICAgIHwgMTQgKysrKystLS0tLS0KIHhlbi9j
b21tb24vc2NoZWRfY3JlZGl0Mi5jICAgIHwgMjQgKysrKysrKysrLS0tLS0tLS0tLQogeGVuL2Nv
bW1vbi9zY2hlZF9udWxsLmMgICAgICAgfCAgOCArKystLS0tCiB4ZW4vY29tbW9uL3NjaGVkX3J0
LmMgICAgICAgICB8IDEyICsrKysrLS0tLS0KIHhlbi9jb21tb24vc2NoZWR1bGUuYyAgICAgICAg
IHwgNTYgKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogeGVuL2lu
Y2x1ZGUvYXNtLXg4Ni9jcHVpZGxlLmggfCAgMiArLQogeGVuL2luY2x1ZGUveGVuL3NjaGVkLWlm
LmggICAgfCAyMCArKysrKysrLS0tLS0tLS0tCiA4IGZpbGVzIGNoYW5nZWQsIDY4IGluc2VydGlv
bnMoKyksIDc0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3hlbi9jb21tb24vc2NoZWRfYXJp
bmM2NTMuYyBiL3hlbi9jb21tb24vc2NoZWRfYXJpbmM2NTMuYwppbmRleCA1NzAxYmFmMzM3Li45
ZGMxZmY2YTczIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkX2FyaW5jNjUzLmMKKysrIGIv
eGVuL2NvbW1vbi9zY2hlZF9hcmluYzY1My5jCkBAIC00NzUsNyArNDc1LDcgQEAgYTY1M3NjaGVk
X2l0ZW1fc2xlZXAoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCBzdHJ1Y3Qgc2NoZWRfaXRl
bSAqaXRlbSkKICAgICAgKiBJZiB0aGUgVkNQVSBiZWluZyBwdXQgdG8gc2xlZXAgaXMgdGhlIHNh
bWUgb25lIHRoYXQgaXMgY3VycmVudGx5CiAgICAgICogcnVubmluZywgcmFpc2UgYSBzb2Z0aXJx
IHRvIGludm9rZSB0aGUgc2NoZWR1bGVyIHRvIHN3aXRjaCBkb21haW5zLgogICAgICAqLwotICAg
IGlmICggcGVyX2NwdShzY2hlZHVsZV9kYXRhLCB2Yy0+cHJvY2Vzc29yKS5jdXJyID09IGl0ZW0g
KQorICAgIGlmICggcGVyX2NwdShzY2hlZF9yZXMsIHZjLT5wcm9jZXNzb3IpLT5jdXJyID09IGl0
ZW0gKQogICAgICAgICBjcHVfcmFpc2Vfc29mdGlycSh2Yy0+cHJvY2Vzc29yLCBTQ0hFRFVMRV9T
T0ZUSVJRKTsKIH0KIApAQCAtNjQyLDcgKzY0Miw3IEBAIHN0YXRpYyB2b2lkCiBhNjUzX3N3aXRj
aF9zY2hlZChzdHJ1Y3Qgc2NoZWR1bGVyICpuZXdfb3BzLCB1bnNpZ25lZCBpbnQgY3B1LAogICAg
ICAgICAgICAgICAgICAgdm9pZCAqcGRhdGEsIHZvaWQgKnZkYXRhKQogewotICAgIHN0cnVjdCBz
Y2hlZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSk7CisgICAgc3Ry
dWN0IHNjaGVkX3Jlc291cmNlICpzZCA9IHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpOwogICAgIGFy
aW5jNjUzX3ZjcHVfdCAqc3ZjID0gdmRhdGE7CiAKICAgICBBU1NFUlQoIXBkYXRhICYmIHN2YyAm
JiBpc19pZGxlX3ZjcHUoc3ZjLT52YykpOwpAQCAtNjUwLDcgKzY1MCw3IEBAIGE2NTNfc3dpdGNo
X3NjaGVkKHN0cnVjdCBzY2hlZHVsZXIgKm5ld19vcHMsIHVuc2lnbmVkIGludCBjcHUsCiAgICAg
aWRsZV92Y3B1W2NwdV0tPnNjaGVkX2l0ZW0tPnByaXYgPSB2ZGF0YTsKIAogICAgIHBlcl9jcHUo
c2NoZWR1bGVyLCBjcHUpID0gbmV3X29wczsKLSAgICBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNw
dSkuc2NoZWRfcHJpdiA9IE5VTEw7IC8qIG5vIHBkYXRhICovCisgICAgcGVyX2NwdShzY2hlZF9y
ZXMsIGNwdSktPnNjaGVkX3ByaXYgPSBOVUxMOyAvKiBubyBwZGF0YSAqLwogCiAgICAgLyoKICAg
ICAgKiAoUmU/KXJvdXRlIHRoZSBsb2NrIHRvIGl0cyBkZWZhdWx0IGxvY2F0aW9uLiBXZSBhY3R1
YWxseSBkbyBub3QgdXNlCmRpZmYgLS1naXQgYS94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdC5jIGIv
eGVuL2NvbW1vbi9zY2hlZF9jcmVkaXQuYwppbmRleCA2NTUyZDRjMDg3Li5lODM2OWIzNjQ4IDEw
MDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdC5jCisrKyBiL3hlbi9jb21tb24vc2No
ZWRfY3JlZGl0LmMKQEAgLTgyLDcgKzgyLDcgQEAKICNkZWZpbmUgQ1NDSEVEX1BSSVYoX29wcykg
ICBcCiAgICAgKChzdHJ1Y3QgY3NjaGVkX3ByaXZhdGUgKikoKF9vcHMpLT5zY2hlZF9kYXRhKSkK
ICNkZWZpbmUgQ1NDSEVEX1BDUFUoX2MpICAgICBcCi0gICAgKChzdHJ1Y3QgY3NjaGVkX3BjcHUg
KilwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIF9jKS5zY2hlZF9wcml2KQorICAgICgoc3RydWN0IGNz
Y2hlZF9wY3B1ICopcGVyX2NwdShzY2hlZF9yZXMsIF9jKS0+c2NoZWRfcHJpdikKICNkZWZpbmUg
Q1NDSEVEX0lURU0oaXRlbSkgICAoKHN0cnVjdCBjc2NoZWRfaXRlbSAqKSAoaXRlbSktPnByaXYp
CiAjZGVmaW5lIENTQ0hFRF9ET00oX2RvbSkgICAgKChzdHJ1Y3QgY3NjaGVkX2RvbSAqKSAoX2Rv
bSktPnNjaGVkX3ByaXYpCiAjZGVmaW5lIFJVTlEoX2NwdSkgICAgICAgICAgKCYoQ1NDSEVEX1BD
UFUoX2NwdSktPnJ1bnEpKQpAQCAtMjQ4LDcgKzI0OCw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbF90
IGlzX3J1bnFfaWRsZSh1bnNpZ25lZCBpbnQgY3B1KQogICAgIC8qCiAgICAgICogV2UncmUgcGVl
a2luZyBhdCBjcHUncyBydW5xLCB3ZSBtdXN0IGhvbGQgdGhlIHByb3BlciBsb2NrLgogICAgICAq
LwotICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSku
c2NoZWR1bGVfbG9jaykpOworICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVk
X3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jaykpOwogCiAgICAgcmV0dXJuIGxpc3RfZW1wdHkoUlVO
UShjcHUpKSB8fAogICAgICAgICAgICBpc19pZGxlX3ZjcHUoX19ydW5xX2VsZW0oUlVOUShjcHUp
LT5uZXh0KS0+dmNwdSk7CkBAIC0yNTcsNyArMjU3LDcgQEAgc3RhdGljIGlubGluZSBib29sX3Qg
aXNfcnVucV9pZGxlKHVuc2lnbmVkIGludCBjcHUpCiBzdGF0aWMgaW5saW5lIHZvaWQKIGluY19u
cl9ydW5uYWJsZSh1bnNpZ25lZCBpbnQgY3B1KQogewotICAgIEFTU0VSVChzcGluX2lzX2xvY2tl
ZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1bGVfbG9jaykpOworICAgIEFTU0VS
VChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkX3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jaykp
OwogICAgIENTQ0hFRF9QQ1BVKGNwdSktPm5yX3J1bm5hYmxlKys7CiAKIH0KQEAgLTI2NSw3ICsy
NjUsNyBAQCBpbmNfbnJfcnVubmFibGUodW5zaWduZWQgaW50IGNwdSkKIHN0YXRpYyBpbmxpbmUg
dm9pZAogZGVjX25yX3J1bm5hYmxlKHVuc2lnbmVkIGludCBjcHUpCiB7Ci0gICAgQVNTRVJUKHNw
aW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KS5zY2hlZHVsZV9sb2NrKSk7
CisgICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hl
ZHVsZV9sb2NrKSk7CiAgICAgQVNTRVJUKENTQ0hFRF9QQ1BVKGNwdSktPm5yX3J1bm5hYmxlID49
IDEpOwogICAgIENTQ0hFRF9QQ1BVKGNwdSktPm5yX3J1bm5hYmxlLS07CiB9CkBAIC02MTUsNyAr
NjE1LDcgQEAgY3NjaGVkX2luaXRfcGRhdGEoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCB2
b2lkICpwZGF0YSwgaW50IGNwdSkKIHsKICAgICB1bnNpZ25lZCBsb25nIGZsYWdzOwogICAgIHN0
cnVjdCBjc2NoZWRfcHJpdmF0ZSAqcHJ2ID0gQ1NDSEVEX1BSSVYob3BzKTsKLSAgICBzdHJ1Y3Qg
c2NoZWR1bGVfZGF0YSAqc2QgPSAmcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBjcHUpOworICAgIHN0
cnVjdCBzY2hlZF9yZXNvdXJjZSAqc2QgPSBwZXJfY3B1KHNjaGVkX3JlcywgY3B1KTsKIAogICAg
IC8qCiAgICAgICogVGhpcyBpcyBjYWxsZWQgZWl0aGVyIGR1cmluZyBkdXJpbmcgYm9vdCwgcmVz
dW1lIG9yIGhvdHBsdWcsIGluCkBAIC02MzUsNyArNjM1LDcgQEAgc3RhdGljIHZvaWQKIGNzY2hl
ZF9zd2l0Y2hfc2NoZWQoc3RydWN0IHNjaGVkdWxlciAqbmV3X29wcywgdW5zaWduZWQgaW50IGNw
dSwKICAgICAgICAgICAgICAgICAgICAgdm9pZCAqcGRhdGEsIHZvaWQgKnZkYXRhKQogewotICAg
IHN0cnVjdCBzY2hlZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSk7
CisgICAgc3RydWN0IHNjaGVkX3Jlc291cmNlICpzZCA9IHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUp
OwogICAgIHN0cnVjdCBjc2NoZWRfcHJpdmF0ZSAqcHJ2ID0gQ1NDSEVEX1BSSVYobmV3X29wcyk7
CiAgICAgc3RydWN0IGNzY2hlZF9pdGVtICpzdmMgPSB2ZGF0YTsKIApAQCAtNjU0LDcgKzY1NCw3
IEBAIGNzY2hlZF9zd2l0Y2hfc2NoZWQoc3RydWN0IHNjaGVkdWxlciAqbmV3X29wcywgdW5zaWdu
ZWQgaW50IGNwdSwKICAgICBzcGluX3VubG9jaygmcHJ2LT5sb2NrKTsKIAogICAgIHBlcl9jcHUo
c2NoZWR1bGVyLCBjcHUpID0gbmV3X29wczsKLSAgICBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNw
dSkuc2NoZWRfcHJpdiA9IHBkYXRhOworICAgIHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hl
ZF9wcml2ID0gcGRhdGE7CiAKICAgICAvKgogICAgICAqIChSZT8pcm91dGUgdGhlIGxvY2sgdG8g
dGhlIHBlciBwQ1BVIGxvY2sgYXMgL2xhc3QvIHRoaW5nLiBJbiBmYWN0LApkaWZmIC0tZ2l0IGEv
eGVuL2NvbW1vbi9zY2hlZF9jcmVkaXQyLmMgYi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdDIuYwpp
bmRleCA1YTNhMGJhYmFiLi5kZjBlNzI4MmNlIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVk
X2NyZWRpdDIuYworKysgYi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdDIuYwpAQCAtNTY3LDcgKzU2
Nyw3IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IGNzY2hlZDJfcHJpdmF0ZSAqY3NjaGVkMl9wcml2
KGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcykKIAogc3RhdGljIGlubGluZSBzdHJ1Y3QgY3Nj
aGVkMl9wY3B1ICpjc2NoZWQyX3BjcHUodW5zaWduZWQgaW50IGNwdSkKIHsKLSAgICByZXR1cm4g
cGVyX2NwdShzY2hlZHVsZV9kYXRhLCBjcHUpLnNjaGVkX3ByaXY7CisgICAgcmV0dXJuIHBlcl9j
cHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hlZF9wcml2OwogfQogCiBzdGF0aWMgaW5saW5lIHN0cnVj
dCBjc2NoZWQyX2l0ZW0gKmNzY2hlZDJfaXRlbShjb25zdCBzdHJ1Y3Qgc2NoZWRfaXRlbSAqaXRl
bSkKQEAgLTEyNzYsNyArMTI3Niw3IEBAIHJ1bnFfaW5zZXJ0KGNvbnN0IHN0cnVjdCBzY2hlZHVs
ZXIgKm9wcywgc3RydWN0IGNzY2hlZDJfaXRlbSAqc3ZjKQogICAgIHN0cnVjdCBsaXN0X2hlYWQg
KiBydW5xID0gJmMycnFkKG9wcywgY3B1KS0+cnVucTsKICAgICBpbnQgcG9zID0gMDsKIAotICAg
IEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1
bGVfbG9jaykpOworICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkX3Jlcywg
Y3B1KS0+c2NoZWR1bGVfbG9jaykpOwogCiAgICAgQVNTRVJUKCF2Y3B1X29uX3J1bnEoc3ZjKSk7
CiAgICAgQVNTRVJUKGMycihjcHUpID09IGMycihzdmMtPnZjcHUtPnByb2Nlc3NvcikpOwpAQCAt
MTc5Nyw3ICsxNzk3LDcgQEAgc3RhdGljIGJvb2wgdmNwdV9ncmFiX2J1ZGdldChzdHJ1Y3QgY3Nj
aGVkMl9pdGVtICpzdmMpCiAgICAgc3RydWN0IGNzY2hlZDJfZG9tICpzZG9tID0gc3ZjLT5zZG9t
OwogICAgIHVuc2lnbmVkIGludCBjcHUgPSBzdmMtPnZjcHUtPnByb2Nlc3NvcjsKIAotICAgIEFT
U0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1bGVf
bG9jaykpOworICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkX3JlcywgY3B1
KS0+c2NoZWR1bGVfbG9jaykpOwogCiAgICAgaWYgKCBzdmMtPmJ1ZGdldCA+IDAgKQogICAgICAg
ICByZXR1cm4gdHJ1ZTsKQEAgLTE4NDQsNyArMTg0NCw3IEBAIHZjcHVfcmV0dXJuX2J1ZGdldChz
dHJ1Y3QgY3NjaGVkMl9pdGVtICpzdmMsIHN0cnVjdCBsaXN0X2hlYWQgKnBhcmtlZCkKICAgICBz
dHJ1Y3QgY3NjaGVkMl9kb20gKnNkb20gPSBzdmMtPnNkb207CiAgICAgdW5zaWduZWQgaW50IGNw
dSA9IHN2Yy0+dmNwdS0+cHJvY2Vzc29yOwogCi0gICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBl
cl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KS5zY2hlZHVsZV9sb2NrKSk7CisgICAgQVNTRVJUKHNw
aW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hlZHVsZV9sb2NrKSk7CiAg
ICAgQVNTRVJUKGxpc3RfZW1wdHkocGFya2VkKSk7CiAKICAgICAvKiBidWRnZXRfbG9jayBuZXN0
cyBpbnNpZGUgcnVucXVldWUgbG9jay4gKi8KQEAgLTIxMDEsNyArMjEwMSw3IEBAIGNzY2hlZDJf
aXRlbV93YWtlKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgc3RydWN0IHNjaGVkX2l0ZW0g
Kml0ZW0pCiAgICAgdW5zaWduZWQgaW50IGNwdSA9IHZjLT5wcm9jZXNzb3I7CiAgICAgc190aW1l
X3Qgbm93OwogCi0gICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWR1bGVfZGF0
YSwgY3B1KS5zY2hlZHVsZV9sb2NrKSk7CisgICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBlcl9j
cHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hlZHVsZV9sb2NrKSk7CiAKICAgICBBU1NFUlQoIWlzX2lk
bGVfdmNwdSh2YykpOwogCkBAIC0yMjI5LDcgKzIyMjksNyBAQCBjc2NoZWQyX3Jlc19waWNrKGNv
bnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgc3RydWN0IHNjaGVkX2l0ZW0gKml0ZW0pCiAgICAg
ICoganVzdCBncmFiIHRoZSBwcnYgbG9jay4gIEluc3RlYWQsIHdlJ2xsIGhhdmUgdG8gdHJ5bG9j
aywgYW5kCiAgICAgICogZG8gc29tZXRoaW5nIGVsc2UgcmVhc29uYWJsZSBpZiB3ZSBmYWlsLgog
ICAgICAqLwotICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEs
IGNwdSkuc2NoZWR1bGVfbG9jaykpOworICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1
KHNjaGVkX3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jaykpOwogCiAgICAgaWYgKCAhcmVhZF90cnls
b2NrKCZwcnYtPmxvY2spICkKICAgICB7CkBAIC0yNTY5LDcgKzI1NjksNyBAQCBzdGF0aWMgdm9p
ZCBiYWxhbmNlX2xvYWQoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCBpbnQgY3B1LCBzX3Rp
bWVfdCBub3cpCiAgICAgICogb24gZWl0aGVyIHNpZGUgbWF5IGJlIGVtcHR5KS4KICAgICAgKi8K
IAotICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSku
c2NoZWR1bGVfbG9jaykpOworICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVk
X3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jaykpOwogICAgIHN0LmxycWQgPSBjMnJxZChvcHMsIGNw
dSk7CiAKICAgICB1cGRhdGVfcnVucV9sb2FkKG9wcywgc3QubHJxZCwgMCwgbm93KTsKQEAgLTM0
NzUsNyArMzQ3NSw3IEBAIGNzY2hlZDJfc2NoZWR1bGUoCiAgICAgcnFkID0gYzJycWQob3BzLCBj
cHUpOwogICAgIEJVR19PTighY3B1bWFza190ZXN0X2NwdShjcHUsICZycWQtPmFjdGl2ZSkpOwog
Ci0gICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KS5z
Y2hlZHVsZV9sb2NrKSk7CisgICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBlcl9jcHUoc2NoZWRf
cmVzLCBjcHUpLT5zY2hlZHVsZV9sb2NrKSk7CiAKICAgICBCVUdfT04oIWlzX2lkbGVfdmNwdShz
Y3Vyci0+dmNwdSkgJiYgc2N1cnItPnJxZCAhPSBycWQpOwogCkBAIC0zODY0LDcgKzM4NjQsNyBA
QCBjc2NoZWQyX2luaXRfcGRhdGEoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCB2b2lkICpw
ZGF0YSwgaW50IGNwdSkKIAogICAgIHJxaSA9IGluaXRfcGRhdGEocHJ2LCBwZGF0YSwgY3B1KTsK
ICAgICAvKiBNb3ZlIHRoZSBzY2hlZHVsZXIgbG9jayB0byB0aGUgbmV3IHJ1bnEgbG9jay4gKi8K
LSAgICBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1bGVfbG9jayA9ICZwcnYtPnJx
ZFtycWldLmxvY2s7CisgICAgcGVyX2NwdShzY2hlZF9yZXMsIGNwdSktPnNjaGVkdWxlX2xvY2sg
PSAmcHJ2LT5ycWRbcnFpXS5sb2NrOwogCiAgICAgLyogX05vdF8gcGNwdV9zY2hlZHVsZV91bmxv
Y2soKTogc2NoZWR1bGVfbG9jayBtYXkgaGF2ZSBjaGFuZ2VkISAqLwogICAgIHNwaW5fdW5sb2Nr
KG9sZF9sb2NrKTsKQEAgLTM5MDMsMTAgKzM5MDMsMTAgQEAgY3NjaGVkMl9zd2l0Y2hfc2NoZWQo
c3RydWN0IHNjaGVkdWxlciAqbmV3X29wcywgdW5zaWduZWQgaW50IGNwdSwKICAgICAgKiB0aGlz
IHNjaGVkdWxlciwgYW5kIHNvIGl0J3Mgc2FmZSB0byBoYXZlIHRha2VuIGl0IC9iZWZvcmUvIG91
cgogICAgICAqIHByaXZhdGUgZ2xvYmFsIGxvY2suCiAgICAgICovCi0gICAgQVNTRVJUKHBlcl9j
cHUoc2NoZWR1bGVfZGF0YSwgY3B1KS5zY2hlZHVsZV9sb2NrICE9ICZwcnYtPnJxZFtycWldLmxv
Y2spOworICAgIEFTU0VSVChwZXJfY3B1KHNjaGVkX3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jayAh
PSAmcHJ2LT5ycWRbcnFpXS5sb2NrKTsKIAogICAgIHBlcl9jcHUoc2NoZWR1bGVyLCBjcHUpID0g
bmV3X29wczsKLSAgICBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWRfcHJpdiA9IHBk
YXRhOworICAgIHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hlZF9wcml2ID0gcGRhdGE7CiAK
ICAgICAvKgogICAgICAqIChSZT8pcm91dGUgdGhlIGxvY2sgdG8gdGhlIHBlciBwQ1BVIGxvY2sg
YXMgL2xhc3QvIHRoaW5nLiBJbiBmYWN0LApAQCAtMzkxNCw3ICszOTE0LDcgQEAgY3NjaGVkMl9z
d2l0Y2hfc2NoZWQoc3RydWN0IHNjaGVkdWxlciAqbmV3X29wcywgdW5zaWduZWQgaW50IGNwdSwK
ICAgICAgKiB0YWtpbmcgaXQsIGZpbmQgYWxsIHRoZSBpbml0aWFsaXphdGlvbnMgd2UndmUgZG9u
ZSBhYm92ZSBpbiBwbGFjZS4KICAgICAgKi8KICAgICBzbXBfbWIoKTsKLSAgICBwZXJfY3B1KHNj
aGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1bGVfbG9jayA9ICZwcnYtPnJxZFtycWldLmxvY2s7Cisg
ICAgcGVyX2NwdShzY2hlZF9yZXMsIGNwdSktPnNjaGVkdWxlX2xvY2sgPSAmcHJ2LT5ycWRbcnFp
XS5sb2NrOwogCiAgICAgd3JpdGVfdW5sb2NrKCZwcnYtPmxvY2spOwogfQpkaWZmIC0tZ2l0IGEv
eGVuL2NvbW1vbi9zY2hlZF9udWxsLmMgYi94ZW4vY29tbW9uL3NjaGVkX251bGwuYwppbmRleCBm
N2EyNjUwYzQ4Li5hOWNmYTE2M2I5IDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkX251bGwu
YworKysgYi94ZW4vY29tbW9uL3NjaGVkX251bGwuYwpAQCAtMTY4LDcgKzE2OCw3IEBAIHN0YXRp
YyB2b2lkIGluaXRfcGRhdGEoc3RydWN0IG51bGxfcHJpdmF0ZSAqcHJ2LCB1bnNpZ25lZCBpbnQg
Y3B1KQogc3RhdGljIHZvaWQgbnVsbF9pbml0X3BkYXRhKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIg
Km9wcywgdm9pZCAqcGRhdGEsIGludCBjcHUpCiB7CiAgICAgc3RydWN0IG51bGxfcHJpdmF0ZSAq
cHJ2ID0gbnVsbF9wcml2KG9wcyk7Ci0gICAgc3RydWN0IHNjaGVkdWxlX2RhdGEgKnNkID0gJnBl
cl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KTsKKyAgICBzdHJ1Y3Qgc2NoZWRfcmVzb3VyY2UgKnNk
ID0gcGVyX2NwdShzY2hlZF9yZXMsIGNwdSk7CiAKICAgICAvKiBhbGxvY19wZGF0YSBpcyBub3Qg
aW1wbGVtZW50ZWQsIHNvIHdlIHdhbnQgdGhpcyB0byBiZSBOVUxMLiAqLwogICAgIEFTU0VSVCgh
cGRhdGEpOwpAQCAtMjc3LDcgKzI3Nyw3IEBAIHBpY2tfcmVzKHN0cnVjdCBudWxsX3ByaXZhdGUg
KnBydiwgc3RydWN0IHNjaGVkX2l0ZW0gKml0ZW0pCiAgICAgdW5zaWduZWQgaW50IGNwdSA9IHYt
PnByb2Nlc3NvciwgbmV3X2NwdTsKICAgICBjcHVtYXNrX3QgKmNwdXMgPSBjcHVwb29sX2RvbWFp
bl9jcHVtYXNrKHYtPmRvbWFpbik7CiAKLSAgICBBU1NFUlQoc3Bpbl9pc19sb2NrZWQocGVyX2Nw
dShzY2hlZHVsZV9kYXRhLCBjcHUpLnNjaGVkdWxlX2xvY2spKTsKKyAgICBBU1NFUlQoc3Bpbl9p
c19sb2NrZWQocGVyX2NwdShzY2hlZF9yZXMsIGNwdSktPnNjaGVkdWxlX2xvY2spKTsKIAogICAg
IGZvcl9lYWNoX2FmZmluaXR5X2JhbGFuY2Vfc3RlcCggYnMgKQogICAgIHsKQEAgLTM4OCw3ICsz
ODgsNyBAQCBzdGF0aWMgdm9pZCB2Y3B1X2RlYXNzaWduKHN0cnVjdCBudWxsX3ByaXZhdGUgKnBy
diwgc3RydWN0IHZjcHUgKnYsCiBzdGF0aWMgdm9pZCBudWxsX3N3aXRjaF9zY2hlZChzdHJ1Y3Qg
c2NoZWR1bGVyICpuZXdfb3BzLCB1bnNpZ25lZCBpbnQgY3B1LAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgdm9pZCAqcGRhdGEsIHZvaWQgKnZkYXRhKQogewotICAgIHN0cnVjdCBzY2hl
ZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSk7CisgICAgc3RydWN0
IHNjaGVkX3Jlc291cmNlICpzZCA9IHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpOwogICAgIHN0cnVj
dCBudWxsX3ByaXZhdGUgKnBydiA9IG51bGxfcHJpdihuZXdfb3BzKTsKICAgICBzdHJ1Y3QgbnVs
bF9pdGVtICpudmMgPSB2ZGF0YTsKIApAQCAtNDA2LDcgKzQwNiw3IEBAIHN0YXRpYyB2b2lkIG51
bGxfc3dpdGNoX3NjaGVkKHN0cnVjdCBzY2hlZHVsZXIgKm5ld19vcHMsIHVuc2lnbmVkIGludCBj
cHUsCiAgICAgaW5pdF9wZGF0YShwcnYsIGNwdSk7CiAKICAgICBwZXJfY3B1KHNjaGVkdWxlciwg
Y3B1KSA9IG5ld19vcHM7Ci0gICAgcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBjcHUpLnNjaGVkX3By
aXYgPSBwZGF0YTsKKyAgICBwZXJfY3B1KHNjaGVkX3JlcywgY3B1KS0+c2NoZWRfcHJpdiA9IHBk
YXRhOwogCiAgICAgLyoKICAgICAgKiAoUmU/KXJvdXRlIHRoZSBsb2NrIHRvIHRoZSBwZXIgcENQ
VSBsb2NrIGFzIC9sYXN0LyB0aGluZy4gSW4gZmFjdCwKZGlmZiAtLWdpdCBhL3hlbi9jb21tb24v
c2NoZWRfcnQuYyBiL3hlbi9jb21tb24vc2NoZWRfcnQuYwppbmRleCBhM2NkMDBmNzY1Li4wMDE5
NjQ2YjUyIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkX3J0LmMKKysrIGIveGVuL2NvbW1v
bi9zY2hlZF9ydC5jCkBAIC03NSw3ICs3NSw3IEBACiAvKgogICogTG9ja2luZzoKICAqIEEgZ2xv
YmFsIHN5c3RlbSBsb2NrIGlzIHVzZWQgdG8gcHJvdGVjdCB0aGUgUnVuUSBhbmQgRGVwbGV0ZWRR
LgotICogVGhlIGdsb2JhbCBsb2NrIGlzIHJlZmVyZW5jZWQgYnkgc2NoZWR1bGVfZGF0YS5zY2hl
ZHVsZV9sb2NrCisgKiBUaGUgZ2xvYmFsIGxvY2sgaXMgcmVmZXJlbmNlZCBieSBzY2hlZF9yZXMt
PnNjaGVkdWxlX2xvY2sKICAqIGZyb20gYWxsIHBoeXNpY2FsIGNwdXMuCiAgKgogICogVGhlIGxv
Y2sgaXMgYWxyZWFkeSBncmFiYmVkIHdoZW4gY2FsbGluZyB3YWtlL3NsZWVwL3NjaGVkdWxlLyBm
dW5jdGlvbnMKQEAgLTE3Niw3ICsxNzYsNyBAQCBzdGF0aWMgdm9pZCByZXBsX3RpbWVyX2hhbmRs
ZXIodm9pZCAqZGF0YSk7CiAKIC8qCiAgKiBTeXN0ZW0td2lkZSBwcml2YXRlIGRhdGEsIGluY2x1
ZGUgZ2xvYmFsIFJ1blF1ZXVlL0RlcGxldGVkUQotICogR2xvYmFsIGxvY2sgaXMgcmVmZXJlbmNl
ZCBieSBzY2hlZHVsZV9kYXRhLnNjaGVkdWxlX2xvY2sgZnJvbSBhbGwKKyAqIEdsb2JhbCBsb2Nr
IGlzIHJlZmVyZW5jZWQgYnkgc2NoZWRfcmVzLT5zY2hlZHVsZV9sb2NrIGZyb20gYWxsCiAgKiBw
aHlzaWNhbCBjcHVzLiBJdCBjYW4gYmUgZ3JhYmJlZCB2aWEgdmNwdV9zY2hlZHVsZV9sb2NrX2ly
cSgpCiAgKi8KIHN0cnVjdCBydF9wcml2YXRlIHsKQEAgLTcyMyw3ICs3MjMsNyBAQCBydF9pbml0
X3BkYXRhKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgdm9pZCAqcGRhdGEsIGludCBjcHUp
CiAgICAgfQogCiAgICAgLyogTW92ZSB0aGUgc2NoZWR1bGVyIGxvY2sgdG8gb3VyIGdsb2JhbCBy
dW5xdWV1ZSBsb2NrLiAgKi8KLSAgICBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2NoZWR1
bGVfbG9jayA9ICZwcnYtPmxvY2s7CisgICAgcGVyX2NwdShzY2hlZF9yZXMsIGNwdSktPnNjaGVk
dWxlX2xvY2sgPSAmcHJ2LT5sb2NrOwogCiAgICAgLyogX05vdF8gcGNwdV9zY2hlZHVsZV91bmxv
Y2soKTogcGVyX2NwdSgpLnNjaGVkdWxlX2xvY2sgY2hhbmdlZCEgKi8KICAgICBzcGluX3VubG9j
a19pcnFyZXN0b3JlKG9sZF9sb2NrLCBmbGFncyk7CkBAIC03NDUsNyArNzQ1LDcgQEAgcnRfc3dp
dGNoX3NjaGVkKHN0cnVjdCBzY2hlZHVsZXIgKm5ld19vcHMsIHVuc2lnbmVkIGludCBjcHUsCiAg
ICAgICogYW5vdGhlciBzY2hlZHVsZXIsIGJ1dCB0aGF0IGlzIGhvdyB0aGluZ3MgbmVlZCB0byBi
ZSwgZm9yCiAgICAgICogcHJldmVudGluZyByYWNlcy4KICAgICAgKi8KLSAgICBBU1NFUlQocGVy
X2NwdShzY2hlZHVsZV9kYXRhLCBjcHUpLnNjaGVkdWxlX2xvY2sgIT0gJnBydi0+bG9jayk7Cisg
ICAgQVNTRVJUKHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpLT5zY2hlZHVsZV9sb2NrICE9ICZwcnYt
PmxvY2spOwogCiAgICAgLyoKICAgICAgKiBJZiB3ZSBhcmUgdGhlIGFic29sdXRlIGZpcnN0IGNw
dSBiZWluZyBzd2l0Y2hlZCB0b3dhcmQgdGhpcwpAQCAtNzYzLDcgKzc2Myw3IEBAIHJ0X3N3aXRj
aF9zY2hlZChzdHJ1Y3Qgc2NoZWR1bGVyICpuZXdfb3BzLCB1bnNpZ25lZCBpbnQgY3B1LAogCiAg
ICAgaWRsZV92Y3B1W2NwdV0tPnNjaGVkX2l0ZW0tPnByaXYgPSB2ZGF0YTsKICAgICBwZXJfY3B1
KHNjaGVkdWxlciwgY3B1KSA9IG5ld19vcHM7Ci0gICAgcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBj
cHUpLnNjaGVkX3ByaXYgPSBOVUxMOyAvKiBubyBwZGF0YSAqLworICAgIHBlcl9jcHUoc2NoZWRf
cmVzLCBjcHUpLT5zY2hlZF9wcml2ID0gTlVMTDsgLyogbm8gcGRhdGEgKi8KIAogICAgIC8qCiAg
ICAgICogKFJlPylyb3V0ZSB0aGUgbG9jayB0byB0aGUgcGVyIHBDUFUgbG9jayBhcyAvbGFzdC8g
dGhpbmcuIEluIGZhY3QsCkBAIC03NzEsNyArNzcxLDcgQEAgcnRfc3dpdGNoX3NjaGVkKHN0cnVj
dCBzY2hlZHVsZXIgKm5ld19vcHMsIHVuc2lnbmVkIGludCBjcHUsCiAgICAgICogdGFraW5nIGl0
LCBmaW5kIGFsbCB0aGUgaW5pdGlhbGl6YXRpb25zIHdlJ3ZlIGRvbmUgYWJvdmUgaW4gcGxhY2Uu
CiAgICAgICovCiAgICAgc21wX21iKCk7Ci0gICAgcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBjcHUp
LnNjaGVkdWxlX2xvY2sgPSAmcHJ2LT5sb2NrOworICAgIHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUp
LT5zY2hlZHVsZV9sb2NrID0gJnBydi0+bG9jazsKIH0KIAogc3RhdGljIHZvaWQKZGlmZiAtLWdp
dCBhL3hlbi9jb21tb24vc2NoZWR1bGUuYyBiL3hlbi9jb21tb24vc2NoZWR1bGUuYwppbmRleCBi
MWViNzcyOTBhLi41MWRiOThiY2FhIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkdWxlLmMK
KysrIGIveGVuL2NvbW1vbi9zY2hlZHVsZS5jCkBAIC02MSw3ICs2MSw2IEBAIHN0YXRpYyB2b2lk
IHZjcHVfc2luZ2xlc2hvdF90aW1lcl9mbih2b2lkICpkYXRhKTsKIHN0YXRpYyB2b2lkIHBvbGxf
dGltZXJfZm4odm9pZCAqZGF0YSk7CiAKIC8qIFRoaXMgaXMgZ2xvYmFsIGZvciBub3cgc28gdGhh
dCBwcml2YXRlIGltcGxlbWVudGF0aW9ucyBjYW4gcmVhY2ggaXQgKi8KLURFRklORV9QRVJfQ1BV
KHN0cnVjdCBzY2hlZHVsZV9kYXRhLCBzY2hlZHVsZV9kYXRhKTsKIERFRklORV9QRVJfQ1BVKHN0
cnVjdCBzY2hlZHVsZXIgKiwgc2NoZWR1bGVyKTsKIERFRklORV9QRVJfQ1BVKHN0cnVjdCBzY2hl
ZF9yZXNvdXJjZSAqLCBzY2hlZF9yZXMpOwogCkBAIC0xNTcsNyArMTU2LDcgQEAgc3RhdGljIGlu
bGluZSB2b2lkIHZjcHVfdXJnZW50X2NvdW50X3VwZGF0ZShzdHJ1Y3QgdmNwdSAqdikKICAgICAg
ICAgICAgICAhdGVzdF9iaXQodi0+dmNwdV9pZCwgdi0+ZG9tYWluLT5wb2xsX21hc2spICkKICAg
ICAgICAgewogICAgICAgICAgICAgdi0+aXNfdXJnZW50ID0gMDsKLSAgICAgICAgICAgIGF0b21p
Y19kZWMoJnBlcl9jcHUoc2NoZWR1bGVfZGF0YSx2LT5wcm9jZXNzb3IpLnVyZ2VudF9jb3VudCk7
CisgICAgICAgICAgICBhdG9taWNfZGVjKCZwZXJfY3B1KHNjaGVkX3Jlcywgdi0+cHJvY2Vzc29y
KS0+dXJnZW50X2NvdW50KTsKICAgICAgICAgfQogICAgIH0KICAgICBlbHNlCkBAIC0xNjYsNyAr
MTY1LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHZjcHVfdXJnZW50X2NvdW50X3VwZGF0ZShzdHJ1
Y3QgdmNwdSAqdikKICAgICAgICAgICAgICB1bmxpa2VseSh0ZXN0X2JpdCh2LT52Y3B1X2lkLCB2
LT5kb21haW4tPnBvbGxfbWFzaykpICkKICAgICAgICAgewogICAgICAgICAgICAgdi0+aXNfdXJn
ZW50ID0gMTsKLSAgICAgICAgICAgIGF0b21pY19pbmMoJnBlcl9jcHUoc2NoZWR1bGVfZGF0YSx2
LT5wcm9jZXNzb3IpLnVyZ2VudF9jb3VudCk7CisgICAgICAgICAgICBhdG9taWNfaW5jKCZwZXJf
Y3B1KHNjaGVkX3Jlcywgdi0+cHJvY2Vzc29yKS0+dXJnZW50X2NvdW50KTsKICAgICAgICAgfQog
ICAgIH0KIH0KQEAgLTE3Nyw3ICsxNzYsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgdmNwdV9ydW5z
dGF0ZV9jaGFuZ2UoCiAgICAgc190aW1lX3QgZGVsdGE7CiAKICAgICBBU1NFUlQodi0+cnVuc3Rh
dGUuc3RhdGUgIT0gbmV3X3N0YXRlKTsKLSAgICBBU1NFUlQoc3Bpbl9pc19sb2NrZWQocGVyX2Nw
dShzY2hlZHVsZV9kYXRhLHYtPnByb2Nlc3Nvcikuc2NoZWR1bGVfbG9jaykpOworICAgIEFTU0VS
VChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkX3Jlcywgdi0+cHJvY2Vzc29yKS0+c2NoZWR1
bGVfbG9jaykpOwogCiAgICAgdmNwdV91cmdlbnRfY291bnRfdXBkYXRlKHYpOwogCkBAIC0zMzQs
NyArMzMzLDcgQEAgaW50IHNjaGVkX2luaXRfdmNwdShzdHJ1Y3QgdmNwdSAqdiwgdW5zaWduZWQg
aW50IHByb2Nlc3NvcikKICAgICAvKiBJZGxlIFZDUFVzIGFyZSBzY2hlZHVsZWQgaW1tZWRpYXRl
bHksIHNvIGRvbid0IHB1dCB0aGVtIGluIHJ1bnF1ZXVlLiAqLwogICAgIGlmICggaXNfaWRsZV9k
b21haW4oZCkgKQogICAgIHsKLSAgICAgICAgcGVyX2NwdShzY2hlZHVsZV9kYXRhLCB2LT5wcm9j
ZXNzb3IpLmN1cnIgPSBpdGVtOworICAgICAgICBwZXJfY3B1KHNjaGVkX3Jlcywgdi0+cHJvY2Vz
c29yKS0+Y3VyciA9IGl0ZW07CiAgICAgICAgIHYtPmlzX3J1bm5pbmcgPSAxOwogICAgIH0KICAg
ICBlbHNlCkBAIC00NTksNyArNDU4LDcgQEAgdm9pZCBzY2hlZF9kZXN0cm95X3ZjcHUoc3RydWN0
IHZjcHUgKnYpCiAgICAga2lsbF90aW1lcigmdi0+c2luZ2xlc2hvdF90aW1lcik7CiAgICAga2ls
bF90aW1lcigmdi0+cG9sbF90aW1lcik7CiAgICAgaWYgKCB0ZXN0X2FuZF9jbGVhcl9ib29sKHYt
PmlzX3VyZ2VudCkgKQotICAgICAgICBhdG9taWNfZGVjKCZwZXJfY3B1KHNjaGVkdWxlX2RhdGEs
IHYtPnByb2Nlc3NvcikudXJnZW50X2NvdW50KTsKKyAgICAgICAgYXRvbWljX2RlYygmcGVyX2Nw
dShzY2hlZF9yZXMsIHYtPnByb2Nlc3NvciktPnVyZ2VudF9jb3VudCk7CiAgICAgc2NoZWRfcmVt
b3ZlX2l0ZW0odmNwdV9zY2hlZHVsZXIodiksIGl0ZW0pOwogICAgIHNjaGVkX2ZyZWVfdmRhdGEo
dmNwdV9zY2hlZHVsZXIodiksIGl0ZW0tPnByaXYpOwogICAgIHNjaGVkX2ZyZWVfaXRlbShpdGVt
KTsKQEAgLTUwNiw3ICs1MDUsNyBAQCB2b2lkIHNjaGVkX2Rlc3Ryb3lfZG9tYWluKHN0cnVjdCBk
b21haW4gKmQpCiAKIHZvaWQgdmNwdV9zbGVlcF9ub3N5bmNfbG9ja2VkKHN0cnVjdCB2Y3B1ICp2
KQogewotICAgIEFTU0VSVChzcGluX2lzX2xvY2tlZChwZXJfY3B1KHNjaGVkdWxlX2RhdGEsdi0+
cHJvY2Vzc29yKS5zY2hlZHVsZV9sb2NrKSk7CisgICAgQVNTRVJUKHNwaW5faXNfbG9ja2VkKHBl
cl9jcHUoc2NoZWRfcmVzLCB2LT5wcm9jZXNzb3IpLT5zY2hlZHVsZV9sb2NrKSk7CiAKICAgICBp
ZiAoIGxpa2VseSghdmNwdV9ydW5uYWJsZSh2KSkgKQogICAgIHsKQEAgLTYwMSw4ICs2MDAsOCBA
QCBzdGF0aWMgdm9pZCB2Y3B1X21vdmVfbG9ja2VkKHN0cnVjdCB2Y3B1ICp2LCB1bnNpZ25lZCBp
bnQgbmV3X2NwdSkKICAgICAgKi8KICAgICBpZiAoIHVubGlrZWx5KHYtPmlzX3VyZ2VudCkgJiYg
KG9sZF9jcHUgIT0gbmV3X2NwdSkgKQogICAgIHsKLSAgICAgICAgYXRvbWljX2luYygmcGVyX2Nw
dShzY2hlZHVsZV9kYXRhLCBuZXdfY3B1KS51cmdlbnRfY291bnQpOwotICAgICAgICBhdG9taWNf
ZGVjKCZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIG9sZF9jcHUpLnVyZ2VudF9jb3VudCk7CisgICAg
ICAgIGF0b21pY19pbmMoJnBlcl9jcHUoc2NoZWRfcmVzLCBuZXdfY3B1KS0+dXJnZW50X2NvdW50
KTsKKyAgICAgICAgYXRvbWljX2RlYygmcGVyX2NwdShzY2hlZF9yZXMsIG9sZF9jcHUpLT51cmdl
bnRfY291bnQpOwogICAgIH0KIAogICAgIC8qCkBAIC02NjgsMjAgKzY2NywyMCBAQCBzdGF0aWMg
dm9pZCB2Y3B1X21pZ3JhdGVfZmluaXNoKHN0cnVjdCB2Y3B1ICp2KQogICAgICAgICAgKiBhcmUg
bm90IGNvcnJlY3QgYW55IGxvbmdlciBhZnRlciBldmFsdWF0aW5nIG9sZCBhbmQgbmV3IGNwdSBo
b2xkaW5nCiAgICAgICAgICAqIHRoZSBsb2Nrcy4KICAgICAgICAgICovCi0gICAgICAgIG9sZF9s
b2NrID0gcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBvbGRfY3B1KS5zY2hlZHVsZV9sb2NrOwotICAg
ICAgICBuZXdfbG9jayA9IHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgbmV3X2NwdSkuc2NoZWR1bGVf
bG9jazsKKyAgICAgICAgb2xkX2xvY2sgPSBwZXJfY3B1KHNjaGVkX3Jlcywgb2xkX2NwdSktPnNj
aGVkdWxlX2xvY2s7CisgICAgICAgIG5ld19sb2NrID0gcGVyX2NwdShzY2hlZF9yZXMsIG5ld19j
cHUpLT5zY2hlZHVsZV9sb2NrOwogCiAgICAgICAgIHNjaGVkX3NwaW5fbG9ja19kb3VibGUob2xk
X2xvY2ssIG5ld19sb2NrLCAmZmxhZ3MpOwogCiAgICAgICAgIG9sZF9jcHUgPSB2LT5wcm9jZXNz
b3I7Ci0gICAgICAgIGlmICggb2xkX2xvY2sgPT0gcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBvbGRf
Y3B1KS5zY2hlZHVsZV9sb2NrICkKKyAgICAgICAgaWYgKCBvbGRfbG9jayA9PSBwZXJfY3B1KHNj
aGVkX3Jlcywgb2xkX2NwdSktPnNjaGVkdWxlX2xvY2sgKQogICAgICAgICB7CiAgICAgICAgICAg
ICAvKgogICAgICAgICAgICAgICogSWYgd2Ugc2VsZWN0ZWQgYSBDUFUgb24gdGhlIHByZXZpb3N1
IGl0ZXJhdGlvbiwgY2hlY2sgaWYgaXQKICAgICAgICAgICAgICAqIHJlbWFpbnMgc3VpdGFibGUg
Zm9yIHJ1bm5pbmcgdGhpcyB2Q1BVLgogICAgICAgICAgICAgICovCiAgICAgICAgICAgICBpZiAo
IHBpY2tfY2FsbGVkICYmCi0gICAgICAgICAgICAgICAgIChuZXdfbG9jayA9PSBwZXJfY3B1KHNj
aGVkdWxlX2RhdGEsIG5ld19jcHUpLnNjaGVkdWxlX2xvY2spICYmCisgICAgICAgICAgICAgICAg
IChuZXdfbG9jayA9PSBwZXJfY3B1KHNjaGVkX3JlcywgbmV3X2NwdSktPnNjaGVkdWxlX2xvY2sp
ICYmCiAgICAgICAgICAgICAgICAgIGNwdW1hc2tfdGVzdF9jcHUobmV3X2NwdSwgdi0+Y3B1X2hh
cmRfYWZmaW5pdHkpICYmCiAgICAgICAgICAgICAgICAgIGNwdW1hc2tfdGVzdF9jcHUobmV3X2Nw
dSwgdi0+ZG9tYWluLT5jcHVwb29sLT5jcHVfdmFsaWQpICkKICAgICAgICAgICAgICAgICBicmVh
azsKQEAgLTY4OSw3ICs2ODgsNyBAQCBzdGF0aWMgdm9pZCB2Y3B1X21pZ3JhdGVfZmluaXNoKHN0
cnVjdCB2Y3B1ICp2KQogICAgICAgICAgICAgLyogU2VsZWN0IGEgbmV3IENQVS4gKi8KICAgICAg
ICAgICAgIG5ld19jcHUgPSBzY2hlZF9waWNrX3Jlc291cmNlKHZjcHVfc2NoZWR1bGVyKHYpLAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi0+c2NoZWRfaXRlbSkt
PnByb2Nlc3NvcjsKLSAgICAgICAgICAgIGlmICggKG5ld19sb2NrID09IHBlcl9jcHUoc2NoZWR1
bGVfZGF0YSwgbmV3X2NwdSkuc2NoZWR1bGVfbG9jaykgJiYKKyAgICAgICAgICAgIGlmICggKG5l
d19sb2NrID09IHBlcl9jcHUoc2NoZWRfcmVzLCBuZXdfY3B1KS0+c2NoZWR1bGVfbG9jaykgJiYK
ICAgICAgICAgICAgICAgICAgY3B1bWFza190ZXN0X2NwdShuZXdfY3B1LCB2LT5kb21haW4tPmNw
dXBvb2wtPmNwdV92YWxpZCkgKQogICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAg
cGlja19jYWxsZWQgPSAxOwpAQCAtMTQ3Miw3ICsxNDcxLDcgQEAgc3RhdGljIHZvaWQgc2NoZWR1
bGUodm9pZCkKICAgICBzdHJ1Y3Qgc2NoZWR1bGVyICAgICAqc2NoZWQ7CiAgICAgdW5zaWduZWQg
bG9uZyAgICAgICAgKnRhc2tsZXRfd29yayA9ICZ0aGlzX2NwdSh0YXNrbGV0X3dvcmtfdG9fZG8p
OwogICAgIGJvb2xfdCAgICAgICAgICAgICAgICB0YXNrbGV0X3dvcmtfc2NoZWR1bGVkID0gMDsK
LSAgICBzdHJ1Y3Qgc2NoZWR1bGVfZGF0YSAqc2Q7CisgICAgc3RydWN0IHNjaGVkX3Jlc291cmNl
ICpzZDsKICAgICBzcGlubG9ja190ICAgICAgICAgICAqbG9jazsKICAgICBzdHJ1Y3QgdGFza19z
bGljZSAgICAgbmV4dF9zbGljZTsKICAgICBpbnQgY3B1ID0gc21wX3Byb2Nlc3Nvcl9pZCgpOwpA
QCAtMTQ4MSw3ICsxNDgwLDcgQEAgc3RhdGljIHZvaWQgc2NoZWR1bGUodm9pZCkKIAogICAgIFND
SEVEX1NUQVRfQ1JBTksoc2NoZWRfcnVuKTsKIAotICAgIHNkID0gJnRoaXNfY3B1KHNjaGVkdWxl
X2RhdGEpOworICAgIHNkID0gdGhpc19jcHUoc2NoZWRfcmVzKTsKIAogICAgIC8qIFVwZGF0ZSB0
YXNrbGV0IHNjaGVkdWxpbmcgc3RhdHVzLiAqLwogICAgIHN3aXRjaCAoICp0YXNrbGV0X3dvcmsg
KQpAQCAtMTYyMywxNSArMTYyMiwxNCBAQCBzdGF0aWMgdm9pZCBwb2xsX3RpbWVyX2ZuKHZvaWQg
KmRhdGEpCiAKIHN0YXRpYyBpbnQgY3B1X3NjaGVkdWxlX3VwKHVuc2lnbmVkIGludCBjcHUpCiB7
Ci0gICAgc3RydWN0IHNjaGVkdWxlX2RhdGEgKnNkID0gJnBlcl9jcHUoc2NoZWR1bGVfZGF0YSwg
Y3B1KTsKKyAgICBzdHJ1Y3Qgc2NoZWRfcmVzb3VyY2UgKnNkOwogICAgIHZvaWQgKnNjaGVkX3By
aXY7Ci0gICAgc3RydWN0IHNjaGVkX3Jlc291cmNlICpyZXM7CiAKLSAgICByZXMgPSB4emFsbG9j
KHN0cnVjdCBzY2hlZF9yZXNvdXJjZSk7Ci0gICAgaWYgKCByZXMgPT0gTlVMTCApCisgICAgc2Qg
PSB4emFsbG9jKHN0cnVjdCBzY2hlZF9yZXNvdXJjZSk7CisgICAgaWYgKCBzZCA9PSBOVUxMICkK
ICAgICAgICAgcmV0dXJuIC1FTk9NRU07Ci0gICAgcmVzLT5wcm9jZXNzb3IgPSBjcHU7Ci0gICAg
cGVyX2NwdShzY2hlZF9yZXMsIGNwdSkgPSByZXM7CisgICAgc2QtPnByb2Nlc3NvciA9IGNwdTsK
KyAgICBwZXJfY3B1KHNjaGVkX3JlcywgY3B1KSA9IHNkOwogCiAgICAgcGVyX2NwdShzY2hlZHVs
ZXIsIGNwdSkgPSAmb3BzOwogICAgIHNwaW5fbG9ja19pbml0KCZzZC0+X2xvY2spOwpAQCAtMTY4
Nyw3ICsxNjg1LDcgQEAgc3RhdGljIGludCBjcHVfc2NoZWR1bGVfdXAodW5zaWduZWQgaW50IGNw
dSkKIAogc3RhdGljIHZvaWQgY3B1X3NjaGVkdWxlX2Rvd24odW5zaWduZWQgaW50IGNwdSkKIHsK
LSAgICBzdHJ1Y3Qgc2NoZWR1bGVfZGF0YSAqc2QgPSAmcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBj
cHUpOworICAgIHN0cnVjdCBzY2hlZF9yZXNvdXJjZSAqc2QgPSBwZXJfY3B1KHNjaGVkX3Jlcywg
Y3B1KTsKICAgICBzdHJ1Y3Qgc2NoZWR1bGVyICpzY2hlZCA9IHBlcl9jcHUoc2NoZWR1bGVyLCBj
cHUpOwogCiAgICAgc2NoZWRfZnJlZV9wZGF0YShzY2hlZCwgc2QtPnNjaGVkX3ByaXYsIGNwdSk7
CkBAIC0xNzA3LDcgKzE3MDUsNyBAQCBzdGF0aWMgaW50IGNwdV9zY2hlZHVsZV9jYWxsYmFjaygK
IHsKICAgICB1bnNpZ25lZCBpbnQgY3B1ID0gKHVuc2lnbmVkIGxvbmcpaGNwdTsKICAgICBzdHJ1
Y3Qgc2NoZWR1bGVyICpzY2hlZCA9IHBlcl9jcHUoc2NoZWR1bGVyLCBjcHUpOwotICAgIHN0cnVj
dCBzY2hlZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSk7CisgICAg
c3RydWN0IHNjaGVkX3Jlc291cmNlICpzZCA9IHBlcl9jcHUoc2NoZWRfcmVzLCBjcHUpOwogICAg
IGludCByYyA9IDA7CiAKICAgICAvKgpAQCAtMTg0MCwxMCArMTgzOCwxMCBAQCB2b2lkIF9faW5p
dCBzY2hlZHVsZXJfaW5pdCh2b2lkKQogICAgIGlkbGVfZG9tYWluLT5tYXhfdmNwdXMgPSBucl9j
cHVfaWRzOwogICAgIGlmICggdmNwdV9jcmVhdGUoaWRsZV9kb21haW4sIDAsIDApID09IE5VTEwg
KQogICAgICAgICBCVUcoKTsKLSAgICB0aGlzX2NwdShzY2hlZHVsZV9kYXRhKS5jdXJyID0gaWRs
ZV92Y3B1WzBdLT5zY2hlZF9pdGVtOwotICAgIHRoaXNfY3B1KHNjaGVkdWxlX2RhdGEpLnNjaGVk
X3ByaXYgPSBzY2hlZF9hbGxvY19wZGF0YSgmb3BzLCAwKTsKLSAgICBCVUdfT04oSVNfRVJSKHRo
aXNfY3B1KHNjaGVkdWxlX2RhdGEpLnNjaGVkX3ByaXYpKTsKLSAgICBzY2hlZF9pbml0X3BkYXRh
KCZvcHMsIHRoaXNfY3B1KHNjaGVkdWxlX2RhdGEpLnNjaGVkX3ByaXYsIDApOworICAgIHRoaXNf
Y3B1KHNjaGVkX3JlcyktPmN1cnIgPSBpZGxlX3ZjcHVbMF0tPnNjaGVkX2l0ZW07CisgICAgdGhp
c19jcHUoc2NoZWRfcmVzKS0+c2NoZWRfcHJpdiA9IHNjaGVkX2FsbG9jX3BkYXRhKCZvcHMsIDAp
OworICAgIEJVR19PTihJU19FUlIodGhpc19jcHUoc2NoZWRfcmVzKS0+c2NoZWRfcHJpdikpOwor
ICAgIHNjaGVkX2luaXRfcGRhdGEoJm9wcywgdGhpc19jcHUoc2NoZWRfcmVzKS0+c2NoZWRfcHJp
diwgMCk7CiB9CiAKIC8qCkBAIC0xOTIzLDcgKzE5MjEsNyBAQCBpbnQgc2NoZWR1bGVfY3B1X3N3
aXRjaCh1bnNpZ25lZCBpbnQgY3B1LCBzdHJ1Y3QgY3B1cG9vbCAqYykKICAgICBvbGRfbG9jayA9
IHBjcHVfc2NoZWR1bGVfbG9ja19pcnEoY3B1KTsKIAogICAgIHZwcml2X29sZCA9IGlkbGUtPnNj
aGVkX2l0ZW0tPnByaXY7Ci0gICAgcHByaXZfb2xkID0gcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBj
cHUpLnNjaGVkX3ByaXY7CisgICAgcHByaXZfb2xkID0gcGVyX2NwdShzY2hlZF9yZXMsIGNwdSkt
PnNjaGVkX3ByaXY7CiAgICAgc2NoZWRfc3dpdGNoX3NjaGVkKG5ld19vcHMsIGNwdSwgcHByaXYs
IHZwcml2KTsKIAogICAgIC8qIF9Ob3RfIHBjcHVfc2NoZWR1bGVfdW5sb2NrKCk6IHNjaGVkdWxl
X2xvY2sgbWF5IGhhdmUgY2hhbmdlZCEgKi8KZGlmZiAtLWdpdCBhL3hlbi9pbmNsdWRlL2FzbS14
ODYvY3B1aWRsZS5oIGIveGVuL2luY2x1ZGUvYXNtLXg4Ni9jcHVpZGxlLmgKaW5kZXggMDhkYTAx
ODAzZi4uZjUyMDE0NTc1MiAxMDA2NDQKLS0tIGEveGVuL2luY2x1ZGUvYXNtLXg4Ni9jcHVpZGxl
LmgKKysrIGIveGVuL2luY2x1ZGUvYXNtLXg4Ni9jcHVpZGxlLmgKQEAgLTMzLDcgKzMzLDcgQEAg
dm9pZCB1cGRhdGVfbGFzdF9jeF9zdGF0KHN0cnVjdCBhY3BpX3Byb2Nlc3Nvcl9wb3dlciAqLAog
ICovCiBzdGF0aWMgaW5saW5lIGludCBzY2hlZF9oYXNfdXJnZW50X3ZjcHUodm9pZCkKIHsKLSAg
ICByZXR1cm4gYXRvbWljX3JlYWQoJnRoaXNfY3B1KHNjaGVkdWxlX2RhdGEpLnVyZ2VudF9jb3Vu
dCk7CisgICAgcmV0dXJuIGF0b21pY19yZWFkKCZ0aGlzX2NwdShzY2hlZF9yZXMpLT51cmdlbnRf
Y291bnQpOwogfQogCiAjZW5kaWYgLyogX19YODZfQVNNX0NQVUlETEVfSF9fICovCmRpZmYgLS1n
aXQgYS94ZW4vaW5jbHVkZS94ZW4vc2NoZWQtaWYuaCBiL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC1p
Zi5oCmluZGV4IDlhMGNkMDRhZjcuLjkzNjE3ZjA0NTkgMTAwNjQ0Ci0tLSBhL3hlbi9pbmNsdWRl
L3hlbi9zY2hlZC1pZi5oCisrKyBiL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC1pZi5oCkBAIC0zMywy
MiArMzMsMTggQEAgZXh0ZXJuIGludCBzY2hlZF9yYXRlbGltaXRfdXM7CiAgKiBGb3IgY2FjaGUg
YmV0dGVybmVzcywga2VlcCB0aGUgYWN0dWFsIGxvY2sgaW4gdGhlIHNhbWUgY2FjaGUgYXJlYQog
ICogYXMgdGhlIHJlc3Qgb2YgdGhlIHN0cnVjdC4gIEp1c3QgaGF2ZSB0aGUgc2NoZWR1bGVyIHBv
aW50IHRvIHRoZQogICogb25lIGl0IHdhbnRzIChUaGlzIG1heSBiZSB0aGUgb25lIHJpZ2h0IGlu
IGZyb250IG9mIGl0KS4qLwotc3RydWN0IHNjaGVkdWxlX2RhdGEgeworc3RydWN0IHNjaGVkX3Jl
c291cmNlIHsKICAgICBzcGlubG9ja190ICAgICAgICAgKnNjaGVkdWxlX2xvY2ssCiAgICAgICAg
ICAgICAgICAgICAgICAgIF9sb2NrOwogICAgIHN0cnVjdCBzY2hlZF9pdGVtICAqY3VycjsgICAg
ICAgICAgIC8qIGN1cnJlbnQgdGFzayAgICAgICAgICAgICAgICAgICAgKi8KICAgICB2b2lkICAg
ICAgICAgICAgICAgKnNjaGVkX3ByaXY7CiAgICAgc3RydWN0IHRpbWVyICAgICAgICBzX3RpbWVy
OyAgICAgICAgLyogc2NoZWR1bGluZyB0aW1lciAgICAgICAgICAgICAgICAqLwogICAgIGF0b21p
Y190ICAgICAgICAgICAgdXJnZW50X2NvdW50OyAgIC8qIGhvdyBtYW55IHVyZ2VudCB2Y3B1cyAg
ICAgICAgICAgKi8KKyAgICB1bnNpZ25lZCAgICAgICAgICAgIHByb2Nlc3NvcjsKIH07CiAKLSNk
ZWZpbmUgY3Vycl9vbl9jcHUoYykgICAgKHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgYykuY3VycikK
LQotc3RydWN0IHNjaGVkX3Jlc291cmNlIHsKLSAgICB1bnNpZ25lZCAgICAgcHJvY2Vzc29yOwot
fTsKKyNkZWZpbmUgY3Vycl9vbl9jcHUoYykgICAgKHBlcl9jcHUoc2NoZWRfcmVzLCBjKS0+Y3Vy
cikKIAotREVDTEFSRV9QRVJfQ1BVKHN0cnVjdCBzY2hlZHVsZV9kYXRhLCBzY2hlZHVsZV9kYXRh
KTsKIERFQ0xBUkVfUEVSX0NQVShzdHJ1Y3Qgc2NoZWR1bGVyICosIHNjaGVkdWxlcik7CiBERUNM
QVJFX1BFUl9DUFUoc3RydWN0IGNwdXBvb2wgKiwgY3B1cG9vbCk7CiBERUNMQVJFX1BFUl9DUFUo
c3RydWN0IHNjaGVkX3Jlc291cmNlICosIHNjaGVkX3Jlcyk7CkBAIC02OSw3ICs2NSw3IEBAIHN0
YXRpYyBpbmxpbmUgc3BpbmxvY2tfdCAqa2luZCMjX3NjaGVkdWxlX2xvY2sjI2lycShwYXJhbSBF
WFRSQV9UWVBFKGFyZykpIFwKIHsgXAogICAgIGZvciAoIDsgOyApIFwKICAgICB7IFwKLSAgICAg
ICAgc3BpbmxvY2tfdCAqbG9jayA9IHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KS5zY2hlZHVs
ZV9sb2NrOyBcCisgICAgICAgIHNwaW5sb2NrX3QgKmxvY2sgPSBwZXJfY3B1KHNjaGVkX3Jlcywg
Y3B1KS0+c2NoZWR1bGVfbG9jazsgXAogICAgICAgICAvKiBcCiAgICAgICAgICAqIHYtPnByb2Nl
c3NvciBtYXkgY2hhbmdlIHdoZW4gZ3JhYmJpbmcgdGhlIGxvY2s7IGJ1dCBcCiAgICAgICAgICAq
IHBlcl9jcHUodi0+cHJvY2Vzc29yKSBtYXkgYWxzbyBjaGFuZ2UsIGlmIGNoYW5naW5nIGNwdSBw
b29sIFwKQEAgLTc5LDcgKzc1LDcgQEAgc3RhdGljIGlubGluZSBzcGlubG9ja190ICpraW5kIyNf
c2NoZWR1bGVfbG9jayMjaXJxKHBhcmFtIEVYVFJBX1RZUEUoYXJnKSkgXAogICAgICAgICAgKiBs
b2NrIG1heSBiZSB0aGUgc2FtZTsgdGhpcyB3aWxsIHN1Y2NlZWQgaW4gdGhhdCBjYXNlLiBcCiAg
ICAgICAgICAqLyBcCiAgICAgICAgIHNwaW5fbG9jayMjaXJxKGxvY2ssICMjIGFyZyk7IFwKLSAg
ICAgICAgaWYgKCBsaWtlbHkobG9jayA9PSBwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSkuc2No
ZWR1bGVfbG9jaykgKSBcCisgICAgICAgIGlmICggbGlrZWx5KGxvY2sgPT0gcGVyX2NwdShzY2hl
ZF9yZXMsIGNwdSktPnNjaGVkdWxlX2xvY2spICkgXAogICAgICAgICAgICAgcmV0dXJuIGxvY2s7
IFwKICAgICAgICAgc3Bpbl91bmxvY2sjI2lycShsb2NrLCAjIyBhcmcpOyBcCiAgICAgfSBcCkBA
IC04OSw3ICs4NSw3IEBAIHN0YXRpYyBpbmxpbmUgc3BpbmxvY2tfdCAqa2luZCMjX3NjaGVkdWxl
X2xvY2sjI2lycShwYXJhbSBFWFRSQV9UWVBFKGFyZykpIFwKIHN0YXRpYyBpbmxpbmUgdm9pZCBr
aW5kIyNfc2NoZWR1bGVfdW5sb2NrIyNpcnEoc3BpbmxvY2tfdCAqbG9jayBcCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVYVFJBX1RZUEUoYXJnKSwgcGFy
YW0pIFwKIHsgXAotICAgIEFTU0VSVChsb2NrID09IHBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1
KS5zY2hlZHVsZV9sb2NrKTsgXAorICAgIEFTU0VSVChsb2NrID09IHBlcl9jcHUoc2NoZWRfcmVz
LCBjcHUpLT5zY2hlZHVsZV9sb2NrKTsgXAogICAgIHNwaW5fdW5sb2NrIyNpcnEobG9jaywgIyMg
YXJnKTsgXAogfQogCkBAIC0xMTgsMTEgKzExNCwxMSBAQCBzY2hlZF91bmxvY2sodmNwdSwgY29u
c3Qgc3RydWN0IHZjcHUgKnYsIHYtPnByb2Nlc3NvciwgX2lycXJlc3RvcmUsIGZsYWdzKQogCiBz
dGF0aWMgaW5saW5lIHNwaW5sb2NrX3QgKnBjcHVfc2NoZWR1bGVfdHJ5bG9jayh1bnNpZ25lZCBp
bnQgY3B1KQogewotICAgIHNwaW5sb2NrX3QgKmxvY2sgPSBwZXJfY3B1KHNjaGVkdWxlX2RhdGEs
IGNwdSkuc2NoZWR1bGVfbG9jazsKKyAgICBzcGlubG9ja190ICpsb2NrID0gcGVyX2NwdShzY2hl
ZF9yZXMsIGNwdSktPnNjaGVkdWxlX2xvY2s7CiAKICAgICBpZiAoICFzcGluX3RyeWxvY2sobG9j
aykgKQogICAgICAgICByZXR1cm4gTlVMTDsKLSAgICBpZiAoIGxvY2sgPT0gcGVyX2NwdShzY2hl
ZHVsZV9kYXRhLCBjcHUpLnNjaGVkdWxlX2xvY2sgKQorICAgIGlmICggbG9jayA9PSBwZXJfY3B1
KHNjaGVkX3JlcywgY3B1KS0+c2NoZWR1bGVfbG9jayApCiAgICAgICAgIHJldHVybiBsb2NrOwog
ICAgIHNwaW5fdW5sb2NrKGxvY2spOwogICAgIHJldHVybiBOVUxMOwotLSAKMi4xNi40CgoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1h
aWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54
ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

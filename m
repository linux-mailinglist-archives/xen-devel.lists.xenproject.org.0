Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id EB07617B61A
	for <lists+xen-devel@lfdr.de>; Fri,  6 Mar 2020 06:19:05 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jA5LG-0005TV-55; Fri, 06 Mar 2020 05:16:10 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=gwnm=4X=virtuozzo.com=vsementsov@srs-us1.protection.inumbo.net>)
 id 1jA5LE-0005TP-SY
 for xen-devel@lists.xenproject.org; Fri, 06 Mar 2020 05:16:08 +0000
X-Inumbo-ID: 95496926-5f69-11ea-a720-12813bfff9fa
Received: from relay.sw.ru (unknown [185.231.240.75])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 95496926-5f69-11ea-a720-12813bfff9fa;
 Fri, 06 Mar 2020 05:16:07 +0000 (UTC)
Received: from vovaso.qa.sw.ru ([10.94.3.0] helo=kvm.qa.sw.ru)
 by relay.sw.ru with esmtp (Exim 4.92.3)
 (envelope-from <vsementsov@virtuozzo.com>)
 id 1jA5Km-0001tg-16; Fri, 06 Mar 2020 08:15:40 +0300
From: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
To: qemu-devel@nongnu.org
Date: Fri,  6 Mar 2020 08:15:27 +0300
Message-Id: <20200306051536.27803-2-vsementsov@virtuozzo.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20200306051536.27803-1-vsementsov@virtuozzo.com>
References: <20200306051536.27803-1-vsementsov@virtuozzo.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v8 01/10] error: auto propagated local_err
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, vsementsov@virtuozzo.com,
 Laszlo Ersek <lersek@redhat.com>, qemu-block@nongnu.org,
 Paul Durrant <paul@xen.org>,
 =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>,
 Christian Schoenebeck <qemu_oss@crudebyte.com>, Greg Kurz <groug@kaod.org>,
 armbru@redhat.com, Stefano Stabellini <sstabellini@kernel.org>,
 Gerd Hoffmann <kraxel@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 Anthony Perard <anthony.perard@citrix.com>, xen-devel@lists.xenproject.org,
 Max Reitz <mreitz@redhat.com>, Eric Blake <eblake@redhat.com>,
 Michael Roth <mdroth@linux.vnet.ibm.com>,
 Stefan Berger <stefanb@linux.ibm.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

SGVyZSBpcyBpbnRyb2R1Y2VkIEVSUlBfQVVUT19QUk9QQUdBVEUgbWFjcm8sIHRvIGJlIHVzZWQg
YXQgc3RhcnQgb2YKZnVuY3Rpb25zIHdpdGggYW4gZXJycCBPVVQgcGFyYW1ldGVyLgoKSXQgaGFz
IHRocmVlIGdvYWxzOgoKMS4gRml4IGlzc3VlIHdpdGggZXJyb3JfZmF0YWwgYW5kIGVycm9yX3By
ZXBlbmQvZXJyb3JfYXBwZW5kX2hpbnQ6IHVzZXIKY2FuJ3Qgc2VlIHRoaXMgYWRkaXRpb25hbCBp
bmZvcm1hdGlvbiwgYmVjYXVzZSBleGl0KCkgaGFwcGVucyBpbgplcnJvcl9zZXRnIGVhcmxpZXIg
dGhhbiBpbmZvcm1hdGlvbiBpcyBhZGRlZC4gW1JlcG9ydGVkIGJ5IEdyZWcgS3Vyel0KCjIuIEZp
eCBpc3N1ZSB3aXRoIGVycm9yX2Fib3J0IGFuZCBlcnJvcl9wcm9wYWdhdGU6IHdoZW4gd2Ugd3Jh
cAplcnJvcl9hYm9ydCBieSBsb2NhbF9lcnIrZXJyb3JfcHJvcGFnYXRlLCB0aGUgcmVzdWx0aW5n
IGNvcmVkdW1wIHdpbGwKcmVmZXIgdG8gZXJyb3JfcHJvcGFnYXRlIGFuZCBub3QgdG8gdGhlIHBs
YWNlIHdoZXJlIGVycm9yIGhhcHBlbmVkLgoodGhlIG1hY3JvIGl0c2VsZiBkb2Vzbid0IGZpeCB0
aGUgaXNzdWUsIGJ1dCBpdCBhbGxvd3MgdXMgdG8gWzMuXSBkcm9wCnRoZSBsb2NhbF9lcnIrZXJy
b3JfcHJvcGFnYXRlIHBhdHRlcm4sIHdoaWNoIHdpbGwgZGVmaW5pdGVseSBmaXggdGhlCmlzc3Vl
KSBbUmVwb3J0ZWQgYnkgS2V2aW4gV29sZl0KCjMuIERyb3AgbG9jYWxfZXJyK2Vycm9yX3Byb3Bh
Z2F0ZSBwYXR0ZXJuLCB3aGljaCBpcyB1c2VkIHRvIHdvcmthcm91bmQKdm9pZCBmdW5jdGlvbnMg
d2l0aCBlcnJwIHBhcmFtZXRlciwgd2hlbiBjYWxsZXIgd2FudHMgdG8ga25vdyByZXN1bHRpbmcK
c3RhdHVzLiAoTm90ZTogYWN0dWFsbHkgdGhlc2UgZnVuY3Rpb25zIGNvdWxkIGJlIG1lcmVseSB1
cGRhdGVkIHRvCnJldHVybiBpbnQgZXJyb3IgY29kZSkuCgpUbyBhY2hpZXZlIHRoZXNlIGdvYWxz
LCBsYXRlciBwYXRjaGVzIHdpbGwgYWRkIGludm9jYXRpb25zCm9mIHRoaXMgbWFjcm8gYXQgdGhl
IHN0YXJ0IG9mIGZ1bmN0aW9ucyB3aXRoIGVpdGhlciB1c2UKZXJyb3JfcHJlcGVuZC9lcnJvcl9h
cHBlbmRfaGludCAoc29sdmluZyAxKSBvciB3aGljaCB1c2UKbG9jYWxfZXJyK2Vycm9yX3Byb3Bh
Z2F0ZSB0byBjaGVjayBlcnJvcnMsIHN3aXRjaGluZyB0aG9zZQpmdW5jdGlvbnMgdG8gdXNlICpl
cnJwIGluc3RlYWQgKHNvbHZpbmcgMiBhbmQgMykuCgpTaWduZWQtb2ZmLWJ5OiBWbGFkaW1pciBT
ZW1lbnRzb3YtT2dpZXZza2l5IDx2c2VtZW50c292QHZpcnR1b3p6by5jb20+Ci0tLQoKQ2M6IEVy
aWMgQmxha2UgPGVibGFrZUByZWRoYXQuY29tPgpDYzogS2V2aW4gV29sZiA8a3dvbGZAcmVkaGF0
LmNvbT4KQ2M6IE1heCBSZWl0eiA8bXJlaXR6QHJlZGhhdC5jb20+CkNjOiBHcmVnIEt1cnogPGdy
b3VnQGthb2Qub3JnPgpDYzogQ2hyaXN0aWFuIFNjaG9lbmViZWNrIDxxZW11X29zc0BjcnVkZWJ5
dGUuY29tPgpDYzogU3RlZmFubyBTdGFiZWxsaW5pIDxzc3RhYmVsbGluaUBrZXJuZWwub3JnPgpD
YzogQW50aG9ueSBQZXJhcmQgPGFudGhvbnkucGVyYXJkQGNpdHJpeC5jb20+CkNjOiBQYXVsIER1
cnJhbnQgPHBhdWxAeGVuLm9yZz4KQ2M6IFN0ZWZhbiBIYWpub2N6aSA8c3RlZmFuaGFAcmVkaGF0
LmNvbT4KQ2M6ICJQaGlsaXBwZSBNYXRoaWV1LURhdWTDqSIgPHBoaWxtZEByZWRoYXQuY29tPgpD
YzogTGFzemxvIEVyc2VrIDxsZXJzZWtAcmVkaGF0LmNvbT4KQ2M6IEdlcmQgSG9mZm1hbm4gPGty
YXhlbEByZWRoYXQuY29tPgpDYzogU3RlZmFuIEJlcmdlciA8c3RlZmFuYkBsaW51eC5pYm0uY29t
PgpDYzogTWFya3VzIEFybWJydXN0ZXIgPGFybWJydUByZWRoYXQuY29tPgpDYzogTWljaGFlbCBS
b3RoIDxtZHJvdGhAbGludXgudm5ldC5pYm0uY29tPgpDYzogcWVtdS1ibG9ja0Bub25nbnUub3Jn
CkNjOiBxZW11LWRldmVsQG5vbmdudS5vcmcKQ2M6IHhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0
Lm9yZwoKIGluY2x1ZGUvcWFwaS9lcnJvci5oIHwgMjAzICsrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxNzAgaW5zZXJ0aW9ucygrKSwg
MzMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9xYXBpL2Vycm9yLmggYi9pbmNs
dWRlL3FhcGkvZXJyb3IuaAppbmRleCBhZDViNmU4OTZkLi5iYjliY2YwMmZiIDEwMDY0NAotLS0g
YS9pbmNsdWRlL3FhcGkvZXJyb3IuaAorKysgYi9pbmNsdWRlL3FhcGkvZXJyb3IuaApAQCAtMTUs
NiArMTUsOCBAQAogLyoKICAqIEVycm9yIHJlcG9ydGluZyBzeXN0ZW0gbG9vc2VseSBwYXR0ZXJu
ZWQgYWZ0ZXIgR2xpYidzIEdFcnJvci4KICAqCisgKiA9IERlYWwgd2l0aCBFcnJvciBvYmplY3Qg
PQorICoKICAqIENyZWF0ZSBhbiBlcnJvcjoKICAqICAgICBlcnJvcl9zZXRnKCZlcnIsICJzaXR1
YXRpb24gbm9ybWFsLCBhbGwgZm91bGVkIHVwIik7CiAgKgpAQCAtNDcsMjggKzQ5LDg4IEBACiAg
KiByZXBvcnRpbmcgaXQgKHByaW1hcmlseSB1c2VmdWwgaW4gdGVzdHN1aXRlcyk6CiAgKiAgICAg
ZXJyb3JfZnJlZV9vcl9hYm9ydCgmZXJyKTsKICAqCi0gKiBQYXNzIGFuIGV4aXN0aW5nIGVycm9y
IHRvIHRoZSBjYWxsZXI6Ci0gKiAgICAgZXJyb3JfcHJvcGFnYXRlKGVycnAsIGVycik7Ci0gKiB3
aGVyZSBFcnJvciAqKmVycnAgaXMgYSBwYXJhbWV0ZXIsIGJ5IGNvbnZlbnRpb24gdGhlIGxhc3Qg
b25lLgorICogPSBEZWFsIHdpdGggRXJyb3IgKiogZnVuY3Rpb24gcGFyYW1ldGVyID0KICAqCi0g
KiBQYXNzIGFuIGV4aXN0aW5nIGVycm9yIHRvIHRoZSBjYWxsZXIgd2l0aCB0aGUgbWVzc2FnZSBt
b2RpZmllZDoKLSAqICAgICBlcnJvcl9wcm9wYWdhdGVfcHJlcGVuZChlcnJwLCBlcnIpOworICog
RnVuY3Rpb24gbWF5IHVzZSBlcnJvciBzeXN0ZW0gdG8gcmV0dXJuIGVycm9ycy4gSW4gdGhpcyBj
YXNlIGZ1bmN0aW9uCisgKiBkZWZpbmVzIEVycm9yICoqZXJycCBwYXJhbWV0ZXIsIHdoaWNoIHNo
b3VsZCBiZSB0aGUgbGFzdCBvbmUgKGV4Y2VwdCBmb3IKKyAqIGZ1bmN0aW9ucyB3aGljaCB2YXJp
ZGljIGFyZ3VtZW50IGxpc3QpLCB3aGljaCBoYXMgdGhlIGZvbGxvd2luZyBBUEk6CiAgKgotICog
QXZvaWQKLSAqICAgICBlcnJvcl9wcm9wYWdhdGUoZXJycCwgZXJyKTsKLSAqICAgICBlcnJvcl9w
cmVwZW5kKGVycnAsICJDb3VsZCBub3QgZnJvYm5pY2F0ZSAnJXMnOiAiLCBuYW1lKTsKLSAqIGJl
Y2F1c2UgdGhpcyBmYWlscyB0byBwcmVwZW5kIHdoZW4gQGVycnAgaXMgJmVycm9yX2ZhdGFsLgor
ICogQ2FsbGVyIG1heSBwYXNzIGFzIGVycnA6CisgKiAxLiAmZXJyb3JfYWJvcnQKKyAqICAgIFRo
aXMgbWVhbnMgYWJvcnQgb24gYW55IGVycm9yCisgKiAyLiAmZXJyb3JfZmF0YWwKKyAqICAgIEV4
aXQgd2l0aCBub24temVybyByZXR1cm4gY29kZSBvbiBlcnJvcgorICogMy4gTlVMTAorICogICAg
SWdub3JlIGVycm9ycworICogNC4gQW5vdGhlciB2YWx1ZQorICogICAgT24gZXJyb3IgYWxsb2Nh
dGUgZXJyb3Igb2JqZWN0IGFuZCBzZXQgZXJycAogICoKLSAqIENyZWF0ZSBhIG5ldyBlcnJvciBh
bmQgcGFzcyBpdCB0byB0aGUgY2FsbGVyOgotICogICAgIGVycm9yX3NldGcoZXJycCwgInNpdHVh
dGlvbiBub3JtYWwsIGFsbCBmb3VsZWQgdXAiKTsKKyAqIEVycm9yIEFQSSBmdW5jdGlvbnMgd2l0
aCBFcnJvciAqKiAobGlrZSBlcnJvcl9zZXRnKSBhcmd1bWVudCBzdXBwb3J0cyB0aGVzZQorICog
cnVsZXMsIHNvIHVzZXIgZnVuY3Rpb25zIGp1c3QgbmVlZCB0byB1c2UgdGhlbSBhcHByb3ByaWF0
ZWx5IChyZWFkIGJlbG93KS4KICAqCi0gKiBDYWxsIGEgZnVuY3Rpb24gYW5kIHJlY2VpdmUgYW4g
ZXJyb3IgZnJvbSBpdDoKKyAqIFNpbXBsZSBwYXNzIGVycm9yIHRvIHRoZSBjYWxsZXI6CisgKiAg
ICAgZXJyb3Jfc2V0ZyhlcnJwLCAiU29tZSBlcnJvciIpOworICoKKyAqIFN1YmNhbGwgb2YgYW5v
dGhlciBlcnJwLWJhc2VkIGZ1bmN0aW9uLCBwYXNzaW5nIHRoZSBlcnJvciB0byB0aGUgY2FsbGVy
CisgKiAgICAgZiguLi4sIGVycnApOworICoKKyAqID09IENoZWNraW5nIHN1Y2Nlc3Mgb2Ygc3Vi
Y2FsbCA9PQorICoKKyAqIElmIGZ1bmN0aW9uIHJldHVybnMgZXJyb3IgY29kZSBpbiBhZGRpdGlv
biB0byBlcnJwICh3aGljaCBpcyByZWNvbW1lbmRlZCksCisgKiB5b3UgZG9uJ3QgbmVlZCBhbnkg
YWRkaXRpb25hbCBjb2RlLCBqdXN0IGRvOgorICogICAgIGludCByZXQgPSBmKC4uLiwgZXJycCk7
CisgKiAgICAgaWYgKHJldCA8IDApIHsKKyAqICAgICAgICAgLi4uIGhhbmRsZSBlcnJvciAuLi4K
KyAqICAgICAgICAgcmV0dXJuIHJldDsKKyAqICAgICB9CisgKgorICogSWYgZnVuY3Rpb24gcmV0
dXJucyBub3RoaW5nICh3aGljaCBpcyBub3QgcmVjb21tZW5kZWQgQVBJKSBhbmQgdGhlIG9ubHkg
d2F5CisgKiB0byBjaGVjayBzdWNjZXNzIGlzIGNoZWNraW5nIGVycnAsIHdlIG11c3QgY2FyZSBh
Ym91dCBjYXNlcyBbMS0zXSBhYm92ZS4gV2UKKyAqIG5lZWQgdG8gdXNlIG1hY3JvIEVSUlBfQVVU
T19QUk9QQUdBVEUgKHNlZSBiZWxvdyBmb3IgZGV0YWlscykgbGlrZSB0aGlzOgorICoKKyAqICAg
ICBpbnQgb3VyX2Z1bmMoLi4uLCBFcnJvciAqKmVycnApIHsKKyAqICAgICAgICAgRVJSUF9BVVRP
X1BST1BBR0FURSgpOworICogICAgICAgICAuLi4KKyAqICAgICAgICAgc3ViY2FsbCguLi4sIGVy
cnApOworICogICAgICAgICBpZiAoKmVycnApIHsKKyAqICAgICAgICAgICAgIC4uLgorICogICAg
ICAgICAgICAgcmV0dXJuIC1FUlJOTzsKKyAqICAgICAgICAgfQorICogICAgICAgICAuLi4KKyAq
ICAgICB9CisgKgorICogRVJSUF9BVVRPX1BST1BBR0FURSBjYXJlcyBhYm91dCBFcnJvciAqKiBB
UEksIHdyYXBzIG9yaWdpbmFsIGVycnAgaWYgbmVlZGVkLAorICogc28gdGhhdCBpdCBjYW4gYmUg
c2FmZWx5IHVzZWQgKGluY2x1ZGluZyBkZXJlZmVyZW5jaW5nKSwgYW5kIGF1dG8tcHJvcGFnYXRl
cworICogZXJyb3IgdG8gb3JpZ2luYWwgZXJycCBvbiBmdW5jdGlvbiBlbmQuCisgKgorICogSW4g
c29tZSBjYXNlcywgd2UgbmVlZCB0byBjaGVjayByZXN1bHQgb2Ygc3ViY2FsbCwgYnV0IGRvIG5v
dCB3YW50IHRvCisgKiBwcm9wYWdhdGUgdGhlIEVycm9yIG9iamVjdCB0byBvdXIgY2FsbGVyLiBJ
biBzdWNoIGNhc2VzIHdlIGRvbid0IG5lZWQKKyAqIEVSUlBfQVVUT19QUk9QQUdBVEUsIGJ1dCBq
dXN0IGEgbG9jYWwgRXJyb3Igb2JqZWN0OgorICoKKyAqIFJlY2VpdmUgYW4gZXJyb3IgYW5kIG5v
dCBwYXNzIGl0OgogICogICAgIEVycm9yICplcnIgPSBOVUxMOwotICogICAgIGZvbyhhcmcsICZl
cnIpOworICogICAgIHN1YmNhbGwoYXJnLCAmZXJyKTsKICAqICAgICBpZiAoZXJyKSB7CiAgKiAg
ICAgICAgIGhhbmRsZSB0aGUgZXJyb3IuLi4KKyAqICAgICAgICAgZXJyb3JfZnJlZShlcnIpOwog
ICogICAgIH0KICAqCisgKiBOb3RlLCB0aGF0IGJlZm9yZSBFUlJQX0FVVE9fUFJPUEFHQVRFIGlu
dHJvZHVjdGlvbiB0aGUgcGF0dGVybiBhYm92ZSAod2l0aAorICogZXJyb3JfcHJvcGFnYXRlKCkg
aW5zdGVhZCBvZiBlcnJvcl9mcmVlKCkpIHdhcyB1c2VkIHRvIGNoZWNrIGFuZCBwYXNzIGVycm9y
CisgKiB0byB0aGUgY2FsbGVyLiBOb3cgdGhpcyBpcyBERVBSRUNBVEVEKiAoc2VlIGJlbG93KS4K
KyAqCisgKiBOb3RlIGFsc28sIHRoYXQgaWYgeW91IHdhbnQgdG8gdXNlIGVycm9yX2FwcGVuZF9o
aW50L2Vycm9yX3ByZXBlbmQgb3IgdGhlaXIKKyAqIHZhcmlhbnRzLCB5b3UgbXVzdCB1c2UgRVJS
UF9BVVRPX1BST1BBR0FURSB0b28uIE90aGVyd2lzZSwgaW4gY2FzZSBvZgorICogZXJyb3JfZmF0
YWwsIHlvdSdsbCBtaXNzIHRoZSBjaGFuY2UgdG8gaW5zZXJ0IHlvdXIgYWRkaXRpb25hbCBpbmZv
cm1hdGlvbgorICogaW50byBFcnJvciBvYmplY3QuCisgKgorICogSW4gcmFyZSBjYXNlcywgd2Ug
bmVlZCB0byBwYXNzIGV4aXN0aW5nIEVycm9yIG9iamVjdCB0byB0aGUgY2FsbGVyIGJ5IGhhbmQ6
CisgKiAgICAgZXJyb3JfcHJvcGFnYXRlKGVycnAsIGVycik7CisgKgorICogUGFzcyBhbiBleGlz
dGluZyBlcnJvciB0byB0aGUgY2FsbGVyIHdpdGggdGhlIG1lc3NhZ2UgbW9kaWZpZWQ6CisgKiAg
ICAgZXJyb3JfcHJvcGFnYXRlX3ByZXBlbmQoZXJycCwgZXJyKTsKKyAqCisgKgogICogQ2FsbCBh
IGZ1bmN0aW9uIGlnbm9yaW5nIGVycm9yczoKICAqICAgICBmb28oYXJnLCBOVUxMKTsKICAqCkBA
IC03OCwyNiArMTQwLDYgQEAKICAqIENhbGwgYSBmdW5jdGlvbiB0cmVhdGluZyBlcnJvcnMgYXMg
ZmF0YWw6CiAgKiAgICAgZm9vKGFyZywgJmVycm9yX2ZhdGFsKTsKICAqCi0gKiBSZWNlaXZlIGFu
IGVycm9yIGFuZCBwYXNzIGl0IG9uIHRvIHRoZSBjYWxsZXI6Ci0gKiAgICAgRXJyb3IgKmVyciA9
IE5VTEw7Ci0gKiAgICAgZm9vKGFyZywgJmVycik7Ci0gKiAgICAgaWYgKGVycikgewotICogICAg
ICAgICBoYW5kbGUgdGhlIGVycm9yLi4uCi0gKiAgICAgICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJw
LCBlcnIpOwotICogICAgIH0KLSAqIHdoZXJlIEVycm9yICoqZXJycCBpcyBhIHBhcmFtZXRlciwg
YnkgY29udmVudGlvbiB0aGUgbGFzdCBvbmUuCi0gKgotICogRG8gKm5vdCogIm9wdGltaXplIiB0
aGlzIHRvCi0gKiAgICAgZm9vKGFyZywgZXJycCk7Ci0gKiAgICAgaWYgKCplcnJwKSB7IC8vIFdS
T05HIQotICogICAgICAgICBoYW5kbGUgdGhlIGVycm9yLi4uCi0gKiAgICAgfQotICogYmVjYXVz
ZSBlcnJwIG1heSBiZSBOVUxMIQotICoKLSAqIEJ1dCB3aGVuIGFsbCB5b3UgZG8gd2l0aCB0aGUg
ZXJyb3IgaXMgcGFzcyBpdCBvbiwgcGxlYXNlIHVzZQotICogICAgIGZvbyhhcmcsIGVycnApOwot
ICogZm9yIHJlYWRhYmlsaXR5LgotICoKICAqIFJlY2VpdmUgYW5kIGFjY3VtdWxhdGUgbXVsdGlw
bGUgZXJyb3JzIChmaXJzdCBvbmUgd2lucyk6CiAgKiAgICAgRXJyb3IgKmVyciA9IE5VTEwsICps
b2NhbF9lcnIgPSBOVUxMOwogICogICAgIGZvbyhhcmcsICZlcnIpOwpAQCAtMTE0LDYgKzE1Niw2
MSBAQAogICogICAgICAgICBoYW5kbGUgdGhlIGVycm9yLi4uCiAgKiAgICAgfQogICogYmVjYXVz
ZSB0aGlzIG1heSBwYXNzIGEgbm9uLW51bGwgZXJyIHRvIGJhcigpLgorICoKKyAqIERFUFJFQ0FU
RUQqCisgKgorICogVGhlIGZvbGxvd2luZyBwYXR0ZXJuIG9mIHJlY2VpdmluZyBjaGVja2luZyBh
bmQgcGFzc2luZyB0aGUgY2FsbGVyIG9mIHRoZQorICogZXJyb3IgYnkgaGFuZCBpcyBkZXByZWNh
dGVkIG5vdzoKKyAqCisgKiAgICAgRXJyb3IgKmVyciA9IE5VTEw7CisgKiAgICAgZm9vKGFyZywg
JmVycik7CisgKiAgICAgaWYgKGVycikgeworICogICAgICAgICBoYW5kbGUgdGhlIGVycm9yLi4u
CisgKiAgICAgICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBlcnIpOworICogICAgIH0KKyAqCisg
KiBJbnN0ZWFkLCB1c2UgRVJSUF9BVVRPX1BST1BBR0FURSBtYWNybyAoZGVmaW5lZCBiZWxvdyku
CisgKgorICogVGhlIG9sZCBwYXR0ZXJuIGlzIGRlcHJlY2F0ZWQgYmVjYXVzZSBvZiB0d28gdGhp
bmdzOgorICoKKyAqIDEuIElzc3VlIHdpdGggZXJyb3JfYWJvcnQgYW5kIGVycm9yX3Byb3BhZ2F0
ZTogd2hlbiB3ZSB3cmFwIGVycm9yX2Fib3J0IGJ5CisgKiBsb2NhbF9lcnIrZXJyb3JfcHJvcGFn
YXRlLCB0aGUgcmVzdWx0aW5nIGNvcmVkdW1wIHdpbGwgcmVmZXIgdG8KKyAqIGVycm9yX3Byb3Bh
Z2F0ZSBhbmQgbm90IHRvIHRoZSBwbGFjZSB3aGVyZSBlcnJvciBoYXBwZW5lZC4KKyAqCisgKiAy
LiBBIGxvdCBvZiBleHRyYSBjb2RlIG9mIHRoZSBzYW1lIHBhdHRlcm4KKyAqCisgKiBIb3cgdG8g
dXBkYXRlIG9sZCBjb2RlIHRvIHVzZSBFUlJQX0FVVE9fUFJPUEFHQVRFPworICoKKyAqIEFsbCB5
b3UgbmVlZCBpcyB0byBhZGQgRVJSUF9BVVRPX1BST1BBR0FURSgpIGludm9jYXRpb24gYXQgZnVu
Y3Rpb24gc3RhcnQsCisgKiB0aGFuIHlvdSBtYXkgc2FmZWx5IGRlcmVmZXJlbmNlIGVycnAgdG8g
Y2hlY2sgZXJyb3JzIGFuZCBkbyBub3QgbmVlZCBhbnkKKyAqIGFkZGl0aW9uYWwgbG9jYWwgRXJy
b3IgdmFyaWFibGVzIG9yIGNhbGxzIHRvIGVycm9yX3Byb3BhZ2F0ZSgpLgorICoKKyAqIEV4YW1w
bGU6CisgKgorICogb2xkIGNvZGUKKyAqCisgKiAgICAgdm9pZCBmbiguLi4sIEVycm9yICoqZXJy
cCkgeworICogICAgICAgICBFcnJvciAqZXJyID0gTlVMTDsKKyAqICAgICAgICAgZm9vKGFyZywg
JmVycik7CisgKiAgICAgICAgIGlmIChlcnIpIHsKKyAqICAgICAgICAgICAgIGhhbmRsZSB0aGUg
ZXJyb3IuLi4KKyAqICAgICAgICAgICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBlcnIpOworICog
ICAgICAgICAgICAgcmV0dXJuOworICogICAgICAgICB9CisgKiAgICAgICAgIC4uLgorICogICAg
IH0KKyAqCisgKiB1cGRhdGVkIGNvZGUKKyAqCisgKiAgICAgdm9pZCBmbiguLi4sIEVycm9yICoq
ZXJycCkgeworICogICAgICAgICBFUlJQX0FVVE9fUFJPUEFHQVRFKCk7CisgKiAgICAgICAgIGZv
byhhcmcsIGVycnApOworICogICAgICAgICBpZiAoKmVycnApIHsKKyAqICAgICAgICAgICAgIGhh
bmRsZSB0aGUgZXJyb3IuLi4KKyAqICAgICAgICAgICAgIHJldHVybjsKKyAqICAgICAgICAgfQor
ICogICAgICAgICAuLi4KKyAqICAgICB9CiAgKi8KIAogI2lmbmRlZiBFUlJPUl9ICkBAIC0zMjIs
NiArNDE5LDQ2IEBAIHZvaWQgZXJyb3Jfc2V0X2ludGVybmFsKEVycm9yICoqZXJycCwKICAgICAg
ICAgICAgICAgICAgICAgICAgIEVycm9yQ2xhc3MgZXJyX2NsYXNzLCBjb25zdCBjaGFyICpmbXQs
IC4uLikKICAgICBHQ0NfRk1UX0FUVFIoNiwgNyk7CiAKK3R5cGVkZWYgc3RydWN0IEVycm9yUHJv
cGFnYXRvciB7CisgICAgRXJyb3IgKmxvY2FsX2VycjsKKyAgICBFcnJvciAqKmVycnA7Cit9IEVy
cm9yUHJvcGFnYXRvcjsKKworc3RhdGljIGlubGluZSB2b2lkIGVycm9yX3Byb3BhZ2F0b3JfY2xl
YW51cChFcnJvclByb3BhZ2F0b3IgKnByb3ApCit7CisgICAgZXJyb3JfcHJvcGFnYXRlKHByb3At
PmVycnAsIHByb3AtPmxvY2FsX2Vycik7Cit9CisKK0dfREVGSU5FX0FVVE9fQ0xFQU5VUF9DTEVB
Ul9GVU5DKEVycm9yUHJvcGFnYXRvciwgZXJyb3JfcHJvcGFnYXRvcl9jbGVhbnVwKTsKKworLyoK
KyAqIEVSUlBfQVVUT19QUk9QQUdBVEUKKyAqCisgKiBUaGlzIG1hY3JvIGlzIGNyZWF0ZWQgdG8g
YmUgdGhlIGZpcnN0IGxpbmUgb2YgYSBmdW5jdGlvbiB3aGljaCB1c2UKKyAqIEVycm9yICoqZXJy
cCBwYXJhbWV0ZXIgdG8gcmVwb3J0IGVycm9yLiBJdCdzIG5lZWRlZCBvbmx5IGluIGNhc2VzIHdo
ZXJlIHdlCisgKiB3YW50IHRvIHVzZSBlcnJvcl9wcmVwZW5kLCBlcnJvcl9hcHBlbmRfaGludCBv
ciBkZXJlZmVyZW5jZSAqZXJycC4gSXQncworICogc3RpbGwgc2FmZSAoYnV0IHVzZWxlc3MpIGlu
IG90aGVyIGNhc2VzLgorICoKKyAqIElmIGVycnAgaXMgTlVMTCBvciBwb2ludHMgdG8gZXJyb3Jf
ZmF0YWwsIGl0IGlzIHJld3JpdHRlbiB0byBwb2ludCB0byBhCisgKiBsb2NhbCBFcnJvciBvYmpl
Y3QsIHdoaWNoIHdpbGwgYmUgYXV0b21hdGljYWxseSBwcm9wYWdhdGVkIHRvIHRoZSBvcmlnaW5h
bAorICogZXJycCBvbiBmdW5jdGlvbiBleGl0IChzZWUgZXJyb3JfcHJvcGFnYXRvcl9jbGVhbnVw
KS4KKyAqCisgKiBBZnRlciBpbnZvY2F0aW9uIG9mIHRoaXMgbWFjcm8gaXQgaXMgYWx3YXlzIHNh
ZmUgdG8gZGVyZWZlcmVuY2UgZXJycAorICogKGFzIGl0J3Mgbm90IE5VTEwgYW55bW9yZSkgYW5k
IHRvIGFkZCBpbmZvcm1hdGlvbiBieSBlcnJvcl9wcmVwZW5kIG9yCisgKiBlcnJvcl9hcHBlbmRf
aGludCAoYXMsIGlmIGl0IHdhcyBlcnJvcl9mYXRhbCwgd2Ugc3dhcHBlZCBpdCB3aXRoIGEKKyAq
IGxvY2FsX2Vycm9yIHRvIGJlIHByb3BhZ2F0ZWQgb24gY2xlYW51cCkuCisgKgorICogTm90ZTog
d2UgZG9uJ3Qgd3JhcCB0aGUgZXJyb3JfYWJvcnQgY2FzZSwgYXMgd2Ugd2FudCByZXN1bHRpbmcg
Y29yZWR1bXAKKyAqIHRvIHBvaW50IHRvIHRoZSBwbGFjZSB3aGVyZSB0aGUgZXJyb3IgaGFwcGVu
ZWQsIG5vdCB0byBlcnJvcl9wcm9wYWdhdGUuCisgKi8KKyNkZWZpbmUgRVJSUF9BVVRPX1BST1BB
R0FURSgpIFwKKyAgICBnX2F1dG8oRXJyb3JQcm9wYWdhdG9yKSBfYXV0b19lcnJwX3Byb3AgPSB7
LmVycnAgPSBlcnJwfTsgXAorICAgIGRvIHsgXAorICAgICAgICBpZiAoIWVycnAgfHwgZXJycCA9
PSAmZXJyb3JfZmF0YWwpIHsgXAorICAgICAgICAgICAgZXJycCA9ICZfYXV0b19lcnJwX3Byb3Au
bG9jYWxfZXJyOyBcCisgICAgICAgIH0gXAorICAgIH0gd2hpbGUgKDApCisKIC8qCiAgKiBTcGVj
aWFsIGVycm9yIGRlc3RpbmF0aW9uIHRvIGFib3J0IG9uIGVycm9yLgogICogU2VlIGVycm9yX3Nl
dGcoKSBhbmQgZXJyb3JfcHJvcGFnYXRlKCkgZm9yIGRldGFpbHMuCi0tIAoyLjIxLjAKCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFp
bGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhl
bnByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 29D2FBF469
	for <lists+xen-devel@lfdr.de>; Thu, 26 Sep 2019 15:51:48 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iDU9N-00021R-K4; Thu, 26 Sep 2019 13:49:41 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=njQ1=XV=intel.com=chao.gao@srs-us1.protection.inumbo.net>)
 id 1iDU9M-00021K-9x
 for xen-devel@lists.xenproject.org; Thu, 26 Sep 2019 13:49:40 +0000
X-Inumbo-ID: 7a879e70-e064-11e9-8628-bc764e2007e4
Received: from mga04.intel.com (unknown [192.55.52.120])
 by localhost (Halon) with ESMTPS
 id 7a879e70-e064-11e9-8628-bc764e2007e4;
 Thu, 26 Sep 2019 13:49:37 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Sep 2019 06:49:36 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,552,1559545200"; d="scan'208";a="189126011"
Received: from gao-cwp.sh.intel.com ([10.239.159.26])
 by fmsmga008.fm.intel.com with ESMTP; 26 Sep 2019 06:49:34 -0700
From: Chao Gao <chao.gao@intel.com>
To: xen-devel@lists.xenproject.org
Date: Thu, 26 Sep 2019 21:53:28 +0800
Message-Id: <1569506015-26938-1-git-send-email-chao.gao@intel.com>
X-Mailer: git-send-email 1.9.1
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v11 0/7] improve late microcode loading
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sergey Dyasli <sergey.dyasli@citrix.com>, Ashok Raj <ashok.raj@intel.com>,
 Wei Liu <wl@xen.org>, Andrew Cooper <andrew.cooper3@citrix.com>,
 Jan Beulich <jbeulich@suse.com>, Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Chao Gao <chao.gao@intel.com>, Brian Woods <brian.woods@amd.com>,
 Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

Q2hhbmdlcyBpbiB2MTE6CiAtIHJlamVjdCBsYXRlIHVjb2RlIGxvYWRpbmcgaWYgYW55IGNvcmUg
aXMgcGFya2VkCiAtIGNvcnJlY3QgdGhlIHVzYWdlIG9mIG1pY3JvY29kZV9tdXRleCBpbiBtaWNy
b2NvZGVfdXBkYXRlX2NwdSgpCiAtIGV4dGVuZCAndWNvZGUnIGJvb3Qgb3B0aW9uIHRvIGVuYWJs
ZS9kaXNhYmxlIHVjb2RlIGxvYWRpbmcgaW4gTk1JCiAtIGRyb3AgdGhlIGxhc3QgdHdvIHBhdGNo
ZXMgb2YgdjEwIChhYm91dCBCREY5MCBhbmQgd2JpbnZkLCBJIGhhdmVuJ3QKIGdldCBhbiBhbnN3
ZXIgdG8gb3BlbnMgeWV0KS4KIC0gb3RoZXIgbWlub3IgY2hhbmdlcyBhcmUgZGVzY3JpYmVkIGlu
IGVhY2ggcGF0Y2gncyBjaGFuZ2UgbG9nCgpSZWdhcmRpbmcgY2hhbmdlcyB0byBBTUQgc2lkZSwg
SSBkaWRuJ3QgZG8gYW55IHRlc3QgZm9yIHRoZW0gZHVlIHRvCmxhY2sgb2YgaGFyZHdhcmUuCgpU
aGUgaW50ZW50aW9uIG9mIHRoaXMgc2VyaWVzIGlzIHRvIG1ha2UgdGhlIGxhdGUgbWljcm9jb2Rl
IGxvYWRpbmcKbW9yZSByZWxpYWJsZSBieSByZW5kZXp2b3VzaW5nIGFsbCBjcHVzIGluIHN0b3Bf
bWFjaGluZSBjb250ZXh0LgpUaGlzIGlkZWEgY29tZXMgZnJvbSBBc2hvay4gSSBhbSBwb3J0aW5n
IGhpcyBsaW51eCBwYXRjaCB0byBYZW4KKHNlZSBwYXRjaCA0IG1vcmUgZGV0YWlscykuCgpUaGlz
IHNlcmllcyBpbmNsdWRlcyBiZWxvdyBjaGFuZ2VzOgogMS4gUGF0Y2ggMS0zOiBjbGVhbnVwIGFu
ZCBwcmVwYXJhdGlvbiBmb3Igc3luY2hyb25pemluZyB1Y29kZSBsb2FkaW5nCiAyLiBQYXRjaCA0
OiBzeW5jaHJvbml6ZSBsYXRlIG1pY3JvY29kZSBsb2FkaW5nCiAzLiBQYXRjaCA1OiBzdXBwb3J0
IHBhcmFsbGVsIG1pY3JvY29kZXMgdXBkYXRlIG9uIGRpZmZlcmVudCBjb3JlcwogNC4gUGF0Y2gg
NjogcmVuZGV6dm91cyBDUFVzIGluIE5NSSBoYW5kbGVyIGFuZCBsb2FkIHVjb2RlCiA1LiBQYXRj
aCA3OiByZWplY3QgbGF0ZSB1Y29kZSBsb2FkaW5nIGlmIGFueSBjb3JlIGlzIHBhcmtlZAoKQ3Vy
cmVudGx5LCBsYXRlIG1pY3JvY29kZSBsb2FkaW5nIGRvZXMgYSBsb3Qgb2YgdGhpbmdzIGluY2x1
ZGluZwpwYXJzaW5nIG1pY3JvY29kZSBibG9iLCBjaGVja2luZyB0aGUgc2lnbmF0dXJlL3Jldmlz
aW9uIGFuZCBwZXJmb3JtaW5nCnVwZGF0ZS4gUHV0dGluZyBhbGwgb2YgdGhlbSBpbnRvIHN0b3Bf
bWFjaGluZSBjb250ZXh0IGlzIGEgYmFkIGlkZWEKYmVjYXVzZSBvZiBjb21wbGV4aXR5IChvbmUg
aXNzdWUgSSBvYnNlcnZlZCBpcyBtZW1vcnkgYWxsb2NhdGlvbgp0cmlnZ2VyZWQgb25lIGFzc2Vy
dGlvbiBpbiBzdG9wX21hY2hpbmUgY29udGV4dCkuIFRvIHNpbXBsaWZ5IHRoZQpsb2FkIHByb2Nl
c3MsIHBhcnNpbmcgbWljcm9jb2RlIGlzIG1vdmVkIG91dCBvZiB0aGUgbG9hZCBwcm9jZXNzLgpS
ZW1haW5pbmcgcGFydHMgb2YgbG9hZCBwcm9jZXNzIGlzIHB1dCB0byBzdG9wX21hY2hpbmUgY29u
dGV4dC4KClByZXZpb3VzIGNoYW5nZSBsb2c6Ck1ham9yIGNoYW5nZXMgaW4gdmVyc2lvbiAxMDoK
IC0gYWRkIGJhY2sgdGhlIHBhdGNoIHRvIGNhbGwgd2JpbnZkKCkgY29uZGl0aW9uYWxseQogLSBh
ZGQgYSBwYXRjaCB0byBkaXNhYmxlIGxhdGUgbG9hZGluZyBkdWUgdG8gQkRGOTAKIC0gcmVuZGV6
dm91cyBDUFVzIGluIE5NSSBoYW5kbGVyIGFuZCBsb2FkIHVjb2RlLiBCdXQgcHJvdmlkZSBhbiBv
cHRpb24KIHRvIGRpc2FibGUgdGhpcyBiZWhhdmlvci4KIC0gYXZvaWQgdGhlIGNhbGwgb2Ygc2Vs
Zl9ubWkoKSBvbiB0aGUgY29udHJvbCB0aHJlYWQgYmVjYXVzZSBpdCBtYXkKIHRyaWdnZXIgdGhl
IHVua25vd25fbm1pX2Vycm9yKCkgaW4gZG9fbm1pKCkuCiAtIGVuc3VyZSAtPnN0YXJ0X3VwZGF0
ZSBpcyBjYWxsZWQgZHVyaW5nIHN5c3RlbSByZXN1bWluZyBmcm9tCiBzdXNwZW5zaW9uCgpDaGFu
Z2VzIGluIHZlcnNpb24gOToKIC0gYWRkIEphbidzIFJldmlld2VkLWJ5CiAtIHJlbmRldnpvdXMg
dGhyZWFkcyBpbiBOTUkgaGFuZGxlciB0byBkaXNhYmxlIE5NSS4gTm90ZSB0aGF0IE5NSSBjYW4K
IGJlIHNlcnZlZCBhcyB1c3VhbCBvbiB0aHJlYWRzIHRoYXQgYXJlIGNob3NlbiB0byBpbml0aWF0
ZSB1Y29kZSBsb2FkaW5nCiBvbiBlYWNoIGNvcmUuCiAtIGF2b2lkIHVubmVjZXNzYXJ5IG1lbW9y
eSBhbGxvY2F0aW9uIG9yIGNvcHkgd2hlbiBjcmVhdGluZyBhIG1pY3JvY29kZQogcGF0Y2ggKHBh
dGNoIDEyKQogLSByZXdvcmsgcGF0Y2ggMSB0byBhdm9pZCBtaWNyb2NvZGVfdXBkYXRlX21hdGNo
KCkgYmVpbmcgdXNlZCB0bwogY29tcGFyZSB0d28gYXJiaXRyYXJ5IHVwZGF0ZXMuCiAtIGNhbGwg
LmVuZF91cGRhdGUgaW4gZWFybHkgbG9hZGluZyBwYXRoLgoKQ2hhbmdlcyBpbiB2ZXJzaW9uIDg6
CiAtIGJsb2NrICNOTUkgaGFuZGxpbmcgZHVyaW5nIG1pY3JvY29kZSBsb2FkaW5nIChQYXRjaCAx
NikKIC0gRG9uJ3QgYXNzdW1lIHRoYXQgYWxsIENQVXMgaW4gdGhlIHN5c3RlbSBoYXZlIGxvYWRl
ZCBhIHNhbWUgdWNvZGUuCiBTbyB3aGVuIHBhcnNpbmcgYSBibG9iLCB3ZSBhdHRlbXB0IHRvIHNh
dmUgYSBwYXRjaCBhcyBsb25nIGFzIGl0IG1hdGNoZXMKIHdpdGggY3VycmVudCBjcHUgc2lnbmF0
dXJlIHJlZ2FyZGxlc3Mgb2YgdGhlIHJldmlzaW9uIG9mIHRoZSBwYXRjaC4KIEFuZCBhbHNvIGZv
ciBsb2FkaW5nLCB3ZSBvbmx5IHJlcXVpcmUgdGhlIHBhdGNoIHRvIGJlIGxvYWRlZCBpc24ndCBv
bGQKIHRoYW4gdGhlIGNhY2hlZCBvbmUuCiAtIHN0b3JlIGFuIHVwZGF0ZSBhZnRlciB0aGUgZmly
c3Qgc3VjY2Vzc2Z1bCBsb2FkaW5nIG9uIGEgQ1BVCiAtIHJlbW92ZSB0aGUgcGF0Y2ggdGhhdCBj
YWxscyB3YmludmQoKSB1bmNvbmRpdGlvbmFsbHkgYmVmb3JlIG1pY3JvY29kZQogbG9hZGluZy4g
SXQgaXMgdW5kZXIgaW50ZXJuYWwgZGlzY3Vzc2lvbi4KIC0gZGl2aWRlIHR3byBiaWcgcGF0Y2hl
cyBpbnRvIHNldmVyYWwgcGF0Y2hlcyB0byBpbXByb3ZlIHJlYWRhYmlsaXR5LgoKQ2hhbmdlcyBp
biB2ZXJzaW9uIDc6CiAtIGNhY2hlIG9uZSBtaWNyb2NvZGUgdXBkYXRlIHJhdGhlciB0aGFuIGEg
bGlzdCBvZiBpdC4gQXNzdW1pbmcgdGhhdCBhbGwgQ1BVcwogKGluY2x1ZGluZyB0aG9zZSB3aWxs
IGJlIHBsdWdnZWQgaW4gbGF0ZXIpIGluIHRoZSBzeXN0ZW0gaGF2ZSB0aGUgc2FtZQogc2lnbmF0
dXJlLCBvbmUgdXBkYXRlIG1hdGNoZXMgd2l0aCBvbmUgQ1BVIHNob3VsZCBtYXRjaCB3aXRoIG90
aGVycy4gVGh1cywgb25lCiB1cGRhdGUgaXMgZW5vdWdoIGZvciBtaWNyb2NvZGUgdXBkYXRpbmcg
ZHVyaW5nIENQVSBob3QtcGx1ZyBhbmQgcmVzdW1pbmcuCiAtIFRvIGhhbmRsZSBsb2FkIGZhaWx1
cmUsIG1pY3JvY29kZSB1cGRhdGUgaXMgY2FjaGVkIGFmdGVyIGl0IGlzIGFwcGxpZWQgdG8KIGF2
b2lkIGEgYnJva2VuIHVwZGF0ZSBvdmVycmlkaW5nIGEgdmFsaWRhdGVkIG9uZS4gVW52YWxpZGF0
ZWQgbWljcm9jb2RlIHVwZGF0ZXMKIGFyZSBwYXNzZWQgYnkgYXJndW1lbnRzIHJhdGhlciB0aGFu
IGFub3RoZXIgZ2xvYmFsIHZhcmlhYmxlLCB3aGVyZSB0aGlzIHNlcmllcwogc2xpZ2h0bHkgZGlm
ZmVycyBmcm9tIFJvZ2VyJ3Mgc3VnZ2VzdGlvbiBpbjoKIGh0dHBzOi8vbGlzdHMueGVuLm9yZy9h
cmNoaXZlcy9odG1sL3hlbi1kZXZlbC8yMDE5LTAzL21zZzAwNzc2Lmh0bWwKIC0gaW5jb3Jwb3Jh
dGUgU2VyZ2V5J3MgcGF0Y2ggKHBhdGNoIDEwKSB0byBmaXggYSBidWc6IHdlIG1haW50YWluIGEg
dmFyaWFibGUKIHRvIHJlZmxlY3QgY3VycmVudCBtaWNyb2NvZGUgcmV2aXNpb24uIEJ1dCBpbiBz
b21lIGNhc2VzLCB0aGlzIHZhcmlhYmxlIGlzbid0CiBpbml0aWFsaXplZCBkdXJpbmcgc3lzdGVt
IGJvb3QgdGltZSwgd2hpY2ggcmVzdWx0cyBpbiBmYWxzZWx5IHJlcG9ydGluZyB0aGF0CiBwcm9j
ZXNzb3IgaXMgc3VzY2VwdGlibGUgdG8gc29tZSBrbm93biB2dWxuZXJhYmlsaXRpZXMuCiAtIGZp
eCBpc3N1ZXMgcmVwb3J0ZWQgYnkgU2VyZ2V5OgogaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9y
Zy9hcmNoaXZlcy9odG1sL3hlbi1kZXZlbC8yMDE5LTAzL21zZzAwOTAxLmh0bWwKIC0gUmVzcG9u
c2VzIHRvIFNlcmdleS9Sb2dlci9XZWkvQXNob2sncyBvdGhlciBjb21tZW50cy4KCk1ham9yIGNo
YW5nZXMgaW4gdmVyc2lvbiA2OgogLSBydW4gd2JpbnZkIGJlZm9yZSB1cGRhdGluZyBtaWNyb2Nv
ZGUgKHBhdGNoIDEwKQogLSBhZGQgYW4gdXNlcnNwYWNlIHRvb2wgZm9yIGxhdGUgbWljcm9jb2Rl
IHVwZGF0ZSAocGF0Y2ggMSkKIC0gc2NhbGUgdGltZSB0byB3YWl0IGJ5IHRoZSBudW1iZXIgb2Yg
cmVtYWluaW5nIENQVXMgdG8gcmVzcG9uZCAKIC0gcmVtb3ZlICdjcHUnIHBhcmFtZXRlcnMgZnJv
bSBzb21lIHJlbGF0ZWQgY2FsbGJhY2tzIGFuZCBmdW5jdGlucwogLSBzYXZlIGFuIHVjb2RlIHBh
dGNoIG9ubHkgaWYgaXRzIHN1cHBvcnRlZCBDUFUgaXMgYWxsb3dlZCB0byBtaXggd2l0aAogICBj
dXJyZW50IGNwdS4KCkNoYW5nZXMgaW4gdmVyc2lvbiA1OgogLSBzdXBwb3J0IHBhcmFsbGVsIG1p
Y3JvY29kZSB1cGRhdGVzIGZvciBhbGwgY29yZXMgKHNlZSBwYXRjaCA4KQogLSBBZGRyZXNzIFJv
Z2VyJ3MgY29tbWVudHMgb24gdGhlIGxhc3QgdmVyc2lvbi4KCkNoYW8gR2FvICg3KToKICBtaWNy
b2NvZGU6IHNwbGl0IG91dCBhcHBseV9taWNyb2NvZGUoKSBmcm9tIGNwdV9yZXF1ZXN0X21pY3Jv
Y29kZSgpCiAgbWljcm9jb2RlOiB1bmlmeSB1Y29kZSBsb2FkaW5nIGR1cmluZyBzeXN0ZW0gYm9v
dHVwIGFuZCByZXN1bWluZwogIG1pY3JvY29kZTogcmVkdWNlIG1lbW9yeSBhbGxvY2F0aW9uIGFu
ZCBjb3B5IHdoZW4gY3JlYXRpbmcgYSBwYXRjaAogIHg4Ni9taWNyb2NvZGU6IFN5bmNocm9uaXpl
IGxhdGUgbWljcm9jb2RlIGxvYWRpbmcKICBtaWNyb2NvZGU6IHJlbW92ZSBtaWNyb2NvZGVfdXBk
YXRlX2xvY2sKICBtaWNyb2NvZGU6IHJlbmRlenZvdXMgQ1BVcyBpbiBOTUkgaGFuZGxlciBhbmQg
bG9hZCB1Y29kZQogIG1pY3JvY29kZTogcmVqZWN0IGxhdGUgdWNvZGUgbG9hZGluZyBpZiBhbnkg
Y29yZSBpcyBwYXJrZWQKCiBkb2NzL21pc2MveGVuLWNvbW1hbmQtbGluZS5wYW5kb2MgfCAgIDYg
Ky0KIHhlbi9hcmNoL3g4Ni9hY3BpL3Bvd2VyLmMgICAgICAgICB8ICAgMiArLQogeGVuL2FyY2gv
eDg2L21pY3JvY29kZS5jICAgICAgICAgIHwgNjM4ICsrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrLS0tLS0tCiB4ZW4vYXJjaC94ODYvbWljcm9jb2RlX2FtZC5jICAgICAgfCAxMzIgKysr
Ky0tLS0KIHhlbi9hcmNoL3g4Ni9taWNyb2NvZGVfaW50ZWwuYyAgICB8ICA5OSArKystLS0KIHhl
bi9hcmNoL3g4Ni9zbXBib290LmMgICAgICAgICAgICB8ICAgNSArLQogeGVuL2FyY2gveDg2L3Ry
YXBzLmMgICAgICAgICAgICAgIHwgICA2ICstCiB4ZW4vaW5jbHVkZS9hc20teDg2L21pY3JvY29k
ZS5oICAgfCAgIDUgKy0KIHhlbi9pbmNsdWRlL2FzbS14ODYvbm1pLmggICAgICAgICB8ICAgMyAr
CiB4ZW4vaW5jbHVkZS9hc20teDg2L3Byb2Nlc3Nvci5oICAgfCAgIDUgKy0KIDEwIGZpbGVzIGNo
YW5nZWQsIDY1OCBpbnNlcnRpb25zKCspLCAyNDMgZGVsZXRpb25zKC0pCgotLSAKMS44LjMuMQoK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZl
bCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlz
dHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

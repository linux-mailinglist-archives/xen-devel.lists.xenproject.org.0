Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id F2B965AE19D
	for <lists+xen-devel@lfdr.de>; Tue,  6 Sep 2022 09:53:33 +0200 (CEST)
Received: from list by lists.xenproject.org with outflank-mailman.399602.640824 (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1oVTOR-0005Qc-RC; Tue, 06 Sep 2022 07:53:11 +0000
X-Outflank-Mailman: Message body and most headers restored to incoming version
Received: by outflank-mailman (output) from mailman id 399602.640824; Tue, 06 Sep 2022 07:53:11 +0000
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.92)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1oVTOR-0005Nw-O4; Tue, 06 Sep 2022 07:53:11 +0000
Received: by outflank-mailman (input) for mailman id 399602;
 Tue, 06 Sep 2022 07:53:10 +0000
Received: from se1-gles-sth1-in.inumbo.com ([159.253.27.254]
 helo=se1-gles-sth1.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.92)
 (envelope-from <SRS0=2M6J=ZJ=kernel.org=maz@srs-se1.protection.inumbo.net>)
 id 1oVTOQ-0005Nq-Fn
 for xen-devel@lists.xenproject.org; Tue, 06 Sep 2022 07:53:10 +0000
Received: from ams.source.kernel.org (ams.source.kernel.org
 [2604:1380:4601:e00::1])
 by se1-gles-sth1.inumbo.com (Halon) with ESMTPS
 id f2a52529-2db8-11ed-a016-b9edf5238543;
 Tue, 06 Sep 2022 09:53:08 +0200 (CEST)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ams.source.kernel.org (Postfix) with ESMTPS id 5B1E0B815A0;
 Tue,  6 Sep 2022 07:53:08 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 1E4FDC433D6;
 Tue,  6 Sep 2022 07:53:07 +0000 (UTC)
Received: from 82-132-237-87.dab.02.net ([82.132.237.87]
 helo=wait-a-minute.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <maz@kernel.org>) id 1oVTOK-008FVO-Q3;
 Tue, 06 Sep 2022 08:53:05 +0100
X-BeenThere: xen-devel@lists.xenproject.org
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Errors-To: xen-devel-bounces@lists.xenproject.org
Precedence: list
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>
X-Inumbo-ID: f2a52529-2db8-11ed-a016-b9edf5238543
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1662450787;
	bh=YsUP0GvS/xdqDCHgCtBY2s4ikD0bQL4umny0jSvCzIE=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=Qat5r2sr07PCvITo1/BJCVEDhPmDpAVjdSxluUVr1VjM7CdZPn7nOjgoa6Z4AqVbK
	 PqXZcQIEaykRj5HuQ+tkiUh9H1mB7cpfIzb+OJfocTuSJ/WXe6cKYrP95Ebzz4zrue
	 Xf7st8AGv+v+gKLNB49WGyjG5U99cP/tUY5gXAeMSi6WBwgqwkvQeiYcv6Yj0v3Vps
	 FqRlKRy/CHn+9KLNd494mGl+1GJ5MXv9MxjUbQeQMAuKKD0vvs1kFUg66h+kbk/2/I
	 F08bEVVaeBM8DysYSnM9X80V0pX2Tqukax0HkFCLwRRFoRljRc8YlGgmb3mWt2bO8Y
	 EwMLmMAWApdTw==
Date: Tue, 06 Sep 2022 08:53:02 +0100
Message-ID: <87leqxq6qp.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Leo Yan <leo.yan@linaro.org>
Cc: Julien Grall <julien@xen.org>,
	Ard Biesheuvel <ardb@kernel.org>,
	Jan Beulich <jbeulich@suse.com>,
	Bertrand Marquis <Bertrand.Marquis@arm.com>,
	Rahul Singh <Rahul.Singh@arm.com>,
	Peter Griffin <peter.griffin@linaro.org>,
	xen-devel <xen-devel@lists.xenproject.org>,
	Julien Grall <jgrall@amazon.com>,
	Mathieu Poirier <mathieu.poirier@linaro.org>
Subject: Re: [PATCH] xen/arm: acpi: Support memory reserve configuration table
In-Reply-To: <Yxbz+pOs5+1RkEkx@leoy-huanghe.lan>
References: <Yv5fii2GvIeHEHZX@leoy-yangtze.lan>
	<CAMj1kXGZ0ThmPT2FU4M07waB=Q9tXxs81TGTysV5dG5fm0D0Gw@mail.gmail.com>
	<871qtcsacd.wl-maz@kernel.org>
	<Ywcr1849LiEHezd3@leoy-huanghe>
	<12a8c169-55aa-5e9f-19f8-acd77ea2a8fe@xen.org>
	<YwdiDr2uLXGEl2TC@leoy-huanghe>
	<52f24132-ba2b-d4ab-ebd0-613f673b5658@xen.org>
	<YweJ6ZpRhMkT5bab@leoy-yangtze.lan>
	<CALZQ+UN8cQ4avggxqgjed=DsitfEteQpuhEqb+p747vmeFCyUA@mail.gmail.com>
	<87r10puiey.wl-maz@kernel.org>
	<Yxbz+pOs5+1RkEkx@leoy-huanghe.lan>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 82.132.237.87
X-SA-Exim-Rcpt-To: leo.yan@linaro.org, julien@xen.org, ardb@kernel.org, jbeulich@suse.com, Bertrand.Marquis@arm.com, Rahul.Singh@arm.com, peter.griffin@linaro.org, xen-devel@lists.xenproject.org, jgrall@amazon.com, mathieu.poirier@linaro.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Tue, 06 Sep 2022 08:17:14 +0100,
Leo Yan <leo.yan@linaro.org> wrote:
> 
> Hi Marc,
> 
> On Tue, Sep 06, 2022 at 07:27:17AM +0100, Marc Zyngier wrote:
> > On Tue, 06 Sep 2022 03:52:37 +0100,
> > Leo Yan <leo.yan@linaro.org> wrote:
> > > 
> > > On Thu, Aug 25, 2022 at 10:40:41PM +0800, Leo Yan wrote:
> > > 
> > > [...]
> > > 
> > > > > > But here I still cannot create the concept that how GIC RD tables play
> > > > > > roles to support the para virtualization or passthrough mode.
> > > > >
> > > > > I am not sure what you are actually asking. The pending tables are just
> > > > > memory you give to the GICv3 to record the state of the interrupts.
> > > >
> > > > For more specific, Xen has its own RD pending table, and we can use
> > > > this pending table to set state for SGI/PPI/LPI for a specific CPU
> > > > interface.  Xen works as hypervisor, it saves and restores the pending
> > > > table according to switched in VM context, right?
> > > >
> > > > On the other hand, what's the purpose for Linux kernel's GIC RD
> > > > pending table?  Is it only used for nested virtulisation?  I mean if
> > > > Linux kernel's GIC RD pending table is not used for the drivers in
> > > > Dom0 or DomU, then it's useless to pass it from the primary kernel to
> > > > secondary kernel; as result, we don't need to reserve the persistent
> > > > memory for the pending table in this case.
> > > 
> > > I don't receive further confirmation from Marc, anyway, I tried to cook
> > > a kernel patch to mute the kernel oops [1].
> > 
> > What sort of confirmation do you expect from me? None of what you
> > write above make much sense in the face of the architecture.
> 
> Okay, I think have two questions for you:
> 
> - The first question is if we really need to reserve persistent memory
>   for RD pending table and configuration table when Linux kernel runs
>   in Xen domain?

I have no idea, and really I don't want to know. The architecture
doesn't make it safe to reuse that memory, and the driver does the
right thing by always reserving that memory when the FW is supposed to
support it.

The "oh but it is safe on so and so" approach doesn't scale. If you
want to have such a thing, just convince people at ARM that it is
possible to implement a GICv3-compliant system without the RD tables,
get them to update the architecture to allow this scheme and advertise
it in a discoverable register. Xen could then implement it, Linux
could check this bit, and we'd all be a happy family.

Because that's really what this is: it isn't that you don't care about
the RD tables being reserved. It is that you don't care about them at
all because they are never used by Xen as the GIC implementation. Your
approach of "huh, let's not reserve it" just papers over this.

> 
> - If the first question's answer is no, so it's not necessary to reserve
>   RD pending table and configuration table for Xen, then what's the good
>   way to dismiss the kernel oops?

A warning, not an oops.

> 
> IIUC, you consider the general flow from architecture view, so you prefer
> to ask Xen to implement EFI stub to comply the general flow for EFI
> booting sequence, right?

If you want to use ACPI, you use EFI, and not a vague emulation of
it. If you use DT, you can reserve the memory upfront. The various
alternatives are in this thread.

> 
> If the conclusion is to change Xen for support EFI stub, then this
> would be fine for me and I will hold on and leave Xen developers to work
> on it.
> 
> > > [1] https://lore.kernel.org/lkml/20220906024040.503764-1-leo.yan@linaro.org/T/#u
> > 
> > I'm totally baffled by the fact you're trying to add some extra hacks
> > to Linux just to paper over some of the Xen's own issues.
> 
> I have a last question for why kernel reserves RD pending table and
> configuration table for kexec.  As we know, the primary kernel and
> the secondary kernel use separate memory regions,

No, you got it wrong. Only with *kdump* do you get separate memory
regions. kexec reuses all of the memory visible by the primary kernel.

> this means there have
> no race condition that secondary kernel modifies the tables whilist the
> GIC accesses the table if the secondary kernel allocates new pages for
> RD tables.  So only one potential issue I can image is the secondary
> kernel sets new RD pending table and configuration table, which might
> introduce inconsistent issue with rest RDs in the system.
> 
> Could you confirm if my understanding is correct or not?

It isn't correct.

- There is no race condition. Once the RD tables are configured, they
  cannot be changed.

- When the kdump kernel boots, none of the primary OS memory is
  reused, so it is safe to continue and use the same tables in place

- When the kexec kernel boots, all of the memory except for the
  reserved memory is reused. If your RD tables are used for anything,
  you'll see memory corruption as the GIC writes pending bits in the
  pending table, and you'll be unable to configure interrupts
  correctly.

In conclusion, using kexec with GICv3 is completely unsafe if you
don't reserve the memory allocated to the RDs.

> Sorry for noise and many questions.  I understand this is a complex
> and difficult topic for me, and it's very likely that I am absent
> sufficient knowledge for this part, this is just what I want to
> learn from the discussion and from you :-)

I suggest you read the architecture spec, which has all the details.

	M.

-- 
Without deviation from the norm, progress is not possible.


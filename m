Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 6A0E9C093C
	for <lists+xen-devel@lfdr.de>; Fri, 27 Sep 2019 18:11:37 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iDsnu-0001MP-MY; Fri, 27 Sep 2019 16:09:10 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=S/it=XW=intel.com=chao.gao@srs-us1.protection.inumbo.net>)
 id 1iDsns-0001MK-Uv
 for xen-devel@lists.xenproject.org; Fri, 27 Sep 2019 16:09:08 +0000
X-Inumbo-ID: 20c72698-e141-11e9-97fb-bc764e2007e4
Received: from mga17.intel.com (unknown [192.55.52.151])
 by localhost (Halon) with ESMTPS
 id 20c72698-e141-11e9-97fb-bc764e2007e4;
 Fri, 27 Sep 2019 16:09:05 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 27 Sep 2019 09:09:04 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,556,1559545200"; d="scan'208";a="194532065"
Received: from gao-cwp.sh.intel.com ([10.239.159.26])
 by orsmga006.jf.intel.com with ESMTP; 27 Sep 2019 09:09:00 -0700
From: Chao Gao <chao.gao@intel.com>
To: xen-devel@lists.xenproject.org
Date: Sat, 28 Sep 2019 00:12:57 +0800
Message-Id: <1569600777-13763-1-git-send-email-chao.gao@intel.com>
X-Mailer: git-send-email 1.9.1
Subject: [Xen-devel] [PATCH v12] microcode: rendezvous CPUs in NMI handler
 and load ucode
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sergey Dyasli <sergey.dyasli@citrix.com>,
 Stefano Stabellini <sstabellini@kernel.org>, Ashok Raj <ashok.raj@intel.com>,
 Wei Liu <wl@xen.org>, Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Tim Deegan <tim@xen.org>,
 Julien Grall <julien.grall@arm.com>, Jan Beulich <jbeulich@suse.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>, Chao Gao <chao.gao@intel.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

V2hlbiBvbmUgY29yZSBpcyBsb2FkaW5nIHVjb2RlLCBoYW5kbGluZyBOTUkgb24gc2libGluZyB0
aHJlYWRzIG9yCm9uIG90aGVyIGNvcmVzIGluIHRoZSBzeXN0ZW0gbWlnaHQgYmUgcHJvYmxlbWF0
aWMuIEJ5IHJlbmRlenZvdXNpbmcKYWxsIENQVXMgaW4gTk1JIGhhbmRsZXIsIGl0IHByZXZlbnRz
IE5NSSBhY2NlcHRhbmNlIGR1cmluZyB1Y29kZQpsb2FkaW5nLgoKQmFzaWNhbGx5LCBzb21lIHdv
cmsgcHJldmlvdXNseSBkb25lIGluIHN0b3BfbWFjaGluZSBjb250ZXh0IGlzCm1vdmVkIHRvIE5N
SSBoYW5kbGVyLiBQcmltYXJ5IHRocmVhZHMgY2FsbCBpbiBhbmQgbG9hZCB1Y29kZSBpbgpOTUkg
aGFuZGxlci4gU2Vjb25kYXJ5IHRocmVhZHMgd2FpdCBmb3IgdGhlIGNvbXBsZXRpb24gb2YgdWNv
ZGUKbG9hZGluZyBvbiBhbGwgQ1BVIGNvcmVzLiBBbiBvcHRpb24gaXMgaW50cm9kdWNlZCB0byBk
aXNhYmxlIHRoaXMKYmVoYXZpb3IuCgpDb250cm9sIHRocmVhZCBkb2Vzbid0IHJlbmRlenZvdXMg
aW4gTk1JIGhhbmRsZXIgYnkgY2FsbGluZyBzZWxmX25taSgpCihpbiBjYXNlIG9mIHVua25vd25f
bm1pX2Vycm9yKCkgYmVpbmcgdHJpZ2dlcmVkKS4gVGhlIHNpZGUgZWZmZWN0IGlzCmNvbnRyb2wg
dGhyZWFkIG1pZ2h0IGJlIGhhbmRsaW5nIGFuIE5NSSB3aGlsZSBvdGhlciB0aHJlYWRzIGFyZSBs
b2FkaW5nCnVjb2RlLiBJZiBhbiB1Y29kZSBpcyB0byB1cGRhdGUgc29tZXRoaW5nIHNoYXJlZCBi
eSBhIHdob2xlIHNvY2tldCwKY29udHJvbCB0aHJlYWQgbWF5IGJlIGFjY2Vzc2luZyB0aGluZ3Mg
dGhhdCBhcmUgYmVpbmcgdXBkYXRpbmcgYnkgdGhlCnVjb2RlIGxvYWRpbmcgb24gb3RoZXIgY29y
ZXMuIEl0IGlzIG5vdCBzYWZlLiBVcGRhdGUgdWNvZGUgb24gdGhlCmNvbnRyb2wgdGhyZWFkIGZp
cnN0IHRvIG1pdGlnYXRlIHRoaXMgaXNzdWUuCgpTaWduZWQtb2ZmLWJ5OiBTZXJnZXkgRHlhc2xp
IDxzZXJnZXkuZHlhc2xpQGNpdHJpeC5jb20+ClNpZ25lZC1vZmYtYnk6IENoYW8gR2FvIDxjaGFv
Lmdhb0BpbnRlbC5jb20+Ci0tLQpOb3RlOgpJIHBsYW4gdG8gZmluaXNoIHJlbWFpbmluZyBwYXRj
aGVzIChsaWtlIGhhbmRsaW5nIHBhcmtlZCBDUFUsCkJERjkwIGFuZCBXQklOVkQsIElNTywgbm90
IGltcG9ydGFudCBhcyB0aGlzIG9uZSkgaW4gUkNzLgpTbyB0aGlzIHYxMiBvbmx5IGhhcyBvbmUg
cGF0Y2guCgpDaGFuZ2VzIGluIHYxMjoKIC0gdGFrZSBjYXJlIHRoYXQgc2VsZiBOTUkgbWF5IG5v
dCBhcnJpdmUgc3luY2hyb25vdXNseS4KIC0gZXhwbGFpbiB3aHkgY29udHJvbCB0aHJlYWQgbG9h
ZHMgdWNvZGUgZmlyc3QgaW4gcGF0Y2ggZGVzY3JpcHRpb24uCiAtIHVzZSBwYXJzZV9ib29sZWFu
IHRvIHBhcnNlICJzY2FuIiBmaWVsZCBpbiAidWNvZGUiIG9wdGlvbi4gVGhlIGNoYW5nZQogaXMg
Y29tcGF0aWJsZSB3aXRoIHRoZSBvbGQgc3R5bGUuCiAtIHN0YXRpY2lmeSBsb2FkaW5nX2Vycgog
LSBkcm9wIHByaW1hcnlfbm1pX3dvcmsoKQoKQ2hhbmdlcyBpbiB2MTE6CiAtIEV4dGVuZCBleGlz
dGluZyAnbm1pJyBvcHRpb24gcmF0aGVyIHRoYW4gdXNlIGEgbmV3IG9uZS4KIC0gdXNlIHBlci1j
cHUgdmFyaWFibGUgdG8gc3RvcmUgZXJyb3IgY29kZSBvZiB4eHhfbm1pX3dvcmsoKQogLSByZW5h
bWUgc2Vjb25kYXJ5X3RocmVhZF93b3JrIHRvIHNlY29uZGFyeV9ubWlfd29yay4KIC0gaW50aWFs
aXplIG5taV9wYXRjaCB0byBaRVJPX0JMT0NLX1BUUiBhbmQgbWFrZSBpdCBzdGF0aWMuCiAtIGNv
bnN0aWZ5IG5taV9jcHUKIC0gZXhwbGFpbiB3aHkgY29udHJvbCB0aHJlYWQgbG9hZHMgdWNvZGUg
Zmlyc3QgaW4gcGF0Y2ggZGVzY3JpcHRpb24KCkNoYW5nZXMgaW4gdjEwOgogLSByZXdyaXRlIGJh
c2VkIG9uIFNlcmdleSdzIGlkZWEgYW5kIHBhdGNoCiAtIGFkZCBTZXJnZXkncyBTT0IuCiAtIGFk
ZCBhbiBvcHRpb24gdG8gZGlzYWJsZSB1Y29kZSBsb2FkaW5nIGluIE5NSSBoYW5kbGVyCiAtIGRv
bid0IHNlbmQgSVBJIE5NSSB0byB0aGUgY29udHJvbCB0aHJlYWQgdG8gYXZvaWQgdW5rbm93bl9u
bWlfZXJyb3IoKQogaW4gZG9fbm1pKCkuCiAtIGFkZCBhbiBhc3NlcnRpb24gdG8gbWFrZSBzdXJl
IHRoZSBjcHUgY2hvc2VuIHRvIGhhbmRsZSBwbGF0Zm9ybSBOTUkKIHdvbid0IHNlbmQgc2VsZiBO
TUkuIE90aGVyd2lzZSwgdGhlcmUgaXMgYSByaXNrIHRoYXQgd2UgZW5jb3VudGVyCiB1bmtub3du
X25taV9lcnJvcigpIGFuZCBzeXN0ZW0gY3Jhc2hlcy4KCkNoYW5nZXMgaW4gdjk6CiAtIGNvbnRy
b2wgdGhyZWFkcyBzZW5kIE5NSSB0byBhbGwgb3RoZXIgdGhyZWFkcy4gU2xhdmUgdGhyZWFkcyB3
aWxsCiBzdGF5IGluIHRoZSBOTUkgaGFuZGxpbmcgdG8gcHJldmVudCBOTUkgYWNjZXB0YW5jZSBk
dXJpbmcgdWNvZGUKIGxvYWRpbmcuIE5vdGUgdGhhdCBzZWxmLW5taSBpcyBpbnZhbGlkIGFjY29y
ZGluZyB0byBTRE0uCiAtIHMvcmVwX25vcC9jcHVfcmVsYXgKIC0gcmVtb3ZlIGRlYnVnIG1lc3Nh
Z2UgaW4gbWljcm9jb2RlX25taV9jYWxsYmFjaygpLiBQcmludGluZyBkZWJ1ZwogbWVzc2FnZSB3
b3VsZCB0YWtlIGxvbmcgdGltZXMgYW5kIGNvbnRyb2wgdGhyZWFkIG1heSB0aW1lb3V0LgogLSBy
ZWJhc2UgYW5kIGZpeCBjb25mbGljdHMKCkNoYW5nZXMgaW4gdjg6CiAtIG5ldwotLS0KIGRvY3Mv
bWlzYy94ZW4tY29tbWFuZC1saW5lLnBhbmRvYyB8ICAgNiArLQogeGVuL2FyY2gveDg2L21pY3Jv
Y29kZS5jICAgICAgICAgIHwgMTc0ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0t
LS0tCiB4ZW4vYXJjaC94ODYvdHJhcHMuYyAgICAgICAgICAgICAgfCAgIDYgKy0KIHhlbi9pbmNs
dWRlL2FzbS14ODYvbm1pLmggICAgICAgICB8ICAgMyArCiA0IGZpbGVzIGNoYW5nZWQsIDE1NiBp
bnNlcnRpb25zKCspLCAzMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kb2NzL21pc2MveGVu
LWNvbW1hbmQtbGluZS5wYW5kb2MgYi9kb2NzL21pc2MveGVuLWNvbW1hbmQtbGluZS5wYW5kb2MK
aW5kZXggZmM2NDQyOS4uZjU0MTBiMyAxMDA2NDQKLS0tIGEvZG9jcy9taXNjL3hlbi1jb21tYW5k
LWxpbmUucGFuZG9jCisrKyBiL2RvY3MvbWlzYy94ZW4tY29tbWFuZC1saW5lLnBhbmRvYwpAQCAt
MjA1Myw3ICsyMDUzLDcgQEAgcGFnZXMpIG11c3QgYWxzbyBiZSBzcGVjaWZpZWQgdmlhIHRoZSB0
YnVmX3NpemUgcGFyYW1ldGVyLgogPiBgPSB1bnN0YWJsZSB8IHNrZXdlZCB8IHN0YWJsZTpzb2Nr
ZXRgCiAKICMjIyB1Y29kZSAoeDg2KQotPiBgPSBbPGludGVnZXI+IHwgc2Nhbl1gCis+IGA9IExp
c3Qgb2YgWyA8aW50ZWdlcj4gfCBzY2FuPTxib29sPiwgbm1pPTxib29sPiBdYAogCiBTcGVjaWZ5
IGhvdyBhbmQgd2hlcmUgdG8gZmluZCBDUFUgbWljcm9jb2RlIHVwZGF0ZSBibG9iLgogCkBAIC0y
MDc0LDYgKzIwNzQsMTAgQEAgbWljcm9jb2RlIGluIHRoZSBjcGlvIG5hbWUgc3BhY2UgbXVzdCBi
ZToKICAgLSBvbiBJbnRlbDoga2VybmVsL3g4Ni9taWNyb2NvZGUvR2VudWluZUludGVsLmJpbgog
ICAtIG9uIEFNRCAgOiBrZXJuZWwveDg2L21pY3JvY29kZS9BdXRoZW50aWNBTUQuYmluCiAKKydu
bWknIGRldGVybWluZXMgbGF0ZSBsb2FkaW5nIGlzIHBlcmZvcm1lZCBpbiBOTUkgaGFuZGxlciBv
ciBqdXN0IGluCitzdG9wX21hY2hpbmUgY29udGV4dC4gSW4gTk1JIGhhbmRsZXIsIGV2ZW4gTk1J
cyBhcmUgYmxvY2tlZCwgd2hpY2ggaXMKK2NvbnNpZGVyZWQgc2FmZXIuIFRoZSBkZWZhdWx0IHZh
bHVlIGlzIGB0cnVlYC4KKwogIyMjIHVucmVzdHJpY3RlZF9ndWVzdCAoSW50ZWwpCiA+IGA9IDxi
b29sZWFuPmAKIApkaWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L21pY3JvY29kZS5jIGIveGVuL2Fy
Y2gveDg2L21pY3JvY29kZS5jCmluZGV4IGI4ODJhYzguLjNjMGY3MmUgMTAwNjQ0Ci0tLSBhL3hl
bi9hcmNoL3g4Ni9taWNyb2NvZGUuYworKysgYi94ZW4vYXJjaC94ODYvbWljcm9jb2RlLmMKQEAg
LTM2LDggKzM2LDEwIEBACiAjaW5jbHVkZSA8eGVuL2Vhcmx5Y3Bpby5oPgogI2luY2x1ZGUgPHhl
bi93YXRjaGRvZy5oPgogCisjaW5jbHVkZSA8YXNtL2FwaWMuaD4KICNpbmNsdWRlIDxhc20vZGVs
YXkuaD4KICNpbmNsdWRlIDxhc20vbXNyLmg+CisjaW5jbHVkZSA8YXNtL25taS5oPgogI2luY2x1
ZGUgPGFzbS9wcm9jZXNzb3IuaD4KICNpbmNsdWRlIDxhc20vc2V0dXAuaD4KICNpbmNsdWRlIDxh
c20vbWljcm9jb2RlLmg+CkBAIC05NSw2ICs5Nyw5IEBAIHN0YXRpYyBzdHJ1Y3QgdWNvZGVfbW9k
X2Jsb2IgX19pbml0ZGF0YSB1Y29kZV9ibG9iOwogICovCiBzdGF0aWMgYm9vbF90IF9faW5pdGRh
dGEgdWNvZGVfc2NhbjsKIAorLyogQnkgZGVmYXVsdCwgdWNvZGUgbG9hZGluZyBpcyBkb25lIGlu
IE5NSSBoYW5kbGVyICovCitzdGF0aWMgYm9vbCB1Y29kZV9pbl9ubWkgPSB0cnVlOworCiAvKiBQ
cm90ZWN0ZWQgYnkgbWljcm9jb2RlX211dGV4ICovCiBzdGF0aWMgc3RydWN0IG1pY3JvY29kZV9w
YXRjaCAqbWljcm9jb2RlX2NhY2hlOwogCkBAIC0xMDUsMjMgKzExMCw0MCBAQCB2b2lkIF9faW5p
dCBtaWNyb2NvZGVfc2V0X21vZHVsZSh1bnNpZ25lZCBpbnQgaWR4KQogfQogCiAvKgotICogVGhl
IGZvcm1hdCBpcyAnWzxpbnRlZ2VyPnxzY2FuXScuIEJvdGggb3B0aW9ucyBhcmUgb3B0aW9uYWwu
Ci0gKiBJZiB0aGUgRUZJIGhhcyBmb3JjZWQgd2hpY2ggb2YgdGhlIG11bHRpYm9vdCBwYXlsb2Fk
cyBpcyB0byBiZSB1c2VkLAotICogbm8gcGFyc2luZyB3aWxsIGJlIGF0dGVtcHRlZC4KKyAqIFRo
ZSBmb3JtYXQgaXMgJ1s8aW50ZWdlcj58c2Nhbj08Ym9vbD4sIG5taT08Ym9vbD5dJy4gQm90aCBv
cHRpb25zIGFyZQorICogb3B0aW9uYWwuIElmIHRoZSBFRkkgaGFzIGZvcmNlZCB3aGljaCBvZiB0
aGUgbXVsdGlib290IHBheWxvYWRzIGlzIHRvIGJlCisgKiB1c2VkLCBvbmx5IG5taT08Ym9vbD4g
aXMgcGFyc2VkLgogICovCiBzdGF0aWMgaW50IF9faW5pdCBwYXJzZV91Y29kZShjb25zdCBjaGFy
ICpzKQogewotICAgIGNvbnN0IGNoYXIgKnEgPSBOVUxMOworICAgIGNvbnN0IGNoYXIgKnNzOwor
ICAgIGludCB2YWwsIHJjID0gMDsKIAotICAgIGlmICggdWNvZGVfbW9kX2ZvcmNlZCApIC8qIEZv
cmNlZCBieSBFRkkgKi8KLSAgICAgICByZXR1cm4gMDsKKyAgICBkbyB7CisgICAgICAgIHNzID0g
c3RyY2hyKHMsICcsJyk7CisgICAgICAgIGlmICggIXNzICkKKyAgICAgICAgICAgIHNzID0gc3Ry
Y2hyKHMsICdcMCcpOwogCi0gICAgaWYgKCAhc3RybmNtcChzLCAic2NhbiIsIDQpICkKLSAgICAg
ICAgdWNvZGVfc2NhbiA9IDE7Ci0gICAgZWxzZQotICAgICAgICB1Y29kZV9tb2RfaWR4ID0gc2lt
cGxlX3N0cnRvbChzLCAmcSwgMCk7CisgICAgICAgIGlmICggKHZhbCA9IHBhcnNlX2Jvb2xlYW4o
Im5taSIsIHMsIHNzKSkgPj0gMCApCisgICAgICAgICAgICB1Y29kZV9pbl9ubWkgPSB2YWw7Cisg
ICAgICAgIGVsc2UgaWYgKCAhdWNvZGVfbW9kX2ZvcmNlZCApIC8qIE5vdCBmb3JjZWQgYnkgRUZJ
ICovCisgICAgICAgIHsKKyAgICAgICAgICAgIGlmICggKHZhbCA9IHBhcnNlX2Jvb2xlYW4oInNj
YW4iLCBzLCBzcykpID49IDAgKQorICAgICAgICAgICAgICAgIHVjb2RlX3NjYW4gPSB2YWw7Cisg
ICAgICAgICAgICBlbHNlCisgICAgICAgICAgICB7CisgICAgICAgICAgICAgICAgY29uc3QgY2hh
ciAqcSA9IE5VTEw7CisKKyAgICAgICAgICAgICAgICB1Y29kZV9tb2RfaWR4ID0gc2ltcGxlX3N0
cnRvbChzLCAmcSwgMCk7CisgICAgICAgICAgICAgICAgaWYgKCBxICE9IHNzICkKKyAgICAgICAg
ICAgICAgICAgICAgcmMgPSAtRUlOVkFMOworICAgICAgICAgICAgfQorICAgICAgICB9CisKKyAg
ICAgICAgcyA9IHNzICsgMTsKKyAgICB9IHdoaWxlICggKnNzICk7CiAKLSAgICByZXR1cm4gKHEg
JiYgKnEpID8gLUVJTlZBTCA6IDA7CisgICAgcmV0dXJuIHJjOwogfQogY3VzdG9tX3BhcmFtKCJ1
Y29kZSIsIHBhcnNlX3Vjb2RlKTsKIApAQCAtMjIyLDYgKzI0NCw4IEBAIGNvbnN0IHN0cnVjdCBt
aWNyb2NvZGVfb3BzICptaWNyb2NvZGVfb3BzOwogc3RhdGljIERFRklORV9TUElOTE9DSyhtaWNy
b2NvZGVfbXV0ZXgpOwogCiBERUZJTkVfUEVSX0NQVShzdHJ1Y3QgY3B1X3NpZ25hdHVyZSwgY3B1
X3NpZyk7CisvKiBTdG9yZSBlcnJvciBjb2RlIG9mIHRoZSB3b3JrIGRvbmUgaW4gTk1JIGhhbmRs
ZXIgKi8KK3N0YXRpYyBERUZJTkVfUEVSX0NQVShpbnQsIGxvYWRpbmdfZXJyKTsKIAogLyoKICAq
IENvdW50IHRoZSBDUFVzIHRoYXQgaGF2ZSBlbnRlcmVkLCBleGl0ZWQgdGhlIHJlbmRlenZvdXMg
YW5kIHN1Y2NlZWRlZCBpbgpAQCAtMjMyLDYgKzI1Niw3IEBAIERFRklORV9QRVJfQ1BVKHN0cnVj
dCBjcHVfc2lnbmF0dXJlLCBjcHVfc2lnKTsKICAqLwogc3RhdGljIGNwdW1hc2tfdCBjcHVfY2Fs
bGluX21hcDsKIHN0YXRpYyBhdG9taWNfdCBjcHVfb3V0LCBjcHVfdXBkYXRlZDsKK3N0YXRpYyBj
b25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpubWlfcGF0Y2ggPSBaRVJPX0JMT0NLX1BUUjsK
IAogLyoKICAqIFJldHVybiBhIHBhdGNoIHRoYXQgY292ZXJzIGN1cnJlbnQgQ1BVLiBJZiB0aGVy
ZSBhcmUgbXVsdGlwbGUgcGF0Y2hlcywKQEAgLTM1NSw0MiArMzgwLDEwMCBAQCBzdGF0aWMgdm9p
ZCBzZXRfc3RhdGUodHlwZW9mKGxvYWRpbmdfc3RhdGUpIHN0YXRlKQogICAgIEFDQ0VTU19PTkNF
KGxvYWRpbmdfc3RhdGUpID0gc3RhdGU7CiB9CiAKLXN0YXRpYyBpbnQgc2Vjb25kYXJ5X3RocmVh
ZF9mbih2b2lkKQorc3RhdGljIGludCBzZWNvbmRhcnlfbm1pX3dvcmsodm9pZCkKK3sKKyAgICBj
cHVtYXNrX3NldF9jcHUoc21wX3Byb2Nlc3Nvcl9pZCgpLCAmY3B1X2NhbGxpbl9tYXApOworCisg
ICAgcmV0dXJuIHdhaXRfZm9yX3N0YXRlKExPQURJTkdfRVhJVCkgPyAwIDogLUVCVVNZOworfQor
CitzdGF0aWMgaW50IHByaW1hcnlfdGhyZWFkX3dvcmsoY29uc3Qgc3RydWN0IG1pY3JvY29kZV9w
YXRjaCAqcGF0Y2gpCit7CisgICAgaW50IHJldDsKKworICAgIGNwdW1hc2tfc2V0X2NwdShzbXBf
cHJvY2Vzc29yX2lkKCksICZjcHVfY2FsbGluX21hcCk7CisKKyAgICBpZiAoICF3YWl0X2Zvcl9z
dGF0ZShMT0FESU5HX0VOVEVSKSApCisgICAgICAgIHJldHVybiAtRUJVU1k7CisKKyAgICByZXQg
PSBtaWNyb2NvZGVfb3BzLT5hcHBseV9taWNyb2NvZGUocGF0Y2gpOworICAgIGlmICggIXJldCAp
CisgICAgICAgIGF0b21pY19pbmMoJmNwdV91cGRhdGVkKTsKKyAgICBhdG9taWNfaW5jKCZjcHVf
b3V0KTsKKworICAgIHJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgbWljcm9jb2RlX25taV9j
YWxsYmFjayhjb25zdCBzdHJ1Y3QgY3B1X3VzZXJfcmVncyAqcmVncywgaW50IGNwdSkKIHsKICAg
ICB1bnNpZ25lZCBpbnQgcHJpbWFyeSA9IGNwdW1hc2tfZmlyc3QodGhpc19jcHUoY3B1X3NpYmxp
bmdfbWFzaykpOworICAgIGludCByZXQ7CisKKyAgICAvKiBTeXN0ZW0tZ2VuZXJhdGVkIE5NSSwg
bGVhdmUgdG8gbWFpbiBoYW5kbGVyICovCisgICAgaWYgKCBBQ0NFU1NfT05DRShsb2FkaW5nX3N0
YXRlKSAhPSBMT0FESU5HX0NBTExJTiApCisgICAgICAgIHJldHVybiAwOworCisgICAgLyoKKyAg
ICAgKiBQcmltYXJ5IHRocmVhZHMgbG9hZCB1Y29kZSBpbiBOTUkgaGFuZGxlciBvbiBpZiB1Y29k
ZV9pbl9ubWkgaXMgdHJ1ZS4KKyAgICAgKiBTZWNvbmRhcnkgdGhyZWFkcyBhcmUgZXhwZWN0ZWQg
dG8gc3RheSBpbiBOTUkgaGFuZGxlciByZWdhcmRsZXNzIG9mCisgICAgICogdWNvZGVfaW5fbm1p
LgorICAgICAqLworICAgIGlmICggY3B1ID09IGNwdW1hc2tfZmlyc3QoJmNwdV9vbmxpbmVfbWFw
KSB8fAorICAgICAgICAgKCF1Y29kZV9pbl9ubWkgJiYgY3B1ID09IHByaW1hcnkpICkKKyAgICAg
ICAgcmV0dXJuIDA7CisKKyAgICBpZiAoIGNwdSA9PSBwcmltYXJ5ICkKKyAgICAgICAgcmV0ID0g
cHJpbWFyeV90aHJlYWRfd29yayhubWlfcGF0Y2gpOworICAgIGVsc2UKKyAgICAgICAgcmV0ID0g
c2Vjb25kYXJ5X25taV93b3JrKCk7CisgICAgdGhpc19jcHUobG9hZGluZ19lcnIpID0gcmV0Owor
CisgICAgcmV0dXJuIDA7Cit9CiAKK3N0YXRpYyBpbnQgc2Vjb25kYXJ5X3RocmVhZF9mbih2b2lk
KQorewogICAgIGlmICggIXdhaXRfZm9yX3N0YXRlKExPQURJTkdfQ0FMTElOKSApCiAgICAgICAg
IHJldHVybiAtRUJVU1k7CiAKLSAgICBjcHVtYXNrX3NldF9jcHUoc21wX3Byb2Nlc3Nvcl9pZCgp
LCAmY3B1X2NhbGxpbl9tYXApOworICAgIHNlbGZfbm1pKCk7CiAKLSAgICBpZiAoICF3YWl0X2Zv
cl9zdGF0ZShMT0FESU5HX0VYSVQpICkKLSAgICAgICAgcmV0dXJuIC1FQlVTWTsKKyAgICAvKgor
ICAgICAqIFdhaXQgZm9yIHVjb2RlIGxvYWRpbmcgaXMgZG9uZSBpbiBjYXNlIHRoYXQgdGhlIE5N
SSBkb2VzIG5vdCBhcnJpdmUKKyAgICAgKiBzeW5jaHJvbm91c2x5LCB3aGljaCBtYXkgbGVhZCB0
byBhIG5vdC15ZXQtdXBkYXRlZCBDUFUgc2lnbmF0dXJlIGlzCisgICAgICogY29waWVkIGJlbG93
LgorICAgICAqLworICAgIGlmICggdW5saWtlbHkoIXdhaXRfZm9yX3N0YXRlKExPQURJTkdfRVhJ
VCkpICkKKyAgICAgICAgQVNTRVJUX1VOUkVBQ0hBQkxFKCk7CiAKICAgICAvKiBDb3B5IHVwZGF0
ZSByZXZpc2lvbiBmcm9tIHRoZSBwcmltYXJ5IHRocmVhZC4gKi8KLSAgICB0aGlzX2NwdShjcHVf
c2lnKS5yZXYgPSBwZXJfY3B1KGNwdV9zaWcsIHByaW1hcnkpLnJldjsKKyAgICB0aGlzX2NwdShj
cHVfc2lnKS5yZXYgPQorICAgICAgICBwZXJfY3B1KGNwdV9zaWcsIGNwdW1hc2tfZmlyc3QodGhp
c19jcHUoY3B1X3NpYmxpbmdfbWFzaykpKS5yZXY7CiAKLSAgICByZXR1cm4gMDsKKyAgICByZXR1
cm4gdGhpc19jcHUobG9hZGluZ19lcnIpOwogfQogCiBzdGF0aWMgaW50IHByaW1hcnlfdGhyZWFk
X2ZuKGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfcGF0Y2ggKnBhdGNoKQogewotICAgIGludCByZXQg
PSAwOwotCiAgICAgaWYgKCAhd2FpdF9mb3Jfc3RhdGUoTE9BRElOR19DQUxMSU4pICkKICAgICAg
ICAgcmV0dXJuIC1FQlVTWTsKIAotICAgIGNwdW1hc2tfc2V0X2NwdShzbXBfcHJvY2Vzc29yX2lk
KCksICZjcHVfY2FsbGluX21hcCk7CisgICAgaWYgKCB1Y29kZV9pbl9ubWkgKQorICAgIHsKKyAg
ICAgICAgc2VsZl9ubWkoKTsKIAotICAgIGlmICggIXdhaXRfZm9yX3N0YXRlKExPQURJTkdfRU5U
RVIpICkKLSAgICAgICAgcmV0dXJuIC1FQlVTWTsKKyAgICAgICAgLyoKKyAgICAgICAgICogV2Fp
dCBmb3IgdWNvZGUgbG9hZGluZyBpcyBkb25lIGluIGNhc2UgdGhhdCB0aGUgTk1JIGRvZXMgbm90
IGFycml2ZQorICAgICAgICAgKiBzeW5jaHJvbm91c2x5LCB3aGljaCBtYXkgbGVhZCB0byBhIG5v
dC15ZXQtdXBkYXRlZCBlcnJvciBpcyByZXR1cm5lZAorICAgICAgICAgKiBiZWxvdy4KKyAgICAg
ICAgICovCisgICAgICAgIGlmICggdW5saWtlbHkoIXdhaXRfZm9yX3N0YXRlKExPQURJTkdfRVhJ
VCkpICkKKyAgICAgICAgICAgIEFTU0VSVF9VTlJFQUNIQUJMRSgpOwogCi0gICAgcmV0ID0gbWlj
cm9jb2RlX29wcy0+YXBwbHlfbWljcm9jb2RlKHBhdGNoKTsKLSAgICBpZiAoICFyZXQgKQotICAg
ICAgICBhdG9taWNfaW5jKCZjcHVfdXBkYXRlZCk7Ci0gICAgYXRvbWljX2luYygmY3B1X291dCk7
CisgICAgICAgIHJldHVybiB0aGlzX2NwdShsb2FkaW5nX2Vycik7CisgICAgfQogCi0gICAgcmV0
dXJuIHJldDsKKyAgICByZXR1cm4gcHJpbWFyeV90aHJlYWRfd29yayhwYXRjaCk7CiB9CiAKIHN0
YXRpYyBpbnQgY29udHJvbF90aHJlYWRfZm4oY29uc3Qgc3RydWN0IG1pY3JvY29kZV9wYXRjaCAq
cGF0Y2gpCkBAIC0zOTgsNiArNDgxLDcgQEAgc3RhdGljIGludCBjb250cm9sX3RocmVhZF9mbihj
b25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCkKICAgICB1bnNpZ25lZCBpbnQgY3B1
ID0gc21wX3Byb2Nlc3Nvcl9pZCgpLCBkb25lOwogICAgIHVuc2lnbmVkIGxvbmcgdGljazsKICAg
ICBpbnQgcmV0OworICAgIG5taV9jYWxsYmFja190ICpzYXZlZF9ubWlfY2FsbGJhY2s7CiAKICAg
ICAvKgogICAgICAqIFdlIGludGVuZCB0byBrZWVwIGludGVycnVwdCBkaXNhYmxlZCBmb3IgYSBs
b25nIHRpbWUsIHdoaWNoIG1heSBsZWFkIHRvCkBAIC00MDUsNiArNDg5LDEwIEBAIHN0YXRpYyBp
bnQgY29udHJvbF90aHJlYWRfZm4oY29uc3Qgc3RydWN0IG1pY3JvY29kZV9wYXRjaCAqcGF0Y2gp
CiAgICAgICovCiAgICAgd2F0Y2hkb2dfZGlzYWJsZSgpOwogCisgICAgbm1pX3BhdGNoID0gcGF0
Y2g7CisgICAgc21wX3dtYigpOworICAgIHNhdmVkX25taV9jYWxsYmFjayA9IHNldF9ubWlfY2Fs
bGJhY2sobWljcm9jb2RlX25taV9jYWxsYmFjayk7CisKICAgICAvKiBBbGxvdyB0aHJlYWRzIHRv
IGNhbGwgaW4gKi8KICAgICBzZXRfc3RhdGUoTE9BRElOR19DQUxMSU4pOwogCkBAIC00MTksMTQg
KzUwNywyMyBAQCBzdGF0aWMgaW50IGNvbnRyb2xfdGhyZWFkX2ZuKGNvbnN0IHN0cnVjdCBtaWNy
b2NvZGVfcGF0Y2ggKnBhdGNoKQogICAgICAgICByZXR1cm4gcmV0OwogICAgIH0KIAotICAgIC8q
IExldCBwcmltYXJ5IHRocmVhZHMgbG9hZCB0aGUgZ2l2ZW4gdWNvZGUgdXBkYXRlICovCi0gICAg
c2V0X3N0YXRlKExPQURJTkdfRU5URVIpOwotCisgICAgLyogQ29udHJvbCB0aHJlYWQgbG9hZHMg
dWNvZGUgZmlyc3Qgd2hpbGUgb3RoZXJzIGFyZSBpbiBOTUkgaGFuZGxlci4gKi8KICAgICByZXQg
PSBtaWNyb2NvZGVfb3BzLT5hcHBseV9taWNyb2NvZGUocGF0Y2gpOwogICAgIGlmICggIXJldCAp
CiAgICAgICAgIGF0b21pY19pbmMoJmNwdV91cGRhdGVkKTsKICAgICBhdG9taWNfaW5jKCZjcHVf
b3V0KTsKIAorICAgIGlmICggcmV0ID09IC1FSU8gKQorICAgIHsKKyAgICAgICAgcHJpbnRrKFhF
TkxPR19FUlIKKyAgICAgICAgICAgICAgICJMYXRlIGxvYWRpbmcgYWJvcnRlZDogQ1BVJXUgZmFp
bGVkIHRvIHVwZGF0ZSB1Y29kZVxuIiwgY3B1KTsKKyAgICAgICAgc2V0X3N0YXRlKExPQURJTkdf
RVhJVCk7CisgICAgICAgIHJldHVybiByZXQ7CisgICAgfQorCisgICAgLyogTGV0IHByaW1hcnkg
dGhyZWFkcyBsb2FkIHRoZSBnaXZlbiB1Y29kZSB1cGRhdGUgKi8KKyAgICBzZXRfc3RhdGUoTE9B
RElOR19FTlRFUik7CisKICAgICB0aWNrID0gcmR0c2Nfb3JkZXJlZCgpOwogICAgIC8qIFdhaXQg
Zm9yIHByaW1hcnkgdGhyZWFkcyBmaW5pc2hpbmcgdXBkYXRlICovCiAgICAgd2hpbGUgKCAoZG9u
ZSA9IGF0b21pY19yZWFkKCZjcHVfb3V0KSkgIT0gbnJfY29yZXMgKQpAQCAtNDU1LDYgKzU1Miw5
IEBAIHN0YXRpYyBpbnQgY29udHJvbF90aHJlYWRfZm4oY29uc3Qgc3RydWN0IG1pY3JvY29kZV9w
YXRjaCAqcGF0Y2gpCiAgICAgLyogTWFyayBsb2FkaW5nIGlzIGRvbmUgdG8gdW5ibG9jayBvdGhl
ciB0aHJlYWRzICovCiAgICAgc2V0X3N0YXRlKExPQURJTkdfRVhJVCk7CiAKKyAgICBzZXRfbm1p
X2NhbGxiYWNrKHNhdmVkX25taV9jYWxsYmFjayk7CisgICAgc21wX3dtYigpOworICAgIG5taV9w
YXRjaCA9IFpFUk9fQkxPQ0tfUFRSOwogICAgIHdhdGNoZG9nX2VuYWJsZSgpOwogCiAgICAgcmV0
dXJuIHJldDsKQEAgLTUxNCw2ICs2MTQsMjAgQEAgaW50IG1pY3JvY29kZV91cGRhdGUoWEVOX0dV
RVNUX0hBTkRMRV9QQVJBTShjb25zdF92b2lkKSBidWYsIHVuc2lnbmVkIGxvbmcgbGVuKQogICAg
ICAgICByZXR1cm4gLUVCVVNZOwogICAgIH0KIAorICAgIC8qCisgICAgICogQ1BVcyBleGNlcHQg
dGhlIGZpcnN0IG9ubGluZSBDUFUgd291bGQgc2VuZCBhIGZha2UgKHNlbGYpIE5NSSB0bworICAg
ICAqIHJlbmRlenZvdXMgaW4gTk1JIGhhbmRsZXIuIEJ1dCBhIGZha2UgTk1JIHRvIG5taV9jcHUg
bWF5IHRyaWdnZXIKKyAgICAgKiB1bmtub3duX25taV9lcnJvcigpLiBJdCBlbnN1cmVzIG5taV9j
cHUgd29uJ3QgcmVjZWl2ZSBhIGZha2UgTk1JLgorICAgICAqLworICAgIGlmICggdW5saWtlbHko
Y3B1bWFza19maXJzdCgmY3B1X29ubGluZV9tYXApICE9IG5taV9jcHUpICkKKyAgICB7CisgICAg
ICAgIHhmcmVlKGJ1ZmZlcik7CisgICAgICAgIHByaW50ayhYRU5MT0dfV0FSTklORworICAgICAg
ICAgICAgICAgIkNQVSV1IGlzIGV4cGVjdGVkIHRvIGxlYWQgdWNvZGUgbG9hZGluZyAoYnV0IGdv
dCBDUFUldSlcbiIsCisgICAgICAgICAgICAgICBubWlfY3B1LCBjcHVtYXNrX2ZpcnN0KCZjcHVf
b25saW5lX21hcCkpOworICAgICAgICByZXR1cm4gLUVQRVJNOworICAgIH0KKwogICAgIHBhdGNo
ID0gcGFyc2VfYmxvYihidWZmZXIsIGxlbik7CiAgICAgeGZyZWUoYnVmZmVyKTsKICAgICBpZiAo
IElTX0VSUihwYXRjaCkgKQpkaWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L3RyYXBzLmMgYi94ZW4v
YXJjaC94ODYvdHJhcHMuYwppbmRleCA5ODkxOWEwLi44NzA1ZWM4IDEwMDY0NAotLS0gYS94ZW4v
YXJjaC94ODYvdHJhcHMuYworKysgYi94ZW4vYXJjaC94ODYvdHJhcHMuYwpAQCAtMTI2LDYgKzEy
Niw4IEBAIGJvb2xlYW5fcGFyYW0oImxlciIsIG9wdF9sZXIpOwogLyogTGFzdEV4Y2VwdGlvbkZy
b21JUCBvbiB0aGlzIGhhcmR3YXJlLiAgWmVybyBpZiBMRVIgaXMgbm90IGluIHVzZS4gKi8KIHVu
c2lnbmVkIGludCBfX3JlYWRfbW9zdGx5IGxlcl9tc3I7CiAKK2NvbnN0IHVuc2lnbmVkIGludCBu
bWlfY3B1OworCiAjZGVmaW5lIHN0YWNrX3dvcmRzX3Blcl9saW5lIDQKICNkZWZpbmUgRVNQX0JF
Rk9SRV9FWENFUFRJT04ocmVncykgKCh1bnNpZ25lZCBsb25nICopcmVncy0+cnNwKQogCkBAIC0x
Njk4LDcgKzE3MDAsNyBAQCB2b2lkIGRvX25taShjb25zdCBzdHJ1Y3QgY3B1X3VzZXJfcmVncyAq
cmVncykKICAgICAgKiB0aGlzIHBvcnQgYmVmb3JlIHdlIHJlLWFybSB0aGUgTk1JIHdhdGNoZG9n
LCB3ZSByZWR1Y2UgdGhlIGNoYW5jZQogICAgICAqIG9mIGhhdmluZyBhbiBOTUkgd2F0Y2hkb2cg
ZXhwaXJlIHdoaWxlIGluIHRoZSBTTUkgaGFuZGxlci4KICAgICAgKi8KLSAgICBpZiAoIGNwdSA9
PSAwICkKKyAgICBpZiAoIGNwdSA9PSBubWlfY3B1ICkKICAgICAgICAgcmVhc29uID0gaW5iKDB4
NjEpOwogCiAgICAgaWYgKCAobm1pX3dhdGNoZG9nID09IE5NSV9OT05FKSB8fApAQCAtMTcwNiw3
ICsxNzA4LDcgQEAgdm9pZCBkb19ubWkoY29uc3Qgc3RydWN0IGNwdV91c2VyX3JlZ3MgKnJlZ3Mp
CiAgICAgICAgIGhhbmRsZV91bmtub3duID0gdHJ1ZTsKIAogICAgIC8qIE9ubHkgdGhlIEJTUCBn
ZXRzIGV4dGVybmFsIE5NSXMgZnJvbSB0aGUgc3lzdGVtLiAqLwotICAgIGlmICggY3B1ID09IDAg
KQorICAgIGlmICggY3B1ID09IG5taV9jcHUgKQogICAgIHsKICAgICAgICAgaWYgKCByZWFzb24g
JiAweDgwICkKICAgICAgICAgICAgIHBjaV9zZXJyX2Vycm9yKHJlZ3MpOwpkaWZmIC0tZ2l0IGEv
eGVuL2luY2x1ZGUvYXNtLXg4Ni9ubWkuaCBiL3hlbi9pbmNsdWRlL2FzbS14ODYvbm1pLmgKaW5k
ZXggOTlmNjI4NC4uZjlkZmNhNiAxMDA2NDQKLS0tIGEveGVuL2luY2x1ZGUvYXNtLXg4Ni9ubWku
aAorKysgYi94ZW4vaW5jbHVkZS9hc20teDg2L25taS5oCkBAIC0xMSw2ICsxMSw5IEBAIGV4dGVy
biBib29sIG9wdF93YXRjaGRvZzsKIAogLyogV2F0Y2hkb2cgZm9yY2UgcGFyYW1ldGVyIGZyb20g
dGhlIGNvbW1hbmQgbGluZSAqLwogZXh0ZXJuIGJvb2wgd2F0Y2hkb2dfZm9yY2U7CisKKy8qIENQ
VSB0byBoYW5kbGUgcGxhdGZvcm0gTk1JICovCitleHRlcm4gY29uc3QgdW5zaWduZWQgaW50IG5t
aV9jcHU7CiAgCiB0eXBlZGVmIGludCBubWlfY2FsbGJhY2tfdChjb25zdCBzdHJ1Y3QgY3B1X3Vz
ZXJfcmVncyAqcmVncywgaW50IGNwdSk7CiAgCi0tIAoxLjguMy4xCgoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxpbmcgbGlzdApY
ZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 24C592B03C
	for <lists+xen-devel@lfdr.de>; Mon, 27 May 2019 10:31:41 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hVAyp-0004Db-2E; Mon, 27 May 2019 08:27:39 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=Vl5o=T3=intel.com=chao.gao@srs-us1.protection.inumbo.net>)
 id 1hVAyn-0004Cr-4l
 for xen-devel@lists.xenproject.org; Mon, 27 May 2019 08:27:37 +0000
X-Inumbo-ID: 479fdf4e-8059-11e9-8980-bc764e045a96
Received: from mga12.intel.com (unknown [192.55.52.136])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id 479fdf4e-8059-11e9-8980-bc764e045a96;
 Mon, 27 May 2019 08:27:35 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 27 May 2019 01:27:35 -0700
X-ExtLoop1: 1
Received: from gao-cwp.sh.intel.com ([10.239.159.26])
 by orsmga005.jf.intel.com with ESMTP; 27 May 2019 01:27:33 -0700
From: Chao Gao <chao.gao@intel.com>
To: xen-devel@lists.xenproject.org
Date: Mon, 27 May 2019 16:31:26 +0800
Message-Id: <1558945891-3015-6-git-send-email-chao.gao@intel.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1558945891-3015-1-git-send-email-chao.gao@intel.com>
References: <1558945891-3015-1-git-send-email-chao.gao@intel.com>
Subject: [Xen-devel] [PATCH v7 05/10] microcode: remove pointless 'cpu'
 parameter
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sergey Dyasli <sergey.dyasli@citrix.com>, Ashok Raj <ashok.raj@intel.com>,
 Wei Liu <wl@xen.org>, Andrew Cooper <andrew.cooper3@citrix.com>,
 Jan Beulich <jbeulich@suse.com>, Chao Gao <chao.gao@intel.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

U29tZSBjYWxsYmFja3MgaW4gbWljcm9jb2RlX29wcyBvciByZWxhdGVkIGZ1bmN0aW9ucyB0YWtl
IGEgY3B1CmlkIHBhcmFtZXRlci4gQnV0IGF0IGN1cnJlbnQgY2FsbCBzaXRlcywgdGhlIGNwdSBp
ZCBwYXJhbWV0ZXIgaXMKYWx3YXlzIGVxdWFsIHRvIGN1cnJlbnQgY3B1IGlkLiBTb21lIG9mIHRo
ZW0gZXZlbiB1c2UgYW4gYXNzZXJ0aW9uCnRvIGd1YXJhbnRlZSB0aGlzLiBSZW1vdmUgdGhpcyBy
ZWR1bmRlbnQgJ2NwdScgcGFyYW1ldGVyLgoKU2lnbmVkLW9mZi1ieTogQ2hhbyBHYW8gPGNoYW8u
Z2FvQGludGVsLmNvbT4KLS0tCiB4ZW4vYXJjaC94ODYvYWNwaS9wb3dlci5jICAgICAgIHwgIDIg
Ky0KIHhlbi9hcmNoL3g4Ni9taWNyb2NvZGUuYyAgICAgICAgfCAxMiArKysrKystLS0tLS0KIHhl
bi9hcmNoL3g4Ni9taWNyb2NvZGVfYW1kLmMgICAgfCAzNSArKysrKysrKysrKysrLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLQogeGVuL2FyY2gveDg2L21pY3JvY29kZV9pbnRlbC5jICB8IDI1ICsrKysr
KysrKy0tLS0tLS0tLS0tLS0tLS0KIHhlbi9hcmNoL3g4Ni9zbXBib290LmMgICAgICAgICAgfCAg
MiArLQogeGVuL2luY2x1ZGUvYXNtLXg4Ni9taWNyb2NvZGUuaCB8ICA3ICsrKy0tLS0KIHhlbi9p
bmNsdWRlL2FzbS14ODYvcHJvY2Vzc29yLmggfCAgMiArLQogNyBmaWxlcyBjaGFuZ2VkLCAzNCBp
bnNlcnRpb25zKCspLCA1MSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS94ZW4vYXJjaC94ODYv
YWNwaS9wb3dlci5jIGIveGVuL2FyY2gveDg2L2FjcGkvcG93ZXIuYwppbmRleCBhZWNjNzU0Li40
ZjIxOTAzIDEwMDY0NAotLS0gYS94ZW4vYXJjaC94ODYvYWNwaS9wb3dlci5jCisrKyBiL3hlbi9h
cmNoL3g4Ni9hY3BpL3Bvd2VyLmMKQEAgLTI1Myw3ICsyNTMsNyBAQCBzdGF0aWMgaW50IGVudGVy
X3N0YXRlKHUzMiBzdGF0ZSkKIAogICAgIGNvbnNvbGVfZW5kX3N5bmMoKTsKIAotICAgIG1pY3Jv
Y29kZV9yZXN1bWVfY3B1KDApOworICAgIG1pY3JvY29kZV9yZXN1bWVfY3B1KCk7CiAKICAgICBp
ZiAoICFyZWNoZWNrX2NwdV9mZWF0dXJlcygwKSApCiAgICAgICAgIHBhbmljKCJNaXNzaW5nIHBy
ZXZpb3VzbHkgYXZhaWxhYmxlIGZlYXR1cmUocylcbiIpOwpkaWZmIC0tZ2l0IGEveGVuL2FyY2gv
eDg2L21pY3JvY29kZS5jIGIveGVuL2FyY2gveDg2L21pY3JvY29kZS5jCmluZGV4IDBjMDFkZmEu
LjE2YTZkNTAgMTAwNjQ0Ci0tLSBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGUuYworKysgYi94ZW4v
YXJjaC94ODYvbWljcm9jb2RlLmMKQEAgLTE5NiwxOSArMTk2LDE5IEBAIHN0cnVjdCBtaWNyb2Nv
ZGVfaW5mbyB7CiAgICAgY2hhciBidWZmZXJbMV07CiB9OwogCi1pbnQgbWljcm9jb2RlX3Jlc3Vt
ZV9jcHUodW5zaWduZWQgaW50IGNwdSkKK2ludCBtaWNyb2NvZGVfcmVzdW1lX2NwdSh2b2lkKQog
ewogICAgIGludCBlcnI7Ci0gICAgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZwZXJfY3B1
KGNwdV9zaWcsIGNwdSk7CisgICAgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZ0aGlzX2Nw
dShjcHVfc2lnKTsKIAogICAgIGlmICggIW1pY3JvY29kZV9vcHMgKQogICAgICAgICByZXR1cm4g
MDsKIAogICAgIHNwaW5fbG9jaygmbWljcm9jb2RlX211dGV4KTsKIAotICAgIGVyciA9IG1pY3Jv
Y29kZV9vcHMtPmNvbGxlY3RfY3B1X2luZm8oY3B1LCBzaWcpOworICAgIGVyciA9IG1pY3JvY29k
ZV9vcHMtPmNvbGxlY3RfY3B1X2luZm8oc2lnKTsKICAgICBpZiAoIGxpa2VseSghZXJyKSApCi0g
ICAgICAgIGVyciA9IG1pY3JvY29kZV9vcHMtPmFwcGx5X21pY3JvY29kZShjcHUpOworICAgICAg
ICBlcnIgPSBtaWNyb2NvZGVfb3BzLT5hcHBseV9taWNyb2NvZGUoKTsKICAgICBzcGluX3VubG9j
aygmbWljcm9jb2RlX211dGV4KTsKIAogICAgIHJldHVybiBlcnI7CkBAIC0yNTUsOSArMjU1LDkg
QEAgc3RhdGljIGludCBtaWNyb2NvZGVfdXBkYXRlX2NwdShjb25zdCB2b2lkICpidWYsIHNpemVf
dCBzaXplKQogCiAgICAgc3Bpbl9sb2NrKCZtaWNyb2NvZGVfbXV0ZXgpOwogCi0gICAgZXJyID0g
bWljcm9jb2RlX29wcy0+Y29sbGVjdF9jcHVfaW5mbyhjcHUsIHNpZyk7CisgICAgZXJyID0gbWlj
cm9jb2RlX29wcy0+Y29sbGVjdF9jcHVfaW5mbyhzaWcpOwogICAgIGlmICggbGlrZWx5KCFlcnIp
ICkKLSAgICAgICAgZXJyID0gbWljcm9jb2RlX29wcy0+Y3B1X3JlcXVlc3RfbWljcm9jb2RlKGNw
dSwgYnVmLCBzaXplKTsKKyAgICAgICAgZXJyID0gbWljcm9jb2RlX29wcy0+Y3B1X3JlcXVlc3Rf
bWljcm9jb2RlKGJ1Ziwgc2l6ZSk7CiAgICAgc3Bpbl91bmxvY2soJm1pY3JvY29kZV9tdXRleCk7
CiAKICAgICByZXR1cm4gZXJyOwpkaWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L21pY3JvY29kZV9h
bWQuYyBiL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGVfYW1kLmMKaW5kZXggOTNhZjJjOS4uMDE0NGRm
MSAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L21pY3JvY29kZV9hbWQuYworKysgYi94ZW4vYXJj
aC94ODYvbWljcm9jb2RlX2FtZC5jCkBAIC03OCw4ICs3OCw5IEBAIHN0cnVjdCBtcGJoZHIgewog
c3RhdGljIERFRklORV9TUElOTE9DSyhtaWNyb2NvZGVfdXBkYXRlX2xvY2spOwogCiAvKiBTZWUg
Y29tbWVudCBpbiBzdGFydF91cGRhdGUoKSBmb3IgY2FzZXMgd2hlbiB0aGlzIHJvdXRpbmUgZmFp
bHMgKi8KLXN0YXRpYyBpbnQgY29sbGVjdF9jcHVfaW5mbyh1bnNpZ25lZCBpbnQgY3B1LCBzdHJ1
Y3QgY3B1X3NpZ25hdHVyZSAqY3NpZykKK3N0YXRpYyBpbnQgY29sbGVjdF9jcHVfaW5mbyhzdHJ1
Y3QgY3B1X3NpZ25hdHVyZSAqY3NpZykKIHsKKyAgICB1bnNpZ25lZCBpbnQgY3B1ID0gc21wX3By
b2Nlc3Nvcl9pZCgpOwogICAgIHN0cnVjdCBjcHVpbmZvX3g4NiAqYyA9ICZjcHVfZGF0YVtjcHVd
OwogCiAgICAgbWVtc2V0KGNzaWcsIDAsIHNpemVvZigqY3NpZykpOwpAQCAtMTUyLDE4ICsxNTMs
MTUgQEAgc3RhdGljIGJvb2xfdCBmaW5kX2VxdWl2X2NwdV9pZChjb25zdCBzdHJ1Y3QgZXF1aXZf
Y3B1X2VudHJ5ICplcXVpdl9jcHVfdGFibGUsCiAgICAgcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBi
b29sX3QgbWljcm9jb2RlX2ZpdHMoY29uc3Qgc3RydWN0IG1pY3JvY29kZV9hbWQgKm1jX2FtZCwK
LSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zaWduZWQgaW50IGNwdSkKK3N0YXRpYyBi
b29sIG1pY3JvY29kZV9maXRzKGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfYW1kICptY19hbWQpCiB7
CisgICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9wcm9jZXNzb3JfaWQoKTsKICAgICBjb25zdCBz
dHJ1Y3QgY3B1X3NpZ25hdHVyZSAqc2lnID0gJnBlcl9jcHUoY3B1X3NpZywgY3B1KTsKICAgICBj
b25zdCBzdHJ1Y3QgbWljcm9jb2RlX2hlYWRlcl9hbWQgKm1jX2hlYWRlciA9IG1jX2FtZC0+bXBi
OwogICAgIGNvbnN0IHN0cnVjdCBlcXVpdl9jcHVfZW50cnkgKmVxdWl2X2NwdV90YWJsZSA9IG1j
X2FtZC0+ZXF1aXZfY3B1X3RhYmxlOwogICAgIHVuc2lnbmVkIGludCBjdXJyZW50X2NwdV9pZDsK
ICAgICB1bnNpZ25lZCBpbnQgZXF1aXZfY3B1X2lkOwogCi0gICAgLyogV2Ugc2hvdWxkIGJpbmQg
dGhlIHRhc2sgdG8gdGhlIENQVSAqLwotICAgIEJVR19PTihjcHUgIT0gcmF3X3NtcF9wcm9jZXNz
b3JfaWQoKSk7Ci0KICAgICBjdXJyZW50X2NwdV9pZCA9IGNwdWlkX2VheCgweDAwMDAwMDAxKTsK
IAogICAgIGlmICggIWZpbmRfZXF1aXZfY3B1X2lkKGVxdWl2X2NwdV90YWJsZSwgY3VycmVudF9j
cHVfaWQsICZlcXVpdl9jcHVfaWQpICkKQEAgLTE5Miw5ICsxOTAsNyBAQCBzdGF0aWMgYm9vbF90
IG1pY3JvY29kZV9maXRzKGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfYW1kICptY19hbWQsCiAKIHN0
YXRpYyBib29sIG1hdGNoX2NwdShjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCkK
IHsKLSAgICBpZiAoICFwYXRjaCApCi0gICAgICAgIHJldHVybiBmYWxzZTsKLSAgICByZXR1cm4g
bWljcm9jb2RlX2ZpdHMocGF0Y2gtPm1jX2FtZCwgc21wX3Byb2Nlc3Nvcl9pZCgpKTsKKyAgICBy
ZXR1cm4gcGF0Y2ggPyBtaWNyb2NvZGVfZml0cyhwYXRjaC0+bWNfYW1kKSA6IGZhbHNlOwogfQog
CiBzdGF0aWMgc3RydWN0IG1pY3JvY29kZV9wYXRjaCAqYWxsb2NfbWljcm9jb2RlX3BhdGNoKApA
QCAtMjUzLDE4ICsyNDksMTYgQEAgc3RhdGljIGVudW0gbWljcm9jb2RlX21hdGNoX3Jlc3VsdCBj
b21wYXJlX3BhdGNoKAogICAgIHJldHVybiBNSVNfVUNPREU7CiB9CiAKLXN0YXRpYyBpbnQgYXBw
bHlfbWljcm9jb2RlKHVuc2lnbmVkIGludCBjcHUpCitzdGF0aWMgaW50IGFwcGx5X21pY3JvY29k
ZSh2b2lkKQogewogICAgIHVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAgICAgdWludDMyX3QgcmV2Owog
ICAgIGludCBod19lcnI7CisgICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9wcm9jZXNzb3JfaWQo
KTsKICAgICBzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqc2lnID0gJnBlcl9jcHUoY3B1X3NpZywgY3B1
KTsKICAgICBjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX2hlYWRlcl9hbWQgKmhkcjsKICAgICBjb25z
dCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCA9IG1pY3JvY29kZV9nZXRfY2FjaGUoKTsK
IAotICAgIC8qIFdlIHNob3VsZCBiaW5kIHRoZSB0YXNrIHRvIHRoZSBDUFUgKi8KLSAgICBCVUdf
T04ocmF3X3NtcF9wcm9jZXNzb3JfaWQoKSAhPSBjcHUpOwotCiAgICAgaWYgKCAhbWF0Y2hfY3B1
KHBhdGNoKSApCiAgICAgICAgIHJldHVybiAtRUlOVkFMOwogCkBAIC00MzUsMTQgKzQyOSwxNCBA
QCBzdGF0aWMgY29uc3QgdW5zaWduZWQgaW50IGZpbmFsX2xldmVsc1tdID0gewogICAgIDB4MDEw
MDAwYWYKIH07CiAKLXN0YXRpYyBib29sX3QgY2hlY2tfZmluYWxfcGF0Y2hfbGV2ZWxzKHVuc2ln
bmVkIGludCBjcHUpCitzdGF0aWMgYm9vbCBjaGVja19maW5hbF9wYXRjaF9sZXZlbHModm9pZCkK
IHsKICAgICAvKgogICAgICAqIENoZWNrIHRoZSBjdXJyZW50IHBhdGNoIGxldmVscyBvbiB0aGUg
Y3B1LiBJZiB0aGV5IGFyZSBlcXVhbCB0bwogICAgICAqIGFueSBvZiB0aGUgJ2ZpbmFsX2xldmVs
cycsIHRoZW4gd2Ugc2hvdWxkIG5vdCB1cGRhdGUgdGhlIG1pY3JvY29kZQogICAgICAqIHBhdGNo
IG9uIHRoZSBjcHUgYXMgc3lzdGVtIHdpbGwgaGFuZyBvdGhlcndpc2UuCiAgICAgICovCi0gICAg
Y29uc3Qgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZwZXJfY3B1KGNwdV9zaWcsIGNwdSk7
CisgICAgY29uc3Qgc3RydWN0IGNwdV9zaWduYXR1cmUgKnNpZyA9ICZ0aGlzX2NwdShjcHVfc2ln
KTsKICAgICB1bnNpZ25lZCBpbnQgaTsKIAogICAgIGlmICggYm9vdF9jcHVfZGF0YS54ODYgIT0g
MHgxMCApCkBAIC00NTUsMTkgKzQ0OSwxNiBAQCBzdGF0aWMgYm9vbF90IGNoZWNrX2ZpbmFsX3Bh
dGNoX2xldmVscyh1bnNpZ25lZCBpbnQgY3B1KQogICAgIHJldHVybiAwOwogfQogCi1zdGF0aWMg
aW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNpZ25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpi
dWYsCi0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplX3QgYnVmc2l6ZSkKK3N0
YXRpYyBpbnQgY3B1X3JlcXVlc3RfbWljcm9jb2RlKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IGJ1
ZnNpemUpCiB7CiAgICAgc3RydWN0IG1pY3JvY29kZV9hbWQgKm1jX2FtZDsKICAgICBzaXplX3Qg
b2Zmc2V0ID0gMDsKICAgICBpbnQgZXJyb3IgPSAwOwogICAgIHVuc2lnbmVkIGludCBjdXJyZW50
X2NwdV9pZDsKICAgICB1bnNpZ25lZCBpbnQgZXF1aXZfY3B1X2lkOworICAgIHVuc2lnbmVkIGlu
dCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CiAgICAgY29uc3Qgc3RydWN0IGNwdV9zaWduYXR1
cmUgKnNpZyA9ICZwZXJfY3B1KGNwdV9zaWcsIGNwdSk7CiAKLSAgICAvKiBXZSBzaG91bGQgYmlu
ZCB0aGUgdGFzayB0byB0aGUgQ1BVICovCi0gICAgQlVHX09OKGNwdSAhPSByYXdfc21wX3Byb2Nl
c3Nvcl9pZCgpKTsKLQogICAgIGN1cnJlbnRfY3B1X2lkID0gY3B1aWRfZWF4KDB4MDAwMDAwMDEp
OwogCiAgICAgaWYgKCAqKGNvbnN0IHVpbnQzMl90ICopYnVmICE9IFVDT0RFX01BR0lDICkKQEAg
LTQ3Nyw3ICs0NjgsNyBAQCBzdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNpZ25l
ZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCiAgICAgICAgIGdvdG8gb3V0OwogICAgIH0KIAot
ICAgIGlmICggY2hlY2tfZmluYWxfcGF0Y2hfbGV2ZWxzKGNwdSkgKQorICAgIGlmICggY2hlY2tf
ZmluYWxfcGF0Y2hfbGV2ZWxzKCkgKQogICAgIHsKICAgICAgICAgcHJpbnRrKFhFTkxPR19JTkZP
CiAgICAgICAgICAgICAgICAibWljcm9jb2RlOiBDYW5ub3QgdXBkYXRlIG1pY3JvY29kZSBwYXRj
aCBvbiB0aGUgY3B1IGFzIHdlIGhpdCBhIGZpbmFsIGxldmVsXG4iKTsKQEAgLTU2Nyw3ICs1NTgs
NyBAQCBzdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3JvY29kZSh1bnNpZ25lZCBpbnQgY3B1LCBj
b25zdCB2b2lkICpidWYsCiAKICAgICAgICAgaWYgKCBtYXRjaF9jcHUobWljcm9jb2RlX2dldF9j
YWNoZSgpKSApCiAgICAgICAgIHsKLSAgICAgICAgICAgIGVycm9yID0gYXBwbHlfbWljcm9jb2Rl
KGNwdSk7CisgICAgICAgICAgICBlcnJvciA9IGFwcGx5X21pY3JvY29kZSgpOwogICAgICAgICAg
ICAgaWYgKCBlcnJvciApCiAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgIH0KZGlmZiAt
LWdpdCBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGVfaW50ZWwuYyBiL3hlbi9hcmNoL3g4Ni9taWNy
b2NvZGVfaW50ZWwuYwppbmRleCBiZjY0OTdmLi5iNjY4NDRkIDEwMDY0NAotLS0gYS94ZW4vYXJj
aC94ODYvbWljcm9jb2RlX2ludGVsLmMKKysrIGIveGVuL2FyY2gveDg2L21pY3JvY29kZV9pbnRl
bC5jCkBAIC05NiwxMyArOTYsMTIgQEAgc3RydWN0IGV4dGVuZGVkX3NpZ3RhYmxlIHsKIC8qIHNl
cmlhbGl6ZSBhY2Nlc3MgdG8gdGhlIHBoeXNpY2FsIHdyaXRlIHRvIE1TUiAweDc5ICovCiBzdGF0
aWMgREVGSU5FX1NQSU5MT0NLKG1pY3JvY29kZV91cGRhdGVfbG9jayk7CiAKLXN0YXRpYyBpbnQg
Y29sbGVjdF9jcHVfaW5mbyh1bnNpZ25lZCBpbnQgY3B1X251bSwgc3RydWN0IGNwdV9zaWduYXR1
cmUgKmNzaWcpCitzdGF0aWMgaW50IGNvbGxlY3RfY3B1X2luZm8oc3RydWN0IGNwdV9zaWduYXR1
cmUgKmNzaWcpCiB7CisgICAgdW5zaWduZWQgaW50IGNwdV9udW0gPSBzbXBfcHJvY2Vzc29yX2lk
KCk7CiAgICAgc3RydWN0IGNwdWluZm9feDg2ICpjID0gJmNwdV9kYXRhW2NwdV9udW1dOwogICAg
IHVpbnQ2NF90IG1zcl9jb250ZW50OwogCi0gICAgQlVHX09OKGNwdV9udW0gIT0gc21wX3Byb2Nl
c3Nvcl9pZCgpKTsKLQogICAgIG1lbXNldChjc2lnLCAwLCBzaXplb2YoKmNzaWcpKTsKIAogICAg
IGlmICggKGMtPng4Nl92ZW5kb3IgIT0gWDg2X1ZFTkRPUl9JTlRFTCkgfHwgKGMtPng4NiA8IDYp
ICkKQEAgLTI3OSwxMiArMjc4LDEzIEBAIHN0YXRpYyBlbnVtIG1pY3JvY29kZV9tYXRjaF9yZXN1
bHQgY29tcGFyZV9wYXRjaCgKICAqIHJldHVybiAxIC0gZm91bmQgdXBkYXRlCiAgKiByZXR1cm4g
PCAwIC0gZXJyb3IKICAqLwotc3RhdGljIGludCBnZXRfbWF0Y2hpbmdfbWljcm9jb2RlKGNvbnN0
IHZvaWQgKm1jLCB1bnNpZ25lZCBpbnQgY3B1KQorc3RhdGljIGludCBnZXRfbWF0Y2hpbmdfbWlj
cm9jb2RlKGNvbnN0IHZvaWQgKm1jKQogewogICAgIGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfaGVh
ZGVyX2ludGVsICptY19oZWFkZXIgPSBtYzsKICAgICB1bnNpZ25lZCBsb25nIHRvdGFsX3NpemUg
PSBnZXRfdG90YWxzaXplKG1jX2hlYWRlcik7CiAgICAgdm9pZCAqbmV3X21jID0geG1hbGxvY19i
eXRlcyh0b3RhbF9zaXplKTsKICAgICBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpuZXdfcGF0Y2gg
PSB4bWFsbG9jKHN0cnVjdCBtaWNyb2NvZGVfcGF0Y2gpOworICAgIHVuc2lnbmVkIGludCBfX21h
eWJlX3VudXNlZCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CiAKICAgICBpZiAoICFuZXdfcGF0
Y2ggfHwgIW5ld19tYyApCiAgICAgewpAQCAtMzEyLDE5ICszMTIsMTYgQEAgc3RhdGljIGludCBn
ZXRfbWF0Y2hpbmdfbWljcm9jb2RlKGNvbnN0IHZvaWQgKm1jLCB1bnNpZ25lZCBpbnQgY3B1KQog
ICAgIHJldHVybiAxOwogfQogCi1zdGF0aWMgaW50IGFwcGx5X21pY3JvY29kZSh1bnNpZ25lZCBp
bnQgY3B1KQorc3RhdGljIGludCBhcHBseV9taWNyb2NvZGUodm9pZCkKIHsKICAgICB1bnNpZ25l
ZCBsb25nIGZsYWdzOwogICAgIHVpbnQ2NF90IG1zcl9jb250ZW50OwogICAgIHVuc2lnbmVkIGlu
dCB2YWxbMl07CiAgICAgdW5zaWduZWQgaW50IGNwdV9udW0gPSByYXdfc21wX3Byb2Nlc3Nvcl9p
ZCgpOwotICAgIHN0cnVjdCBjcHVfc2lnbmF0dXJlICpzaWcgPSAmcGVyX2NwdShjcHVfc2lnLCBj
cHUpOworICAgIHN0cnVjdCBjcHVfc2lnbmF0dXJlICpzaWcgPSAmdGhpc19jcHUoY3B1X3NpZyk7
CiAgICAgY29uc3Qgc3RydWN0IG1pY3JvY29kZV9pbnRlbCAqbWNfaW50ZWw7CiAgICAgY29uc3Qg
c3RydWN0IG1pY3JvY29kZV9wYXRjaCAqcGF0Y2ggPSBtaWNyb2NvZGVfZ2V0X2NhY2hlKCk7CiAK
LSAgICAvKiBXZSBzaG91bGQgYmluZCB0aGUgdGFzayB0byB0aGUgQ1BVICovCi0gICAgQlVHX09O
KGNwdV9udW0gIT0gY3B1KTsKLQogICAgIGlmICggIW1hdGNoX2NwdShwYXRjaCkgKQogICAgICAg
ICByZXR1cm4gLUVJTlZBTDsKIApAQCAtMzkxLDIyICszODgsMTggQEAgc3RhdGljIGxvbmcgZ2V0
X25leHRfdWNvZGVfZnJvbV9idWZmZXIodm9pZCAqKm1jLCBjb25zdCB1OCAqYnVmLAogICAgIHJl
dHVybiBvZmZzZXQgKyB0b3RhbF9zaXplOwogfQogCi1zdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21p
Y3JvY29kZSh1bnNpZ25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCi0gICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBzaXplX3Qgc2l6ZSkKK3N0YXRpYyBpbnQgY3B1X3JlcXVlc3Rf
bWljcm9jb2RlKGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90IHNpemUpCiB7CiAgICAgbG9uZyBvZmZz
ZXQgPSAwOwogICAgIGludCBlcnJvciA9IDA7CiAgICAgdm9pZCAqbWM7CiAKLSAgICAvKiBXZSBz
aG91bGQgYmluZCB0aGUgdGFzayB0byB0aGUgQ1BVICovCi0gICAgQlVHX09OKGNwdSAhPSByYXdf
c21wX3Byb2Nlc3Nvcl9pZCgpKTsKLQogICAgIHdoaWxlICggKG9mZnNldCA9IGdldF9uZXh0X3Vj
b2RlX2Zyb21fYnVmZmVyKCZtYywgYnVmLCBzaXplLCBvZmZzZXQpKSA+IDAgKQogICAgIHsKICAg
ICAgICAgZXJyb3IgPSBtaWNyb2NvZGVfc2FuaXR5X2NoZWNrKG1jKTsKICAgICAgICAgaWYgKCBl
cnJvciApCiAgICAgICAgICAgICBicmVhazsKLSAgICAgICAgZXJyb3IgPSBnZXRfbWF0Y2hpbmdf
bWljcm9jb2RlKG1jLCBjcHUpOworICAgICAgICBlcnJvciA9IGdldF9tYXRjaGluZ19taWNyb2Nv
ZGUobWMpOwogICAgICAgICBpZiAoIGVycm9yIDwgMCApCiAgICAgICAgICAgICBicmVhazsKICAg
ICAgICAgLyoKQEAgLTQyNCw3ICs0MTcsNyBAQCBzdGF0aWMgaW50IGNwdV9yZXF1ZXN0X21pY3Jv
Y29kZSh1bnNpZ25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCiAgICAgICAgIGVycm9yID0g
b2Zmc2V0OwogCiAgICAgaWYgKCAhZXJyb3IgJiYgbWF0Y2hfY3B1KG1pY3JvY29kZV9nZXRfY2Fj
aGUoKSkgKQotICAgICAgICBlcnJvciA9IGFwcGx5X21pY3JvY29kZShjcHUpOworICAgICAgICBl
cnJvciA9IGFwcGx5X21pY3JvY29kZSgpOwogCiAgICAgcmV0dXJuIGVycm9yOwogfQpkaWZmIC0t
Z2l0IGEveGVuL2FyY2gveDg2L3NtcGJvb3QuYyBiL3hlbi9hcmNoL3g4Ni9zbXBib290LmMKaW5k
ZXggMjc0ODY1YS4uZGUxOWI2NyAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L3NtcGJvb3QuYwor
KysgYi94ZW4vYXJjaC94ODYvc21wYm9vdC5jCkBAIC0zNjYsNyArMzY2LDcgQEAgdm9pZCBzdGFy
dF9zZWNvbmRhcnkodm9pZCAqdW51c2VkKQogICAgIGlmICggc3lzdGVtX3N0YXRlIDw9IFNZU19T
VEFURV9zbXBfYm9vdCApCiAgICAgICAgIGVhcmx5X21pY3JvY29kZV91cGRhdGVfY3B1KGZhbHNl
KTsKICAgICBlbHNlCi0gICAgICAgIG1pY3JvY29kZV9yZXN1bWVfY3B1KGNwdSk7CisgICAgICAg
IG1pY3JvY29kZV9yZXN1bWVfY3B1KCk7CiAKICAgICAvKgogICAgICAqIElmIE1TUl9TUEVDX0NU
UkwgaXMgYXZhaWxhYmxlLCBhcHBseSBYZW4ncyBkZWZhdWx0IHNldHRpbmcgYW5kIGRpc2NhcmQK
ZGlmZiAtLWdpdCBhL3hlbi9pbmNsdWRlL2FzbS14ODYvbWljcm9jb2RlLmggYi94ZW4vaW5jbHVk
ZS9hc20teDg2L21pY3JvY29kZS5oCmluZGV4IGYyYWM1MDkuLmU2ODQyZDQgMTAwNjQ0Ci0tLSBh
L3hlbi9pbmNsdWRlL2FzbS14ODYvbWljcm9jb2RlLmgKKysrIGIveGVuL2luY2x1ZGUvYXNtLXg4
Ni9taWNyb2NvZGUuaApAQCAtMTksMTAgKzE5LDkgQEAgc3RydWN0IG1pY3JvY29kZV9wYXRjaCB7
CiB9OwogCiBzdHJ1Y3QgbWljcm9jb2RlX29wcyB7Ci0gICAgaW50ICgqY3B1X3JlcXVlc3RfbWlj
cm9jb2RlKSh1bnNpZ25lZCBpbnQgY3B1LCBjb25zdCB2b2lkICpidWYsCi0gICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBzaXplX3Qgc2l6ZSk7Ci0gICAgaW50ICgqY29sbGVjdF9jcHVf
aW5mbykodW5zaWduZWQgaW50IGNwdSwgc3RydWN0IGNwdV9zaWduYXR1cmUgKmNzaWcpOwotICAg
IGludCAoKmFwcGx5X21pY3JvY29kZSkodW5zaWduZWQgaW50IGNwdSk7CisgICAgaW50ICgqY3B1
X3JlcXVlc3RfbWljcm9jb2RlKShjb25zdCB2b2lkICpidWYsIHNpemVfdCBzaXplKTsKKyAgICBp
bnQgKCpjb2xsZWN0X2NwdV9pbmZvKShzdHJ1Y3QgY3B1X3NpZ25hdHVyZSAqY3NpZyk7CisgICAg
aW50ICgqYXBwbHlfbWljcm9jb2RlKSh2b2lkKTsKICAgICBpbnQgKCpzdGFydF91cGRhdGUpKHZv
aWQpOwogICAgIHZvaWQgKCpmcmVlX3BhdGNoKShzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRj
aCk7CiAgICAgYm9vbCAoKm1hdGNoX2NwdSkoY29uc3Qgc3RydWN0IG1pY3JvY29kZV9wYXRjaCAq
cGF0Y2gpOwpkaWZmIC0tZ2l0IGEveGVuL2luY2x1ZGUvYXNtLXg4Ni9wcm9jZXNzb3IuaCBiL3hl
bi9pbmNsdWRlL2FzbS14ODYvcHJvY2Vzc29yLmgKaW5kZXggY2VmM2ZmYi4uOGI3ZTQ4NCAxMDA2
NDQKLS0tIGEveGVuL2luY2x1ZGUvYXNtLXg4Ni9wcm9jZXNzb3IuaAorKysgYi94ZW4vaW5jbHVk
ZS9hc20teDg2L3Byb2Nlc3Nvci5oCkBAIC01NzMsNyArNTczLDcgQEAgaW50IGd1ZXN0X3dybXNy
X3hlbihzdHJ1Y3QgdmNwdSAqdiwgdWludDMyX3QgaWR4LCB1aW50NjRfdCB2YWwpOwogCiB2b2lk
IG1pY3JvY29kZV9zZXRfbW9kdWxlKHVuc2lnbmVkIGludCk7CiBpbnQgbWljcm9jb2RlX3VwZGF0
ZShYRU5fR1VFU1RfSEFORExFX1BBUkFNKGNvbnN0X3ZvaWQpLCB1bnNpZ25lZCBsb25nIGxlbik7
Ci1pbnQgbWljcm9jb2RlX3Jlc3VtZV9jcHUodW5zaWduZWQgaW50IGNwdSk7CitpbnQgbWljcm9j
b2RlX3Jlc3VtZV9jcHUodm9pZCk7CiBpbnQgZWFybHlfbWljcm9jb2RlX3VwZGF0ZV9jcHUoYm9v
bCBzdGFydF91cGRhdGUpOwogaW50IGVhcmx5X21pY3JvY29kZV9pbml0KHZvaWQpOwogaW50IG1p
Y3JvY29kZV9pbml0X2ludGVsKHZvaWQpOwotLSAKMS44LjMuMQoKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVu
LWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcv
bWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

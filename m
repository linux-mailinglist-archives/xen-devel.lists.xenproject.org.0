Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 2259118F16
	for <lists+xen-devel@lfdr.de>; Thu,  9 May 2019 19:28:30 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hOmnp-0000kI-2J; Thu, 09 May 2019 17:25:53 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=fgKw=TJ=oracle.com=ankur.a.arora@srs-us1.protection.inumbo.net>)
 id 1hOmnm-0000i3-Tj
 for xen-devel@lists.xenproject.org; Thu, 09 May 2019 17:25:51 +0000
X-Inumbo-ID: 7b5afce2-727f-11e9-8980-bc764e045a96
Received: from userp2130.oracle.com (unknown [156.151.31.86])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id 7b5afce2-727f-11e9-8980-bc764e045a96;
 Thu, 09 May 2019 17:25:46 +0000 (UTC)
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
 by userp2130.oracle.com (8.16.0.27/8.16.0.27) with SMTP id x49HJOwV151549;
 Thu, 9 May 2019 17:25:45 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=from : to : cc :
 subject : date : message-id : in-reply-to : references : mime-version :
 content-transfer-encoding; s=corp-2018-07-02;
 bh=UbPcnD6D6e3Eh92jCR1E4okj/kRSBROYdT8U3cfcw0w=;
 b=5VXqG9w6DSUZIaSV+vjgWmXpjbTmI6/CuLneUPjy8E0P0qoMdcSFEIKmp+acINNjpRnp
 ZjfHC6HnNognmTUhTZrqCoDctmiowR3WPJqjR5ctqHk1v5rzc2P4o7vrh7cS6jQJ1MxC
 gml3w17CnC2TJXLUlMCdb/PTvbPn6c2zRVlvETp8h5BIC9gbCkOV62a+7kLROqb8dVLY
 MChpLB277WR7eee63248zk7cn3N7wIpDDAzZzdCsxVfYi9kjJTwsToVsLdp3GRQ9BrTc
 2dczzmK28KZS3ZG/DXj7sUsG5bfNW2fz7TrIAm7LJquxc9UF8GxG8aaoNWY1sr4CaaaK dg== 
Received: from userp3030.oracle.com (userp3030.oracle.com [156.151.31.80])
 by userp2130.oracle.com with ESMTP id 2s94bgceek-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Thu, 09 May 2019 17:25:45 +0000
Received: from pps.filterd (userp3030.oracle.com [127.0.0.1])
 by userp3030.oracle.com (8.16.0.27/8.16.0.27) with SMTP id x49HNxrG109635;
 Thu, 9 May 2019 17:25:45 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
 by userp3030.oracle.com with ESMTP id 2sagyvcg65-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Thu, 09 May 2019 17:25:44 +0000
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
 by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id x49HPi42013393;
 Thu, 9 May 2019 17:25:44 GMT
Received: from aa1-ca-oracle-com.ca.oracle.com (/10.156.75.204)
 by default (Oracle Beehive Gateway v4.0)
 with ESMTP ; Thu, 09 May 2019 10:25:43 -0700
From: Ankur Arora <ankur.a.arora@oracle.com>
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org
Date: Thu,  9 May 2019 10:25:35 -0700
Message-Id: <20190509172540.12398-12-ankur.a.arora@oracle.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190509172540.12398-1-ankur.a.arora@oracle.com>
References: <20190509172540.12398-1-ankur.a.arora@oracle.com>
MIME-Version: 1.0
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9252
 signatures=668686
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=2
 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1905090100
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9252
 signatures=668686
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0
 priorityscore=1501 malwarescore=0
 suspectscore=2 phishscore=0 bulkscore=0 spamscore=0 clxscore=1015
 lowpriorityscore=0 mlxscore=0 impostorscore=0 mlxlogscore=999 adultscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.0.1-1810050000
 definitions=main-1905090100
Subject: [Xen-devel] [RFC PATCH 11/16] xen/grant-table: make grant-table
 xenhost aware
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: jgross@suse.com, sstabellini@kernel.org, konrad.wilk@oracle.com,
 ankur.a.arora@oracle.com, pbonzini@redhat.com, boris.ostrovsky@oracle.com,
 joao.m.martins@oracle.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

TGFyZ2VseSBtZWNoYW5pY2FsIGNoYW5nZXM6IHRoZSBleHBvcnRlZCBncmFudCB0YWJsZSBzeW1i
b2xzIG5vdyB0YWtlCnhlbmhvc3RfdCAqIGFzIGEgcGFyYW1ldGVyLiBBbHNvLCBtb3ZlIHRoZSBn
cmFudCB0YWJsZSBnbG9iYWwgc3RhdGUKaW5zaWRlIHhlbmhvc3RfdC4KCklmIHRoZXJlJ3MgbW9y
ZSB0aGFuIG9uZSB4ZW5ob3N0LCB0aGVuIGluaXRpYWxpemUgYm90aC4KClNpZ25lZC1vZmYtYnk6
IEFua3VyIEFyb3JhIDxhbmt1ci5hLmFyb3JhQG9yYWNsZS5jb20+Ci0tLQogYXJjaC94ODYveGVu
L2dyYW50LXRhYmxlLmMgfCAgNzEgKysrLS0KIGRyaXZlcnMveGVuL2dyYW50LXRhYmxlLmMgIHwg
NjExICsrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0KIGluY2x1ZGUveGVuL2dy
YW50X3RhYmxlLmggIHwgIDcyICsrLS0tCiBpbmNsdWRlL3hlbi94ZW5ob3N0LmggICAgICB8ICAx
MSArCiA0IGZpbGVzIGNoYW5nZWQsIDQ0MyBpbnNlcnRpb25zKCspLCAzMjIgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYveGVuL2dyYW50LXRhYmxlLmMgYi9hcmNoL3g4Ni94ZW4v
Z3JhbnQtdGFibGUuYwppbmRleCBlY2IwZDU0NTAzMzQuLjhmNGIwNzE0MjdmOSAxMDA2NDQKLS0t
IGEvYXJjaC94ODYveGVuL2dyYW50LXRhYmxlLmMKKysrIGIvYXJjaC94ODYveGVuL2dyYW50LXRh
YmxlLmMKQEAgLTIzLDQ4ICsyMyw1NCBAQAogCiAjaW5jbHVkZSA8YXNtL3BndGFibGUuaD4KIAot
c3RhdGljIHN0cnVjdCBnbnR0YWJfdm1fYXJlYSB7CitzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgewog
CXN0cnVjdCB2bV9zdHJ1Y3QgKmFyZWE7CiAJcHRlX3QgKipwdGVzOwotfSBnbnR0YWJfc2hhcmVk
X3ZtX2FyZWEsIGdudHRhYl9zdGF0dXNfdm1fYXJlYTsKK307CiAKLWludCBhcmNoX2dudHRhYl9t
YXBfc2hhcmVkKHVuc2lnbmVkIGxvbmcgKmZyYW1lcywgdW5zaWduZWQgbG9uZyBucl9nZnJhbWVz
LAotCQkJICAgdW5zaWduZWQgbG9uZyBtYXhfbnJfZ2ZyYW1lcywKLQkJCSAgIHZvaWQgKipfX3No
YXJlZCkKK2ludCBhcmNoX2dudHRhYl9tYXBfc2hhcmVkKHhlbmhvc3RfdCAqeGgsIHVuc2lnbmVk
IGxvbmcgKmZyYW1lcywKKwkJCQl1bnNpZ25lZCBsb25nIG5yX2dmcmFtZXMsCisJCQkJdW5zaWdu
ZWQgbG9uZyBtYXhfbnJfZ2ZyYW1lcywKKwkJCQl2b2lkICoqX19zaGFyZWQpCiB7CiAJdm9pZCAq
c2hhcmVkID0gKl9fc2hhcmVkOwogCXVuc2lnbmVkIGxvbmcgYWRkcjsKIAl1bnNpZ25lZCBsb25n
IGk7CiAKIAlpZiAoc2hhcmVkID09IE5VTEwpCi0JCSpfX3NoYXJlZCA9IHNoYXJlZCA9IGdudHRh
Yl9zaGFyZWRfdm1fYXJlYS5hcmVhLT5hZGRyOworCQkqX19zaGFyZWQgPSBzaGFyZWQgPSAoKHN0
cnVjdCBnbnR0YWJfdm1fYXJlYSAqKQorCQkJCQl4aC0+Z250dGFiX3NoYXJlZF92bV9hcmVhKS0+
YXJlYS0+YWRkcjsKIAogCWFkZHIgPSAodW5zaWduZWQgbG9uZylzaGFyZWQ7CiAKIAlmb3IgKGkg
PSAwOyBpIDwgbnJfZ2ZyYW1lczsgaSsrKSB7Ci0JCXNldF9wdGVfYXQoJmluaXRfbW0sIGFkZHIs
IGdudHRhYl9zaGFyZWRfdm1fYXJlYS5wdGVzW2ldLAotCQkJICAgbWZuX3B0ZShmcmFtZXNbaV0s
IFBBR0VfS0VSTkVMKSk7CisJCXNldF9wdGVfYXQoJmluaXRfbW0sIGFkZHIsCisJCQkoKHN0cnVj
dCBnbnR0YWJfdm1fYXJlYSAqKSB4aC0+Z250dGFiX3NoYXJlZF92bV9hcmVhKS0+cHRlc1tpXSwK
KwkJCW1mbl9wdGUoZnJhbWVzW2ldLCBQQUdFX0tFUk5FTCkpOwogCQlhZGRyICs9IFBBR0VfU0la
RTsKIAl9CiAKIAlyZXR1cm4gMDsKIH0KIAotaW50IGFyY2hfZ250dGFiX21hcF9zdGF0dXModWlu
dDY0X3QgKmZyYW1lcywgdW5zaWduZWQgbG9uZyBucl9nZnJhbWVzLAotCQkJICAgdW5zaWduZWQg
bG9uZyBtYXhfbnJfZ2ZyYW1lcywKLQkJCSAgIGdyYW50X3N0YXR1c190ICoqX19zaGFyZWQpCitp
bnQgYXJjaF9nbnR0YWJfbWFwX3N0YXR1cyh4ZW5ob3N0X3QgKnhoLCB1aW50NjRfdCAqZnJhbWVz
LAorCQkJCXVuc2lnbmVkIGxvbmcgbnJfZ2ZyYW1lcywKKwkJCQl1bnNpZ25lZCBsb25nIG1heF9u
cl9nZnJhbWVzLAorCQkJCWdyYW50X3N0YXR1c190ICoqX19zaGFyZWQpCiB7CiAJZ3JhbnRfc3Rh
dHVzX3QgKnNoYXJlZCA9ICpfX3NoYXJlZDsKIAl1bnNpZ25lZCBsb25nIGFkZHI7CiAJdW5zaWdu
ZWQgbG9uZyBpOwogCiAJaWYgKHNoYXJlZCA9PSBOVUxMKQotCQkqX19zaGFyZWQgPSBzaGFyZWQg
PSBnbnR0YWJfc3RhdHVzX3ZtX2FyZWEuYXJlYS0+YWRkcjsKKwkJKl9fc2hhcmVkID0gc2hhcmVk
ID0gKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikKKwkJCQkJeGgtPmdudHRhYl9zdGF0dXNfdm1f
YXJlYSktPmFyZWEtPmFkZHI7CiAKIAlhZGRyID0gKHVuc2lnbmVkIGxvbmcpc2hhcmVkOwogCiAJ
Zm9yIChpID0gMDsgaSA8IG5yX2dmcmFtZXM7IGkrKykgewotCQlzZXRfcHRlX2F0KCZpbml0X21t
LCBhZGRyLCBnbnR0YWJfc3RhdHVzX3ZtX2FyZWEucHRlc1tpXSwKKwkJc2V0X3B0ZV9hdCgmaW5p
dF9tbSwgYWRkciwgKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikKKwkJCQl4aC0+Z250dGFiX3N0
YXR1c192bV9hcmVhKS0+cHRlc1tpXSwKIAkJCSAgIG1mbl9wdGUoZnJhbWVzW2ldLCBQQUdFX0tF
Uk5FTCkpOwogCQlhZGRyICs9IFBBR0VfU0laRTsKIAl9CkBAIC03MiwxNiArNzgsMTcgQEAgaW50
IGFyY2hfZ250dGFiX21hcF9zdGF0dXModWludDY0X3QgKmZyYW1lcywgdW5zaWduZWQgbG9uZyBu
cl9nZnJhbWVzLAogCXJldHVybiAwOwogfQogCi12b2lkIGFyY2hfZ250dGFiX3VubWFwKHZvaWQg
KnNoYXJlZCwgdW5zaWduZWQgbG9uZyBucl9nZnJhbWVzKQordm9pZCBhcmNoX2dudHRhYl91bm1h
cCh4ZW5ob3N0X3QgKnhoLCB2b2lkICpzaGFyZWQsIHVuc2lnbmVkIGxvbmcgbnJfZ2ZyYW1lcykK
IHsKIAlwdGVfdCAqKnB0ZXM7CiAJdW5zaWduZWQgbG9uZyBhZGRyOwogCXVuc2lnbmVkIGxvbmcg
aTsKIAotCWlmIChzaGFyZWQgPT0gZ250dGFiX3N0YXR1c192bV9hcmVhLmFyZWEtPmFkZHIpCi0J
CXB0ZXMgPSBnbnR0YWJfc3RhdHVzX3ZtX2FyZWEucHRlczsKKwlpZiAoc2hhcmVkID09ICgoc3Ry
dWN0IGdudHRhYl92bV9hcmVhICopCisJCQl4aC0+Z250dGFiX3N0YXR1c192bV9hcmVhKS0+YXJl
YS0+YWRkcikKKwkJcHRlcyA9ICgoc3RydWN0IGdudHRhYl92bV9hcmVhICopIHhoLT5nbnR0YWJf
c3RhdHVzX3ZtX2FyZWEpLT5wdGVzOwogCWVsc2UKLQkJcHRlcyA9IGdudHRhYl9zaGFyZWRfdm1f
YXJlYS5wdGVzOworCQlwdGVzID0gKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikgeGgtPmdudHRh
Yl9zaGFyZWRfdm1fYXJlYSktPnB0ZXM7CiAKIAlhZGRyID0gKHVuc2lnbmVkIGxvbmcpc2hhcmVk
OwogCkBAIC0xMTIsMTQgKzExOSwxNSBAQCBzdGF0aWMgdm9pZCBhcmNoX2dudHRhYl92ZnJlZShz
dHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKmFyZWEpCiAJa2ZyZWUoYXJlYS0+cHRlcyk7CiB9CiAKLWlu
dCBhcmNoX2dudHRhYl9pbml0KHVuc2lnbmVkIGxvbmcgbnJfc2hhcmVkLCB1bnNpZ25lZCBsb25n
IG5yX3N0YXR1cykKK2ludCBhcmNoX2dudHRhYl9pbml0KHhlbmhvc3RfdCAqeGgsIHVuc2lnbmVk
IGxvbmcgbnJfc2hhcmVkLCB1bnNpZ25lZCBsb25nIG5yX3N0YXR1cykKIHsKIAlpbnQgcmV0Owog
CiAJaWYgKCF4ZW5fcHZfZG9tYWluKCkpCiAJCXJldHVybiAwOwogCi0JcmV0ID0gYXJjaF9nbnR0
YWJfdmFsbG9jKCZnbnR0YWJfc2hhcmVkX3ZtX2FyZWEsIG5yX3NoYXJlZCk7CisJcmV0ID0gYXJj
aF9nbnR0YWJfdmFsbG9jKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikKKwkJCQl4aC0+Z250dGFi
X3NoYXJlZF92bV9hcmVhLCBucl9zaGFyZWQpOwogCWlmIChyZXQgPCAwKQogCQlyZXR1cm4gcmV0
OwogCkBAIC0xMjcsMTMgKzEzNSwxNSBAQCBpbnQgYXJjaF9nbnR0YWJfaW5pdCh1bnNpZ25lZCBs
b25nIG5yX3NoYXJlZCwgdW5zaWduZWQgbG9uZyBucl9zdGF0dXMpCiAJICogQWx3YXlzIGFsbG9j
YXRlIHRoZSBzcGFjZSBmb3IgdGhlIHN0YXR1cyBmcmFtZXMgaW4gY2FzZQogCSAqIHdlJ3JlIG1p
Z3JhdGVkIHRvIGEgaG9zdCB3aXRoIFYyIHN1cHBvcnQuCiAJICovCi0JcmV0ID0gYXJjaF9nbnR0
YWJfdmFsbG9jKCZnbnR0YWJfc3RhdHVzX3ZtX2FyZWEsIG5yX3N0YXR1cyk7CisJcmV0ID0gYXJj
aF9nbnR0YWJfdmFsbG9jKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikKKwkJCQl4aC0+Z250dGFi
X3N0YXR1c192bV9hcmVhLCBucl9zdGF0dXMpOwogCWlmIChyZXQgPCAwKQogCQlnb3RvIGVycjsK
IAogCXJldHVybiAwOwogZXJyOgotCWFyY2hfZ250dGFiX3ZmcmVlKCZnbnR0YWJfc2hhcmVkX3Zt
X2FyZWEpOworCWFyY2hfZ250dGFiX3ZmcmVlKChzdHJ1Y3QgZ250dGFiX3ZtX2FyZWEgKikKKwkJ
CQl4aC0+Z250dGFiX3NoYXJlZF92bV9hcmVhKTsKIAlyZXR1cm4gLUVOT01FTTsKIH0KIApAQCAt
MTQyLDE2ICsxNTIsMjUgQEAgaW50IGFyY2hfZ250dGFiX2luaXQodW5zaWduZWQgbG9uZyBucl9z
aGFyZWQsIHVuc2lnbmVkIGxvbmcgbnJfc3RhdHVzKQogI2luY2x1ZGUgPHhlbi94ZW4tb3BzLmg+
CiBzdGF0aWMgaW50IF9faW5pdCB4ZW5fcHZoX2dudHRhYl9zZXR1cCh2b2lkKQogeworCXhlbmhv
c3RfdCAqKnhoOworCWludCBlcnI7CisKIAlpZiAoIXhlbl9wdmhfZG9tYWluKCkpCiAJCXJldHVy
biAtRU5PREVWOwogCi0JeGVuX2F1dG9feGxhdF9ncmFudF9mcmFtZXMuY291bnQgPSBnbnR0YWJf
bWF4X2dyYW50X2ZyYW1lcygpOworCWZvcl9lYWNoX3hlbmhvc3QoeGgpIHsKKwkJc3RydWN0IGdy
YW50X2ZyYW1lcyAqZ2YgPSAoc3RydWN0IGdyYW50X2ZyYW1lcyAqKSAoKnhoKS0+YXV0b194bGF0
X2dyYW50X2ZyYW1lczsKIAotCXJldHVybiB4ZW5feGxhdGVfbWFwX2JhbGxvb25lZF9wYWdlcygm
eGVuX2F1dG9feGxhdF9ncmFudF9mcmFtZXMucGZuLAotCQkJCQkgICAgICZ4ZW5fYXV0b194bGF0
X2dyYW50X2ZyYW1lcy52YWRkciwKLQkJCQkJICAgICB4ZW5fYXV0b194bGF0X2dyYW50X2ZyYW1l
cy5jb3VudCk7CisJCWdmLT5jb3VudCA9IGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVzKCp4aCk7CisK
KwkJZXJyID0geGVuX3hsYXRlX21hcF9iYWxsb29uZWRfcGFnZXMoJmdmLT5wZm4sICZnZi0+dmFk
ZHIsIGdmLT5jb3VudCk7CisJCWlmIChlcnIpCisJCQlyZXR1cm4gZXJyOworCX0KKworCXJldHVy
biAwOwogfQogLyogQ2FsbCBpdCBfYmVmb3JlXyBfX2dudHRhYl9pbml0IGFzIHdlIG5lZWQgdG8g
aW5pdGlhbGl6ZSB0aGUKLSAqIHhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzIGZpcnN0LiAqLwor
ICogYXV0b194bGF0X2dyYW50X2ZyYW1lcyBmaXJzdC4gKi8KIGNvcmVfaW5pdGNhbGwoeGVuX3B2
aF9nbnR0YWJfc2V0dXApOwogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9ncmFudC10
YWJsZS5jIGIvZHJpdmVycy94ZW4vZ3JhbnQtdGFibGUuYwppbmRleCBlYzkwNzY5OTA3YTQuLjk1
OWI4MWFkZTExMyAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vZ3JhbnQtdGFibGUuYworKysgYi9k
cml2ZXJzL3hlbi9ncmFudC10YWJsZS5jCkBAIC03MiwyMSArNzIsMTAgQEAKICNkZWZpbmUgTlJf
UkVTRVJWRURfRU5UUklFUyA4CiAjZGVmaW5lIEdOVFRBQl9MSVNUX0VORCAweGZmZmZmZmZmCiAK
LXN0YXRpYyBncmFudF9yZWZfdCAqKmdudHRhYl9saXN0Owotc3RhdGljIHVuc2lnbmVkIGludCBu
cl9ncmFudF9mcmFtZXM7Ci1zdGF0aWMgaW50IGdudHRhYl9mcmVlX2NvdW50Owotc3RhdGljIGdy
YW50X3JlZl90IGdudHRhYl9mcmVlX2hlYWQ7CiBzdGF0aWMgREVGSU5FX1NQSU5MT0NLKGdudHRh
Yl9saXN0X2xvY2spOwotc3RydWN0IGdyYW50X2ZyYW1lcyB4ZW5fYXV0b194bGF0X2dyYW50X2Zy
YW1lczsKIHN0YXRpYyB1bnNpZ25lZCBpbnQgeGVuX2dudHRhYl92ZXJzaW9uOwogbW9kdWxlX3Bh
cmFtX25hbWVkKHZlcnNpb24sIHhlbl9nbnR0YWJfdmVyc2lvbiwgdWludCwgMCk7CiAKLXN0YXRp
YyB1bmlvbiB7Ci0Jc3RydWN0IGdyYW50X2VudHJ5X3YxICp2MTsKLQl1bmlvbiBncmFudF9lbnRy
eV92MiAqdjI7Ci0Jdm9pZCAqYWRkcjsKLX0gZ250dGFiX3NoYXJlZDsKLQogLypUaGlzIGlzIGEg
c3RydWN0dXJlIG9mIGZ1bmN0aW9uIHBvaW50ZXJzIGZvciBncmFudCB0YWJsZSovCiBzdHJ1Y3Qg
Z250dGFiX29wcyB7CiAJLyoKQEAgLTEwMywxMiArOTIsMTIgQEAgc3RydWN0IGdudHRhYl9vcHMg
ewogCSAqIG5yX2dmcmFtZXMgaXMgdGhlIG51bWJlciBvZiBmcmFtZXMgdG8gbWFwIGdyYW50IHRh
YmxlLiBSZXR1cm5pbmcKIAkgKiBHTlRTVF9va2F5IG1lYW5zIHN1Y2Nlc3MgYW5kIG5lZ2F0aXZl
IHZhbHVlIG1lYW5zIGZhaWx1cmUuCiAJICovCi0JaW50ICgqbWFwX2ZyYW1lcykoeGVuX3Bmbl90
ICpmcmFtZXMsIHVuc2lnbmVkIGludCBucl9nZnJhbWVzKTsKKwlpbnQgKCptYXBfZnJhbWVzKSh4
ZW5ob3N0X3QgKnhoLCB4ZW5fcGZuX3QgKmZyYW1lcywgdW5zaWduZWQgaW50IG5yX2dmcmFtZXMp
OwogCS8qCiAJICogUmVsZWFzZSBhIGxpc3Qgb2YgZnJhbWVzIHdoaWNoIGFyZSBtYXBwZWQgaW4g
bWFwX2ZyYW1lcyBmb3IgZ3JhbnQKIAkgKiBlbnRyeSBzdGF0dXMuCiAJICovCi0Jdm9pZCAoKnVu
bWFwX2ZyYW1lcykodm9pZCk7CisJdm9pZCAoKnVubWFwX2ZyYW1lcykoeGVuaG9zdF90ICp4aCk7
CiAJLyoKIAkgKiBJbnRyb2R1Y2luZyBhIHZhbGlkIGVudHJ5IGludG8gdGhlIGdyYW50IHRhYmxl
LCBncmFudGluZyB0aGUgZnJhbWUgb2YKIAkgKiB0aGlzIGdyYW50IGVudHJ5IHRvIGRvbWFpbiBm
b3IgYWNjZXNzaW5nIG9yIHRyYW5zZmVyaW5nLiBSZWYKQEAgLTExNiw3ICsxMDUsNyBAQCBzdHJ1
Y3QgZ250dGFiX29wcyB7CiAJICogZ3JhbnRlZCBkb21haW4sIGZyYW1lIGlzIHRoZSBwYWdlIGZy
YW1lIHRvIGJlIGdyYW50ZWQsIGFuZCBmbGFncyBpcwogCSAqIHN0YXR1cyBvZiB0aGUgZ3JhbnQg
ZW50cnkgdG8gYmUgdXBkYXRlZC4KIAkgKi8KLQl2b2lkICgqdXBkYXRlX2VudHJ5KShncmFudF9y
ZWZfdCByZWYsIGRvbWlkX3QgZG9taWQsCisJdm9pZCAoKnVwZGF0ZV9lbnRyeSkoeGVuaG9zdF90
ICp4aCwgZ3JhbnRfcmVmX3QgcmVmLCBkb21pZF90IGRvbWlkLAogCQkJICAgICB1bnNpZ25lZCBs
b25nIGZyYW1lLCB1bnNpZ25lZCBmbGFncyk7CiAJLyoKIAkgKiBTdG9wIGdyYW50aW5nIGEgZ3Jh
bnQgZW50cnkgdG8gZG9tYWluIGZvciBhY2Nlc3NpbmcuIFJlZiBwYXJhbWV0ZXIgaXMKQEAgLTEy
Niw3ICsxMTUsNyBAQCBzdHJ1Y3QgZ250dGFiX29wcyB7CiAJICogZGlyZWN0bHkgYW5kIGRvbid0
IHRlYXIgZG93biB0aGUgZ3JhbnQgYWNjZXNzLiBPdGhlcndpc2UsIHN0b3AgZ3JhbnQKIAkgKiBh
Y2Nlc3MgZm9yIHRoaXMgZW50cnkgYW5kIHJldHVybiBzdWNjZXNzKD09MSkuCiAJICovCi0JaW50
ICgqZW5kX2ZvcmVpZ25fYWNjZXNzX3JlZikoZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHkp
OworCWludCAoKmVuZF9mb3JlaWduX2FjY2Vzc19yZWYpKHhlbmhvc3RfdCAqeGgsIGdyYW50X3Jl
Zl90IHJlZiwgaW50IHJlYWRvbmx5KTsKIAkvKgogCSAqIFN0b3AgZ3JhbnRpbmcgYSBncmFudCBl
bnRyeSB0byBkb21haW4gZm9yIHRyYW5zZmVyLiBSZWYgcGFyYW1ldGVyIGlzCiAJICogcmVmZXJl
bmNlIG9mIGEgZ3JhbnQgZW50cnkgd2hvc2UgZ3JhbnQgdHJhbnNmZXIgd2lsbCBiZSBzdG9wcGVk
LiBJZgpAQCAtMTM0LDE0ICsxMjMsMTQgQEAgc3RydWN0IGdudHRhYl9vcHMgewogCSAqIGZhaWx1
cmUoPT0wKS4gT3RoZXJ3aXNlLCB3YWl0IGZvciB0aGUgdHJhbnNmZXIgdG8gY29tcGxldGUgYW5k
IHRoZW4KIAkgKiByZXR1cm4gdGhlIGZyYW1lLgogCSAqLwotCXVuc2lnbmVkIGxvbmcgKCplbmRf
Zm9yZWlnbl90cmFuc2Zlcl9yZWYpKGdyYW50X3JlZl90IHJlZik7CisJdW5zaWduZWQgbG9uZyAo
KmVuZF9mb3JlaWduX3RyYW5zZmVyX3JlZikoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVm
KTsKIAkvKgogCSAqIFF1ZXJ5IHRoZSBzdGF0dXMgb2YgYSBncmFudCBlbnRyeS4gUmVmIHBhcmFt
ZXRlciBpcyByZWZlcmVuY2Ugb2YKIAkgKiBxdWVyaWVkIGdyYW50IGVudHJ5LCByZXR1cm4gdmFs
dWUgaXMgdGhlIHN0YXR1cyBvZiBxdWVyaWVkIGVudHJ5LgogCSAqIERldGFpbGVkIHN0YXR1cyh3
cml0aW5nL3JlYWRpbmcpIGNhbiBiZSBnb3R0ZW4gZnJvbSB0aGUgcmV0dXJuIHZhbHVlCiAJICog
YnkgYml0IG9wZXJhdGlvbnMuCiAJICovCi0JaW50ICgqcXVlcnlfZm9yZWlnbl9hY2Nlc3MpKGdy
YW50X3JlZl90IHJlZik7CisJaW50ICgqcXVlcnlfZm9yZWlnbl9hY2Nlc3MpKHhlbmhvc3RfdCAq
eGgsIGdyYW50X3JlZl90IHJlZik7CiB9OwogCiBzdHJ1Y3QgdW5tYXBfcmVmc19jYWxsYmFja19k
YXRhIHsKQEAgLTE0OSw4NSArMTM4LDEwNSBAQCBzdHJ1Y3QgdW5tYXBfcmVmc19jYWxsYmFja19k
YXRhIHsKIAlpbnQgcmVzdWx0OwogfTsKIAotc3RhdGljIGNvbnN0IHN0cnVjdCBnbnR0YWJfb3Bz
ICpnbnR0YWJfaW50ZXJmYWNlOworc3RydWN0IGdudHRhYl9wcml2YXRlIHsKKwljb25zdCBzdHJ1
Y3QgZ250dGFiX29wcyAqZ250dGFiX2ludGVyZmFjZTsKKwlncmFudF9zdGF0dXNfdCAqZ3JzdGF0
dXM7CisJZ3JhbnRfcmVmX3QgZ250dGFiX2ZyZWVfaGVhZDsKKwl1bnNpZ25lZCBpbnQgbnJfZ3Jh
bnRfZnJhbWVzOworCWludCBnbnR0YWJfZnJlZV9jb3VudDsKKwlzdHJ1Y3QgZ250dGFiX2ZyZWVf
Y2FsbGJhY2sgKmdudHRhYl9mcmVlX2NhbGxiYWNrX2xpc3Q7CisJc3RydWN0IGdyYW50X2ZyYW1l
cyBhdXRvX3hsYXRfZ3JhbnRfZnJhbWVzOworCWdyYW50X3JlZl90ICoqZ250dGFiX2xpc3Q7CiAK
LS8qIFRoaXMgcmVmbGVjdHMgc3RhdHVzIG9mIGdyYW50IGVudHJpZXMsIHNvIGFjdCBhcyBhIGds
b2JhbCB2YWx1ZS4gKi8KLXN0YXRpYyBncmFudF9zdGF0dXNfdCAqZ3JzdGF0dXM7CisJdW5pb24g
eworCQlzdHJ1Y3QgZ3JhbnRfZW50cnlfdjEgKnYxOworCQl1bmlvbiBncmFudF9lbnRyeV92MiAq
djI7CisJCXZvaWQgKmFkZHI7CisJfSBnbnR0YWJfc2hhcmVkOworfTsKIAotc3RhdGljIHN0cnVj
dCBnbnR0YWJfZnJlZV9jYWxsYmFjayAqZ250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdDsKKyNkZWZp
bmUgZ3RfcHJpdih4aCkgKChzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKikgKHhoKS0+Z250dGFiX3By
aXZhdGUpCiAKLXN0YXRpYyBpbnQgZ250dGFiX2V4cGFuZCh1bnNpZ25lZCBpbnQgcmVxX2VudHJp
ZXMpOworc3RhdGljIGludCBnbnR0YWJfZXhwYW5kKHhlbmhvc3RfdCAqeGgsIHVuc2lnbmVkIGlu
dCByZXFfZW50cmllcyk7CiAKICNkZWZpbmUgUlBQIChQQUdFX1NJWkUgLyBzaXplb2YoZ3JhbnRf
cmVmX3QpKQogI2RlZmluZSBTUFAgKFBBR0VfU0laRSAvIHNpemVvZihncmFudF9zdGF0dXNfdCkp
CiAKLXN0YXRpYyBpbmxpbmUgZ3JhbnRfcmVmX3QgKl9fZ250dGFiX2VudHJ5KGdyYW50X3JlZl90
IGVudHJ5KQorc3RhdGljIGlubGluZSBncmFudF9yZWZfdCAqX19nbnR0YWJfZW50cnkoeGVuaG9z
dF90ICp4aCwgZ3JhbnRfcmVmX3QgZW50cnkpCiB7Ci0JcmV0dXJuICZnbnR0YWJfbGlzdFsoZW50
cnkpIC8gUlBQXVsoZW50cnkpICUgUlBQXTsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0g
Z3RfcHJpdih4aCk7CisKKwlyZXR1cm4gJmd0LT5nbnR0YWJfbGlzdFsoZW50cnkpIC8gUlBQXVso
ZW50cnkpICUgUlBQXTsKIH0KIC8qIFRoaXMgY2FuIGJlIHVzZWQgYXMgYW4gbC12YWx1ZSAqLwot
I2RlZmluZSBnbnR0YWJfZW50cnkoZW50cnkpICgqX19nbnR0YWJfZW50cnkoZW50cnkpKQorI2Rl
ZmluZSBnbnR0YWJfZW50cnkoeGgsIGVudHJ5KSAoKl9fZ250dGFiX2VudHJ5KHhoLCBlbnRyeSkp
CiAKLXN0YXRpYyBpbnQgZ2V0X2ZyZWVfZW50cmllcyh1bnNpZ25lZCBjb3VudCkKK3N0YXRpYyBp
bnQgZ2V0X2ZyZWVfZW50cmllcyh4ZW5ob3N0X3QgKnhoLCB1bnNpZ25lZCBjb3VudCkKIHsKIAl1
bnNpZ25lZCBsb25nIGZsYWdzOwogCWludCByZWYsIHJjID0gMDsKIAlncmFudF9yZWZfdCBoZWFk
OworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHhoKTsKIAogCXNwaW5fbG9j
a19pcnFzYXZlKCZnbnR0YWJfbGlzdF9sb2NrLCBmbGFncyk7CiAKLQlpZiAoKGdudHRhYl9mcmVl
X2NvdW50IDwgY291bnQpICYmCi0JICAgICgocmMgPSBnbnR0YWJfZXhwYW5kKGNvdW50IC0gZ250
dGFiX2ZyZWVfY291bnQpKSA8IDApKSB7CisJaWYgKChndC0+Z250dGFiX2ZyZWVfY291bnQgPCBj
b3VudCkgJiYKKwkgICAgKChyYyA9IGdudHRhYl9leHBhbmQoeGgsIGNvdW50IC0gZ3QtPmdudHRh
Yl9mcmVlX2NvdW50KSkgPCAwKSkgewogCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZnbnR0YWJf
bGlzdF9sb2NrLCBmbGFncyk7CiAJCXJldHVybiByYzsKIAl9CiAKLQlyZWYgPSBoZWFkID0gZ250
dGFiX2ZyZWVfaGVhZDsKLQlnbnR0YWJfZnJlZV9jb3VudCAtPSBjb3VudDsKKwlyZWYgPSBoZWFk
ID0gZ3QtPmdudHRhYl9mcmVlX2hlYWQ7CisJZ3QtPmdudHRhYl9mcmVlX2NvdW50IC09IGNvdW50
OwogCXdoaWxlIChjb3VudC0tID4gMSkKLQkJaGVhZCA9IGdudHRhYl9lbnRyeShoZWFkKTsKLQln
bnR0YWJfZnJlZV9oZWFkID0gZ250dGFiX2VudHJ5KGhlYWQpOwotCWdudHRhYl9lbnRyeShoZWFk
KSA9IEdOVFRBQl9MSVNUX0VORDsKKwkJaGVhZCA9IGdudHRhYl9lbnRyeSh4aCwgaGVhZCk7CisJ
Z3QtPmdudHRhYl9mcmVlX2hlYWQgPSBnbnR0YWJfZW50cnkoeGgsIGhlYWQpOworCWdudHRhYl9l
bnRyeSh4aCwgaGVhZCkgPSBHTlRUQUJfTElTVF9FTkQ7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0
b3JlKCZnbnR0YWJfbGlzdF9sb2NrLCBmbGFncyk7CiAKIAlyZXR1cm4gcmVmOwogfQogCi1zdGF0
aWMgdm9pZCBkb19mcmVlX2NhbGxiYWNrcyh2b2lkKQorc3RhdGljIHZvaWQgZG9fZnJlZV9jYWxs
YmFja3MoeGVuaG9zdF90ICp4aCkKIHsKIAlzdHJ1Y3QgZ250dGFiX2ZyZWVfY2FsbGJhY2sgKmNh
bGxiYWNrLCAqbmV4dDsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7
CiAKLQljYWxsYmFjayA9IGdudHRhYl9mcmVlX2NhbGxiYWNrX2xpc3Q7Ci0JZ250dGFiX2ZyZWVf
Y2FsbGJhY2tfbGlzdCA9IE5VTEw7CisJY2FsbGJhY2sgPSBndC0+Z250dGFiX2ZyZWVfY2FsbGJh
Y2tfbGlzdDsKKwlndC0+Z250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdCA9IE5VTEw7CiAKIAl3aGls
ZSAoY2FsbGJhY2sgIT0gTlVMTCkgewogCQluZXh0ID0gY2FsbGJhY2stPm5leHQ7Ci0JCWlmIChn
bnR0YWJfZnJlZV9jb3VudCA+PSBjYWxsYmFjay0+Y291bnQpIHsKKwkJaWYgKGd0LT5nbnR0YWJf
ZnJlZV9jb3VudCA+PSBjYWxsYmFjay0+Y291bnQpIHsKIAkJCWNhbGxiYWNrLT5uZXh0ID0gTlVM
TDsKIAkJCWNhbGxiYWNrLT5mbihjYWxsYmFjay0+YXJnKTsKIAkJfSBlbHNlIHsKLQkJCWNhbGxi
YWNrLT5uZXh0ID0gZ250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdDsKLQkJCWdudHRhYl9mcmVlX2Nh
bGxiYWNrX2xpc3QgPSBjYWxsYmFjazsKKwkJCWNhbGxiYWNrLT5uZXh0ID0gZ3QtPmdudHRhYl9m
cmVlX2NhbGxiYWNrX2xpc3Q7CisJCQlndC0+Z250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdCA9IGNh
bGxiYWNrOwogCQl9CiAJCWNhbGxiYWNrID0gbmV4dDsKIAl9CiB9CiAKLXN0YXRpYyBpbmxpbmUg
dm9pZCBjaGVja19mcmVlX2NhbGxiYWNrcyh2b2lkKQorc3RhdGljIGlubGluZSB2b2lkIGNoZWNr
X2ZyZWVfY2FsbGJhY2tzKHhlbmhvc3RfdCAqeGgpCiB7Ci0JaWYgKHVubGlrZWx5KGdudHRhYl9m
cmVlX2NhbGxiYWNrX2xpc3QpKQotCQlkb19mcmVlX2NhbGxiYWNrcygpOworCXN0cnVjdCBnbnR0
YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHhoKTsKKworCWlmICh1bmxpa2VseShndC0+Z250dGFi
X2ZyZWVfY2FsbGJhY2tfbGlzdCkpCisJCWRvX2ZyZWVfY2FsbGJhY2tzKHhoKTsKIH0KIAotc3Rh
dGljIHZvaWQgcHV0X2ZyZWVfZW50cnkoZ3JhbnRfcmVmX3QgcmVmKQorc3RhdGljIHZvaWQgcHV0
X2ZyZWVfZW50cnkoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmKQogewogCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7CisJc3RydWN0IGdudHRhYl9wcml2YXRlICpndCA9IGd0X3ByaXYoeGgpOwor
CiAJc3Bpbl9sb2NrX2lycXNhdmUoJmdudHRhYl9saXN0X2xvY2ssIGZsYWdzKTsKLQlnbnR0YWJf
ZW50cnkocmVmKSA9IGdudHRhYl9mcmVlX2hlYWQ7Ci0JZ250dGFiX2ZyZWVfaGVhZCA9IHJlZjsK
LQlnbnR0YWJfZnJlZV9jb3VudCsrOwotCWNoZWNrX2ZyZWVfY2FsbGJhY2tzKCk7CisJZ250dGFi
X2VudHJ5KHhoLCByZWYpID0gZ3QtPmdudHRhYl9mcmVlX2hlYWQ7CisJZ3QtPmdudHRhYl9mcmVl
X2hlYWQgPSByZWY7CisJZ3QtPmdudHRhYl9mcmVlX2NvdW50Kys7CisJY2hlY2tfZnJlZV9jYWxs
YmFja3MoeGgpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmdudHRhYl9saXN0X2xvY2ssIGZs
YWdzKTsKIH0KIApAQCAtMjQyLDcyICsyNTEsODUgQEAgc3RhdGljIHZvaWQgcHV0X2ZyZWVfZW50
cnkoZ3JhbnRfcmVmX3QgcmVmKQogICogIDMuIFdyaXRlIG1lbW9yeSBiYXJyaWVyIChXTUIpLgog
ICogIDQuIFdyaXRlIGVudC0+ZmxhZ3MsIGluYy4gdmFsaWQgdHlwZS4KICAqLwotc3RhdGljIHZv
aWQgZ250dGFiX3VwZGF0ZV9lbnRyeV92MShncmFudF9yZWZfdCByZWYsIGRvbWlkX3QgZG9taWQs
CitzdGF0aWMgdm9pZCBnbnR0YWJfdXBkYXRlX2VudHJ5X3YxKHhlbmhvc3RfdCAqeGgsIGdyYW50
X3JlZl90IHJlZiwgZG9taWRfdCBkb21pZCwKIAkJCQkgICB1bnNpZ25lZCBsb25nIGZyYW1lLCB1
bnNpZ25lZCBmbGFncykKIHsKLQlnbnR0YWJfc2hhcmVkLnYxW3JlZl0uZG9taWQgPSBkb21pZDsK
LQlnbnR0YWJfc2hhcmVkLnYxW3JlZl0uZnJhbWUgPSBmcmFtZTsKKwlzdHJ1Y3QgZ250dGFiX3By
aXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlndC0+Z250dGFiX3NoYXJlZC52MVtyZWZdLmRv
bWlkID0gZG9taWQ7CisJZ3QtPmdudHRhYl9zaGFyZWQudjFbcmVmXS5mcmFtZSA9IGZyYW1lOwog
CXdtYigpOwotCWdudHRhYl9zaGFyZWQudjFbcmVmXS5mbGFncyA9IGZsYWdzOworCWd0LT5nbnR0
YWJfc2hhcmVkLnYxW3JlZl0uZmxhZ3MgPSBmbGFnczsKIH0KIAotc3RhdGljIHZvaWQgZ250dGFi
X3VwZGF0ZV9lbnRyeV92MihncmFudF9yZWZfdCByZWYsIGRvbWlkX3QgZG9taWQsCitzdGF0aWMg
dm9pZCBnbnR0YWJfdXBkYXRlX2VudHJ5X3YyKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJl
ZiwgZG9taWRfdCBkb21pZCwKIAkJCQkgICB1bnNpZ25lZCBsb25nIGZyYW1lLCB1bnNpZ25lZCBp
bnQgZmxhZ3MpCiB7Ci0JZ250dGFiX3NoYXJlZC52MltyZWZdLmhkci5kb21pZCA9IGRvbWlkOwot
CWdudHRhYl9zaGFyZWQudjJbcmVmXS5mdWxsX3BhZ2UuZnJhbWUgPSBmcmFtZTsKKwlzdHJ1Y3Qg
Z250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlndC0+Z250dGFiX3NoYXJlZC52
MltyZWZdLmhkci5kb21pZCA9IGRvbWlkOworCWd0LT5nbnR0YWJfc2hhcmVkLnYyW3JlZl0uZnVs
bF9wYWdlLmZyYW1lID0gZnJhbWU7CiAJd21iKCk7CS8qIEh5cGVydmlzb3IgY29uY3VycmVudCBh
Y2Nlc3Nlcy4gKi8KLQlnbnR0YWJfc2hhcmVkLnYyW3JlZl0uaGRyLmZsYWdzID0gR1RGX3Blcm1p
dF9hY2Nlc3MgfCBmbGFnczsKKwlndC0+Z250dGFiX3NoYXJlZC52MltyZWZdLmhkci5mbGFncyA9
IEdURl9wZXJtaXRfYWNjZXNzIHwgZmxhZ3M7CiB9CiAKIC8qCiAgKiBQdWJsaWMgZ3JhbnQtaXNz
dWluZyBpbnRlcmZhY2UgZnVuY3Rpb25zCiAgKi8KLXZvaWQgZ250dGFiX2dyYW50X2ZvcmVpZ25f
YWNjZXNzX3JlZihncmFudF9yZWZfdCByZWYsIGRvbWlkX3QgZG9taWQsCit2b2lkIGdudHRhYl9n
cmFudF9mb3JlaWduX2FjY2Vzc19yZWYoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmLCBk
b21pZF90IGRvbWlkLAogCQkJCSAgICAgdW5zaWduZWQgbG9uZyBmcmFtZSwgaW50IHJlYWRvbmx5
KQogewotCWdudHRhYl9pbnRlcmZhY2UtPnVwZGF0ZV9lbnRyeShyZWYsIGRvbWlkLCBmcmFtZSwK
KwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlndC0+Z250dGFi
X2ludGVyZmFjZS0+dXBkYXRlX2VudHJ5KHhoLCByZWYsIGRvbWlkLCBmcmFtZSwKIAkJCSAgIEdU
Rl9wZXJtaXRfYWNjZXNzIHwgKHJlYWRvbmx5ID8gR1RGX3JlYWRvbmx5IDogMCkpOwogfQogRVhQ
T1JUX1NZTUJPTF9HUEwoZ250dGFiX2dyYW50X2ZvcmVpZ25fYWNjZXNzX3JlZik7CiAKLWludCBn
bnR0YWJfZ3JhbnRfZm9yZWlnbl9hY2Nlc3MoZG9taWRfdCBkb21pZCwgdW5zaWduZWQgbG9uZyBm
cmFtZSwKK2ludCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl9hY2Nlc3MoeGVuaG9zdF90ICp4aCwgZG9t
aWRfdCBkb21pZCwgdW5zaWduZWQgbG9uZyBmcmFtZSwKIAkJCQlpbnQgcmVhZG9ubHkpCiB7CiAJ
aW50IHJlZjsKIAotCXJlZiA9IGdldF9mcmVlX2VudHJpZXMoMSk7CisJcmVmID0gZ2V0X2ZyZWVf
ZW50cmllcyh4aCwgMSk7CiAJaWYgKHVubGlrZWx5KHJlZiA8IDApKQogCQlyZXR1cm4gLUVOT1NQ
QzsKIAotCWdudHRhYl9ncmFudF9mb3JlaWduX2FjY2Vzc19yZWYocmVmLCBkb21pZCwgZnJhbWUs
IHJlYWRvbmx5KTsKKwlnbnR0YWJfZ3JhbnRfZm9yZWlnbl9hY2Nlc3NfcmVmKHhoLCByZWYsIGRv
bWlkLCBmcmFtZSwgcmVhZG9ubHkpOwogCiAJcmV0dXJuIHJlZjsKIH0KIEVYUE9SVF9TWU1CT0xf
R1BMKGdudHRhYl9ncmFudF9mb3JlaWduX2FjY2Vzcyk7CiAKLXN0YXRpYyBpbnQgZ250dGFiX3F1
ZXJ5X2ZvcmVpZ25fYWNjZXNzX3YxKGdyYW50X3JlZl90IHJlZikKK3N0YXRpYyBpbnQgZ250dGFi
X3F1ZXJ5X2ZvcmVpZ25fYWNjZXNzX3YxKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZikK
IHsKLQlyZXR1cm4gZ250dGFiX3NoYXJlZC52MVtyZWZdLmZsYWdzICYgKEdURl9yZWFkaW5nfEdU
Rl93cml0aW5nKTsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisK
KwlyZXR1cm4gZ3QtPmdudHRhYl9zaGFyZWQudjFbcmVmXS5mbGFncyAmIChHVEZfcmVhZGluZ3xH
VEZfd3JpdGluZyk7CiB9CiAKLXN0YXRpYyBpbnQgZ250dGFiX3F1ZXJ5X2ZvcmVpZ25fYWNjZXNz
X3YyKGdyYW50X3JlZl90IHJlZikKK3N0YXRpYyBpbnQgZ250dGFiX3F1ZXJ5X2ZvcmVpZ25fYWNj
ZXNzX3YyKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZikKIHsKLQlyZXR1cm4gZ3JzdGF0
dXNbcmVmXSAmIChHVEZfcmVhZGluZ3xHVEZfd3JpdGluZyk7CisJc3RydWN0IGdudHRhYl9wcml2
YXRlICpndCA9IGd0X3ByaXYoeGgpOworCisJcmV0dXJuIGd0LT5ncnN0YXR1c1tyZWZdICYgKEdU
Rl9yZWFkaW5nfEdURl93cml0aW5nKTsKIH0KIAotaW50IGdudHRhYl9xdWVyeV9mb3JlaWduX2Fj
Y2VzcyhncmFudF9yZWZfdCByZWYpCitpbnQgZ250dGFiX3F1ZXJ5X2ZvcmVpZ25fYWNjZXNzKHhl
bmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZikKIHsKLQlyZXR1cm4gZ250dGFiX2ludGVyZmFj
ZS0+cXVlcnlfZm9yZWlnbl9hY2Nlc3MocmVmKTsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0
ID0gZ3RfcHJpdih4aCk7CisKKwlyZXR1cm4gZ3QtPmdudHRhYl9pbnRlcmZhY2UtPnF1ZXJ5X2Zv
cmVpZ25fYWNjZXNzKHhoLCByZWYpOwogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX3F1ZXJ5
X2ZvcmVpZ25fYWNjZXNzKTsKIAotc3RhdGljIGludCBnbnR0YWJfZW5kX2ZvcmVpZ25fYWNjZXNz
X3JlZl92MShncmFudF9yZWZfdCByZWYsIGludCByZWFkb25seSkKK3N0YXRpYyBpbnQgZ250dGFi
X2VuZF9mb3JlaWduX2FjY2Vzc19yZWZfdjEoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVm
LCBpbnQgcmVhZG9ubHkpCiB7CisJc3RydWN0IGdudHRhYl9wcml2YXRlICpndCA9IGd0X3ByaXYo
eGgpOwogCXUxNiBmbGFncywgbmZsYWdzOwogCXUxNiAqcGZsYWdzOwogCi0JcGZsYWdzID0gJmdu
dHRhYl9zaGFyZWQudjFbcmVmXS5mbGFnczsKKwlwZmxhZ3MgPSAmZ3QtPmdudHRhYl9zaGFyZWQu
djFbcmVmXS5mbGFnczsKIAluZmxhZ3MgPSAqcGZsYWdzOwogCWRvIHsKIAkJZmxhZ3MgPSBuZmxh
Z3M7CkBAIC0zMTgsMTEgKzM0MCwxMyBAQCBzdGF0aWMgaW50IGdudHRhYl9lbmRfZm9yZWlnbl9h
Y2Nlc3NfcmVmX3YxKGdyYW50X3JlZl90IHJlZiwgaW50IHJlYWRvbmx5KQogCXJldHVybiAxOwog
fQogCi1zdGF0aWMgaW50IGdudHRhYl9lbmRfZm9yZWlnbl9hY2Nlc3NfcmVmX3YyKGdyYW50X3Jl
Zl90IHJlZiwgaW50IHJlYWRvbmx5KQorc3RhdGljIGludCBnbnR0YWJfZW5kX2ZvcmVpZ25fYWNj
ZXNzX3JlZl92Mih4ZW5ob3N0X3QgKnhoLCBncmFudF9yZWZfdCByZWYsIGludCByZWFkb25seSkK
IHsKLQlnbnR0YWJfc2hhcmVkLnYyW3JlZl0uaGRyLmZsYWdzID0gMDsKKwlzdHJ1Y3QgZ250dGFi
X3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlndC0+Z250dGFiX3NoYXJlZC52MltyZWZd
Lmhkci5mbGFncyA9IDA7CiAJbWIoKTsJLyogQ29uY3VycmVudCBhY2Nlc3MgYnkgaHlwZXJ2aXNv
ci4gKi8KLQlpZiAoZ3JzdGF0dXNbcmVmXSAmIChHVEZfcmVhZGluZ3xHVEZfd3JpdGluZykpIHsK
KwlpZiAoZ3QtPmdyc3RhdHVzW3JlZl0gJiAoR1RGX3JlYWRpbmd8R1RGX3dyaXRpbmcpKSB7CiAJ
CXJldHVybiAwOwogCX0gZWxzZSB7CiAJCS8qCkBAIC0zNDEsMTQgKzM2NSwxNiBAQCBzdGF0aWMg
aW50IGdudHRhYl9lbmRfZm9yZWlnbl9hY2Nlc3NfcmVmX3YyKGdyYW50X3JlZl90IHJlZiwgaW50
IHJlYWRvbmx5KQogCXJldHVybiAxOwogfQogCi1zdGF0aWMgaW5saW5lIGludCBfZ250dGFiX2Vu
ZF9mb3JlaWduX2FjY2Vzc19yZWYoZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHkpCitzdGF0
aWMgaW5saW5lIGludCBfZ250dGFiX2VuZF9mb3JlaWduX2FjY2Vzc19yZWYoeGVuaG9zdF90ICp4
aCwgZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHkpCiB7Ci0JcmV0dXJuIGdudHRhYl9pbnRl
cmZhY2UtPmVuZF9mb3JlaWduX2FjY2Vzc19yZWYocmVmLCByZWFkb25seSk7CisJc3RydWN0IGdu
dHRhYl9wcml2YXRlICpndCA9IGd0X3ByaXYoeGgpOworCisJcmV0dXJuIGd0LT5nbnR0YWJfaW50
ZXJmYWNlLT5lbmRfZm9yZWlnbl9hY2Nlc3NfcmVmKHhoLCByZWYsIHJlYWRvbmx5KTsKIH0KIAot
aW50IGdudHRhYl9lbmRfZm9yZWlnbl9hY2Nlc3NfcmVmKGdyYW50X3JlZl90IHJlZiwgaW50IHJl
YWRvbmx5KQoraW50IGdudHRhYl9lbmRfZm9yZWlnbl9hY2Nlc3NfcmVmKHhlbmhvc3RfdCAqeGgs
IGdyYW50X3JlZl90IHJlZiwgaW50IHJlYWRvbmx5KQogewotCWlmIChfZ250dGFiX2VuZF9mb3Jl
aWduX2FjY2Vzc19yZWYocmVmLCByZWFkb25seSkpCisJaWYgKF9nbnR0YWJfZW5kX2ZvcmVpZ25f
YWNjZXNzX3JlZih4aCwgcmVmLCByZWFkb25seSkpCiAJCXJldHVybiAxOwogCXByX3dhcm4oIldB
Uk5JTkc6IGcuZS4gJSN4IHN0aWxsIGluIHVzZSFcbiIsIHJlZik7CiAJcmV0dXJuIDA7CkBAIC0z
NjEsNiArMzg3LDcgQEAgc3RydWN0IGRlZmVycmVkX2VudHJ5IHsKIAlib29sIHJvOwogCXVpbnQx
Nl90IHdhcm5fZGVsYXk7CiAJc3RydWN0IHBhZ2UgKnBhZ2U7CisJeGVuaG9zdF90ICp4aDsKIH07
CiBzdGF0aWMgTElTVF9IRUFEKGRlZmVycmVkX2xpc3QpOwogc3RhdGljIHZvaWQgZ250dGFiX2hh
bmRsZV9kZWZlcnJlZChzdHJ1Y3QgdGltZXJfbGlzdCAqKTsKQEAgLTM4Miw4ICs0MDksOCBAQCBz
dGF0aWMgdm9pZCBnbnR0YWJfaGFuZGxlX2RlZmVycmVkKHN0cnVjdCB0aW1lcl9saXN0ICp1bnVz
ZWQpCiAJCQlicmVhazsKIAkJbGlzdF9kZWwoJmVudHJ5LT5saXN0KTsKIAkJc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmZ250dGFiX2xpc3RfbG9jaywgZmxhZ3MpOwotCQlpZiAoX2dudHRhYl9lbmRf
Zm9yZWlnbl9hY2Nlc3NfcmVmKGVudHJ5LT5yZWYsIGVudHJ5LT5ybykpIHsKLQkJCXB1dF9mcmVl
X2VudHJ5KGVudHJ5LT5yZWYpOworCQlpZiAoX2dudHRhYl9lbmRfZm9yZWlnbl9hY2Nlc3NfcmVm
KGVudHJ5LT54aCwgZW50cnktPnJlZiwgZW50cnktPnJvKSkgeworCQkJcHV0X2ZyZWVfZW50cnko
ZW50cnktPnhoLCBlbnRyeS0+cmVmKTsKIAkJCWlmIChlbnRyeS0+cGFnZSkgewogCQkJCXByX2Rl
YnVnKCJmcmVlaW5nIGcuZS4gJSN4IChwZm4gJSNseClcbiIsCiAJCQkJCSBlbnRyeS0+cmVmLCBw
YWdlX3RvX3BmbihlbnRyeS0+cGFnZSkpOwpAQCAtNDExLDcgKzQzOCw3IEBAIHN0YXRpYyB2b2lk
IGdudHRhYl9oYW5kbGVfZGVmZXJyZWQoc3RydWN0IHRpbWVyX2xpc3QgKnVudXNlZCkKIAlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZnbnR0YWJfbGlzdF9sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRp
YyB2b2lkIGdudHRhYl9hZGRfZGVmZXJyZWQoZ3JhbnRfcmVmX3QgcmVmLCBib29sIHJlYWRvbmx5
LAorc3RhdGljIHZvaWQgZ250dGFiX2FkZF9kZWZlcnJlZCh4ZW5ob3N0X3QgKnhoLCBncmFudF9y
ZWZfdCByZWYsIGJvb2wgcmVhZG9ubHksCiAJCQkJc3RydWN0IHBhZ2UgKnBhZ2UpCiB7CiAJc3Ry
dWN0IGRlZmVycmVkX2VudHJ5ICplbnRyeSA9IGttYWxsb2Moc2l6ZW9mKCplbnRyeSksIEdGUF9B
VE9NSUMpOwpAQCAtNDIzLDYgKzQ1MCw3IEBAIHN0YXRpYyB2b2lkIGdudHRhYl9hZGRfZGVmZXJy
ZWQoZ3JhbnRfcmVmX3QgcmVmLCBib29sIHJlYWRvbmx5LAogCQllbnRyeS0+cmVmID0gcmVmOwog
CQllbnRyeS0+cm8gPSByZWFkb25seTsKIAkJZW50cnktPnBhZ2UgPSBwYWdlOworCQllbnRyeS0+
eGggPSB4aDsKIAkJZW50cnktPndhcm5fZGVsYXkgPSA2MDsKIAkJc3Bpbl9sb2NrX2lycXNhdmUo
JmdudHRhYl9saXN0X2xvY2ssIGZsYWdzKTsKIAkJbGlzdF9hZGRfdGFpbCgmZW50cnktPmxpc3Qs
ICZkZWZlcnJlZF9saXN0KTsKQEAgLTQzNyw0NiArNDY1LDQ5IEBAIHN0YXRpYyB2b2lkIGdudHRh
Yl9hZGRfZGVmZXJyZWQoZ3JhbnRfcmVmX3QgcmVmLCBib29sIHJlYWRvbmx5LAogCSAgICAgICB3
aGF0LCByZWYsIHBhZ2UgPyBwYWdlX3RvX3BmbihwYWdlKSA6IC0xKTsKIH0KIAotdm9pZCBnbnR0
YWJfZW5kX2ZvcmVpZ25fYWNjZXNzKGdyYW50X3JlZl90IHJlZiwgaW50IHJlYWRvbmx5LAordm9p
ZCBnbnR0YWJfZW5kX2ZvcmVpZ25fYWNjZXNzKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJl
ZiwgaW50IHJlYWRvbmx5LAogCQkJICAgICAgIHVuc2lnbmVkIGxvbmcgcGFnZSkKIHsKLQlpZiAo
Z250dGFiX2VuZF9mb3JlaWduX2FjY2Vzc19yZWYocmVmLCByZWFkb25seSkpIHsKLQkJcHV0X2Zy
ZWVfZW50cnkocmVmKTsKKwlpZiAoZ250dGFiX2VuZF9mb3JlaWduX2FjY2Vzc19yZWYoeGgsIHJl
ZiwgcmVhZG9ubHkpKSB7CisJCXB1dF9mcmVlX2VudHJ5KHhoLCByZWYpOwogCQlpZiAocGFnZSAh
PSAwKQogCQkJcHV0X3BhZ2UodmlydF90b19wYWdlKHBhZ2UpKTsKIAl9IGVsc2UKLQkJZ250dGFi
X2FkZF9kZWZlcnJlZChyZWYsIHJlYWRvbmx5LAorCQlnbnR0YWJfYWRkX2RlZmVycmVkKHhoLCBy
ZWYsIHJlYWRvbmx5LAogCQkJCSAgICBwYWdlID8gdmlydF90b19wYWdlKHBhZ2UpIDogTlVMTCk7
CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChnbnR0YWJfZW5kX2ZvcmVpZ25fYWNjZXNzKTsKIAotaW50
IGdudHRhYl9ncmFudF9mb3JlaWduX3RyYW5zZmVyKGRvbWlkX3QgZG9taWQsIHVuc2lnbmVkIGxv
bmcgcGZuKQoraW50IGdudHRhYl9ncmFudF9mb3JlaWduX3RyYW5zZmVyKHhlbmhvc3RfdCAqeGgs
IGRvbWlkX3QgZG9taWQsIHVuc2lnbmVkIGxvbmcgcGZuKQogewogCWludCByZWY7CiAKLQlyZWYg
PSBnZXRfZnJlZV9lbnRyaWVzKDEpOworCXJlZiA9IGdldF9mcmVlX2VudHJpZXMoeGgsIDEpOwog
CWlmICh1bmxpa2VseShyZWYgPCAwKSkKIAkJcmV0dXJuIC1FTk9TUEM7Ci0JZ250dGFiX2dyYW50
X2ZvcmVpZ25fdHJhbnNmZXJfcmVmKHJlZiwgZG9taWQsIHBmbik7CisJZ250dGFiX2dyYW50X2Zv
cmVpZ25fdHJhbnNmZXJfcmVmKHhoLCByZWYsIGRvbWlkLCBwZm4pOwogCiAJcmV0dXJuIHJlZjsK
IH0KIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9ncmFudF9mb3JlaWduX3RyYW5zZmVyKTsKIAot
dm9pZCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl90cmFuc2Zlcl9yZWYoZ3JhbnRfcmVmX3QgcmVmLCBk
b21pZF90IGRvbWlkLAordm9pZCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl90cmFuc2Zlcl9yZWYoeGVu
aG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmLCBkb21pZF90IGRvbWlkLAogCQkJCSAgICAgICB1
bnNpZ25lZCBsb25nIHBmbikKIHsKLQlnbnR0YWJfaW50ZXJmYWNlLT51cGRhdGVfZW50cnkocmVm
LCBkb21pZCwgcGZuLCBHVEZfYWNjZXB0X3RyYW5zZmVyKTsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZh
dGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlndC0+Z250dGFiX2ludGVyZmFjZS0+dXBkYXRlX2Vu
dHJ5KHhoLCByZWYsIGRvbWlkLCBwZm4sIEdURl9hY2NlcHRfdHJhbnNmZXIpOwogfQogRVhQT1JU
X1NZTUJPTF9HUEwoZ250dGFiX2dyYW50X2ZvcmVpZ25fdHJhbnNmZXJfcmVmKTsKIAotc3RhdGlj
IHVuc2lnbmVkIGxvbmcgZ250dGFiX2VuZF9mb3JlaWduX3RyYW5zZmVyX3JlZl92MShncmFudF9y
ZWZfdCByZWYpCitzdGF0aWMgdW5zaWduZWQgbG9uZyBnbnR0YWJfZW5kX2ZvcmVpZ25fdHJhbnNm
ZXJfcmVmX3YxKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZikKIHsKKwlzdHJ1Y3QgZ250
dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CiAJdW5zaWduZWQgbG9uZyBmcmFtZTsKIAl1
MTYgICAgICAgICAgIGZsYWdzOwogCXUxNiAgICAgICAgICAqcGZsYWdzOwogCi0JcGZsYWdzID0g
JmdudHRhYl9zaGFyZWQudjFbcmVmXS5mbGFnczsKKwlwZmxhZ3MgPSAmZ3QtPmdudHRhYl9zaGFy
ZWQudjFbcmVmXS5mbGFnczsKIAogCS8qCiAJICogSWYgYSB0cmFuc2ZlciBpcyBub3QgZXZlbiB5
ZXQgc3RhcnRlZCwgdHJ5IHRvIHJlY2xhaW0gdGhlIGdyYW50CkBAIC00OTUsMTkgKzUyNiwyMCBA
QCBzdGF0aWMgdW5zaWduZWQgbG9uZyBnbnR0YWJfZW5kX2ZvcmVpZ25fdHJhbnNmZXJfcmVmX3Yx
KGdyYW50X3JlZl90IHJlZikKIAl9CiAKIAlybWIoKTsJLyogUmVhZCB0aGUgZnJhbWUgbnVtYmVy
IC9hZnRlci8gcmVhZGluZyBjb21wbGV0aW9uIHN0YXR1cy4gKi8KLQlmcmFtZSA9IGdudHRhYl9z
aGFyZWQudjFbcmVmXS5mcmFtZTsKKwlmcmFtZSA9IGd0LT5nbnR0YWJfc2hhcmVkLnYxW3JlZl0u
ZnJhbWU7CiAJQlVHX09OKGZyYW1lID09IDApOwogCiAJcmV0dXJuIGZyYW1lOwogfQogCi1zdGF0
aWMgdW5zaWduZWQgbG9uZyBnbnR0YWJfZW5kX2ZvcmVpZ25fdHJhbnNmZXJfcmVmX3YyKGdyYW50
X3JlZl90IHJlZikKK3N0YXRpYyB1bnNpZ25lZCBsb25nIGdudHRhYl9lbmRfZm9yZWlnbl90cmFu
c2Zlcl9yZWZfdjIoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmKQogewogCXVuc2lnbmVk
IGxvbmcgZnJhbWU7CiAJdTE2ICAgICAgICAgICBmbGFnczsKIAl1MTYgICAgICAgICAgKnBmbGFn
czsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CiAKLQlwZmxhZ3Mg
PSAmZ250dGFiX3NoYXJlZC52MltyZWZdLmhkci5mbGFnczsKKwlwZmxhZ3MgPSAmZ3QtPmdudHRh
Yl9zaGFyZWQudjJbcmVmXS5oZHIuZmxhZ3M7CiAKIAkvKgogCSAqIElmIGEgdHJhbnNmZXIgaXMg
bm90IGV2ZW4geWV0IHN0YXJ0ZWQsIHRyeSB0byByZWNsYWltIHRoZSBncmFudApAQCAtNTI2LDM0
ICs1NTgsMzkgQEAgc3RhdGljIHVuc2lnbmVkIGxvbmcgZ250dGFiX2VuZF9mb3JlaWduX3RyYW5z
ZmVyX3JlZl92MihncmFudF9yZWZfdCByZWYpCiAJfQogCiAJcm1iKCk7ICAvKiBSZWFkIHRoZSBm
cmFtZSBudW1iZXIgL2FmdGVyLyByZWFkaW5nIGNvbXBsZXRpb24gc3RhdHVzLiAqLwotCWZyYW1l
ID0gZ250dGFiX3NoYXJlZC52MltyZWZdLmZ1bGxfcGFnZS5mcmFtZTsKKwlmcmFtZSA9IGd0LT5n
bnR0YWJfc2hhcmVkLnYyW3JlZl0uZnVsbF9wYWdlLmZyYW1lOwogCUJVR19PTihmcmFtZSA9PSAw
KTsKIAogCXJldHVybiBmcmFtZTsKIH0KIAotdW5zaWduZWQgbG9uZyBnbnR0YWJfZW5kX2ZvcmVp
Z25fdHJhbnNmZXJfcmVmKGdyYW50X3JlZl90IHJlZikKK3Vuc2lnbmVkIGxvbmcgZ250dGFiX2Vu
ZF9mb3JlaWduX3RyYW5zZmVyX3JlZih4ZW5ob3N0X3QgKnhoLCBncmFudF9yZWZfdCByZWYpCiB7
Ci0JcmV0dXJuIGdudHRhYl9pbnRlcmZhY2UtPmVuZF9mb3JlaWduX3RyYW5zZmVyX3JlZihyZWYp
OworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHhoKTsKKworCXJldHVybiBn
dC0+Z250dGFiX2ludGVyZmFjZS0+ZW5kX2ZvcmVpZ25fdHJhbnNmZXJfcmVmKHhoLCByZWYpOwog
fQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2VuZF9mb3JlaWduX3RyYW5zZmVyX3JlZik7CiAK
LXVuc2lnbmVkIGxvbmcgZ250dGFiX2VuZF9mb3JlaWduX3RyYW5zZmVyKGdyYW50X3JlZl90IHJl
ZikKK3Vuc2lnbmVkIGxvbmcgZ250dGFiX2VuZF9mb3JlaWduX3RyYW5zZmVyKHhlbmhvc3RfdCAq
eGgsIGdyYW50X3JlZl90IHJlZikKIHsKLQl1bnNpZ25lZCBsb25nIGZyYW1lID0gZ250dGFiX2Vu
ZF9mb3JlaWduX3RyYW5zZmVyX3JlZihyZWYpOwotCXB1dF9mcmVlX2VudHJ5KHJlZik7CisJdW5z
aWduZWQgbG9uZyBmcmFtZSA9IGdudHRhYl9lbmRfZm9yZWlnbl90cmFuc2Zlcl9yZWYoeGgsIHJl
Zik7CisKKwlwdXRfZnJlZV9lbnRyeSh4aCwgcmVmKTsKKwogCXJldHVybiBmcmFtZTsKIH0KIEVY
UE9SVF9TWU1CT0xfR1BMKGdudHRhYl9lbmRfZm9yZWlnbl90cmFuc2Zlcik7CiAKLXZvaWQgZ250
dGFiX2ZyZWVfZ3JhbnRfcmVmZXJlbmNlKGdyYW50X3JlZl90IHJlZikKK3ZvaWQgZ250dGFiX2Zy
ZWVfZ3JhbnRfcmVmZXJlbmNlKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZikKIHsKLQlw
dXRfZnJlZV9lbnRyeShyZWYpOworCXB1dF9mcmVlX2VudHJ5KHhoLCByZWYpOwogfQogRVhQT1JU
X1NZTUJPTF9HUEwoZ250dGFiX2ZyZWVfZ3JhbnRfcmVmZXJlbmNlKTsKIAotdm9pZCBnbnR0YWJf
ZnJlZV9ncmFudF9yZWZlcmVuY2VzKGdyYW50X3JlZl90IGhlYWQpCit2b2lkIGdudHRhYl9mcmVl
X2dyYW50X3JlZmVyZW5jZXMoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgaGVhZCkKIHsKKwlz
dHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CiAJZ3JhbnRfcmVmX3QgcmVm
OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAJaW50IGNvdW50ID0gMTsKQEAgLTU2MSwyMSArNTk4
LDIxIEBAIHZvaWQgZ250dGFiX2ZyZWVfZ3JhbnRfcmVmZXJlbmNlcyhncmFudF9yZWZfdCBoZWFk
KQogCQlyZXR1cm47CiAJc3Bpbl9sb2NrX2lycXNhdmUoJmdudHRhYl9saXN0X2xvY2ssIGZsYWdz
KTsKIAlyZWYgPSBoZWFkOwotCXdoaWxlIChnbnR0YWJfZW50cnkocmVmKSAhPSBHTlRUQUJfTElT
VF9FTkQpIHsKLQkJcmVmID0gZ250dGFiX2VudHJ5KHJlZik7CisJd2hpbGUgKGdudHRhYl9lbnRy
eSh4aCwgcmVmKSAhPSBHTlRUQUJfTElTVF9FTkQpIHsKKwkJcmVmID0gZ250dGFiX2VudHJ5KHho
LCByZWYpOwogCQljb3VudCsrOwogCX0KLQlnbnR0YWJfZW50cnkocmVmKSA9IGdudHRhYl9mcmVl
X2hlYWQ7Ci0JZ250dGFiX2ZyZWVfaGVhZCA9IGhlYWQ7Ci0JZ250dGFiX2ZyZWVfY291bnQgKz0g
Y291bnQ7Ci0JY2hlY2tfZnJlZV9jYWxsYmFja3MoKTsKKwlnbnR0YWJfZW50cnkoeGgsIHJlZikg
PSBndC0+Z250dGFiX2ZyZWVfaGVhZDsKKwlndC0+Z250dGFiX2ZyZWVfaGVhZCA9IGhlYWQ7CisJ
Z3QtPmdudHRhYl9mcmVlX2NvdW50ICs9IGNvdW50OworCWNoZWNrX2ZyZWVfY2FsbGJhY2tzKHho
KTsKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZnbnR0YWJfbGlzdF9sb2NrLCBmbGFncyk7CiB9
CiBFWFBPUlRfU1lNQk9MX0dQTChnbnR0YWJfZnJlZV9ncmFudF9yZWZlcmVuY2VzKTsKIAotaW50
IGdudHRhYl9hbGxvY19ncmFudF9yZWZlcmVuY2VzKHUxNiBjb3VudCwgZ3JhbnRfcmVmX3QgKmhl
YWQpCitpbnQgZ250dGFiX2FsbG9jX2dyYW50X3JlZmVyZW5jZXMoeGVuaG9zdF90ICp4aCwgdTE2
IGNvdW50LCBncmFudF9yZWZfdCAqaGVhZCkKIHsKLQlpbnQgaCA9IGdldF9mcmVlX2VudHJpZXMo
Y291bnQpOworCWludCBoID0gZ2V0X2ZyZWVfZW50cmllcyh4aCwgY291bnQpOwogCiAJaWYgKGgg
PCAwKQogCQlyZXR1cm4gLUVOT1NQQzsKQEAgLTU4Niw0MCArNjIzLDQxIEBAIGludCBnbnR0YWJf
YWxsb2NfZ3JhbnRfcmVmZXJlbmNlcyh1MTYgY291bnQsIGdyYW50X3JlZl90ICpoZWFkKQogfQog
RVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2FsbG9jX2dyYW50X3JlZmVyZW5jZXMpOwogCi1pbnQg
Z250dGFiX2VtcHR5X2dyYW50X3JlZmVyZW5jZXMoY29uc3QgZ3JhbnRfcmVmX3QgKnByaXZhdGVf
aGVhZCkKK2ludCBnbnR0YWJfZW1wdHlfZ3JhbnRfcmVmZXJlbmNlcyh4ZW5ob3N0X3QgKnhoLCBj
b25zdCBncmFudF9yZWZfdCAqcHJpdmF0ZV9oZWFkKQogewogCXJldHVybiAoKnByaXZhdGVfaGVh
ZCA9PSBHTlRUQUJfTElTVF9FTkQpOwogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2VtcHR5
X2dyYW50X3JlZmVyZW5jZXMpOwogCi1pbnQgZ250dGFiX2NsYWltX2dyYW50X3JlZmVyZW5jZShn
cmFudF9yZWZfdCAqcHJpdmF0ZV9oZWFkKQoraW50IGdudHRhYl9jbGFpbV9ncmFudF9yZWZlcmVu
Y2UoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgKnByaXZhdGVfaGVhZCkKIHsKIAlncmFudF9y
ZWZfdCBnID0gKnByaXZhdGVfaGVhZDsKIAlpZiAodW5saWtlbHkoZyA9PSBHTlRUQUJfTElTVF9F
TkQpKQogCQlyZXR1cm4gLUVOT1NQQzsKLQkqcHJpdmF0ZV9oZWFkID0gZ250dGFiX2VudHJ5KGcp
OworCSpwcml2YXRlX2hlYWQgPSBnbnR0YWJfZW50cnkoeGgsIGcpOwogCXJldHVybiBnOwogfQog
RVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2NsYWltX2dyYW50X3JlZmVyZW5jZSk7CiAKLXZvaWQg
Z250dGFiX3JlbGVhc2VfZ3JhbnRfcmVmZXJlbmNlKGdyYW50X3JlZl90ICpwcml2YXRlX2hlYWQs
Cit2b2lkIGdudHRhYl9yZWxlYXNlX2dyYW50X3JlZmVyZW5jZSh4ZW5ob3N0X3QgKnhoLCBncmFu
dF9yZWZfdCAqcHJpdmF0ZV9oZWFkLAogCQkJCSAgICBncmFudF9yZWZfdCByZWxlYXNlKQogewot
CWdudHRhYl9lbnRyeShyZWxlYXNlKSA9ICpwcml2YXRlX2hlYWQ7CisJZ250dGFiX2VudHJ5KHho
LCByZWxlYXNlKSA9ICpwcml2YXRlX2hlYWQ7CiAJKnByaXZhdGVfaGVhZCA9IHJlbGVhc2U7CiB9
CiBFWFBPUlRfU1lNQk9MX0dQTChnbnR0YWJfcmVsZWFzZV9ncmFudF9yZWZlcmVuY2UpOwogCi12
b2lkIGdudHRhYl9yZXF1ZXN0X2ZyZWVfY2FsbGJhY2soc3RydWN0IGdudHRhYl9mcmVlX2NhbGxi
YWNrICpjYWxsYmFjaywKK3ZvaWQgZ250dGFiX3JlcXVlc3RfZnJlZV9jYWxsYmFjayh4ZW5ob3N0
X3QgKnhoLCBzdHJ1Y3QgZ250dGFiX2ZyZWVfY2FsbGJhY2sgKmNhbGxiYWNrLAogCQkJCSAgdm9p
ZCAoKmZuKSh2b2lkICopLCB2b2lkICphcmcsIHUxNiBjb3VudCkKIHsKIAl1bnNpZ25lZCBsb25n
IGZsYWdzOwogCXN0cnVjdCBnbnR0YWJfZnJlZV9jYWxsYmFjayAqY2I7CisJc3RydWN0IGdudHRh
Yl9wcml2YXRlICpndCA9IGd0X3ByaXYoeGgpOwogCiAJc3Bpbl9sb2NrX2lycXNhdmUoJmdudHRh
Yl9saXN0X2xvY2ssIGZsYWdzKTsKIAogCS8qIENoZWNrIGlmIHRoZSBjYWxsYmFjayBpcyBhbHJl
YWR5IG9uIHRoZSBsaXN0ICovCi0JY2IgPSBnbnR0YWJfZnJlZV9jYWxsYmFja19saXN0OworCWNi
ID0gZ3QtPmdudHRhYl9mcmVlX2NhbGxiYWNrX2xpc3Q7CiAJd2hpbGUgKGNiKSB7CiAJCWlmIChj
YiA9PSBjYWxsYmFjaykKIAkJCWdvdG8gb3V0OwpAQCAtNjI5LDIxICs2NjcsMjMgQEAgdm9pZCBn
bnR0YWJfcmVxdWVzdF9mcmVlX2NhbGxiYWNrKHN0cnVjdCBnbnR0YWJfZnJlZV9jYWxsYmFjayAq
Y2FsbGJhY2ssCiAJY2FsbGJhY2stPmZuID0gZm47CiAJY2FsbGJhY2stPmFyZyA9IGFyZzsKIAlj
YWxsYmFjay0+Y291bnQgPSBjb3VudDsKLQljYWxsYmFjay0+bmV4dCA9IGdudHRhYl9mcmVlX2Nh
bGxiYWNrX2xpc3Q7Ci0JZ250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdCA9IGNhbGxiYWNrOwotCWNo
ZWNrX2ZyZWVfY2FsbGJhY2tzKCk7CisJY2FsbGJhY2stPm5leHQgPSBndC0+Z250dGFiX2ZyZWVf
Y2FsbGJhY2tfbGlzdDsKKwlndC0+Z250dGFiX2ZyZWVfY2FsbGJhY2tfbGlzdCA9IGNhbGxiYWNr
OworCWNoZWNrX2ZyZWVfY2FsbGJhY2tzKHhoKTsKIG91dDoKIAlzcGluX3VubG9ja19pcnFyZXN0
b3JlKCZnbnR0YWJfbGlzdF9sb2NrLCBmbGFncyk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChnbnR0
YWJfcmVxdWVzdF9mcmVlX2NhbGxiYWNrKTsKIAotdm9pZCBnbnR0YWJfY2FuY2VsX2ZyZWVfY2Fs
bGJhY2soc3RydWN0IGdudHRhYl9mcmVlX2NhbGxiYWNrICpjYWxsYmFjaykKK3ZvaWQgZ250dGFi
X2NhbmNlbF9mcmVlX2NhbGxiYWNrKHhlbmhvc3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfZnJlZV9j
YWxsYmFjayAqY2FsbGJhY2spCiB7CiAJc3RydWN0IGdudHRhYl9mcmVlX2NhbGxiYWNrICoqcGNi
OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJc3RydWN0IGdudHRhYl9wcml2YXRlICpndCA9IGd0
X3ByaXYoeGgpOworCiAKIAlzcGluX2xvY2tfaXJxc2F2ZSgmZ250dGFiX2xpc3RfbG9jaywgZmxh
Z3MpOwotCWZvciAocGNiID0gJmdudHRhYl9mcmVlX2NhbGxiYWNrX2xpc3Q7ICpwY2I7IHBjYiA9
ICYoKnBjYiktPm5leHQpIHsKKwlmb3IgKHBjYiA9ICZndC0+Z250dGFiX2ZyZWVfY2FsbGJhY2tf
bGlzdDsgKnBjYjsgcGNiID0gJigqcGNiKS0+bmV4dCkgewogCQlpZiAoKnBjYiA9PSBjYWxsYmFj
aykgewogCQkJKnBjYiA9IGNhbGxiYWNrLT5uZXh0OwogCQkJYnJlYWs7CkBAIC02NTMsNzUgKzY5
Myw3OCBAQCB2b2lkIGdudHRhYl9jYW5jZWxfZnJlZV9jYWxsYmFjayhzdHJ1Y3QgZ250dGFiX2Zy
ZWVfY2FsbGJhY2sgKmNhbGxiYWNrKQogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2NhbmNl
bF9mcmVlX2NhbGxiYWNrKTsKIAotc3RhdGljIHVuc2lnbmVkIGludCBnbnR0YWJfZnJhbWVzKHVu
c2lnbmVkIGludCBmcmFtZXMsIHVuc2lnbmVkIGludCBhbGlnbikKK3N0YXRpYyB1bnNpZ25lZCBp
bnQgZ250dGFiX2ZyYW1lcyh4ZW5ob3N0X3QgKnhoLCB1bnNpZ25lZCBpbnQgZnJhbWVzLCB1bnNp
Z25lZCBpbnQgYWxpZ24pCiB7Ci0JcmV0dXJuIChmcmFtZXMgKiBnbnR0YWJfaW50ZXJmYWNlLT5n
cmVmc19wZXJfZ3JhbnRfZnJhbWUgKyBhbGlnbiAtIDEpIC8KKwlzdHJ1Y3QgZ250dGFiX3ByaXZh
dGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlyZXR1cm4gKGZyYW1lcyAqIGd0LT5nbnR0YWJfaW50
ZXJmYWNlLT5ncmVmc19wZXJfZ3JhbnRfZnJhbWUgKyBhbGlnbiAtIDEpIC8KIAkgICAgICAgYWxp
Z247CiB9CiAKLXN0YXRpYyBpbnQgZ3Jvd19nbnR0YWJfbGlzdCh1bnNpZ25lZCBpbnQgbW9yZV9m
cmFtZXMpCitzdGF0aWMgaW50IGdyb3dfZ250dGFiX2xpc3QoeGVuaG9zdF90ICp4aCwgdW5zaWdu
ZWQgaW50IG1vcmVfZnJhbWVzKQogewogCXVuc2lnbmVkIGludCBuZXdfbnJfZ3JhbnRfZnJhbWVz
LCBleHRyYV9lbnRyaWVzLCBpOwogCXVuc2lnbmVkIGludCBucl9nbGlzdF9mcmFtZXMsIG5ld19u
cl9nbGlzdF9mcmFtZXM7CiAJdW5zaWduZWQgaW50IGdyZWZzX3Blcl9mcmFtZTsKKwlzdHJ1Y3Qg
Z250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CiAKLQlCVUdfT04oZ250dGFiX2ludGVy
ZmFjZSA9PSBOVUxMKTsKLQlncmVmc19wZXJfZnJhbWUgPSBnbnR0YWJfaW50ZXJmYWNlLT5ncmVm
c19wZXJfZ3JhbnRfZnJhbWU7CisJQlVHX09OKGd0LT5nbnR0YWJfaW50ZXJmYWNlID09IE5VTEwp
OworCWdyZWZzX3Blcl9mcmFtZSA9IGd0LT5nbnR0YWJfaW50ZXJmYWNlLT5ncmVmc19wZXJfZ3Jh
bnRfZnJhbWU7CiAKLQluZXdfbnJfZ3JhbnRfZnJhbWVzID0gbnJfZ3JhbnRfZnJhbWVzICsgbW9y
ZV9mcmFtZXM7CisJbmV3X25yX2dyYW50X2ZyYW1lcyA9IGd0LT5ucl9ncmFudF9mcmFtZXMgKyBt
b3JlX2ZyYW1lczsKIAlleHRyYV9lbnRyaWVzID0gbW9yZV9mcmFtZXMgKiBncmVmc19wZXJfZnJh
bWU7CiAKLQlucl9nbGlzdF9mcmFtZXMgPSBnbnR0YWJfZnJhbWVzKG5yX2dyYW50X2ZyYW1lcywg
UlBQKTsKLQluZXdfbnJfZ2xpc3RfZnJhbWVzID0gZ250dGFiX2ZyYW1lcyhuZXdfbnJfZ3JhbnRf
ZnJhbWVzLCBSUFApOworCW5yX2dsaXN0X2ZyYW1lcyA9IGdudHRhYl9mcmFtZXMoeGgsIGd0LT5u
cl9ncmFudF9mcmFtZXMsIFJQUCk7CisJbmV3X25yX2dsaXN0X2ZyYW1lcyA9IGdudHRhYl9mcmFt
ZXMoeGgsIG5ld19ucl9ncmFudF9mcmFtZXMsIFJQUCk7CiAJZm9yIChpID0gbnJfZ2xpc3RfZnJh
bWVzOyBpIDwgbmV3X25yX2dsaXN0X2ZyYW1lczsgaSsrKSB7Ci0JCWdudHRhYl9saXN0W2ldID0g
KGdyYW50X3JlZl90ICopX19nZXRfZnJlZV9wYWdlKEdGUF9BVE9NSUMpOwotCQlpZiAoIWdudHRh
Yl9saXN0W2ldKQorCQlndC0+Z250dGFiX2xpc3RbaV0gPSAoZ3JhbnRfcmVmX3QgKilfX2dldF9m
cmVlX3BhZ2UoR0ZQX0FUT01JQyk7CisJCWlmICghZ3QtPmdudHRhYl9saXN0W2ldKQogCQkJZ290
byBncm93X25vbWVtOwogCX0KIAogCi0JZm9yIChpID0gZ3JlZnNfcGVyX2ZyYW1lICogbnJfZ3Jh
bnRfZnJhbWVzOworCWZvciAoaSA9IGdyZWZzX3Blcl9mcmFtZSAqIGd0LT5ucl9ncmFudF9mcmFt
ZXM7CiAJICAgICBpIDwgZ3JlZnNfcGVyX2ZyYW1lICogbmV3X25yX2dyYW50X2ZyYW1lcyAtIDE7
IGkrKykKLQkJZ250dGFiX2VudHJ5KGkpID0gaSArIDE7CisJCWdudHRhYl9lbnRyeSh4aCwgaSkg
PSBpICsgMTsKIAotCWdudHRhYl9lbnRyeShpKSA9IGdudHRhYl9mcmVlX2hlYWQ7Ci0JZ250dGFi
X2ZyZWVfaGVhZCA9IGdyZWZzX3Blcl9mcmFtZSAqIG5yX2dyYW50X2ZyYW1lczsKLQlnbnR0YWJf
ZnJlZV9jb3VudCArPSBleHRyYV9lbnRyaWVzOworCWdudHRhYl9lbnRyeSh4aCwgaSkgPSBndC0+
Z250dGFiX2ZyZWVfaGVhZDsKKwlndC0+Z250dGFiX2ZyZWVfaGVhZCA9IGdyZWZzX3Blcl9mcmFt
ZSAqIGd0LT5ucl9ncmFudF9mcmFtZXM7CisJZ3QtPmdudHRhYl9mcmVlX2NvdW50ICs9IGV4dHJh
X2VudHJpZXM7CiAKLQlucl9ncmFudF9mcmFtZXMgPSBuZXdfbnJfZ3JhbnRfZnJhbWVzOworCWd0
LT5ucl9ncmFudF9mcmFtZXMgPSBuZXdfbnJfZ3JhbnRfZnJhbWVzOwogCi0JY2hlY2tfZnJlZV9j
YWxsYmFja3MoKTsKKwljaGVja19mcmVlX2NhbGxiYWNrcyh4aCk7CiAKIAlyZXR1cm4gMDsKIAog
Z3Jvd19ub21lbToKIAl3aGlsZSAoaS0tID4gbnJfZ2xpc3RfZnJhbWVzKQotCQlmcmVlX3BhZ2Uo
KHVuc2lnbmVkIGxvbmcpIGdudHRhYl9saXN0W2ldKTsKKwkJZnJlZV9wYWdlKCh1bnNpZ25lZCBs
b25nKSBndC0+Z250dGFiX2xpc3RbaV0pOwogCXJldHVybiAtRU5PTUVNOwogfQogCi1zdGF0aWMg
dW5zaWduZWQgaW50IF9fbWF4X25yX2dyYW50X2ZyYW1lcyh2b2lkKQorc3RhdGljIHVuc2lnbmVk
IGludCBfX21heF9ucl9ncmFudF9mcmFtZXMoeGVuaG9zdF90ICp4aCkKIHsKIAlzdHJ1Y3QgZ250
dGFiX3F1ZXJ5X3NpemUgcXVlcnk7CiAJaW50IHJjOwogCiAJcXVlcnkuZG9tID0gRE9NSURfU0VM
RjsKIAotCXJjID0gSFlQRVJWSVNPUl9ncmFudF90YWJsZV9vcChHTlRUQUJPUF9xdWVyeV9zaXpl
LCAmcXVlcnksIDEpOworCXJjID0gaHlwZXJ2aXNvcl9ncmFudF90YWJsZV9vcCh4aCwgR05UVEFC
T1BfcXVlcnlfc2l6ZSwgJnF1ZXJ5LCAxKTsKIAlpZiAoKHJjIDwgMCkgfHwgKHF1ZXJ5LnN0YXR1
cyAhPSBHTlRTVF9va2F5KSkKIAkJcmV0dXJuIDQ7IC8qIExlZ2FjeSBtYXggc3VwcG9ydGVkIG51
bWJlciBvZiBmcmFtZXMgKi8KIAogCXJldHVybiBxdWVyeS5tYXhfbnJfZnJhbWVzOwogfQogCi11
bnNpZ25lZCBpbnQgZ250dGFiX21heF9ncmFudF9mcmFtZXModm9pZCkKK3Vuc2lnbmVkIGludCBn
bnR0YWJfbWF4X2dyYW50X2ZyYW1lcyh4ZW5ob3N0X3QgKnhoKQogewotCXVuc2lnbmVkIGludCB4
ZW5fbWF4ID0gX19tYXhfbnJfZ3JhbnRfZnJhbWVzKCk7CisJdW5zaWduZWQgaW50IHhlbl9tYXgg
PSBfX21heF9ucl9ncmFudF9mcmFtZXMoeGgpOwogCXN0YXRpYyB1bnNpZ25lZCBpbnQgYm9vdF9t
YXhfbnJfZ3JhbnRfZnJhbWVzOwogCiAJLyogRmlyc3QgdGltZSwgaW5pdGlhbGl6ZSBpdCBwcm9w
ZXJseS4gKi8KIAlpZiAoIWJvb3RfbWF4X25yX2dyYW50X2ZyYW1lcykKLQkJYm9vdF9tYXhfbnJf
Z3JhbnRfZnJhbWVzID0gX19tYXhfbnJfZ3JhbnRfZnJhbWVzKCk7CisJCWJvb3RfbWF4X25yX2dy
YW50X2ZyYW1lcyA9IF9fbWF4X25yX2dyYW50X2ZyYW1lcyh4aCk7CiAKIAlpZiAoeGVuX21heCA+
IGJvb3RfbWF4X25yX2dyYW50X2ZyYW1lcykKIAkJcmV0dXJuIGJvb3RfbWF4X25yX2dyYW50X2Zy
YW1lczsKQEAgLTcyOSwxNCArNzcyLDE1IEBAIHVuc2lnbmVkIGludCBnbnR0YWJfbWF4X2dyYW50
X2ZyYW1lcyh2b2lkKQogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX21heF9ncmFudF9mcmFt
ZXMpOwogCi1pbnQgZ250dGFiX3NldHVwX2F1dG9feGxhdF9mcmFtZXMocGh5c19hZGRyX3QgYWRk
cikKK2ludCBnbnR0YWJfc2V0dXBfYXV0b194bGF0X2ZyYW1lcyh4ZW5ob3N0X3QgKnhoLCBwaHlz
X2FkZHJfdCBhZGRyKQogeworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHho
KTsKIAl4ZW5fcGZuX3QgKnBmbjsKLQl1bnNpZ25lZCBpbnQgbWF4X25yX2dmcmFtZXMgPSBfX21h
eF9ucl9ncmFudF9mcmFtZXMoKTsKKwl1bnNpZ25lZCBpbnQgbWF4X25yX2dmcmFtZXMgPSBfX21h
eF9ucl9ncmFudF9mcmFtZXMoeGgpOwogCXVuc2lnbmVkIGludCBpOwogCXZvaWQgKnZhZGRyOwog
Ci0JaWYgKHhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLmNvdW50KQorCWlmIChndC0+YXV0b194
bGF0X2dyYW50X2ZyYW1lcy5jb3VudCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAl2YWRkciA9IHhl
bl9yZW1hcChhZGRyLCBYRU5fUEFHRV9TSVpFICogbWF4X25yX2dmcmFtZXMpOwpAQCAtNzUzLDI0
ICs3OTcsMjYgQEAgaW50IGdudHRhYl9zZXR1cF9hdXRvX3hsYXRfZnJhbWVzKHBoeXNfYWRkcl90
IGFkZHIpCiAJZm9yIChpID0gMDsgaSA8IG1heF9ucl9nZnJhbWVzOyBpKyspCiAJCXBmbltpXSA9
IFhFTl9QRk5fRE9XTihhZGRyKSArIGk7CiAKLQl4ZW5fYXV0b194bGF0X2dyYW50X2ZyYW1lcy52
YWRkciA9IHZhZGRyOwotCXhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnBmbiA9IHBmbjsKLQl4
ZW5fYXV0b194bGF0X2dyYW50X2ZyYW1lcy5jb3VudCA9IG1heF9ucl9nZnJhbWVzOworCWd0LT5h
dXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnZhZGRyID0gdmFkZHI7CisJZ3QtPmF1dG9feGxhdF9ncmFu
dF9mcmFtZXMucGZuID0gcGZuOworCWd0LT5hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLmNvdW50ID0g
bWF4X25yX2dmcmFtZXM7CiAKIAlyZXR1cm4gMDsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRh
Yl9zZXR1cF9hdXRvX3hsYXRfZnJhbWVzKTsKIAotdm9pZCBnbnR0YWJfZnJlZV9hdXRvX3hsYXRf
ZnJhbWVzKHZvaWQpCit2b2lkIGdudHRhYl9mcmVlX2F1dG9feGxhdF9mcmFtZXMoeGVuaG9zdF90
ICp4aCkKIHsKLQlpZiAoIXhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLmNvdW50KQorCXN0cnVj
dCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHhoKTsKKworCWlmICghZ3QtPmF1dG9feGxh
dF9ncmFudF9mcmFtZXMuY291bnQpCiAJCXJldHVybjsKLQlrZnJlZSh4ZW5fYXV0b194bGF0X2dy
YW50X2ZyYW1lcy5wZm4pOwotCXhlbl91bm1hcCh4ZW5fYXV0b194bGF0X2dyYW50X2ZyYW1lcy52
YWRkcik7CisJa2ZyZWUoZ3QtPmF1dG9feGxhdF9ncmFudF9mcmFtZXMucGZuKTsKKwl4ZW5fdW5t
YXAoZ3QtPmF1dG9feGxhdF9ncmFudF9mcmFtZXMudmFkZHIpOwogCi0JeGVuX2F1dG9feGxhdF9n
cmFudF9mcmFtZXMucGZuID0gTlVMTDsKLQl4ZW5fYXV0b194bGF0X2dyYW50X2ZyYW1lcy5jb3Vu
dCA9IDA7Ci0JeGVuX2F1dG9feGxhdF9ncmFudF9mcmFtZXMudmFkZHIgPSBOVUxMOworCWd0LT5h
dXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnBmbiA9IE5VTEw7CisJZ3QtPmF1dG9feGxhdF9ncmFudF9m
cmFtZXMuY291bnQgPSAwOworCWd0LT5hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnZhZGRyID0gTlVM
TDsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9mcmVlX2F1dG9feGxhdF9mcmFtZXMpOwog
CkBAIC04MDAsMTcgKzg0NiwxNyBAQCBFWFBPUlRfU1lNQk9MX0dQTChnbnR0YWJfcGFnZXNfc2V0
X3ByaXZhdGUpOwogICogQG5yX3BhZ2VzOiBudW1iZXIgb2YgcGFnZXMgdG8gYWxsb2MKICAqIEBw
YWdlczogcmV0dXJucyB0aGUgcGFnZXMKICAqLwotaW50IGdudHRhYl9hbGxvY19wYWdlcyhpbnQg
bnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFnZXMpCitpbnQgZ250dGFiX2FsbG9jX3BhZ2VzKHhl
bmhvc3RfdCAqeGgsIGludCBucl9wYWdlcywgc3RydWN0IHBhZ2UgKipwYWdlcykKIHsKIAlpbnQg
cmV0OwogCi0JcmV0ID0gYWxsb2NfeGVuYmFsbG9vbmVkX3BhZ2VzKHhoX2RlZmF1bHQsIG5yX3Bh
Z2VzLCBwYWdlcyk7CisJcmV0ID0gYWxsb2NfeGVuYmFsbG9vbmVkX3BhZ2VzKHhoLCBucl9wYWdl
cywgcGFnZXMpOwogCWlmIChyZXQgPCAwKQogCQlyZXR1cm4gcmV0OwogCiAJcmV0ID0gZ250dGFi
X3BhZ2VzX3NldF9wcml2YXRlKG5yX3BhZ2VzLCBwYWdlcyk7CiAJaWYgKHJldCA8IDApCi0JCWdu
dHRhYl9mcmVlX3BhZ2VzKG5yX3BhZ2VzLCBwYWdlcyk7CisJCWdudHRhYl9mcmVlX3BhZ2VzKHho
LCBucl9wYWdlcywgcGFnZXMpOwogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTgzNiwxMCArODgyLDEw
IEBAIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9wYWdlc19jbGVhcl9wcml2YXRlKTsKICAqIEBu
cl9wYWdlczsgbnVtYmVyIG9mIHBhZ2VzIHRvIGZyZWUKICAqIEBwYWdlczogdGhlIHBhZ2VzCiAg
Ki8KLXZvaWQgZ250dGFiX2ZyZWVfcGFnZXMoaW50IG5yX3BhZ2VzLCBzdHJ1Y3QgcGFnZSAqKnBh
Z2VzKQordm9pZCBnbnR0YWJfZnJlZV9wYWdlcyh4ZW5ob3N0X3QgKnhoLCBpbnQgbnJfcGFnZXMs
IHN0cnVjdCBwYWdlICoqcGFnZXMpCiB7CiAJZ250dGFiX3BhZ2VzX2NsZWFyX3ByaXZhdGUobnJf
cGFnZXMsIHBhZ2VzKTsKLQlmcmVlX3hlbmJhbGxvb25lZF9wYWdlcyh4aF9kZWZhdWx0LCBucl9w
YWdlcywgcGFnZXMpOworCWZyZWVfeGVuYmFsbG9vbmVkX3BhZ2VzKHhoLCBucl9wYWdlcywgcGFn
ZXMpOwogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250dGFiX2ZyZWVfcGFnZXMpOwogCkBAIC04NDgs
MTIgKzg5NCwxNSBAQCBFWFBPUlRfU1lNQk9MX0dQTChnbnR0YWJfZnJlZV9wYWdlcyk7CiAgKiBn
bnR0YWJfZG1hX2FsbG9jX3BhZ2VzIC0gYWxsb2MgRE1BYWJsZSBwYWdlcyBzdWl0YWJsZSBmb3Ig
Z3JhbnQgbWFwcGluZyBpbnRvCiAgKiBAYXJnczogYXJndW1lbnRzIHRvIHRoZSBmdW5jdGlvbgog
ICovCi1pbnQgZ250dGFiX2RtYV9hbGxvY19wYWdlcyhzdHJ1Y3QgZ250dGFiX2RtYV9hbGxvY19h
cmdzICphcmdzKQoraW50IGdudHRhYl9kbWFfYWxsb2NfcGFnZXMoeGVuaG9zdF90ICp4aCwgc3Ry
dWN0IGdudHRhYl9kbWFfYWxsb2NfYXJncyAqYXJncykKIHsKIAl1bnNpZ25lZCBsb25nIHBmbiwg
c3RhcnRfcGZuOwogCXNpemVfdCBzaXplOwogCWludCBpLCByZXQ7CiAKKwlpZiAoeGgtPnR5cGUg
IT0geGVuaG9zdF9yMSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKIAlzaXplID0gYXJncy0+bnJfcGFn
ZXMgPDwgUEFHRV9TSElGVDsKIAlpZiAoYXJncy0+Y29oZXJlbnQpCiAJCWFyZ3MtPnZhZGRyID0g
ZG1hX2FsbG9jX2NvaGVyZW50KGFyZ3MtPmRldiwgc2l6ZSwKQEAgLTkwMywxMSArOTUyLDE0IEBA
IEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9kbWFfYWxsb2NfcGFnZXMpOwogICogZ250dGFiX2Rt
YV9mcmVlX3BhZ2VzIC0gZnJlZSBETUFhYmxlIHBhZ2VzCiAgKiBAYXJnczogYXJndW1lbnRzIHRv
IHRoZSBmdW5jdGlvbgogICovCi1pbnQgZ250dGFiX2RtYV9mcmVlX3BhZ2VzKHN0cnVjdCBnbnR0
YWJfZG1hX2FsbG9jX2FyZ3MgKmFyZ3MpCitpbnQgZ250dGFiX2RtYV9mcmVlX3BhZ2VzKHhlbmhv
c3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfZG1hX2FsbG9jX2FyZ3MgKmFyZ3MpCiB7CiAJc2l6ZV90
IHNpemU7CiAJaW50IGksIHJldDsKIAorCWlmICh4aC0+dHlwZSAhPSB4ZW5ob3N0X3IxKQorCQly
ZXR1cm4gLUVJTlZBTDsKKwogCWdudHRhYl9wYWdlc19jbGVhcl9wcml2YXRlKGFyZ3MtPm5yX3Bh
Z2VzLCBhcmdzLT5wYWdlcyk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgYXJncy0+bnJfcGFnZXM7IGkr
KykKQEAgLTkzOSwxMyArOTkxLDEzIEBAIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9kbWFfZnJl
ZV9wYWdlcyk7CiAvKiBIYW5kbGluZyBvZiBwYWdlZCBvdXQgZ3JhbnQgdGFyZ2V0cyAoR05UU1Rf
ZWFnYWluKSAqLwogI2RlZmluZSBNQVhfREVMQVkgMjU2CiBzdGF0aWMgaW5saW5lIHZvaWQKLWdu
dHRhYl9yZXRyeV9lYWdhaW5fZ29wKHVuc2lnbmVkIGludCBjbWQsIHZvaWQgKmdvcCwgaW50MTZf
dCAqc3RhdHVzLAorZ250dGFiX3JldHJ5X2VhZ2Fpbl9nb3AoeGVuaG9zdF90ICp4aCwgdW5zaWdu
ZWQgaW50IGNtZCwgdm9pZCAqZ29wLCBpbnQxNl90ICpzdGF0dXMsCiAJCQkJCQljb25zdCBjaGFy
ICpmdW5jKQogewogCXVuc2lnbmVkIGRlbGF5ID0gMTsKIAogCWRvIHsKLQkJQlVHX09OKEhZUEVS
VklTT1JfZ3JhbnRfdGFibGVfb3AoY21kLCBnb3AsIDEpKTsKKwkJQlVHX09OKGh5cGVydmlzb3Jf
Z3JhbnRfdGFibGVfb3AoeGgsIGNtZCwgZ29wLCAxKSk7CiAJCWlmICgqc3RhdHVzID09IEdOVFNU
X2VhZ2FpbikKIAkJCW1zbGVlcChkZWxheSsrKTsKIAl9IHdoaWxlICgoKnN0YXR1cyA9PSBHTlRT
VF9lYWdhaW4pICYmIChkZWxheSA8IE1BWF9ERUxBWSkpOwpAQCAtOTU2LDI4ICsxMDA4LDI4IEBA
IGdudHRhYl9yZXRyeV9lYWdhaW5fZ29wKHVuc2lnbmVkIGludCBjbWQsIHZvaWQgKmdvcCwgaW50
MTZfdCAqc3RhdHVzLAogCX0KIH0KIAotdm9pZCBnbnR0YWJfYmF0Y2hfbWFwKHN0cnVjdCBnbnR0
YWJfbWFwX2dyYW50X3JlZiAqYmF0Y2gsIHVuc2lnbmVkIGNvdW50KQordm9pZCBnbnR0YWJfYmF0
Y2hfbWFwKHhlbmhvc3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqYmF0Y2gs
IHVuc2lnbmVkIGNvdW50KQogewogCXN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqb3A7CiAK
LQlpZiAoSFlQRVJWSVNPUl9ncmFudF90YWJsZV9vcChHTlRUQUJPUF9tYXBfZ3JhbnRfcmVmLCBi
YXRjaCwgY291bnQpKQorCWlmIChoeXBlcnZpc29yX2dyYW50X3RhYmxlX29wKHhoLCBHTlRUQUJP
UF9tYXBfZ3JhbnRfcmVmLCBiYXRjaCwgY291bnQpKQogCQlCVUcoKTsKIAlmb3IgKG9wID0gYmF0
Y2g7IG9wIDwgYmF0Y2ggKyBjb3VudDsgb3ArKykKIAkJaWYgKG9wLT5zdGF0dXMgPT0gR05UU1Rf
ZWFnYWluKQotCQkJZ250dGFiX3JldHJ5X2VhZ2Fpbl9nb3AoR05UVEFCT1BfbWFwX2dyYW50X3Jl
Ziwgb3AsCisJCQlnbnR0YWJfcmV0cnlfZWFnYWluX2dvcCh4aCwgR05UVEFCT1BfbWFwX2dyYW50
X3JlZiwgb3AsCiAJCQkJCQkmb3AtPnN0YXR1cywgX19mdW5jX18pOwogfQogRVhQT1JUX1NZTUJP
TF9HUEwoZ250dGFiX2JhdGNoX21hcCk7CiAKLXZvaWQgZ250dGFiX2JhdGNoX2NvcHkoc3RydWN0
IGdudHRhYl9jb3B5ICpiYXRjaCwgdW5zaWduZWQgY291bnQpCit2b2lkIGdudHRhYl9iYXRjaF9j
b3B5KHhlbmhvc3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfY29weSAqYmF0Y2gsIHVuc2lnbmVkIGNv
dW50KQogewogCXN0cnVjdCBnbnR0YWJfY29weSAqb3A7CiAKLQlpZiAoSFlQRVJWSVNPUl9ncmFu
dF90YWJsZV9vcChHTlRUQUJPUF9jb3B5LCBiYXRjaCwgY291bnQpKQorCWlmIChoeXBlcnZpc29y
X2dyYW50X3RhYmxlX29wKHhoLCBHTlRUQUJPUF9jb3B5LCBiYXRjaCwgY291bnQpKQogCQlCVUco
KTsKIAlmb3IgKG9wID0gYmF0Y2g7IG9wIDwgYmF0Y2ggKyBjb3VudDsgb3ArKykKIAkJaWYgKG9w
LT5zdGF0dXMgPT0gR05UU1RfZWFnYWluKQotCQkJZ250dGFiX3JldHJ5X2VhZ2Fpbl9nb3AoR05U
VEFCT1BfY29weSwgb3AsCisJCQlnbnR0YWJfcmV0cnlfZWFnYWluX2dvcCh4aCwgR05UVEFCT1Bf
Y29weSwgb3AsCiAJCQkJCQkmb3AtPnN0YXR1cywgX19mdW5jX18pOwogfQogRVhQT1JUX1NZTUJP
TF9HUEwoZ250dGFiX2JhdGNoX2NvcHkpOwpAQCAtMTAzMCwxMyArMTA4MiwxMyBAQCB2b2lkIGdu
dHRhYl9mb3JlYWNoX2dyYW50KHN0cnVjdCBwYWdlICoqcGFnZXMsCiAJfQogfQogCi1pbnQgZ250
dGFiX21hcF9yZWZzKHN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqbWFwX29wcywKK2ludCBn
bnR0YWJfbWFwX3JlZnMoeGVuaG9zdF90ICp4aCwgc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVm
ICptYXBfb3BzLAogCQkgICAgc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVmICprbWFwX29wcywK
IAkJICAgIHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVkIGludCBjb3VudCkKIHsKIAlpbnQg
aSwgcmV0OwogCi0JcmV0ID0gSFlQRVJWSVNPUl9ncmFudF90YWJsZV9vcChHTlRUQUJPUF9tYXBf
Z3JhbnRfcmVmLCBtYXBfb3BzLCBjb3VudCk7CisJcmV0ID0gaHlwZXJ2aXNvcl9ncmFudF90YWJs
ZV9vcCh4aCwgR05UVEFCT1BfbWFwX2dyYW50X3JlZiwgbWFwX29wcywgY291bnQpOwogCWlmIChy
ZXQpCiAJCXJldHVybiByZXQ7CiAKQEAgLTEwNTksNyArMTExMSw3IEBAIGludCBnbnR0YWJfbWFw
X3JlZnMoc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVmICptYXBfb3BzLAogCiAJCWNhc2UgR05U
U1RfZWFnYWluOgogCQkJLyogUmV0cnkgZWFnYWluIG1hcHMgKi8KLQkJCWdudHRhYl9yZXRyeV9l
YWdhaW5fZ29wKEdOVFRBQk9QX21hcF9ncmFudF9yZWYsCisJCQlnbnR0YWJfcmV0cnlfZWFnYWlu
X2dvcCh4aCwgR05UVEFCT1BfbWFwX2dyYW50X3JlZiwKIAkJCQkJCW1hcF9vcHMgKyBpLAogCQkJ
CQkJJm1hcF9vcHNbaV0uc3RhdHVzLCBfX2Z1bmNfXyk7CiAJCQkvKiBUZXN0IHN0YXR1cyBpbiBu
ZXh0IGxvb3AgaXRlcmF0aW9uLiAqLwpAQCAtMTA3NSwxNCArMTEyNywxNCBAQCBpbnQgZ250dGFi
X21hcF9yZWZzKHN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqbWFwX29wcywKIH0KIEVYUE9S
VF9TWU1CT0xfR1BMKGdudHRhYl9tYXBfcmVmcyk7CiAKLWludCBnbnR0YWJfdW5tYXBfcmVmcyhz
dHJ1Y3QgZ250dGFiX3VubWFwX2dyYW50X3JlZiAqdW5tYXBfb3BzLAoraW50IGdudHRhYl91bm1h
cF9yZWZzKHhlbmhvc3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfdW5tYXBfZ3JhbnRfcmVmICp1bm1h
cF9vcHMsCiAJCSAgICAgIHN0cnVjdCBnbnR0YWJfdW5tYXBfZ3JhbnRfcmVmICprdW5tYXBfb3Bz
LAogCQkgICAgICBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25lZCBpbnQgY291bnQpCiB7CiAJ
dW5zaWduZWQgaW50IGk7CiAJaW50IHJldDsKIAotCXJldCA9IEhZUEVSVklTT1JfZ3JhbnRfdGFi
bGVfb3AoR05UVEFCT1BfdW5tYXBfZ3JhbnRfcmVmLCB1bm1hcF9vcHMsIGNvdW50KTsKKwlyZXQg
PSBoeXBlcnZpc29yX2dyYW50X3RhYmxlX29wKHhoLCBHTlRUQUJPUF91bm1hcF9ncmFudF9yZWYs
IHVubWFwX29wcywgY291bnQpOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKQEAgLTExMjIs
NyArMTE3NCw3IEBAIHN0YXRpYyB2b2lkIF9fZ250dGFiX3VubWFwX3JlZnNfYXN5bmMoc3RydWN0
IGdudGFiX3VubWFwX3F1ZXVlX2RhdGEqIGl0ZW0pCiAJCX0KIAl9CiAKLQlyZXQgPSBnbnR0YWJf
dW5tYXBfcmVmcyhpdGVtLT51bm1hcF9vcHMsIGl0ZW0tPmt1bm1hcF9vcHMsCisJcmV0ID0gZ250
dGFiX3VubWFwX3JlZnMoaXRlbS0+eGgsIGl0ZW0tPnVubWFwX29wcywgaXRlbS0+a3VubWFwX29w
cywKIAkJCQlpdGVtLT5wYWdlcywgaXRlbS0+Y291bnQpOwogCWl0ZW0tPmRvbmUocmV0LCBpdGVt
KTsKIH0KQEAgLTExNTksMzcgKzEyMTEsNDMgQEAgaW50IGdudHRhYl91bm1hcF9yZWZzX3N5bmMo
c3RydWN0IGdudGFiX3VubWFwX3F1ZXVlX2RhdGEgKml0ZW0pCiB9CiBFWFBPUlRfU1lNQk9MX0dQ
TChnbnR0YWJfdW5tYXBfcmVmc19zeW5jKTsKIAotc3RhdGljIHVuc2lnbmVkIGludCBucl9zdGF0
dXNfZnJhbWVzKHVuc2lnbmVkIGludCBucl9ncmFudF9mcmFtZXMpCitzdGF0aWMgdW5zaWduZWQg
aW50IG5yX3N0YXR1c19mcmFtZXMoeGVuaG9zdF90ICp4aCwgdW5zaWduZWQgaW50IG5yX2dyYW50
X2ZyYW1lcykKIHsKLQlCVUdfT04oZ250dGFiX2ludGVyZmFjZSA9PSBOVUxMKTsKLQlyZXR1cm4g
Z250dGFiX2ZyYW1lcyhucl9ncmFudF9mcmFtZXMsIFNQUCk7CisJc3RydWN0IGdudHRhYl9wcml2
YXRlICpndCA9IGd0X3ByaXYoeGgpOworCisJQlVHX09OKGd0LT5nbnR0YWJfaW50ZXJmYWNlID09
IE5VTEwpOworCXJldHVybiBnbnR0YWJfZnJhbWVzKHhoLCBucl9ncmFudF9mcmFtZXMsIFNQUCk7
CiB9CiAKLXN0YXRpYyBpbnQgZ250dGFiX21hcF9mcmFtZXNfdjEoeGVuX3Bmbl90ICpmcmFtZXMs
IHVuc2lnbmVkIGludCBucl9nZnJhbWVzKQorc3RhdGljIGludCBnbnR0YWJfbWFwX2ZyYW1lc192
MSh4ZW5ob3N0X3QgKnhoLCB4ZW5fcGZuX3QgKmZyYW1lcywgdW5zaWduZWQgaW50IG5yX2dmcmFt
ZXMpCiB7CiAJaW50IHJjOworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHho
KTsKIAotCXJjID0gYXJjaF9nbnR0YWJfbWFwX3NoYXJlZChmcmFtZXMsIG5yX2dmcmFtZXMsCi0J
CQkJICAgIGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVzKCksCi0JCQkJICAgICZnbnR0YWJfc2hhcmVk
LmFkZHIpOworCXJjID0gYXJjaF9nbnR0YWJfbWFwX3NoYXJlZCh4aCwgZnJhbWVzLCBucl9nZnJh
bWVzLAorCQkJCSAgICBnbnR0YWJfbWF4X2dyYW50X2ZyYW1lcyh4aCksCisJCQkJICAgICZndC0+
Z250dGFiX3NoYXJlZC5hZGRyKTsKIAlCVUdfT04ocmMpOwogCiAJcmV0dXJuIDA7CiB9CiAKLXN0
YXRpYyB2b2lkIGdudHRhYl91bm1hcF9mcmFtZXNfdjEodm9pZCkKK3N0YXRpYyB2b2lkIGdudHRh
Yl91bm1hcF9mcmFtZXNfdjEoeGVuaG9zdF90ICp4aCkKIHsKLQlhcmNoX2dudHRhYl91bm1hcChn
bnR0YWJfc2hhcmVkLmFkZHIsIG5yX2dyYW50X2ZyYW1lcyk7CisJc3RydWN0IGdudHRhYl9wcml2
YXRlICpndCA9IGd0X3ByaXYoeGgpOworCisJYXJjaF9nbnR0YWJfdW5tYXAoeGgsIGd0LT5nbnR0
YWJfc2hhcmVkLmFkZHIsIGd0LT5ucl9ncmFudF9mcmFtZXMpOwogfQogCi1zdGF0aWMgaW50IGdu
dHRhYl9tYXBfZnJhbWVzX3YyKHhlbl9wZm5fdCAqZnJhbWVzLCB1bnNpZ25lZCBpbnQgbnJfZ2Zy
YW1lcykKK3N0YXRpYyBpbnQgZ250dGFiX21hcF9mcmFtZXNfdjIoeGVuaG9zdF90ICp4aCwgeGVu
X3Bmbl90ICpmcmFtZXMsIHVuc2lnbmVkIGludCBucl9nZnJhbWVzKQogewogCXVpbnQ2NF90ICpz
ZnJhbWVzOwogCXVuc2lnbmVkIGludCBucl9zZnJhbWVzOwogCXN0cnVjdCBnbnR0YWJfZ2V0X3N0
YXR1c19mcmFtZXMgZ2V0ZnJhbWVzOwogCWludCByYzsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUg
Kmd0ID0gZ3RfcHJpdih4aCk7CiAKLQlucl9zZnJhbWVzID0gbnJfc3RhdHVzX2ZyYW1lcyhucl9n
ZnJhbWVzKTsKKwlucl9zZnJhbWVzID0gbnJfc3RhdHVzX2ZyYW1lcyh4aCwgbnJfZ2ZyYW1lcyk7
CiAKIAkvKiBObyBuZWVkIGZvciBremFsbG9jIGFzIGl0IGlzIGluaXRpYWxpemVkIGluIGZvbGxv
d2luZyBoeXBlcmNhbGwKIAkgKiBHTlRUQUJPUF9nZXRfc3RhdHVzX2ZyYW1lcy4KQEAgLTEyMDIs
NyArMTI2MCw3IEBAIHN0YXRpYyBpbnQgZ250dGFiX21hcF9mcmFtZXNfdjIoeGVuX3Bmbl90ICpm
cmFtZXMsIHVuc2lnbmVkIGludCBucl9nZnJhbWVzKQogCWdldGZyYW1lcy5ucl9mcmFtZXMgID0g
bnJfc2ZyYW1lczsKIAlzZXRfeGVuX2d1ZXN0X2hhbmRsZShnZXRmcmFtZXMuZnJhbWVfbGlzdCwg
c2ZyYW1lcyk7CiAKLQlyYyA9IEhZUEVSVklTT1JfZ3JhbnRfdGFibGVfb3AoR05UVEFCT1BfZ2V0
X3N0YXR1c19mcmFtZXMsCisJcmMgPSBoeXBlcnZpc29yX2dyYW50X3RhYmxlX29wKHhoLCBHTlRU
QUJPUF9nZXRfc3RhdHVzX2ZyYW1lcywKIAkJCQkgICAgICAgJmdldGZyYW1lcywgMSk7CiAJaWYg
KHJjID09IC1FTk9TWVMpIHsKIAkJa2ZyZWUoc2ZyYW1lcyk7CkBAIC0xMjExLDM4ICsxMjY5LDQx
IEBAIHN0YXRpYyBpbnQgZ250dGFiX21hcF9mcmFtZXNfdjIoeGVuX3Bmbl90ICpmcmFtZXMsIHVu
c2lnbmVkIGludCBucl9nZnJhbWVzKQogCiAJQlVHX09OKHJjIHx8IGdldGZyYW1lcy5zdGF0dXMp
OwogCi0JcmMgPSBhcmNoX2dudHRhYl9tYXBfc3RhdHVzKHNmcmFtZXMsIG5yX3NmcmFtZXMsCi0J
CQkJICAgIG5yX3N0YXR1c19mcmFtZXMoZ250dGFiX21heF9ncmFudF9mcmFtZXMoKSksCi0JCQkJ
ICAgICZncnN0YXR1cyk7CisJcmMgPSBhcmNoX2dudHRhYl9tYXBfc3RhdHVzKHhoLCBzZnJhbWVz
LCBucl9zZnJhbWVzLAorCQkJCSAgICBucl9zdGF0dXNfZnJhbWVzKHhoLCBnbnR0YWJfbWF4X2dy
YW50X2ZyYW1lcyh4aCkpLAorCQkJCSAgICAmZ3QtPmdyc3RhdHVzKTsKIAlCVUdfT04ocmMpOwog
CWtmcmVlKHNmcmFtZXMpOwogCi0JcmMgPSBhcmNoX2dudHRhYl9tYXBfc2hhcmVkKGZyYW1lcywg
bnJfZ2ZyYW1lcywKLQkJCQkgICAgZ250dGFiX21heF9ncmFudF9mcmFtZXMoKSwKLQkJCQkgICAg
JmdudHRhYl9zaGFyZWQuYWRkcik7CisJcmMgPSBhcmNoX2dudHRhYl9tYXBfc2hhcmVkKHhoLCBm
cmFtZXMsIG5yX2dmcmFtZXMsCisJCQkJICAgIGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVzKHhoKSwK
KwkJCQkgICAgJmd0LT5nbnR0YWJfc2hhcmVkLmFkZHIpOwogCUJVR19PTihyYyk7CiAKIAlyZXR1
cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgZ250dGFiX3VubWFwX2ZyYW1lc192Mih2b2lkKQorc3Rh
dGljIHZvaWQgZ250dGFiX3VubWFwX2ZyYW1lc192Mih4ZW5ob3N0X3QgKnhoKQogewotCWFyY2hf
Z250dGFiX3VubWFwKGdudHRhYl9zaGFyZWQuYWRkciwgbnJfZ3JhbnRfZnJhbWVzKTsKLQlhcmNo
X2dudHRhYl91bm1hcChncnN0YXR1cywgbnJfc3RhdHVzX2ZyYW1lcyhucl9ncmFudF9mcmFtZXMp
KTsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CisKKwlhcmNoX2du
dHRhYl91bm1hcCh4aCwgZ3QtPmdudHRhYl9zaGFyZWQuYWRkciwgZ3QtPm5yX2dyYW50X2ZyYW1l
cyk7CisJYXJjaF9nbnR0YWJfdW5tYXAoeGgsIGd0LT5ncnN0YXR1cywgbnJfc3RhdHVzX2ZyYW1l
cyh4aCwgZ3QtPm5yX2dyYW50X2ZyYW1lcykpOwogfQogCi1zdGF0aWMgaW50IGdudHRhYl9tYXAo
dW5zaWduZWQgaW50IHN0YXJ0X2lkeCwgdW5zaWduZWQgaW50IGVuZF9pZHgpCitzdGF0aWMgaW50
IGdudHRhYl9tYXAoeGVuaG9zdF90ICp4aCwgdW5zaWduZWQgaW50IHN0YXJ0X2lkeCwgdW5zaWdu
ZWQgaW50IGVuZF9pZHgpCiB7CiAJc3RydWN0IGdudHRhYl9zZXR1cF90YWJsZSBzZXR1cDsKIAl4
ZW5fcGZuX3QgKmZyYW1lczsKIAl1bnNpZ25lZCBpbnQgbnJfZ2ZyYW1lcyA9IGVuZF9pZHggKyAx
OworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHhoKTsKIAlpbnQgcmM7CiAK
LQlpZiAoeGVuX2ZlYXR1cmUoWEVORkVBVF9hdXRvX3RyYW5zbGF0ZWRfcGh5c21hcCkpIHsKKwlp
ZiAoX194ZW5fZmVhdHVyZSh4aCwgWEVORkVBVF9hdXRvX3RyYW5zbGF0ZWRfcGh5c21hcCkpIHsK
IAkJc3RydWN0IHhlbl9hZGRfdG9fcGh5c21hcCB4YXRwOwogCQl1bnNpZ25lZCBpbnQgaSA9IGVu
ZF9pZHg7CiAJCXJjID0gMDsKLQkJQlVHX09OKHhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLmNv
dW50IDwgbnJfZ2ZyYW1lcyk7CisJCUJVR19PTihndC0+YXV0b194bGF0X2dyYW50X2ZyYW1lcy5j
b3VudCA8IG5yX2dmcmFtZXMpOwogCQkvKgogCQkgKiBMb29wIGJhY2t3YXJkcywgc28gdGhhdCB0
aGUgZmlyc3QgaHlwZXJjYWxsIGhhcyB0aGUgbGFyZ2VzdAogCQkgKiBpbmRleCwgZW5zdXJpbmcg
dGhhdCB0aGUgdGFibGUgd2lsbCBncm93IG9ubHkgb25jZS4KQEAgLTEyNTEsOCArMTMxMiw4IEBA
IHN0YXRpYyBpbnQgZ250dGFiX21hcCh1bnNpZ25lZCBpbnQgc3RhcnRfaWR4LCB1bnNpZ25lZCBp
bnQgZW5kX2lkeCkKIAkJCXhhdHAuZG9taWQgPSBET01JRF9TRUxGOwogCQkJeGF0cC5pZHggPSBp
OwogCQkJeGF0cC5zcGFjZSA9IFhFTk1BUFNQQUNFX2dyYW50X3RhYmxlOwotCQkJeGF0cC5ncGZu
ID0geGVuX2F1dG9feGxhdF9ncmFudF9mcmFtZXMucGZuW2ldOwotCQkJcmMgPSBIWVBFUlZJU09S
X21lbW9yeV9vcChYRU5NRU1fYWRkX3RvX3BoeXNtYXAsICZ4YXRwKTsKKwkJCXhhdHAuZ3BmbiA9
IGd0LT5hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnBmbltpXTsKKwkJCXJjID0gaHlwZXJ2aXNvcl9t
ZW1vcnlfb3AoeGgsIFhFTk1FTV9hZGRfdG9fcGh5c21hcCwgJnhhdHApOwogCQkJaWYgKHJjICE9
IDApIHsKIAkJCQlwcl93YXJuKCJncmFudCB0YWJsZSBhZGRfdG9fcGh5c21hcCBmYWlsZWQsIGVy
cj0lZFxuIiwKIAkJCQkJcmMpOwpAQCAtMTI3NCw3ICsxMzM1LDcgQEAgc3RhdGljIGludCBnbnR0
YWJfbWFwKHVuc2lnbmVkIGludCBzdGFydF9pZHgsIHVuc2lnbmVkIGludCBlbmRfaWR4KQogCXNl
dHVwLm5yX2ZyYW1lcyAgPSBucl9nZnJhbWVzOwogCXNldF94ZW5fZ3Vlc3RfaGFuZGxlKHNldHVw
LmZyYW1lX2xpc3QsIGZyYW1lcyk7CiAKLQlyYyA9IEhZUEVSVklTT1JfZ3JhbnRfdGFibGVfb3Ao
R05UVEFCT1Bfc2V0dXBfdGFibGUsICZzZXR1cCwgMSk7CisJcmMgPSBoeXBlcnZpc29yX2dyYW50
X3RhYmxlX29wKHhoLCBHTlRUQUJPUF9zZXR1cF90YWJsZSwgJnNldHVwLCAxKTsKIAlpZiAocmMg
PT0gLUVOT1NZUykgewogCQlrZnJlZShmcmFtZXMpOwogCQlyZXR1cm4gLUVOT1NZUzsKQEAgLTEy
ODIsNyArMTM0Myw3IEBAIHN0YXRpYyBpbnQgZ250dGFiX21hcCh1bnNpZ25lZCBpbnQgc3RhcnRf
aWR4LCB1bnNpZ25lZCBpbnQgZW5kX2lkeCkKIAogCUJVR19PTihyYyB8fCBzZXR1cC5zdGF0dXMp
OwogCi0JcmMgPSBnbnR0YWJfaW50ZXJmYWNlLT5tYXBfZnJhbWVzKGZyYW1lcywgbnJfZ2ZyYW1l
cyk7CisJcmMgPSBndC0+Z250dGFiX2ludGVyZmFjZS0+bWFwX2ZyYW1lcyh4aCwgZnJhbWVzLCBu
cl9nZnJhbWVzKTsKIAogCWtmcmVlKGZyYW1lcyk7CiAKQEAgLTEzMTMsMTMgKzEzNzQsMTMgQEAg
c3RhdGljIGNvbnN0IHN0cnVjdCBnbnR0YWJfb3BzIGdudHRhYl92Ml9vcHMgPSB7CiAJLnF1ZXJ5
X2ZvcmVpZ25fYWNjZXNzCQk9IGdudHRhYl9xdWVyeV9mb3JlaWduX2FjY2Vzc192MiwKIH07CiAK
LXN0YXRpYyBib29sIGdudHRhYl9uZWVkX3YyKHZvaWQpCitzdGF0aWMgYm9vbCBnbnR0YWJfbmVl
ZF92Mih4ZW5ob3N0X3QgKnhoKQogewogI2lmZGVmIENPTkZJR19YODYKIAl1aW50MzJfdCBiYXNl
LCB3aWR0aDsKIAogCWlmICh4ZW5fcHZfZG9tYWluKCkpIHsKLQkJYmFzZSA9IHhlbmhvc3RfY3B1
aWRfYmFzZSh4aF9kZWZhdWx0KTsKKwkJYmFzZSA9IHhlbmhvc3RfY3B1aWRfYmFzZSh4aCk7CiAJ
CWlmIChjcHVpZF9lYXgoYmFzZSkgPCA1KQogCQkJcmV0dXJuIGZhbHNlOwkvKiBJbmZvcm1hdGlv
biBub3QgYXZhaWxhYmxlLCB1c2UgVjEuICovCiAJCXdpZHRoID0gY3B1aWRfZWJ4KGJhc2UgKyA1
KSAmCkBAIC0xMzMwLDEyICsxMzkxLDEzIEBAIHN0YXRpYyBib29sIGdudHRhYl9uZWVkX3YyKHZv
aWQpCiAJcmV0dXJuICEhKG1heF9wb3NzaWJsZV9wZm4gPj4gMzIpOwogfQogCi1zdGF0aWMgdm9p
ZCBnbnR0YWJfcmVxdWVzdF92ZXJzaW9uKHZvaWQpCitzdGF0aWMgdm9pZCBnbnR0YWJfcmVxdWVz
dF92ZXJzaW9uKHhlbmhvc3RfdCAqeGgpCiB7CiAJbG9uZyByYzsKIAlzdHJ1Y3QgZ250dGFiX3Nl
dF92ZXJzaW9uIGdzdjsKKwlzdHJ1Y3QgZ250dGFiX3ByaXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7
CiAKLQlpZiAoZ250dGFiX25lZWRfdjIoKSkKKwlpZiAoZ250dGFiX25lZWRfdjIoeGgpKQogCQln
c3YudmVyc2lvbiA9IDI7CiAJZWxzZQogCQlnc3YudmVyc2lvbiA9IDE7CkBAIC0xMzQ0LDEzOSAr
MTQwNiwxNjIgQEAgc3RhdGljIHZvaWQgZ250dGFiX3JlcXVlc3RfdmVyc2lvbih2b2lkKQogCWlm
ICh4ZW5fZ250dGFiX3ZlcnNpb24gPj0gMSAmJiB4ZW5fZ250dGFiX3ZlcnNpb24gPD0gMikKIAkJ
Z3N2LnZlcnNpb24gPSB4ZW5fZ250dGFiX3ZlcnNpb247CiAKLQlyYyA9IEhZUEVSVklTT1JfZ3Jh
bnRfdGFibGVfb3AoR05UVEFCT1Bfc2V0X3ZlcnNpb24sICZnc3YsIDEpOworCXJjID0gaHlwZXJ2
aXNvcl9ncmFudF90YWJsZV9vcCh4aCwgR05UVEFCT1Bfc2V0X3ZlcnNpb24sICZnc3YsIDEpOwog
CWlmIChyYyA9PSAwICYmIGdzdi52ZXJzaW9uID09IDIpCi0JCWdudHRhYl9pbnRlcmZhY2UgPSAm
Z250dGFiX3YyX29wczsKKwkJZ3QtPmdudHRhYl9pbnRlcmZhY2UgPSAmZ250dGFiX3YyX29wczsK
IAllbHNlCi0JCWdudHRhYl9pbnRlcmZhY2UgPSAmZ250dGFiX3YxX29wczsKKwkJZ3QtPmdudHRh
Yl9pbnRlcmZhY2UgPSAmZ250dGFiX3YxX29wczsKKwogCXByX2luZm8oIkdyYW50IHRhYmxlcyB1
c2luZyB2ZXJzaW9uICVkIGxheW91dFxuIiwKLQkJZ250dGFiX2ludGVyZmFjZS0+dmVyc2lvbik7
CisJCWd0LT5nbnR0YWJfaW50ZXJmYWNlLT52ZXJzaW9uKTsKIH0KIAotc3RhdGljIGludCBnbnR0
YWJfc2V0dXAodm9pZCkKK3N0YXRpYyBpbnQgZ250dGFiX3NldHVwKHhlbmhvc3RfdCAqeGgpCiB7
CiAJdW5zaWduZWQgaW50IG1heF9ucl9nZnJhbWVzOworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAq
Z3QgPSBndF9wcml2KHhoKTsKIAotCW1heF9ucl9nZnJhbWVzID0gZ250dGFiX21heF9ncmFudF9m
cmFtZXMoKTsKLQlpZiAobWF4X25yX2dmcmFtZXMgPCBucl9ncmFudF9mcmFtZXMpCisJbWF4X25y
X2dmcmFtZXMgPSBnbnR0YWJfbWF4X2dyYW50X2ZyYW1lcyh4aCk7CisJaWYgKG1heF9ucl9nZnJh
bWVzIDwgZ3QtPm5yX2dyYW50X2ZyYW1lcykKIAkJcmV0dXJuIC1FTk9TWVM7CiAKLQlpZiAoeGVu
X2ZlYXR1cmUoWEVORkVBVF9hdXRvX3RyYW5zbGF0ZWRfcGh5c21hcCkgJiYgZ250dGFiX3NoYXJl
ZC5hZGRyID09IE5VTEwpIHsKLQkJZ250dGFiX3NoYXJlZC5hZGRyID0geGVuX2F1dG9feGxhdF9n
cmFudF9mcmFtZXMudmFkZHI7Ci0JCWlmIChnbnR0YWJfc2hhcmVkLmFkZHIgPT0gTlVMTCkgewor
CWlmIChfX3hlbl9mZWF0dXJlKHhoLCBYRU5GRUFUX2F1dG9fdHJhbnNsYXRlZF9waHlzbWFwKSAm
JiBndC0+Z250dGFiX3NoYXJlZC5hZGRyID09IE5VTEwpIHsKKwkJZ3QtPmdudHRhYl9zaGFyZWQu
YWRkciA9IGd0LT5hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnZhZGRyOworCQlpZiAoZ3QtPmdudHRh
Yl9zaGFyZWQuYWRkciA9PSBOVUxMKSB7CiAJCQlwcl93YXJuKCJnbnR0YWIgc2hhcmUgZnJhbWVz
IChhZGRyPTB4JTA4bHgpIGlzIG5vdCBtYXBwZWQhXG4iLAotCQkJCSh1bnNpZ25lZCBsb25nKXhl
bl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzLnZhZGRyKTsKKwkJCQkodW5zaWduZWQgbG9uZylndC0+
YXV0b194bGF0X2dyYW50X2ZyYW1lcy52YWRkcik7CiAJCQlyZXR1cm4gLUVOT01FTTsKIAkJfQog
CX0KLQlyZXR1cm4gZ250dGFiX21hcCgwLCBucl9ncmFudF9mcmFtZXMgLSAxKTsKKwlyZXR1cm4g
Z250dGFiX21hcCh4aCwgMCwgZ3QtPm5yX2dyYW50X2ZyYW1lcyAtIDEpOwogfQogCiBpbnQgZ250
dGFiX3Jlc3VtZSh2b2lkKQogewotCWdudHRhYl9yZXF1ZXN0X3ZlcnNpb24oKTsKLQlyZXR1cm4g
Z250dGFiX3NldHVwKCk7CisJeGVuaG9zdF90ICoqeGg7CisJZm9yX2VhY2hfeGVuaG9zdCh4aCkg
eworCQlpbnQgZXJyOworCisJCWdudHRhYl9yZXF1ZXN0X3ZlcnNpb24oKnhoKTsKKwkJZXJyID0g
Z250dGFiX3NldHVwKCp4aCk7CisJCWlmIChlcnIpCisJCQlyZXR1cm4gZXJyOworCX0KKwlyZXR1
cm4gMDsKIH0KIAogaW50IGdudHRhYl9zdXNwZW5kKHZvaWQpCiB7Ci0JaWYgKCF4ZW5fZmVhdHVy
ZShYRU5GRUFUX2F1dG9fdHJhbnNsYXRlZF9waHlzbWFwKSkKLQkJZ250dGFiX2ludGVyZmFjZS0+
dW5tYXBfZnJhbWVzKCk7CisJeGVuaG9zdF90ICoqeGg7CisJc3RydWN0IGdudHRhYl9wcml2YXRl
ICpndDsKKwkKKwlmb3JfZWFjaF94ZW5ob3N0KHhoKSB7CisJCWd0ID0gZ3RfcHJpdigqeGgpOwor
CisJCWlmICghX194ZW5fZmVhdHVyZSgoKnhoKSwgWEVORkVBVF9hdXRvX3RyYW5zbGF0ZWRfcGh5
c21hcCkpCisJCQlndC0+Z250dGFiX2ludGVyZmFjZS0+dW5tYXBfZnJhbWVzKCp4aCk7CisJCXJl
dHVybiAwOworCX0KIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBnbnR0YWJfZXhwYW5kKHVu
c2lnbmVkIGludCByZXFfZW50cmllcykKK3N0YXRpYyBpbnQgZ250dGFiX2V4cGFuZCh4ZW5ob3N0
X3QgKnhoLCB1bnNpZ25lZCBpbnQgcmVxX2VudHJpZXMpCiB7CiAJaW50IHJjOwogCXVuc2lnbmVk
IGludCBjdXIsIGV4dHJhOworCXN0cnVjdCBnbnR0YWJfcHJpdmF0ZSAqZ3QgPSBndF9wcml2KHho
KTsKIAotCUJVR19PTihnbnR0YWJfaW50ZXJmYWNlID09IE5VTEwpOwotCWN1ciA9IG5yX2dyYW50
X2ZyYW1lczsKLQlleHRyYSA9ICgocmVxX2VudHJpZXMgKyBnbnR0YWJfaW50ZXJmYWNlLT5ncmVm
c19wZXJfZ3JhbnRfZnJhbWUgLSAxKSAvCi0JCSBnbnR0YWJfaW50ZXJmYWNlLT5ncmVmc19wZXJf
Z3JhbnRfZnJhbWUpOwotCWlmIChjdXIgKyBleHRyYSA+IGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVz
KCkpIHsKKwlCVUdfT04oZ3QtPmdudHRhYl9pbnRlcmZhY2UgPT0gTlVMTCk7CisJY3VyID0gZ3Qt
Pm5yX2dyYW50X2ZyYW1lczsKKwlleHRyYSA9ICgocmVxX2VudHJpZXMgKyBndC0+Z250dGFiX2lu
dGVyZmFjZS0+Z3JlZnNfcGVyX2dyYW50X2ZyYW1lIC0gMSkgLworCQkgZ3QtPmdudHRhYl9pbnRl
cmZhY2UtPmdyZWZzX3Blcl9ncmFudF9mcmFtZSk7CisJaWYgKGN1ciArIGV4dHJhID4gZ250dGFi
X21heF9ncmFudF9mcmFtZXMoeGgpKSB7CiAJCXByX3dhcm5fcmF0ZWxpbWl0ZWQoInhlbi9ncmFu
dC10YWJsZTogbWF4X2dyYW50X2ZyYW1lcyByZWFjaGVkIgogCQkJCSAgICAiIGN1cj0ldSBleHRy
YT0ldSBsaW1pdD0ldSIKIAkJCQkgICAgIiBnbnR0YWJfZnJlZV9jb3VudD0ldSByZXFfZW50cmll
cz0ldVxuIiwKLQkJCQkgICAgY3VyLCBleHRyYSwgZ250dGFiX21heF9ncmFudF9mcmFtZXMoKSwK
LQkJCQkgICAgZ250dGFiX2ZyZWVfY291bnQsIHJlcV9lbnRyaWVzKTsKKwkJCQkgICAgY3VyLCBl
eHRyYSwgZ250dGFiX21heF9ncmFudF9mcmFtZXMoeGgpLAorCQkJCSAgICBndC0+Z250dGFiX2Zy
ZWVfY291bnQsIHJlcV9lbnRyaWVzKTsKIAkJcmV0dXJuIC1FTk9TUEM7CiAJfQogCi0JcmMgPSBn
bnR0YWJfbWFwKGN1ciwgY3VyICsgZXh0cmEgLSAxKTsKKwlyYyA9IGdudHRhYl9tYXAoeGgsIGN1
ciwgY3VyICsgZXh0cmEgLSAxKTsKIAlpZiAocmMgPT0gMCkKLQkJcmMgPSBncm93X2dudHRhYl9s
aXN0KGV4dHJhKTsKKwkJcmMgPSBncm93X2dudHRhYl9saXN0KHhoLCBleHRyYSk7CiAKIAlyZXR1
cm4gcmM7CiB9CiAKLWludCBnbnR0YWJfaW5pdCh2b2lkKQoraW50IGdudHRhYl9pbml0KHhlbmhv
c3RfdCAqeGgpCiB7CiAJaW50IGk7CiAJdW5zaWduZWQgbG9uZyBtYXhfbnJfZ3JhbnRfZnJhbWVz
OwogCXVuc2lnbmVkIGludCBtYXhfbnJfZ2xpc3RfZnJhbWVzLCBucl9nbGlzdF9mcmFtZXM7CiAJ
dW5zaWduZWQgaW50IG5yX2luaXRfZ3JlZnM7CiAJaW50IHJldDsKKwlzdHJ1Y3QgZ250dGFiX3By
aXZhdGUgKmd0ID0gZ3RfcHJpdih4aCk7CiAKLQlnbnR0YWJfcmVxdWVzdF92ZXJzaW9uKCk7Ci0J
bWF4X25yX2dyYW50X2ZyYW1lcyA9IGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVzKCk7Ci0JbnJfZ3Jh
bnRfZnJhbWVzID0gMTsKKwlnbnR0YWJfcmVxdWVzdF92ZXJzaW9uKHhoKTsKKwltYXhfbnJfZ3Jh
bnRfZnJhbWVzID0gZ250dGFiX21heF9ncmFudF9mcmFtZXMoeGgpOworCWd0LT5ucl9ncmFudF9m
cmFtZXMgPSAxOwogCiAJLyogRGV0ZXJtaW5lIHRoZSBtYXhpbXVtIG51bWJlciBvZiBmcmFtZXMg
cmVxdWlyZWQgZm9yIHRoZQogCSAqIGdyYW50IHJlZmVyZW5jZSBmcmVlIGxpc3Qgb24gdGhlIGN1
cnJlbnQgaHlwZXJ2aXNvci4KIAkgKi8KLQlCVUdfT04oZ250dGFiX2ludGVyZmFjZSA9PSBOVUxM
KTsKKwlCVUdfT04oZ3QtPmdudHRhYl9pbnRlcmZhY2UgPT0gTlVMTCk7CiAJbWF4X25yX2dsaXN0
X2ZyYW1lcyA9IChtYXhfbnJfZ3JhbnRfZnJhbWVzICoKLQkJCSAgICAgICBnbnR0YWJfaW50ZXJm
YWNlLT5ncmVmc19wZXJfZ3JhbnRfZnJhbWUgLyBSUFApOworCQkJICAgICAgIGd0LT5nbnR0YWJf
aW50ZXJmYWNlLT5ncmVmc19wZXJfZ3JhbnRfZnJhbWUgLyBSUFApOwogCi0JZ250dGFiX2xpc3Qg
PSBrbWFsbG9jX2FycmF5KG1heF9ucl9nbGlzdF9mcmFtZXMsCisJZ3QtPmdudHRhYl9saXN0ID0g
a21hbGxvY19hcnJheShtYXhfbnJfZ2xpc3RfZnJhbWVzLAogCQkJCSAgICBzaXplb2YoZ3JhbnRf
cmVmX3QgKiksCiAJCQkJICAgIEdGUF9LRVJORUwpOwotCWlmIChnbnR0YWJfbGlzdCA9PSBOVUxM
KQorCWlmIChndC0+Z250dGFiX2xpc3QgPT0gTlVMTCkKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQlu
cl9nbGlzdF9mcmFtZXMgPSBnbnR0YWJfZnJhbWVzKG5yX2dyYW50X2ZyYW1lcywgUlBQKTsKKwlu
cl9nbGlzdF9mcmFtZXMgPSBnbnR0YWJfZnJhbWVzKHhoLCBndC0+bnJfZ3JhbnRfZnJhbWVzLCBS
UFApOwogCWZvciAoaSA9IDA7IGkgPCBucl9nbGlzdF9mcmFtZXM7IGkrKykgewotCQlnbnR0YWJf
bGlzdFtpXSA9IChncmFudF9yZWZfdCAqKV9fZ2V0X2ZyZWVfcGFnZShHRlBfS0VSTkVMKTsKLQkJ
aWYgKGdudHRhYl9saXN0W2ldID09IE5VTEwpIHsKKwkJZ3QtPmdudHRhYl9saXN0W2ldID0gKGdy
YW50X3JlZl90ICopX19nZXRfZnJlZV9wYWdlKEdGUF9LRVJORUwpOworCQlpZiAoZ3QtPmdudHRh
Yl9saXN0W2ldID09IE5VTEwpIHsKIAkJCXJldCA9IC1FTk9NRU07CiAJCQlnb3RvIGluaV9ub21l
bTsKIAkJfQogCX0KIAotCXJldCA9IGFyY2hfZ250dGFiX2luaXQobWF4X25yX2dyYW50X2ZyYW1l
cywKLQkJCSAgICAgICBucl9zdGF0dXNfZnJhbWVzKG1heF9ucl9ncmFudF9mcmFtZXMpKTsKKwly
ZXQgPSBhcmNoX2dudHRhYl9pbml0KHhoLCBtYXhfbnJfZ3JhbnRfZnJhbWVzLAorCQkJICAgICAg
IG5yX3N0YXR1c19mcmFtZXMoeGgsIG1heF9ucl9ncmFudF9mcmFtZXMpKTsKIAlpZiAocmV0IDwg
MCkKIAkJZ290byBpbmlfbm9tZW07CiAKLQlpZiAoZ250dGFiX3NldHVwKCkgPCAwKSB7CisJaWYg
KGdudHRhYl9zZXR1cCh4aCkgPCAwKSB7CiAJCXJldCA9IC1FTk9ERVY7CiAJCWdvdG8gaW5pX25v
bWVtOwogCX0KIAotCW5yX2luaXRfZ3JlZnMgPSBucl9ncmFudF9mcmFtZXMgKgotCQkJZ250dGFi
X2ludGVyZmFjZS0+Z3JlZnNfcGVyX2dyYW50X2ZyYW1lOworCW5yX2luaXRfZ3JlZnMgPSBndC0+
bnJfZ3JhbnRfZnJhbWVzICoKKwkJCWd0LT5nbnR0YWJfaW50ZXJmYWNlLT5ncmVmc19wZXJfZ3Jh
bnRfZnJhbWU7CiAKIAlmb3IgKGkgPSBOUl9SRVNFUlZFRF9FTlRSSUVTOyBpIDwgbnJfaW5pdF9n
cmVmcyAtIDE7IGkrKykKLQkJZ250dGFiX2VudHJ5KGkpID0gaSArIDE7CisJCWdudHRhYl9lbnRy
eSh4aCwgaSkgPSBpICsgMTsKIAotCWdudHRhYl9lbnRyeShucl9pbml0X2dyZWZzIC0gMSkgPSBH
TlRUQUJfTElTVF9FTkQ7Ci0JZ250dGFiX2ZyZWVfY291bnQgPSBucl9pbml0X2dyZWZzIC0gTlJf
UkVTRVJWRURfRU5UUklFUzsKLQlnbnR0YWJfZnJlZV9oZWFkICA9IE5SX1JFU0VSVkVEX0VOVFJJ
RVM7CisJZ250dGFiX2VudHJ5KHhoLCBucl9pbml0X2dyZWZzIC0gMSkgPSBHTlRUQUJfTElTVF9F
TkQ7CisJZ3QtPmdudHRhYl9mcmVlX2NvdW50ID0gbnJfaW5pdF9ncmVmcyAtIE5SX1JFU0VSVkVE
X0VOVFJJRVM7CisJZ3QtPmdudHRhYl9mcmVlX2hlYWQgID0gTlJfUkVTRVJWRURfRU5UUklFUzsK
IAogCXByaW50aygiR3JhbnQgdGFibGUgaW5pdGlhbGl6ZWRcbiIpOwogCXJldHVybiAwOwogCiAg
aW5pX25vbWVtOgogCWZvciAoaS0tOyBpID49IDA7IGktLSkKLQkJZnJlZV9wYWdlKCh1bnNpZ25l
ZCBsb25nKWdudHRhYl9saXN0W2ldKTsKLQlrZnJlZShnbnR0YWJfbGlzdCk7CisJCWZyZWVfcGFn
ZSgodW5zaWduZWQgbG9uZylndC0+Z250dGFiX2xpc3RbaV0pOworCWtmcmVlKGd0LT5nbnR0YWJf
bGlzdCk7CiAJcmV0dXJuIHJldDsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGdudHRhYl9pbml0KTsK
IAogc3RhdGljIGludCBfX2dudHRhYl9pbml0KHZvaWQpCiB7CisJeGVuaG9zdF90ICoqeGg7CisJ
aW50IGVycjsKKwogCWlmICgheGVuX2RvbWFpbigpKQogCQlyZXR1cm4gLUVOT0RFVjsKIApAQCAt
MTQ4NCw4ICsxNTY5LDE0IEBAIHN0YXRpYyBpbnQgX19nbnR0YWJfaW5pdCh2b2lkKQogCWlmICh4
ZW5faHZtX2RvbWFpbigpICYmICF4ZW5fcHZoX2RvbWFpbigpKQogCQlyZXR1cm4gMDsKIAotCXJl
dHVybiBnbnR0YWJfaW5pdCgpOworCWZvcl9lYWNoX3hlbmhvc3QoeGgpIHsKKwkJZXJyID0gZ250
dGFiX2luaXQoKnhoKTsKKwkJaWYgKGVycikKKwkJCXJldHVybiBlcnI7CisJfQorCQorCXJldHVy
biAwOwogfQogLyogU3RhcnRzIGFmdGVyIGNvcmVfaW5pdGNhbGwgc28gdGhhdCB4ZW5fcHZoX2du
dHRhYl9zZXR1cCBjYW4gYmUgY2FsbGVkCi0gKiBiZWZvcmVoYW5kIHRvIGluaXRpYWxpemUgeGVu
X2F1dG9feGxhdF9ncmFudF9mcmFtZXMuICovCisgKiBiZWZvcmVoYW5kIHRvIGluaXRpYWxpemUg
YXV0b194bGF0X2dyYW50X2ZyYW1lcy4gKi8KIGNvcmVfaW5pdGNhbGxfc3luYyhfX2dudHRhYl9p
bml0KTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUveGVuL2dyYW50X3RhYmxlLmggYi9pbmNsdWRlL3hl
bi9ncmFudF90YWJsZS5oCmluZGV4IDliYzViYzA3ZDRkMy4uODI3Yjc5MDE5OWZiIDEwMDY0NAot
LS0gYS9pbmNsdWRlL3hlbi9ncmFudF90YWJsZS5oCisrKyBiL2luY2x1ZGUveGVuL2dyYW50X3Rh
YmxlLmgKQEAgLTc0LDE1ICs3NCwxNiBAQCBzdHJ1Y3QgZ250YWJfdW5tYXBfcXVldWVfZGF0YQog
CXN0cnVjdCBnbnR0YWJfdW5tYXBfZ3JhbnRfcmVmICp1bm1hcF9vcHM7CiAJc3RydWN0IGdudHRh
Yl91bm1hcF9ncmFudF9yZWYgKmt1bm1hcF9vcHM7CiAJc3RydWN0IHBhZ2UgKipwYWdlczsKKwl4
ZW5ob3N0X3QgKnhoOwogCXVuc2lnbmVkIGludCBjb3VudDsKIAl1bnNpZ25lZCBpbnQgYWdlOwog
fTsKIAotaW50IGdudHRhYl9pbml0KHZvaWQpOworaW50IGdudHRhYl9pbml0KHhlbmhvc3RfdCAq
eGgpOwogaW50IGdudHRhYl9zdXNwZW5kKHZvaWQpOwogaW50IGdudHRhYl9yZXN1bWUodm9pZCk7
CiAKLWludCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl9hY2Nlc3MoZG9taWRfdCBkb21pZCwgdW5zaWdu
ZWQgbG9uZyBmcmFtZSwKK2ludCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl9hY2Nlc3MoeGVuaG9zdF90
ICp4aCwgZG9taWRfdCBkb21pZCwgdW5zaWduZWQgbG9uZyBmcmFtZSwKIAkJCQlpbnQgcmVhZG9u
bHkpOwogCiAvKgpAQCAtOTAsNyArOTEsNyBAQCBpbnQgZ250dGFiX2dyYW50X2ZvcmVpZ25fYWNj
ZXNzKGRvbWlkX3QgZG9taWQsIHVuc2lnbmVkIGxvbmcgZnJhbWUsCiAgKiBsb25nZXIgaW4gdXNl
LiAgUmV0dXJuIDEgaWYgdGhlIGdyYW50IGVudHJ5IHdhcyBmcmVlZCwgMCBpZiBpdCBpcyBzdGls
bCBpbgogICogdXNlLgogICovCi1pbnQgZ250dGFiX2VuZF9mb3JlaWduX2FjY2Vzc19yZWYoZ3Jh
bnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHkpOworaW50IGdudHRhYl9lbmRfZm9yZWlnbl9hY2Nl
c3NfcmVmKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IHJlZiwgaW50IHJlYWRvbmx5KTsKIAog
LyoKICAqIEV2ZW50dWFsbHkgZW5kIGFjY2VzcyB0aHJvdWdoIHRoZSBnaXZlbiBncmFudCByZWZl
cmVuY2UsIGFuZCBvbmNlIHRoYXQKQEAgLTk4LDQ5ICs5OSw0OSBAQCBpbnQgZ250dGFiX2VuZF9m
b3JlaWduX2FjY2Vzc19yZWYoZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHkpOwogICogaW1t
ZWRpYXRlbHkgaWZmIHRoZSBncmFudCBlbnRyeSBpcyBub3QgaW4gdXNlLCBvdGhlcndpc2UgaXQg
d2lsbCBoYXBwZW4KICAqIHNvbWUgdGltZSBsYXRlci4gIHBhZ2UgbWF5IGJlIDAsIGluIHdoaWNo
IGNhc2Ugbm8gZnJlZWluZyB3aWxsIG9jY3VyLgogICovCi12b2lkIGdudHRhYl9lbmRfZm9yZWln
bl9hY2Nlc3MoZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9ubHksCit2b2lkIGdudHRhYl9lbmRf
Zm9yZWlnbl9hY2Nlc3MoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmLCBpbnQgcmVhZG9u
bHksCiAJCQkgICAgICAgdW5zaWduZWQgbG9uZyBwYWdlKTsKIAotaW50IGdudHRhYl9ncmFudF9m
b3JlaWduX3RyYW5zZmVyKGRvbWlkX3QgZG9taWQsIHVuc2lnbmVkIGxvbmcgcGZuKTsKK2ludCBn
bnR0YWJfZ3JhbnRfZm9yZWlnbl90cmFuc2Zlcih4ZW5ob3N0X3QgKnhoLCBkb21pZF90IGRvbWlk
LCB1bnNpZ25lZCBsb25nIHBmbik7CiAKLXVuc2lnbmVkIGxvbmcgZ250dGFiX2VuZF9mb3JlaWdu
X3RyYW5zZmVyX3JlZihncmFudF9yZWZfdCByZWYpOwotdW5zaWduZWQgbG9uZyBnbnR0YWJfZW5k
X2ZvcmVpZ25fdHJhbnNmZXIoZ3JhbnRfcmVmX3QgcmVmKTsKK3Vuc2lnbmVkIGxvbmcgZ250dGFi
X2VuZF9mb3JlaWduX3RyYW5zZmVyX3JlZih4ZW5ob3N0X3QgKnhoLCBncmFudF9yZWZfdCByZWYp
OwordW5zaWduZWQgbG9uZyBnbnR0YWJfZW5kX2ZvcmVpZ25fdHJhbnNmZXIoeGVuaG9zdF90ICp4
aCwgZ3JhbnRfcmVmX3QgcmVmKTsKIAotaW50IGdudHRhYl9xdWVyeV9mb3JlaWduX2FjY2Vzcyhn
cmFudF9yZWZfdCByZWYpOworaW50IGdudHRhYl9xdWVyeV9mb3JlaWduX2FjY2Vzcyh4ZW5ob3N0
X3QgKnhoLCBncmFudF9yZWZfdCByZWYpOwogCiAvKgogICogb3BlcmF0aW9ucyBvbiByZXNlcnZl
ZCBiYXRjaGVzIG9mIGdyYW50IHJlZmVyZW5jZXMKICAqLwotaW50IGdudHRhYl9hbGxvY19ncmFu
dF9yZWZlcmVuY2VzKHUxNiBjb3VudCwgZ3JhbnRfcmVmX3QgKnBwcml2YXRlX2hlYWQpOworaW50
IGdudHRhYl9hbGxvY19ncmFudF9yZWZlcmVuY2VzKHhlbmhvc3RfdCAqeGgsIHUxNiBjb3VudCwg
Z3JhbnRfcmVmX3QgKnBwcml2YXRlX2hlYWQpOwogCi12b2lkIGdudHRhYl9mcmVlX2dyYW50X3Jl
ZmVyZW5jZShncmFudF9yZWZfdCByZWYpOwordm9pZCBnbnR0YWJfZnJlZV9ncmFudF9yZWZlcmVu
Y2UoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmKTsKIAotdm9pZCBnbnR0YWJfZnJlZV9n
cmFudF9yZWZlcmVuY2VzKGdyYW50X3JlZl90IGhlYWQpOwordm9pZCBnbnR0YWJfZnJlZV9ncmFu
dF9yZWZlcmVuY2VzKHhlbmhvc3RfdCAqeGgsIGdyYW50X3JlZl90IGhlYWQpOwogCi1pbnQgZ250
dGFiX2VtcHR5X2dyYW50X3JlZmVyZW5jZXMoY29uc3QgZ3JhbnRfcmVmX3QgKnBwcml2YXRlX2hl
YWQpOworaW50IGdudHRhYl9lbXB0eV9ncmFudF9yZWZlcmVuY2VzKHhlbmhvc3RfdCAqeGgsIGNv
bnN0IGdyYW50X3JlZl90ICpwcHJpdmF0ZV9oZWFkKTsKIAotaW50IGdudHRhYl9jbGFpbV9ncmFu
dF9yZWZlcmVuY2UoZ3JhbnRfcmVmX3QgKnBwcml2YXRlX2hlYWQpOworaW50IGdudHRhYl9jbGFp
bV9ncmFudF9yZWZlcmVuY2UoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgKnBwcml2YXRlX2hl
YWQpOwogCi12b2lkIGdudHRhYl9yZWxlYXNlX2dyYW50X3JlZmVyZW5jZShncmFudF9yZWZfdCAq
cHJpdmF0ZV9oZWFkLAordm9pZCBnbnR0YWJfcmVsZWFzZV9ncmFudF9yZWZlcmVuY2UoeGVuaG9z
dF90ICp4aCwgZ3JhbnRfcmVmX3QgKnByaXZhdGVfaGVhZCwKIAkJCQkgICAgZ3JhbnRfcmVmX3Qg
cmVsZWFzZSk7CiAKLXZvaWQgZ250dGFiX3JlcXVlc3RfZnJlZV9jYWxsYmFjayhzdHJ1Y3QgZ250
dGFiX2ZyZWVfY2FsbGJhY2sgKmNhbGxiYWNrLAordm9pZCBnbnR0YWJfcmVxdWVzdF9mcmVlX2Nh
bGxiYWNrKHhlbmhvc3RfdCAqeGgsIHN0cnVjdCBnbnR0YWJfZnJlZV9jYWxsYmFjayAqY2FsbGJh
Y2ssCiAJCQkJICB2b2lkICgqZm4pKHZvaWQgKiksIHZvaWQgKmFyZywgdTE2IGNvdW50KTsKLXZv
aWQgZ250dGFiX2NhbmNlbF9mcmVlX2NhbGxiYWNrKHN0cnVjdCBnbnR0YWJfZnJlZV9jYWxsYmFj
ayAqY2FsbGJhY2spOwordm9pZCBnbnR0YWJfY2FuY2VsX2ZyZWVfY2FsbGJhY2soeGVuaG9zdF90
ICp4aCwgc3RydWN0IGdudHRhYl9mcmVlX2NhbGxiYWNrICpjYWxsYmFjayk7CiAKLXZvaWQgZ250
dGFiX2dyYW50X2ZvcmVpZ25fYWNjZXNzX3JlZihncmFudF9yZWZfdCByZWYsIGRvbWlkX3QgZG9t
aWQsCit2b2lkIGdudHRhYl9ncmFudF9mb3JlaWduX2FjY2Vzc19yZWYoeGVuaG9zdF90ICp4aCwg
Z3JhbnRfcmVmX3QgcmVmLCBkb21pZF90IGRvbWlkLAogCQkJCSAgICAgdW5zaWduZWQgbG9uZyBm
cmFtZSwgaW50IHJlYWRvbmx5KTsKIAogLyogR2l2ZSBhY2Nlc3MgdG8gdGhlIGZpcnN0IDRLIG9m
IHRoZSBwYWdlICovCiBzdGF0aWMgaW5saW5lIHZvaWQgZ250dGFiX3BhZ2VfZ3JhbnRfZm9yZWln
bl9hY2Nlc3NfcmVmX29uZSgKLQlncmFudF9yZWZfdCByZWYsIGRvbWlkX3QgZG9taWQsCisJeGVu
aG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QgcmVmLCBkb21pZF90IGRvbWlkLAogCXN0cnVjdCBwYWdl
ICpwYWdlLCBpbnQgcmVhZG9ubHkpCiB7Ci0JZ250dGFiX2dyYW50X2ZvcmVpZ25fYWNjZXNzX3Jl
ZihyZWYsIGRvbWlkLCB4ZW5fcGFnZV90b19nZm4ocGFnZSksCisJZ250dGFiX2dyYW50X2ZvcmVp
Z25fYWNjZXNzX3JlZih4aCwgcmVmLCBkb21pZCwgeGVuX3BhZ2VfdG9fZ2ZuKHBhZ2UpLAogCQkJ
CQlyZWFkb25seSk7CiB9CiAKLXZvaWQgZ250dGFiX2dyYW50X2ZvcmVpZ25fdHJhbnNmZXJfcmVm
KGdyYW50X3JlZl90LCBkb21pZF90IGRvbWlkLAordm9pZCBnbnR0YWJfZ3JhbnRfZm9yZWlnbl90
cmFuc2Zlcl9yZWYoeGVuaG9zdF90ICp4aCwgZ3JhbnRfcmVmX3QsIGRvbWlkX3QgZG9taWQsCiAJ
CQkJICAgICAgIHVuc2lnbmVkIGxvbmcgcGZuKTsKIAogc3RhdGljIGlubGluZSB2b2lkCkBAIC0x
NzQsMjkgKzE3NSwyOCBAQCBnbnR0YWJfc2V0X3VubWFwX29wKHN0cnVjdCBnbnR0YWJfdW5tYXBf
Z3JhbnRfcmVmICp1bm1hcCwgcGh5c19hZGRyX3QgYWRkciwKIAl1bm1hcC0+ZGV2X2J1c19hZGRy
ID0gMDsKIH0KIAotaW50IGFyY2hfZ250dGFiX2luaXQodW5zaWduZWQgbG9uZyBucl9zaGFyZWQs
IHVuc2lnbmVkIGxvbmcgbnJfc3RhdHVzKTsKLWludCBhcmNoX2dudHRhYl9tYXBfc2hhcmVkKHhl
bl9wZm5fdCAqZnJhbWVzLCB1bnNpZ25lZCBsb25nIG5yX2dmcmFtZXMsCitpbnQgYXJjaF9nbnR0
YWJfaW5pdCh4ZW5ob3N0X3QgKnhoLCB1bnNpZ25lZCBsb25nIG5yX3NoYXJlZCwgdW5zaWduZWQg
bG9uZyBucl9zdGF0dXMpOworaW50IGFyY2hfZ250dGFiX21hcF9zaGFyZWQoeGVuaG9zdF90ICp4
aCwgeGVuX3Bmbl90ICpmcmFtZXMsIHVuc2lnbmVkIGxvbmcgbnJfZ2ZyYW1lcywKIAkJCSAgIHVu
c2lnbmVkIGxvbmcgbWF4X25yX2dmcmFtZXMsCiAJCQkgICB2b2lkICoqX19zaGFyZWQpOwotaW50
IGFyY2hfZ250dGFiX21hcF9zdGF0dXModWludDY0X3QgKmZyYW1lcywgdW5zaWduZWQgbG9uZyBu
cl9nZnJhbWVzLAoraW50IGFyY2hfZ250dGFiX21hcF9zdGF0dXMoeGVuaG9zdF90ICp4aCwgdWlu
dDY0X3QgKmZyYW1lcywgdW5zaWduZWQgbG9uZyBucl9nZnJhbWVzLAogCQkJICAgdW5zaWduZWQg
bG9uZyBtYXhfbnJfZ2ZyYW1lcywKIAkJCSAgIGdyYW50X3N0YXR1c190ICoqX19zaGFyZWQpOwot
dm9pZCBhcmNoX2dudHRhYl91bm1hcCh2b2lkICpzaGFyZWQsIHVuc2lnbmVkIGxvbmcgbnJfZ2Zy
YW1lcyk7Cit2b2lkIGFyY2hfZ250dGFiX3VubWFwKHhlbmhvc3RfdCAqeGgsIHZvaWQgKnNoYXJl
ZCwgdW5zaWduZWQgbG9uZyBucl9nZnJhbWVzKTsKIAogc3RydWN0IGdyYW50X2ZyYW1lcyB7CiAJ
eGVuX3Bmbl90ICpwZm47CiAJdW5zaWduZWQgaW50IGNvdW50OwogCXZvaWQgKnZhZGRyOwogfTsK
LWV4dGVybiBzdHJ1Y3QgZ3JhbnRfZnJhbWVzIHhlbl9hdXRvX3hsYXRfZ3JhbnRfZnJhbWVzOwot
dW5zaWduZWQgaW50IGdudHRhYl9tYXhfZ3JhbnRfZnJhbWVzKHZvaWQpOwotaW50IGdudHRhYl9z
ZXR1cF9hdXRvX3hsYXRfZnJhbWVzKHBoeXNfYWRkcl90IGFkZHIpOwotdm9pZCBnbnR0YWJfZnJl
ZV9hdXRvX3hsYXRfZnJhbWVzKHZvaWQpOwordW5zaWduZWQgaW50IGdudHRhYl9tYXhfZ3JhbnRf
ZnJhbWVzKHhlbmhvc3RfdCAqeGgpOworaW50IGdudHRhYl9zZXR1cF9hdXRvX3hsYXRfZnJhbWVz
KHhlbmhvc3RfdCAqeGgsIHBoeXNfYWRkcl90IGFkZHIpOwordm9pZCBnbnR0YWJfZnJlZV9hdXRv
X3hsYXRfZnJhbWVzKHhlbmhvc3RfdCAqeGgpOwogCiAjZGVmaW5lIGdudHRhYl9tYXBfdmFkZHIo
bWFwKSAoKHZvaWQgKikobWFwLmhvc3RfdmlydF9hZGRyKSkKIAotaW50IGdudHRhYl9hbGxvY19w
YWdlcyhpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFnZXMpOwotdm9pZCBnbnR0YWJfZnJl
ZV9wYWdlcyhpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFnZXMpOworaW50IGdudHRhYl9h
bGxvY19wYWdlcyh4ZW5ob3N0X3QgKnhoLCBpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFn
ZXMpOwordm9pZCBnbnR0YWJfZnJlZV9wYWdlcyh4ZW5ob3N0X3QgKnhoLCBpbnQgbnJfcGFnZXMs
IHN0cnVjdCBwYWdlICoqcGFnZXMpOwogCiAjaWZkZWYgQ09ORklHX1hFTl9HUkFOVF9ETUFfQUxM
T0MKIHN0cnVjdCBnbnR0YWJfZG1hX2FsbG9jX2FyZ3MgewpAQCAtMjEyLDE3ICsyMTIsMTcgQEAg
c3RydWN0IGdudHRhYl9kbWFfYWxsb2NfYXJncyB7CiAJZG1hX2FkZHJfdCBkZXZfYnVzX2FkZHI7
CiB9OwogCi1pbnQgZ250dGFiX2RtYV9hbGxvY19wYWdlcyhzdHJ1Y3QgZ250dGFiX2RtYV9hbGxv
Y19hcmdzICphcmdzKTsKLWludCBnbnR0YWJfZG1hX2ZyZWVfcGFnZXMoc3RydWN0IGdudHRhYl9k
bWFfYWxsb2NfYXJncyAqYXJncyk7CitpbnQgZ250dGFiX2RtYV9hbGxvY19wYWdlcyh4ZW5ob3N0
X3QgKnhoLCBzdHJ1Y3QgZ250dGFiX2RtYV9hbGxvY19hcmdzICphcmdzKTsKK2ludCBnbnR0YWJf
ZG1hX2ZyZWVfcGFnZXMoeGVuaG9zdF90ICp4aCwgc3RydWN0IGdudHRhYl9kbWFfYWxsb2NfYXJn
cyAqYXJncyk7CiAjZW5kaWYKIAogaW50IGdudHRhYl9wYWdlc19zZXRfcHJpdmF0ZShpbnQgbnJf
cGFnZXMsIHN0cnVjdCBwYWdlICoqcGFnZXMpOwogdm9pZCBnbnR0YWJfcGFnZXNfY2xlYXJfcHJp
dmF0ZShpbnQgbnJfcGFnZXMsIHN0cnVjdCBwYWdlICoqcGFnZXMpOwogCi1pbnQgZ250dGFiX21h
cF9yZWZzKHN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqbWFwX29wcywKK2ludCBnbnR0YWJf
bWFwX3JlZnMoeGVuaG9zdF90ICp4aCwgc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVmICptYXBf
b3BzLAogCQkgICAgc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVmICprbWFwX29wcywKIAkJICAg
IHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVkIGludCBjb3VudCk7Ci1pbnQgZ250dGFiX3Vu
bWFwX3JlZnMoc3RydWN0IGdudHRhYl91bm1hcF9ncmFudF9yZWYgKnVubWFwX29wcywKK2ludCBn
bnR0YWJfdW5tYXBfcmVmcyh4ZW5ob3N0X3QgKnhoLCBzdHJ1Y3QgZ250dGFiX3VubWFwX2dyYW50
X3JlZiAqdW5tYXBfb3BzLAogCQkgICAgICBzdHJ1Y3QgZ250dGFiX3VubWFwX2dyYW50X3JlZiAq
a3VubWFwX29wcywKIAkJICAgICAgc3RydWN0IHBhZ2UgKipwYWdlcywgdW5zaWduZWQgaW50IGNv
dW50KTsKIHZvaWQgZ250dGFiX3VubWFwX3JlZnNfYXN5bmMoc3RydWN0IGdudGFiX3VubWFwX3F1
ZXVlX2RhdGEqIGl0ZW0pOwpAQCAtMjM4LDggKzIzOCw4IEBAIGludCBnbnR0YWJfdW5tYXBfcmVm
c19zeW5jKHN0cnVjdCBnbnRhYl91bm1hcF9xdWV1ZV9kYXRhICppdGVtKTsKICAqIFJldHVybiB2
YWx1ZSBpbiBlYWNoIGlhbmQgZXZlcnkgc3RhdHVzIGZpZWxkIG9mIHRoZSBiYXRjaCBndWFyYW50
ZWVkCiAgKiB0byBub3QgYmUgR05UU1RfZWFnYWluLgogICovCi12b2lkIGdudHRhYl9iYXRjaF9t
YXAoc3RydWN0IGdudHRhYl9tYXBfZ3JhbnRfcmVmICpiYXRjaCwgdW5zaWduZWQgY291bnQpOwot
dm9pZCBnbnR0YWJfYmF0Y2hfY29weShzdHJ1Y3QgZ250dGFiX2NvcHkgKmJhdGNoLCB1bnNpZ25l
ZCBjb3VudCk7Cit2b2lkIGdudHRhYl9iYXRjaF9tYXAoeGVuaG9zdF90ICp4aCwgc3RydWN0IGdu
dHRhYl9tYXBfZ3JhbnRfcmVmICpiYXRjaCwgdW5zaWduZWQgY291bnQpOwordm9pZCBnbnR0YWJf
YmF0Y2hfY29weSh4ZW5ob3N0X3QgKnhoLCBzdHJ1Y3QgZ250dGFiX2NvcHkgKmJhdGNoLCB1bnNp
Z25lZCBjb3VudCk7CiAKIAogc3RydWN0IHhlbl9wYWdlX2ZvcmVpZ24gewpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS94ZW4veGVuaG9zdC5oIGIvaW5jbHVkZS94ZW4veGVuaG9zdC5oCmluZGV4IDllMDg2
MjdhOWUzZS4uYWNlZTBjNzg3MmI2IDEwMDY0NAotLS0gYS9pbmNsdWRlL3hlbi94ZW5ob3N0LmgK
KysrIGIvaW5jbHVkZS94ZW4veGVuaG9zdC5oCkBAIC0xMjksNiArMTI5LDE3IEBAIHR5cGVkZWYg
c3RydWN0IHsKIAkJY29uc3Qgc3RydWN0IGV2dGNobl9vcHMgKmV2dGNobl9vcHM7CiAJCWludCAq
KmV2dGNobl90b19pcnE7CiAJfTsKKworCS8qIGdyYW50IHRhYmxlIHByaXZhdGUgc3RhdGUgKi8K
KwlzdHJ1Y3QgeworCQkvKiBwcml2YXRlIHRvIGRyaXZlcnMveGVuL2dyYW50LXRhYmxlLmMgKi8K
KwkJdm9pZCAqZ250dGFiX3ByaXZhdGU7CisKKwkJLyogeDg2L3hlbi9ncmFudC10YWJsZS5jICov
CisJCXZvaWQgKmdudHRhYl9zaGFyZWRfdm1fYXJlYTsKKwkJdm9pZCAqZ250dGFiX3N0YXR1c192
bV9hcmVhOworCQl2b2lkICphdXRvX3hsYXRfZ3JhbnRfZnJhbWVzOworCX07CiB9IHhlbmhvc3Rf
dDsKIAogdHlwZWRlZiBzdHJ1Y3QgeGVuaG9zdF9vcHMgewotLSAKMi4yMC4xCgoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxpbmcg
bGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9q
ZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

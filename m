Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id AC8B917AD55
	for <lists+xen-devel@lfdr.de>; Thu,  5 Mar 2020 18:33:35 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1j9uKp-0002ru-N0; Thu, 05 Mar 2020 17:30:59 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=5BTO=4W=amzn.com=prvs=326a7180f=pdurrant@srs-us1.protection.inumbo.net>)
 id 1j9uKn-0002rp-F7
 for xen-devel@lists.xenproject.org; Thu, 05 Mar 2020 17:30:57 +0000
X-Inumbo-ID: 11b9cd6a-5f07-11ea-a638-12813bfff9fa
Received: from smtp-fw-33001.amazon.com (unknown [207.171.190.10])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 11b9cd6a-5f07-11ea-a638-12813bfff9fa;
 Thu, 05 Mar 2020 17:30:56 +0000 (UTC)
IronPort-SDR: FwXSv67sIg3Hxc4Rdru6QJKoX2MI34GM9RGq3aeKB/cR3noq9OLEQU60NiTQWZmyoD3DJK+ekS
 F5PDXSgAWNHw==
X-IronPort-AV: E=Sophos;i="5.70,518,1574121600"; d="scan'208";a="30880409"
Received: from sea32-co-svc-lb4-vlan3.sea.corp.amazon.com (HELO
 email-inbound-relay-1e-62350142.us-east-1.amazon.com) ([10.47.23.38])
 by smtp-border-fw-out-33001.sea14.amazon.com with ESMTP;
 05 Mar 2020 17:30:53 +0000
Received: from EX13MTAUEA002.ant.amazon.com
 (iad55-ws-svc-p15-lb9-vlan3.iad.amazon.com [10.40.159.166])
 by email-inbound-relay-1e-62350142.us-east-1.amazon.com (Postfix) with ESMTPS
 id C8DD8A0449; Thu,  5 Mar 2020 17:30:47 +0000 (UTC)
Received: from EX13D32EUB004.ant.amazon.com (10.43.166.212) by
 EX13MTAUEA002.ant.amazon.com (10.43.61.77) with Microsoft SMTP Server (TLS)
 id 15.0.1236.3; Thu, 5 Mar 2020 17:30:47 +0000
Received: from EX13MTAUEA001.ant.amazon.com (10.43.61.82) by
 EX13D32EUB004.ant.amazon.com (10.43.166.212) with Microsoft SMTP Server (TLS)
 id 15.0.1367.3; Thu, 5 Mar 2020 17:30:46 +0000
Received: from u2f063a87eabd5f.cbg10.amazon.com (10.125.106.135) by
 mail-relay.amazon.com (10.43.61.243) with Microsoft SMTP Server id
 15.0.1367.3 via Frontend Transport; Thu, 5 Mar 2020 17:30:44 +0000
From: <pdurrant@amzn.com>
To: <xen-devel@lists.xenproject.org>
Date: Thu, 5 Mar 2020 17:30:40 +0000
Message-ID: <20200305173041.5141-2-pdurrant@amzn.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20200305173041.5141-1-pdurrant@amzn.com>
References: <20200305173041.5141-1-pdurrant@amzn.com>
MIME-Version: 1.0
Precedence: Bulk
Subject: [Xen-devel] [PATCH v6 1/2] docs/designs: Add a design document for
 non-cooperative live migration
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, Julien Grall <julien@xen.org>,
 Wei Liu <wl@xen.org>, Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>, Paul Durrant <pdurrant@amazon.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Jan Beulich <jbeulich@suse.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

RnJvbTogUGF1bCBEdXJyYW50IDxwZHVycmFudEBhbWF6b24uY29tPgoKSXQgaGFzIGJlY29tZSBh
cHBhcmVudCB0byBzb21lIGxhcmdlIGNsb3VkIHByb3ZpZGVycyB0aGF0IHRoZSBjdXJyZW50Cm1v
ZGVsIG9mIGNvb3BlcmF0aXZlIG1pZ3JhdGlvbiBvZiBndWVzdHMgdW5kZXIgWGVuIGlzIG5vdCB1
c2FibGUgYXMgaXQKcmVsaWVzIG9uIHNvZnR3YXJlIHJ1bm5pbmcgaW5zaWRlIHRoZSBndWVzdCwg
d2hpY2ggaXMgbGlrZWx5IGJleW9uZCB0aGUKcHJvdmlkZXIncyBjb250cm9sLgpUaGlzIHBhdGNo
IGludHJvZHVjZXMgYSBwcm9wb3NhbCBmb3Igbm9uLWNvb3BlcmF0aXZlIGxpdmUgbWlncmF0aW9u
LApkZXNpZ25lZCBub3QgdG8gcmVseSBvbiBhbnkgZ3Vlc3Qtc2lkZSBzb2Z0d2FyZS4KClNpZ25l
ZC1vZmYtYnk6IFBhdWwgRHVycmFudCA8cGR1cnJhbnRAYW1hem9uLmNvbT4KLS0tCkNjOiBBbmRy
ZXcgQ29vcGVyIDxhbmRyZXcuY29vcGVyM0BjaXRyaXguY29tPgpDYzogR2VvcmdlIER1bmxhcCA8
R2VvcmdlLkR1bmxhcEBldS5jaXRyaXguY29tPgpDYzogSWFuIEphY2tzb24gPGlhbi5qYWNrc29u
QGV1LmNpdHJpeC5jb20+CkNjOiBKYW4gQmV1bGljaCA8amJldWxpY2hAc3VzZS5jb20+CkNjOiBK
dWxpZW4gR3JhbGwgPGp1bGllbkB4ZW4ub3JnPgpDYzogS29ucmFkIFJ6ZXN6dXRlayBXaWxrIDxr
b25yYWQud2lsa0BvcmFjbGUuY29tPgpDYzogU3RlZmFubyBTdGFiZWxsaW5pIDxzc3RhYmVsbGlu
aUBrZXJuZWwub3JnPgpDYzogV2VpIExpdSA8d2xAeGVuLm9yZz4KCnY2OgogLSBBZGRyZXNzZWQg
Y29tbWVudHMgZnJvbSBKdWxpZW4KCnY1OgogLSBOb3RlIHRoYXQgUFYgZG9tYWluIGFyZSBub3Qg
anVzdCBleHBlY3RlZCB0byBjby1vcGVyYXRlLCB0aGV5IGFyZQogICByZXF1aXJlZCB0bwoKdjQ6
CiAtIEZpeCBpc3N1ZXMgcmFpc2VkIGJ5IFdlaQoKdjI6CiAtIFVzZSB0aGUgdGVybSAnbm9uLWNv
b3BlcmF0aXZlJyBpbnN0ZWFkIG9mICd0cmFuc3BhcmVudCcKIC0gUmVwbGFjZSAndHJ1c3QgaW4n
IHdpdGggJ3JlbGlhbmNlIG9uJyB3aGVuIHJlZmVycmluZyB0byBndWVzdC1zaWRlCiAgIHNvZnR3
YXJlCi0tLQogZG9jcy9kZXNpZ25zL25vbi1jb29wZXJhdGl2ZS1taWdyYXRpb24ubWQgfCAyODAg
KysrKysrKysrKysrKysrKysrKysrKwogMSBmaWxlIGNoYW5nZWQsIDI4MCBpbnNlcnRpb25zKCsp
CiBjcmVhdGUgbW9kZSAxMDA2NDQgZG9jcy9kZXNpZ25zL25vbi1jb29wZXJhdGl2ZS1taWdyYXRp
b24ubWQKCmRpZmYgLS1naXQgYS9kb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlv
bi5tZCBiL2RvY3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLmUyODE2MTU2MmYKLS0tIC9kZXYvbnVsbAor
KysgYi9kb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZApAQCAtMCwwICsx
LDI4MCBAQAorIyBOb24tQ29vcGVyYXRpdmUgTWlncmF0aW9uIG9mIEd1ZXN0cyBvbiBYZW4KKwor
IyMgQmFja2dyb3VuZAorCitUaGUgbm9ybWFsIG1vZGVsIG9mIG1pZ3JhdGlvbiBpbiBYZW4gaXMg
ZHJpdmVuIGJ5IHRoZSBndWVzdCBiZWNhdXNlIGl0IHdhcworb3JpZ2luYWxseSBpbXBsZW1lbnRl
ZCBmb3IgUFYgZ3Vlc3RzLCB3aGVyZSB0aGUgZ3Vlc3QgbXVzdCBiZSBhd2FyZSBpdCBpcworcnVu
bmluZyB1bmRlciBYZW4gYW5kIGlzIGhlbmNlIGV4cGVjdGVkIHRvIGNvLW9wZXJhdGUuIFRoaXMg
bW9kZWwgZGF0ZXMgZnJvbQorYW4gZXJhIHdoZW4gaXQgd2FzIGFzc3VtZWQgdGhhdCB0aGUgaG9z
dCBhZG1pbmlzdHJhdG9yIGhhZCBjb250cm9sIG9mIGF0CitsZWFzdCB0aGUgcHJpdmlsZWdlZCBz
b2Z0d2FyZSBydW5uaW5nIGluIHRoZSBndWVzdCAoaS5lLiB0aGUgZ3Vlc3Qga2VybmVsKQord2hp
Y2ggbWF5IHN0aWxsIGJlIHRydWUgaW4gYW4gZW50ZXJwcmlzZSBkZXBsb3ltZW50IGJ1dCBpcyBu
b3QgZ2VuZXJhbGx5Cit0cnVlIGluIGEgY2xvdWQgZW52aXJvbm1lbnQuIFRoZSBhaW0gb2YgdGhp
cyBkZXNpZ24gaXMgdG8gcHJvdmlkZSBhIG1vZGVsCit3aGljaCBpcyBwdXJlbHkgaG9zdCBkcml2
ZW4sIHJlcXVpcmluZyBubyBjby1vcGVyYXRpb24gZnJvbSB0aGUgc29mdHdhcmUKK3J1bm5pbmcg
aW4gdGhlIGd1ZXN0LCBhbmQgaXMgdGh1cyBzdWl0YWJsZSBmb3IgY2xvdWQgc2NlbmFyaW9zLgor
CitQViBndWVzdHMgYXJlIG91dCBvZiBzY29wZSBmb3IgdGhpcyBwcm9qZWN0IGJlY2F1c2UsIGFz
IGlzIG91dGxpbmVkIGFib3ZlLAordGhleSBoYXZlIGEgc3ltYmlvdGljIHJlbGF0aW9uc2hpcCB3
aXRoIHRoZSBoeXBlcnZpc29yIGFuZCB0aGVyZWZvcmUgYQorY2VydGFpbiBsZXZlbCBvZiBjby1v
cGVyYXRpb24gaXMgcmVxdWlyZWQuCisKK0hWTSBndWVzdHMgY2FuIGFscmVhZHkgYmUgbWlncmF0
ZWQgb24gWGVuIHdpdGhvdXQgZ3Vlc3QgY28tb3BlcmF0aW9uIGJ1dAorb25seSBpZiB0aGV5IGRv
buKAmXQgaGF2ZSBQViBkcml2ZXJzIGluc3RhbGxlZFsxXSBvciBhcmUgbm90IGluIHBvd2VyIHN0
YXRlCitTMC4gVGhlIHJlYXNvbiBmb3Igbm90IGV4cGVjdGluZyBjby1vcGVyYXRpb24gaWYgdGhl
IGd1ZXN0IGlzIGFueSBzb3J0IG9mCitzdXNwZW5kZWQgc3RhdGUgaXMgb2J2aW91cywgYnV0IHRo
ZSByZWFzb24gY28tb3BlcmF0aW9uIGlzIGV4cGVjdGVkIGlmIFBWCitkcml2ZXJzIGFyZSBpbnN0
YWxsZWQgaXMgZHVlIHRvIHRoZSBuYXR1cmUgb2YgUFYgcHJvdG9jb2xzLgorCisjIyBYZW5zdG9y
ZSBOb2RlcyBhbmQgRG9tYWluIElECisKK1RoZSBQViBkcml2ZXIgbW9kZWwgY29uc2lzdHMgb2Yg
YSAqZnJvbnRlbmQqIGFuZCBhICpiYWNrZW5kKi4gVGhlIGZyb250ZW5kCitydW5zIGluc2lkZSB0
aGUgZ3Vlc3QgZG9tYWluIGFuZCB0aGUgYmFja2VuZCBydW5zIGluc2lkZSBhICpzZXJ2aWNlIGRv
bWFpbioKK3doaWNoIG1heSBvciBtYXkgbm90IGJlIGRvbWFpbiAwLiBUaGUgZnJvbnRlbmQgYW5k
IGJhY2tlbmQgdHlwaWNhbGx5IHBhc3MKK2RhdGEgdmlhIG1lbW9yeSBwYWdlcyB3aGljaCBhcmUg
c2hhcmVkIGJldHdlZW4gdGhlIHR3byBkb21haW5zLCBidXQgdGhpcworY2hhbm5lbCBvZiBjb21t
dW5pY2F0aW9uIGlzIGdlbmVyYWxseSBlc3RhYmxpc2hlZCB1c2luZyB4ZW5zdG9yZSAodGhlIHN0
b3JlCitwcm90b2NvbCBpdHNlbGYgYmVpbmcgYW4gZXhjZXB0aW9uIHRvIHRoaXMgZm9yIG9idmlv
dXMgY2hpY2tlbi1hbmQtZWdnCityZWFzb25zKS4KKworVHlwaWNhbCBwcm90b2NvbCBlc3RhYmxp
c2htZW50IGlzIGJhc2VkIG9uIHVzZSBvZiB0d28gc2VwYXJhdGUgeGVuc3RvcmUKKyphcmVhcyou
IElmIHdlIGNvbnNpZGVyIFBWIGRyaXZlcnMgZm9yIHRoZSAqbmV0aWYqIHByb3RvY29sIChpLmUu
IGNsYXNzIHZpZikKK2FuZCBhc3N1bWUgdGhlIGd1ZXN0IGhhcyBkb21pZCBYLCB0aGUgc2Vydmlj
ZSBkb21haW4gaGFzIGRvbWlkIFksIGFuZCB0aGUKK3ZpZiBoYXMgaW5kZXggWiB0aGVuIHRoZSBm
cm9udGVuZCBhcmVhIHdpbGwgcmVzaWRlIHVuZGVyIHRoZSBwYXJlbnQgbm9kZToKKworYC9sb2Nh
bC9kb21haW4vWS9kZXZpY2UvdmlmL1pgCisKK0FsbCBiYWNrZW5kcywgYnkgY29udmVudGlvbiwg
dHlwaWNhbGx5IHJlc2lkZSB1bmRlciBwYXJlbnQgbm9kZToKKworYC9sb2NhbC9kb21haW4vWC9i
YWNrZW5kYAorCithbmQgdGhlIG5vcm1hbCBiYWNrZW5kIGFyZWEgZm9yIHZpZiBaIHdvdWxkIGJl
OgorCitgL2xvY2FsL2RvbWFpbi9YL2JhY2tlbmQvdmlmL1kvWmAKKworYnV0IHRoaXMgc2hvdWxk
IG5vdCBiZSBhc3N1bWVkLgorCitUaGUgdG9vbHN0YWNrIHdpbGwgcGxhY2UgdHdvIG5vZGVzIGlu
IHRoZSBmcm9udGVuZCBhcmVhIHRvIGV4cGxpY2l0bHkgbG9jYXRlCit0aGUgYmFja2VuZDoKKwor
ICAgICogYGJhY2tlbmRgOiB0aGUgZnVsbHkgcXVhbGlmaWVkIHhlbnN0b3JlIHBhdGggb2YgdGhl
IGJhY2tlbmQgYXJlYQorICAgICogYGJhY2tlbmQtaWRgOiB0aGUgZG9taWQgb2YgdGhlIHNlcnZp
Y2UgZG9tYWluCisKK2FuZCBzaW1pbGFybHkgdHdvIG5vZGVzIGluIHRoZSBiYWNrZW5kIGFyZWEg
dG8gbG9jYXRlIHRoZSBmcm9udGVuZCBhcmVhOgorCisgICAgKiBgZnJvbnRlbmRgOiB0aGUgZnVs
bHkgcXVhbGlmaWVkIHhlbnN0b3JlIHBhdGggb2YgdGhlIGZyb250ZW5kIGFyZWEKKyAgICAqIGBm
cm9udGVuZC1pZGA6IHRoZSBkb21pZCBvZiB0aGUgZ3Vlc3QgZG9tYWluCisKKworVGhlIGd1ZXN0
IGRvbWFpbiBvbmx5IGhhcyB3cml0ZSBwZXJtaXNzaW9uIHRvIHRoZSBmcm9udGVuZCBhcmVhIGFu
ZAorc2ltaWxhcmx5IHRoZSBzZXJ2aWNlIGRvbWFpbiBvbmx5IGhhcyB3cml0ZSBwZXJtaXNzaW9u
IHRvIHRoZSBiYWNrZW5kIGFyZWEsCitidXQgYm90aCBlbmRzIGhhdmUgcmVhZCBwZXJtaXNzaW9u
IHRvIGJvdGggYXJlYXMuCisKK1VuZGVyIGJvdGggZnJvbnRlbmQgYW5kIGJhY2tlbmQgYXJlYXMg
aXMgYSBub2RlIGNhbGxlZCAqc3RhdGUqLiBUaGlzIGlzIGtleQordG8gcHJvdG9jb2wgZXN0YWJs
aXNobWVudC4gVXBvbiBQViBkZXZpY2UgY3JlYXRpb24gdGhlIHRvb2xzdGFjayB3aWxsIHNldAor
dGhlIHZhbHVlIG9mIGJvdGggc3RhdGUgbm9kZXMgdG8gMSAoWGVuYnVzU3RhdGVJbml0aWFsaXNp
bmdbMl0pLiBUaGlzCitzaG91bGQgY2F1c2UgZW51bWVyYXRpb24gb2YgYXBwcm9wcmlhdGUgZGV2
aWNlcyBpbiBib3RoIHRoZSBndWVzdCBhbmQKK3NlcnZpY2UgZG9tYWlucy4gVGhlIGJhY2tlbmQg
ZGV2aWNlLCBvbmNlIGl0IGhhcyB3cml0dGVuIGFueSBuZWNlc3NhcnkKK3Byb3RvY29sIHNwZWNp
ZmljIGluZm9ybWF0aW9uIGludG8gdGhlIHhlbnN0b3JlIGJhY2tlbmQgYXJlYSAodG8gYmUgcmVh
ZAorYnkgdGhlIGZyb250ZW5kIGRyaXZlcikgd2lsbCB1cGRhdGUgdGhlIGJhY2tlbmQgc3RhdGUg
bm9kZSB0byAyCisoWGVuYnVzU3RhdGVJbml0V2FpdCkuIEZyb20gdGhpcyBwb2ludCBvbiBQViBw
cm90b2NvbHMgZGlmZmVyIHNsaWdodGx5OyB0aGUKK2ZvbGxvd2luZyBpbGx1c3RyYXRpb24gaXMg
dHJ1ZSBvZiB0aGUgbmV0aWYgcHJvdG9jb2wuCisKK1Vwb24gc2VlaW5nIGEgYmFja2VuZCBzdGF0
ZSB2YWx1ZSBvZiAyLCB0aGUgZnJvbnRlbmQgZHJpdmVyIHdpbGwgdGhlbiByZWFkCit0aGUgcHJv
dG9jb2wgc3BlY2lmaWMgaW5mb3JtYXRpb24sIHdyaXRlIGRldGFpbHMgb2YgZ3JhbnQgcmVmZXJl
bmNlcyAoZm9yCitzaGFyZWQgcGFnZXMpIGFuZCBldmVudCBjaGFubmVsIHBvcnRzIChmb3Igc2ln
bmFsbGluZykgdGhhdCBpdCBoYXMgY3JlYXRlZCwKK2FuZCBzZXQgdGhlIHN0YXRlIG5vZGUgaW4g
dGhlIGZyb250ZW5kIGFyZWEgdG8gNCAoWGVuYnVzU3RhdGVDb25uZWN0ZWQpLgorVXBvbiBzZWUg
dGhpcyBmcm9udGVuZCBzdGF0ZSwgdGhlIGJhY2tlbmQgZHJpdmVyIHdpbGwgdGhlbiByZWFkIHRo
ZSBncmFudAorcmVmZXJlbmNlcyAobWFwcGluZyB0aGUgc2hhcmVkIHBhZ2VzKSBhbmQgZXZlbnQg
Y2hhbm5lbCBwb3J0cyAob3BlbmluZyBpdHMKK2VuZCBvZiB0aGVtKSBhbmQgc2V0IHRoZSBzdGF0
ZSBub2RlIGluIHRoZSBiYWNrZW5kIGFyZWEgdG8gNC4gUHJvdG9jb2wKK2VzdGFibGlzaG1lbnQg
aXMgbm93IGNvbXBsZXRlIGFuZCB0aGUgZnJvbnRlbmQgYW5kIGJhY2tlbmQgc3RhcnQgdG8gcGFz
cworZGF0YS4KKworQmVjYXVzZSB0aGUgZG9taWQgb2YgYm90aCBlbmRzIG9mIGEgUFYgcHJvdG9j
b2wgZm9ybXMgYSBrZXkgcGFydCBvZgorbmVnb3RpYXRpbmcgdGhlIGRhdGEgcGxhbmUgZm9yIHRo
YXQgcHJvdG9jb2wgKGJlY2F1c2UgaXQgaXMgZW5jb2RlZCBpbnRvCitib3RoIHhlbnN0b3JlIG5v
ZGVzIGFuZCBub2RlIHBhdGhzKSwgYW5kIGJlY2F1c2UgZ3Vlc3TigJlzIG93biBkb21pZCBhbmQg
dGhlCitkb21pZCBvZiB0aGUgc2VydmljZSBkb21haW4gYXJlIHZpc2libGUgdG8gdGhlIGd1ZXN0
IGluIHhlbnN0b3JlIChhbmQgaGVuY2UKK2F5IGNhY2hlZCBpbnRlcm5hbGx5KSwgYW5kIG5laXRo
ZXIgYXJlIG5lY2Vzc2FyaWx5IHByZXNlcnZlZCBkdXJpbmcKK21pZ3JhdGlvbiwgaXQgaXMgaGVu
Y2UgbmVjZXNzYXJ5IHRvIGhhdmUgdGhlIGNvLW9wZXJhdGlvbiBvZiB0aGUgZnJvbnRlbmQKK2lu
IHJlLW5lZ290aWF0aW5nIHRoZSBwcm90b2NvbCB1c2luZyB0aGUgbmV3IGRvbWlkIGFmdGVyIG1p
Z3JhdGlvbi4KKworTW9yZW92ZXIgdGhlIGJhY2tlbmQtaWQgdmFsdWUgd2lsbCBiZSB1c2VkIGJ5
IHRoZSBmcm9udGVuZCBkcml2ZXIgaW4KK3NldHRpbmcgdXAgZ3JhbnQgdGFibGUgZW50cmllcyBh
bmQgZXZlbnQgY2hhbm5lbHMgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUKK3NlcnZpY2UgZG9tYWlu
LCBzbyB0aGUgY28tb3BlcmF0aW9uIG9mIHRoZSBndWVzdCBpcyByZXF1aXJlZCB0bworcmUtZXN0
YWJsaXNoIHRoZXNlIGluIHRoZSBuZXcgaG9zdCBlbnZpcm9ubWVudCBhZnRlciBtaWdyYXRpb24u
CisKK1RodXMgaWYgd2UgYXJlIHRvIGNoYW5nZSB0aGUgbW9kZWwgYW5kIHN1cHBvcnQgbWlncmF0
aW9uIG9mIGEgZ3Vlc3Qgd2l0aCBQVgorZHJpdmVycywgd2l0aG91dCB0aGUgY28tb3BlcmF0aW9u
IG9mIHRoZSBmcm9udGVuZCBkcml2ZXIgY29kZSwgdGhlIHBhdGhzIGFuZAordmFsdWVzIGluIGJv
dGggdGhlIGZyb250ZW5kIGFuZCBiYWNrZW5kIHhlbnN0b3JlIGFyZWFzIG11c3QgcmVtYWluIHVu
Y2hhbmdlZAorYW5kIHZhbGlkIGluIHRoZSBuZXcgaG9zdCBlbnZpcm9ubWVudCwgYW5kIHRoZSBn
cmFudCB0YWJsZSBlbnRyaWVzIGFuZCBldmVudAorY2hhbm5lbHMgbXVzdCBiZSBwcmVzZXJ2ZWQg
KGFuZCByZW1haW4gb3BlcmF0aW9uYWwgb25jZSBndWVzdCBleGVjdXRpb24gaXMKK3Jlc3VtZWQp
LgorCitCZWNhdXNlIHRoZSBzZXJ2aWNlIGRvbWFpbuKAmXMgZG9taWQgaXMgdXNlZCBkaXJlY3Rs
eSBieSB0aGUgZ3Vlc3QgaW4gc2V0dGluZwordXAgZ3JhbnQgZW50cmllcyBhbmQgZXZlbnQgY2hh
bm5lbHMsIHRoZSBiYWNrZW5kIGRyaXZlcnMgaW4gdGhlIG5ldyBob3N0CitlbnZpcm9ubWVudCBt
dXN0IGJlIHByb3ZpZGVkIGJ5IHNlcnZpY2UgZG9tYWluIHdpdGggdGhlIHNhbWUgZG9taWQuIEFs
c28sCitiZWNhdXNlIHRoZSBndWVzdCBjYW4gc2FtcGxlIGl0cyBvd24gZG9taWQgZnJvbSB0aGUg
ZnJvbnRlbmQgYXJlYSBhbmQgdXNlCitpdCBpbiBoeXBlcmNhbGxzIChlLmcuIEhWTU9QX3NldF9w
YXJhbSkgcmF0aGVyIHRoYW4gRE9NSURfU0VMRiwgdGhlIGd1ZXN0Citkb21pZCBtdXN0IGFsc28g
YmUgcHJlc2VydmVkIHRvIG1haW50YWluIHRoZSBBQkkuCisKK0Z1cnRoZXJtb3JlLCBpdCB3aWxs
IG5lY2Vzc2FyeSB0byBtb2RpZnkgYmFja2VuZCBkcml2ZXJzIHRvIHJlLWVzdGFibGlzaAorY29t
bXVuaWNhdGlvbiB3aXRoIGZyb250ZW5kIGRyaXZlcnMgd2l0aG91dCBwZXJ0dXJiaW5nIHRoZSBj
b250ZW50IG9mIHRoZQorYmFja2VuZCBhcmVhIG9yIHJlcXVpcmluZyBhbnkgY2hhbmdlcyB0byB0
aGUgdmFsdWVzIG9mIHRoZSB4ZW5zdG9yZSBzdGF0ZQorbm9kZXMuCisKKyMjIE90aGVyIFBhcmEt
VmlydHVhbCBTdGF0ZQorCisjIyMgU2hhcmVkIFJpbmdzCisKK0JlY2F1c2UgdGhlIGNvbnNvbGUg
YW5kIHN0b3JlIHByb3RvY29sIHNoYXJlZCBwYWdlcyBhcmUgYWN0dWFsbHkgcGFydCBvZgordGhl
IGd1ZXN0IG1lbW9yeSBpbWFnZSAoaW4gYW4gRTgyMCByZXNlcnZlZCByZWdpb24ganVzdCBiZWxv
dyA0RyBpbiB4ODYKK1ZNcykgdGhlbiB0aGUgY29udGVudCB3aWxsIGdldCBtaWdyYXRlZCBhcyBw
YXJ0IG9mIHRoZSBndWVzdCBtZW1vcnkgaW1hZ2UuCitIZW5jZSBubyBhZGRpdGlvbmFsIGNvZGUg
aXMgcmVxdWlyZSB0byBwcmV2ZW50IGFueSBndWVzdCB2aXNpYmxlIGNoYW5nZSBpbgordGhlIGNv
bnRlbnQuCisKKyMjIyBTaGFyZWQgSW5mbworCitUaGVyZSBpcyBhbHJlYWR5IGEgcmVjb3JkIGRl
ZmluZWQgaW4gKmxpYnhlbmN0cmwgRG9tYWluIEltYWdlIEZvcm1hdCogWzNdCitjYWxsZWQgYFNI
QVJFRF9JTkZPYCB3aGljaCBzaW1wbHkgY29udGFpbnMgYSBjb21wbGV0ZSBjb3B5IG9mIHRoZSBk
b21haW7igJlzCitzaGFyZWQgaW5mbyBwYWdlLiBJdCBpcyBub3QgY3VycmVudGx5IGluY3VkZWQg
aW4gYW4gSFZNICh0eXBlIGAweDAwMDJgKQorbWlncmF0aW9uIHN0cmVhbS4gSXQgbWF5IGJlIGZl
YXNpYmxlIHRvIGluY2x1ZGUgaXQgYXMgYW4gb3B0aW9uYWwgcmVjb3JkCitidXQgaXQgaXMgbm90
IGNsZWFyIHRoYXQgdGhlIGNvbnRlbnQgb2YgdGhlIHNoYXJlZCBpbmZvIHBhZ2UgZXZlciBuZWVk
cwordG8gYmUgcHJlc2VydmVkIGZvciBhbiBIVk0gZ3Vlc3QuCisKK0ZvciBhIFBWIGd1ZXN0IHRo
ZSBgYXJjaF9zaGFyZWRfaW5mb2Agc3ViLXN0cnVjdHVyZSBjb250YWlucyBpbXBvcnRhbnQKK2lu
Zm9ybWF0aW9uIGFib3V0IHRoZSBndWVzdOKAmXMgUDJNLCBidXQgdGhpcyBpbmZvcm1hdGlvbiBp
cyBub3QgcmVsZXZhbnQgZm9yCithbiBIVk0gZ3Vlc3Qgd2hlcmUgdGhlIFAyTSBpcyBub3QgZGly
ZWN0bHkgbWFuaXB1bGF0ZWQgdmlhIHRoZSBndWVzdC4gVGhlCitvdGhlciBzdGF0ZSBjb250YWlu
ZWQgaW4gdGhlIGBzaGFyZWRfaW5mb2Agc3RydWN0dXJlIHJlbGF0ZXMgdGhlIGRvbWFpbgord2Fs
bC1jbG9jayAodGhlIHN0YXRlIG9mIHdoaWNoIHNob3VsZCBhbHJlYWR5IGJlIHRyYW5zZmVycmVk
IGJ5IHRoZSBgUlRDYAorSFZNIGNvbnRleHQgaW5mb3JtYXRpb24gd2hpY2ggY29udGFpbmVkIGlu
IHRoZSBgSFZNX0NPTlRFWFRgIHNhdmUgcmVjb3JkKQorYW5kIHNvbWUgZXZlbnQgY2hhbm5lbCBz
dGF0ZSAocGFydGljdWxhcmx5IGlmIHVzaW5nIHRoZSAqMmwqIHByb3RvY29sKS4KK0V2ZW50IGNo
YW5uZWwgc3RhdGUgd2lsbCBuZWVkIHRvIGJlIGZ1bGx5IHRyYW5zZmVycmVkIGlmIHdlIGFyZSBu
b3QgZ29pbmcKK3RvIHJlcXVpcmUgdGhlIGd1ZXN0IGNvLW9wZXJhdGlvbiB0byByZS1vcGVuIHRo
ZSBjaGFubmVscyBhbmQgc28gaXQgc2hvdWxkCitiZSBwb3NzaWJsZSB0byByZS1idWlsZCBhIHNo
YXJlZCBpbmZvIHBhZ2UgZm9yIGFuIEhWTSBndWVzdCBmcm9tIHN1Y2ggb3RoZXIKK3N0YXRlLgor
CitOb3RlIHRoYXQgdGhlIHNoYXJlZCBpbmZvIHBhZ2UgYWxzbyBjb250YWlucyBhbiBhcnJheSBv
ZgorYFhFTl9MRUdBQ1lfTUFYX1ZDUFVTYCAoMzIpIGB2Y3B1X2luZm9gIHN0cnVjdHVyZXMuIEEg
ZG9tYWluIG1heSBub21pbmF0ZQorYSBkaWZmZXJlbnQgZ3Vlc3QgcGh5c2ljYWwgYWRkcmVzcyB0
byB1c2UgZm9yIHRoZSB2Y3B1IGluZm8uIEZpeCB4ODYKK2RvbWFpbnMgdGhpcyBpcyBtYW5kYXRv
cnkgaWYgYSBkb21haW4gd2FudHMgdG8gdXNlIG1vcmUgdGhhbiAzMiB2Q1BVcworYW5kIG9wdGlv
bmFsIG90aGVyd2lzZS4gVGhpcyBtYXBwaW5nIGlzIG5vdCBjdXJyZW50bHkgdHJhbnNmZXJyZWQg
aW4gdGhlCittaWdyYXRpb24gc3RhdGUgc28gdGhpcyB3aWxsIGVpdGhlciBuZWVkIHRvIGJlIGFk
ZGVkIGludG8gYW4gZXhpc3Rpbmcgc2F2ZQorcmVjb3JkLCBvciBhbiBhZGRpdGlvbmFsIHR5cGUg
b2Ygc2F2ZSByZWNvcmQgd2lsbCBiZSBuZWVkZWQuCisKKyMjIyBYZW5zdG9yZSBXYXRjaGVzCisK
K0FzIG1lbnRpb25lZCBhYm92ZSwgbm8gZG9tYWluIFhlbnN0b3JlIHN0YXRlIGlzIGN1cnJlbnRs
eSB0cmFuc2ZlcnJlZCBpbgordGhlIG1pZ3JhdGlvbiBzdHJlYW0uIFRoZXJlIGlzIGEgcmVjb3Jk
IGRlZmluZWQgaW4gKmxpYnhlbmxpZ2h0IERvbWFpbgorSW1hZ2UgRm9ybWF0KiBbNF0gY2FsbGVk
IGBFTVVMQVRPUl9YRU5TVE9SRV9EQVRBYCBmb3IgdHJhbnNmZXJyaW5nIFhlbnN0b3JlCitub2Rl
cyByZWxhdGluZyB0byBlbXVsYXRvcnMgYnV0IG5vIHJlY29yZCB0eXBlIGlzIGRlZmluZWQgZm9y
IG5vZGVzCityZWxhdGluZyB0byB0aGUgZG9tYWluIGl0c2VsZiwgbm9yIGZvciByZWdpc3RlcmVk
ICp3YXRjaGVzKi4gQSBYZW5TdG9yZQord2F0Y2ggaXMgYSBtZWNoYW5pc20gdXNlZCBieSBQViBm
cm9udGVuZCBhbmQgYmFja2VuZCBkcml2ZXJzIHRvIHJlcXVlc3QgYQorbm90aWZpY2F0aW9uIGlm
IHRoZSB2YWx1ZSBvZiBhIHBhcnRpY3VsYXIgbm9kZSAoZS5nLiB0aGUgb3RoZXIgZW5k4oCZcyBz
dGF0ZQorbm9kZSkgY2hhbmdlcywgc28gaXQgaXMgaW1wb3J0YW50IHRoYXQgd2F0Y2hlcyBjb250
aW51ZSB0byBmdW5jdGlvbiBhZnRlciBhCittaWdyYXRpb24uIE9uZSBvciBtb3JlIG5ldyBzYXZl
IHJlY29yZHMgd2lsbCB0aGVyZWZvcmUgYmUgcmVxdWlyZWQgdG8KK3RyYW5zZmVyIFhlbnN0b3Jl
IHN0YXRlLiBJdCB3aWxsIGFsc28gYmUgbmVjZXNzYXJ5IHRvIGV4dGVuZCB0aGUgKnN0b3JlKgor
cHJvdG9jb2xbNV0gd2l0aCBtZWNoYW5pc21zIHRvIGFsbG93IHRoZSB0b29sc3RhY2sgdG8gYWNx
dWlyZSB0aGUgbGlzdCBvZgord2F0Y2hlcyB0aGF0IHRoZSBndWVzdCBoYXMgcmVnaXN0ZXJlZCBh
bmQgZm9yIHRoZSB0b29sc3RhY2sgdG8gcmVnaXN0ZXIgYQord2F0Y2ggb24gYmVoYWxmIG9mIGEg
ZG9tYWluLgorCisjIyMgRXZlbnQgY2hhbm5lbHMKKworRXZlbnQgY2hhbm5lbHMgYXJlIGVzc2Vu
dGlhbGx5IHRoZSBwYXJhLXZpcnR1YWwgZXF1aXZhbGVudCBvZiBpbnRlcnJ1cHRzLgorVGhleSBh
cmUgYW4gaW1wb3J0YW50IHBhcnQgb2YgcG9zdCBQViBwcm90b2NvbHMuIE5vcm1hbGx5IGEgZnJv
bnRlbmQgZHJpdmVyCitjcmVhdGVzIGFuICppbnRlci1kb21haW4qIGV2ZW50IGNoYW5uZWwgYmV0
d2VlbiBpdHMgb3duIGRvbWFpbiBhbmQgdGhlCitkb21haW4gcnVubmluZyB0aGUgYmFja2VuZCwg
d2hpY2ggaXQgZGlzY292ZXJzIHVzaW5nIHRoZSBgYmFja2VuZC1pZGAgbm9kZQoraW4gWGVuc3Rv
cmUgKHNlZSBhYm92ZSksIGJ5IG1ha2luZyBhIGBFVlRDSE5PUF9hbGxvY191bmJvdW5kYCBoeXBl
cmNhbGwuCitUaGlzIGh5cGVyY2FsbCBhbGxvY2F0ZXMgYW4gZXZlbnQgY2hhbm5lbCBvYmplY3Qg
aW4gdGhlIGh5cGVydmlzb3IgYW5kCithc3NpZ25zIGEgKmxvY2FsIHBvcnQqIG51bWJlciB3aGlj
aCBpcyB0aGVuIHdyaXR0ZW4gaW50byB0aGUgZnJvbnRlbmQgYXJlYQoraW4gWGVuc3RvcmUuIFRo
ZSBiYWNrZW5kIGRyaXZlciB0aGVuIHJlYWRzIHRoaXMgcG9ydCBudW1iZXIgYW5kICpiaW5kcyog
dG8KK3RoZSBldmVudCBjaGFubmVsIGJ5IHNwZWNpZnlpbmcgaXQsIGFuZCB0aGUgdmFsdWUgb2Yg
YGZyb250ZW5kLWlkYCwgYXMKKypyZW1vdGUgZG9tYWluKiBhbmQgKnJlbW90ZSBwb3J0KiAocmVz
cGVjdGl2ZWx5KSB0byBhCitgRVZUQ0hOT1BfYmluZF9pbnRlcmRvbWFpbmAgaHlwZXJjYWxsLiBP
bmNlIGNvbm5lY3Rpb24gaXMgZXN0YWJsaXNoZWQgaW4KK3RoaXMgZmFzaGlvbiBmcm9udGVuZCBh
bmQgYmFja2VuZCBkcml2ZXJzIGNhbiB1c2UgdGhlIGV2ZW50IGNoYW5uZWwgYXMgYQorKm1haWxi
b3gqIHRvIG5vdGlmeSBlYWNoIG90aGVyIHdoZW4gYSBzaGFyZWQgcmluZyBoYXMgYmVlbiB1cGRh
dGVkIHdpdGggbmV3CityZXF1ZXN0cyBvciByZXNwb25zZSBzdHJ1Y3R1cmVzLgorCitDdXJyZW50
bHkgbm8gZXZlbnQgY2hhbm5lbCBzdGF0ZSBpcyBwcmVzZXJ2ZWQgb24gbWlncmF0aW9uLCByZXF1
aXJpbmcKK2Zyb250ZW5kIGFuZCBiYWNrZW5kIGRyaXZlcnMgdG8gY3JlYXRlIGFuZCBiaW5kIGEg
Y29tcGxldGUgbmV3IHNldCBvZiBldmVudAorY2hhbm5lbHMgaW4gb3JkZXIgdG8gcmUtZXN0YWJs
aXNoIGEgcHJvdG9jb2wgY29ubmVjdGlvbi4gSGVuY2UsIG9uZSBvciBtb3JlCituZXcgc2F2ZSBy
ZWNvcmRzIHdpbGwgYmUgcmVxdWlyZWQgdG8gdHJhbnNmZXIgZXZlbnQgY2hhbm5lbCBzdGF0ZSBp
biBvcmRlcgordG8gYXZvaWQgdGhlIG5lZWQgZm9yIGV4cGxpY2l0IGFjdGlvbiBieSBmcm9udGVu
ZCBkcml2ZXJzIHJ1bm5pbmcgaW4gdGhlCitndWVzdC4gTm90ZSB0aGF0IHRoZSBsb2NhbCBwb3J0
IG51bWJlcnMgbmVlZCB0byBwcmVzZXJ2ZWQgaW4gdGhpcyBzdGF0ZSBhcwordGhleSBhcmUgdGhl
IG9ubHkgY29udGV4dCB0aGUgZ3Vlc3QgaGFzIHRvIHJlZmVyIHRvIHRoZSBoeXBlcnZpc29yIGV2
ZW50CitjaGFubmVsIG9iamVjdHMuCisKK05vdGUgYWxzbyB0aGF0IHRoZSBQViAqc3RvcmUqIChY
ZW5zdG9yZSBhY2Nlc3MpIGFuZCAqY29uc29sZSogcHJvdG9jb2xzCithbHNvIHJlbHkgb24gZXZl
bnQgY2hhbm5lbHMgd2hpY2ggYXJlIHNldCB1cCBieSB0aGUgdG9vbHN0YWNrLiBOb3JtYWxseSwK
K2Vhcmx5IGluIG1pZ3JhdGlvbiwgdGhlIHRvb2xzdGFjayBydW5uaW5nIG9uIHRoZSByZW1vdGUg
aG9zdCB3b3VsZCBzZXQgdXAgYQorbmV3IHBhaXIgb2YgZXZlbnQgY2hhbm5lbHMgZm9yIHRoZXNl
IHByb3RvY29scyBpbiB0aGUgZGVzdGluYXRpb24gZG9tYWluLgorVGhlc2UgbWF5IG5vdCBiZSBh
c3NpZ25lZCB0aGUgc2FtZSBsb2NhbCBwb3J0IG51bWJlcnMgYXMgdGhlIHByb3RvY29scworcnVu
bmluZyBpbiB0aGUgc291cmNlIGRvbWFpbi4gRm9yIG5vbi1jb29wZXJhdGl2ZSBtaWdyYXRpb24g
dGhlc2UgY2hhbm5lbHMKK211c3QgZWl0aGVyIGJlIGNyZWF0ZWQgd2l0aCBmaXhlZCBwb3J0IG51
bWJlcnMsIG9yIHRoZWlyIGNyZWF0aW9uIG11c3QgYmUKK2F2b2lkZWQgYW5kIGluc3RlYWQgYmUg
aW5jbHVkZWQgaW4gdGhlIGdlbmVyYWwgZXZlbnQgY2hhbm5lbCBzdGF0ZQorcmVjb3JkKHMpLgor
CisjIyMgR3JhbnQgdGFibGUKKworVGhlIGdyYW50IHRhYmxlIGlzIGVzc2VudGlhbGx5IHRoZSBw
YXJhLXZpcnR1YWwgZXF1aXZhbGVudCBvZiBhbiBJT01NVS4gRm9yCitleGFtcGxlLCB0aGUgc2hh
cmVkIHJpbmdzIG9mIGEgUFYgcHJvdG9jb2wgYXJlICpncmFudGVkKiBieSBhIGZyb250ZW5kCitk
cml2ZXIgdG8gdGhlIGJhY2tlbmQgZHJpdmVyIGJ5IGFsbG9jYXRpbmcgKmdyYW50IGVudHJpZXMq
IGluIHRoZSBndWVzdOKAmXMKK3RhYmxlLCBmaWxsaW5nIGluIGRldGFpbHMgb2YgdGhlIG1lbW9y
eSBwYWdlcyBhbmQgdGhlbiB3cml0aW5nIHRoZSAqZ3JhbnQKK3JlZmVyZW5jZXMqICh0aGUgaW5k
ZXggdmFsdWVzIG9mIHRoZSBncmFudCBlbnRyaWVzKSBpbnRvIFhlbnN0b3JlLiBUaGUKK2dyYW50
IHJlZmVyZW5jZXMgb2YgdGhlIHByb3RvY29sIGJ1ZmZlcnMgdGhlbXNlbHZlcyBhcmUgdHlwaWNh
bGx5IHdyaXR0ZW4KK2RpcmVjdGx5IGludG8gdGhlIHJlcXVlc3Qgc3RydWN0dXJlcyBwYXNzZWQg
dmlhIGEgc2hhcmVkIHJpbmcuCisKK1RoZSBndWVzdCBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdp
bmcgaXRzIG93biBncmFudCB0YWJsZS4gTm8gaHlwZXJjYWxsIGlzCityZXF1aXJlZCB0byBncmFu
dCBhIG1lbW9yeSBwYWdlIHRvIGFub3RoZXIgZG9tYWluLiBJdCBpcyBzdWZmaWNpZW50IHRvIGZp
bmQKK2FuIHVudXNlZCBncmFudCBlbnRyeSBhbmQgc2V0IGJpdHMgaW4gdGhlIGVudHJ5IHRvIGdp
dmUgcmVhZCBhbmQvb3Igd3JpdGUKK2FjY2VzcyB0byBhIHJlbW90ZSBkb21haW4gYWxzbyBzcGVj
aWZpZWQgaW4gdGhlIGVudHJ5IGFsb25nIHdpdGggdGhlIHBhZ2UKK2ZyYW1lIG51bWJlci4gVGh1
cyB0aGUgbGF5b3V0IGFuZCBjb250ZW50IG9mIHRoZSBncmFudCB0YWJsZSBsb2dpY2FsbHkKK2Zv
cm1zIHBhcnQgb2YgdGhlIGd1ZXN0IHN0YXRlLgorCitDdXJyZW50bHkgbm8gZ3JhbnQgdGFibGUg
c3RhdGUgaXMgbWlncmF0ZWQsIHJlcXVpcmluZyBhIGd1ZXN0IHRvIHNlcGFyYXRlbHkKK21haW50
YWluIGFueSBzdGF0ZSB0aGF0IGl0IHdpc2hlcyB0byBwZXJzaXN0IGVsc2V3aGVyZSBpbiBpdHMg
bWVtb3J5IGltYWdlCithbmQgdGhlbiByZXN0b3JlIGl0IGFmdGVyIG1pZ3JhdGlvbi4gVGh1cyB0
byBhdm9pZCB0aGUgbmVlZCBmb3Igc3VjaAorZXhwbGljaXQgYWN0aW9uIGJ5IHRoZSBndWVzdCwg
b25lIG9yIG1vcmUgbmV3IHNhdmUgcmVjb3JkcyB3aWxsIGJlIHJlcXVpcmVkCit0byBtaWdyYXRl
IHRoZSBjb250ZW50cyBvZiB0aGUgZ3JhbnQgdGFibGUuCisKKyMgT3V0bGluZSBQcm9wb3NhbAor
CisqIFBWIGJhY2tlbmQgZHJpdmVycyB3aWxsIGJlIG1vZGlmaWVkIHRvIHVuaWxhdGVyYWxseSBy
ZS1lc3RhYmxpc2gKK2Nvbm5lY3Rpb24gdG8gYSBmcm9udGVuZCBpZiB0aGUgYmFja2VuZCBzdGF0
ZSBub2RlIGlzIHJlc3RvcmVkIHdpdGggdmFsdWUgNAorKFhlbmJ1c1N0YXRlQ29ubmVjdGVkKVs2
XS4KKworKiBUaGUgdG9vbHN0YWNrIGNob29zZSBhIHJhbmRvbWl6ZWQgZG9taWQgZm9yIGluaXRp
YWwgY3JlYXRpb24gb3IgZGVmYXVsdAorbWlncmF0aW9uLCBidXQgcHJlc2VydmUgdGhlIHNvdXJj
ZSBkb21pZCBub24tY29vcGVyYXRpdmUgbWlncmF0aW9uLgorTm9uLUNvb3BlcmF0aXZlIG1pZ3Jh
dGlvbiB3aWxsIGhhdmUgdG8gYmUgZGVuaWVkIGlmIHRoZSBkb21pZCBpcwordW5hdmFpbGFibGUg
b24gdGhlIHRhcmdldCBob3N0LCBidXQgcmFuZG9taXphdGlvbiBvZiBkb21pZCBvbiBjcmVhdGlv
bgorc2hvdWxkIGhvcGVmdWxseSBtaW5pbWl6ZSB0aGUgbGlrZWxpaG9vZCBvZiB0aGlzLiBOb24t
Q29vcGVyYXRpdmUgbWlncmF0aW9uCit0byBsb2NhbGhvc3Qgd2lsbCBjbGVhcmx5IG5vdCBiZSBw
b3NzaWJsZS4KKworKiBgeGVuc3RvcmVkYCBzaG91bGQgYmUgbW9kaWZpZWQgdG8gaW1wbGVtZW50
IHRoZSBuZXcgbWVjaGFuaXNtcyBuZWVkZWQuCitTZWUgKk90aGVyIFBhcmEtVmlydHVhbCBTdGF0
ZSogYWJvdmUuIEEgZnVydGhlciBkZXNpZ24gZG9jdW1lbnQgd2lsbAorcHJvcG9zZSBhZGRpdGlv
bmFsIHByb3RvY29sIG1lc3NhZ2VzLgorCisqIFdpdGhpbiB0aGUgbWlncmF0aW9uIHN0cmVhbSBl
eHRyYSBzYXZlIHJlY29yZHMgd2lsbCBiZSBkZWZpbmVkIGFzCityZXF1aXJlZC4gU2VlICpPdGhl
ciBQYXJhLVZpcnR1YWwgU3RhdGUqIGFib3ZlLiBBIGZ1cnRoZXIgZGVzaWduIGRvY3VtZW50Cit3
aWxsIHByb3Bvc2UgbW9kaWZpY2F0aW9ucyB0byB0aGUgbGlieGVubGlnaHQgYW5kIGxpYnhlbmN0
cmwgRG9tYWluIEltYWdlCitGb3JtYXRzLgorCisqIEFuIG9wdGlvbiBzaG91bGQgYmUgYWRkZWQg
dG8gdGhlIHRvb2xzdGFjayB0byBpbml0aWF0ZSBhIG5vbi1jb29wZXJhdGl2ZQorbWlncmF0aW9u
LCBpbnN0ZWFkIG9mIHRoZSAoZGVmYXVsdCkgcG90ZW50aWFsbHkgY28tb3BlcmF0aXZlIG1pZ3Jh
dGlvbi4KK0Vzc2VudGlhbGx5IHRoaXMgc2hvdWxkIHNraXAgdGhlIGNoZWNrIHRvIHNlZSBpZiBQ
ViBkcml2ZXJzIGFuZCBtaWdyYXRlIGFzCitpZiB0aGVyZSBhcmUgbm9uZSBwcmVzZW50LCBidXQg
YWxzbyBlbmFibGluZyB0aGUgZXh0cmEgc2F2ZSByZWNvcmRzLiBOb3RlCit0aGF0IGF0IGxlYXN0
IHNvbWUgb2YgdGhlIGV4dHJhIHJlY29yZHMgc2hvdWxkIG9ubHkgZm9ybSBwYXJ0IG9mIGEKK25v
bi1jb29wZXJhdGl2ZSBtaWdyYXRpb24gc3RyZWFtLiBGb3IgZXhhbXBsZSwgbWlncmF0aW5nIGV2
ZW50IGNoYW5uZWwKK3N0YXRlIHdvdWxkIGJlIGNvdW50ZXIgcHJvZHVjdGl2ZSBpbiBhIG5vcm1h
bCBtaWdyYXRpb24gYXMgdGhpcyB3aWxsCitlc3NlbnRpYWxseSBsZWFrIGV2ZW50IGNoYW5uZWwg
b2JqZWN0cyBhdCB0aGUgcmVjZWl2aW5nIGVuZC4gT3RoZXJzLCBzdWNoCithcyBncmFudCB0YWJs
ZSBzdGF0ZSwgY291bGQgcG90ZW50aWFsbHkgaGFybWxlc3NseSBmb3JtIHBhcnQgb2YgYSBub3Jt
YWwKK21pZ3JhdGlvbiBzdHJlYW0uCisKKyogKiAqCitbMV0gUFYgZHJpdmVycyBhcmUgZGVlbWVk
IHRvIGJlIGluc3RhbGxlZCBpZiB0aGUgSFZNIHBhcmFtZXRlcgorKkhWTV9QQVJBTV9DQUxMQkFD
S19JUlEqIGhhcyBiZWVuIHNldCB0byBhIG5vbi16ZXJvIHZhbHVlLgorCitbMl0gU2VlIGh0dHBz
Oi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPXhlbi9pbmNsdWRl
L3B1YmxpYy9pby94ZW5idXMuaAorCitbM10gU2VlIGh0dHBzOi8veGVuYml0cy54ZW4ub3JnL2dp
dHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPWRvY3Mvc3BlY3MvbGlieGMtbWlncmF0aW9uLXN0cmVh
bS5wYW5kb2MKKworWzRdIFNlZSBodHRwczovL3hlbmJpdHMueGVuLm9yZy9naXR3ZWIvP3A9eGVu
LmdpdDthPWJsb2I7Zj1kb2NzL3NwZWNzL2xpYnhsLW1pZ3JhdGlvbi1zdHJlYW0ucGFuZG9jCisK
K1s1XSBTZWUgaHR0cHM6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViLz9wPXhlbi5naXQ7YT1ibG9i
O2Y9ZG9jcy9taXNjL3hlbnN0b3JlLnR4dAorCitbNl0gYHhlbi1ibGtiYWNrYCBhbmQgYHhlbi1u
ZXRiYWNrYCBoYXZlIGFscmVhZHkgYmVlbiBtb2RpZmllZCBpbiBMaW51eCB0byBkbwordGhpcy4K
LS0gCjIuMjAuMQoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3Jn
Cmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

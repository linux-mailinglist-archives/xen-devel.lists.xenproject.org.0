Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 05474189A58
	for <lists+xen-devel@lfdr.de>; Wed, 18 Mar 2020 12:14:46 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jEWc5-0005lr-Co; Wed, 18 Mar 2020 11:11:53 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=xbLb=5D=mail.xenproject.org=aliasfile-bounces@srs-us1.protection.inumbo.net>)
 id 1jEWc4-0005lV-47
 for xen-devel@lists.xenproject.org; Wed, 18 Mar 2020 11:11:52 +0000
X-Inumbo-ID: 4410d98c-6909-11ea-bec1-bc764e2007e4
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 4410d98c-6909-11ea-bec1-bc764e2007e4;
 Wed, 18 Mar 2020 11:11:50 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=xen.org;
 s=20200302mail; h=Content-Transfer-Encoding:Content-Type:MIME-Version:
 References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender:Reply-To:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=8TrXva9nPqHXUDyBGJWrDLoTDbZfbmpx8tYuN7XtQbg=; b=ZLs+nibjR7HKDwWjLUMTCIhWrj
 Oa2qRNIepmavWH24z9KYCuMT4jc3pEo4bYsUFR6TKiY3T6bdVPJ0A8iwOYNPF56zHfnTEyI8JgsUV
 O6s5nWIV/90fl3MRYjW172uDpAAvXi+itk2SgYiijjyIbGz1Vj5fL+lk93gZrZQqEXWY=;
Received: from xenbits.xenproject.org ([104.239.192.120])
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <aliasfile-bounces@mail.xenproject.org>)
 id 1jEWc2-00060w-3o; Wed, 18 Mar 2020 11:11:50 +0000
Received: from 54-240-197-232.amazon.com ([54.240.197.232]
 helo=u2f063a87eabd5f.cbg10.amazon.com)
 by xenbits.xenproject.org with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.89)
 (envelope-from <paul@xen.org>)
 id 1jEWc1-0000Ig-N1; Wed, 18 Mar 2020 11:11:50 +0000
From: Paul Durrant <paul@xen.org>
To: xen-devel@lists.xenproject.org
Date: Wed, 18 Mar 2020 11:11:43 +0000
Message-Id: <20200318111144.12894-2-paul@xen.org>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20200318111144.12894-1-paul@xen.org>
References: <20200318111144.12894-1-paul@xen.org>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v7 1/2] docs/designs: Add a design document for
 non-cooperative live migration
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, Julien Grall <julien@xen.org>,
 Wei Liu <wl@xen.org>, Paul Durrant <paul@xen.org>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>, Paul Durrant <pdurrant@amazon.com>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Jan Beulich <jbeulich@suse.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

RnJvbTogUGF1bCBEdXJyYW50IDxwZHVycmFudEBhbWF6b24uY29tPgoKSXQgaGFzIGJlY29tZSBh
cHBhcmVudCB0byBzb21lIGxhcmdlIGNsb3VkIHByb3ZpZGVycyB0aGF0IHRoZSBjdXJyZW50Cm1v
ZGVsIG9mIGNvb3BlcmF0aXZlIG1pZ3JhdGlvbiBvZiBndWVzdHMgdW5kZXIgWGVuIGlzIG5vdCB1
c2FibGUgYXMgaXQKcmVsaWVzIG9uIHNvZnR3YXJlIHJ1bm5pbmcgaW5zaWRlIHRoZSBndWVzdCwg
d2hpY2ggaXMgbGlrZWx5IGJleW9uZCB0aGUKcHJvdmlkZXIncyBjb250cm9sLgpUaGlzIHBhdGNo
IGludHJvZHVjZXMgYSBwcm9wb3NhbCBmb3Igbm9uLWNvb3BlcmF0aXZlIGxpdmUgbWlncmF0aW9u
LApkZXNpZ25lZCBub3QgdG8gcmVseSBvbiBhbnkgZ3Vlc3Qtc2lkZSBzb2Z0d2FyZS4KClNpZ25l
ZC1vZmYtYnk6IFBhdWwgRHVycmFudCA8cGF1bEB4ZW4ub3JnPgotLS0KQ2M6IEFuZHJldyBDb29w
ZXIgPGFuZHJldy5jb29wZXIzQGNpdHJpeC5jb20+CkNjOiBHZW9yZ2UgRHVubGFwIDxHZW9yZ2Uu
RHVubGFwQGV1LmNpdHJpeC5jb20+CkNjOiBJYW4gSmFja3NvbiA8aWFuLmphY2tzb25AZXUuY2l0
cml4LmNvbT4KQ2M6IEphbiBCZXVsaWNoIDxqYmV1bGljaEBzdXNlLmNvbT4KQ2M6IEp1bGllbiBH
cmFsbCA8anVsaWVuQHhlbi5vcmc+CkNjOiBLb25yYWQgUnplc3p1dGVrIFdpbGsgPGtvbnJhZC53
aWxrQG9yYWNsZS5jb20+CkNjOiBTdGVmYW5vIFN0YWJlbGxpbmkgPHNzdGFiZWxsaW5pQGtlcm5l
bC5vcmc+CkNjOiBXZWkgTGl1IDx3bEB4ZW4ub3JnPgoKdjY6CiAtIEFkZHJlc3NlZCBjb21tZW50
cyBmcm9tIEp1bGllbgoKdjU6CiAtIE5vdGUgdGhhdCBQViBkb21haW4gYXJlIG5vdCBqdXN0IGV4
cGVjdGVkIHRvIGNvLW9wZXJhdGUsIHRoZXkgYXJlCiAgIHJlcXVpcmVkIHRvCgp2NDoKIC0gRml4
IGlzc3VlcyByYWlzZWQgYnkgV2VpCgp2MjoKIC0gVXNlIHRoZSB0ZXJtICdub24tY29vcGVyYXRp
dmUnIGluc3RlYWQgb2YgJ3RyYW5zcGFyZW50JwogLSBSZXBsYWNlICd0cnVzdCBpbicgd2l0aCAn
cmVsaWFuY2Ugb24nIHdoZW4gcmVmZXJyaW5nIHRvIGd1ZXN0LXNpZGUKICAgc29mdHdhcmUKLS0t
CiBkb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZCB8IDI4MCArKysrKysr
KysrKysrKysrKysrKysrCiAxIGZpbGUgY2hhbmdlZCwgMjgwIGluc2VydGlvbnMoKykKIGNyZWF0
ZSBtb2RlIDEwMDY0NCBkb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZAoK
ZGlmZiAtLWdpdCBhL2RvY3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kIGIv
ZG9jcy9kZXNpZ25zL25vbi1jb29wZXJhdGl2ZS1taWdyYXRpb24ubWQKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uZTI4MTYxNTYyZgotLS0gL2Rldi9udWxsCisrKyBiL2Rv
Y3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCkBAIC0wLDAgKzEsMjgwIEBA
CisjIE5vbi1Db29wZXJhdGl2ZSBNaWdyYXRpb24gb2YgR3Vlc3RzIG9uIFhlbgorCisjIyBCYWNr
Z3JvdW5kCisKK1RoZSBub3JtYWwgbW9kZWwgb2YgbWlncmF0aW9uIGluIFhlbiBpcyBkcml2ZW4g
YnkgdGhlIGd1ZXN0IGJlY2F1c2UgaXQgd2FzCitvcmlnaW5hbGx5IGltcGxlbWVudGVkIGZvciBQ
ViBndWVzdHMsIHdoZXJlIHRoZSBndWVzdCBtdXN0IGJlIGF3YXJlIGl0IGlzCitydW5uaW5nIHVu
ZGVyIFhlbiBhbmQgaXMgaGVuY2UgZXhwZWN0ZWQgdG8gY28tb3BlcmF0ZS4gVGhpcyBtb2RlbCBk
YXRlcyBmcm9tCithbiBlcmEgd2hlbiBpdCB3YXMgYXNzdW1lZCB0aGF0IHRoZSBob3N0IGFkbWlu
aXN0cmF0b3IgaGFkIGNvbnRyb2wgb2YgYXQKK2xlYXN0IHRoZSBwcml2aWxlZ2VkIHNvZnR3YXJl
IHJ1bm5pbmcgaW4gdGhlIGd1ZXN0IChpLmUuIHRoZSBndWVzdCBrZXJuZWwpCit3aGljaCBtYXkg
c3RpbGwgYmUgdHJ1ZSBpbiBhbiBlbnRlcnByaXNlIGRlcGxveW1lbnQgYnV0IGlzIG5vdCBnZW5l
cmFsbHkKK3RydWUgaW4gYSBjbG91ZCBlbnZpcm9ubWVudC4gVGhlIGFpbSBvZiB0aGlzIGRlc2ln
biBpcyB0byBwcm92aWRlIGEgbW9kZWwKK3doaWNoIGlzIHB1cmVseSBob3N0IGRyaXZlbiwgcmVx
dWlyaW5nIG5vIGNvLW9wZXJhdGlvbiBmcm9tIHRoZSBzb2Z0d2FyZQorcnVubmluZyBpbiB0aGUg
Z3Vlc3QsIGFuZCBpcyB0aHVzIHN1aXRhYmxlIGZvciBjbG91ZCBzY2VuYXJpb3MuCisKK1BWIGd1
ZXN0cyBhcmUgb3V0IG9mIHNjb3BlIGZvciB0aGlzIHByb2plY3QgYmVjYXVzZSwgYXMgaXMgb3V0
bGluZWQgYWJvdmUsCit0aGV5IGhhdmUgYSBzeW1iaW90aWMgcmVsYXRpb25zaGlwIHdpdGggdGhl
IGh5cGVydmlzb3IgYW5kIHRoZXJlZm9yZSBhCitjZXJ0YWluIGxldmVsIG9mIGNvLW9wZXJhdGlv
biBpcyByZXF1aXJlZC4KKworSFZNIGd1ZXN0cyBjYW4gYWxyZWFkeSBiZSBtaWdyYXRlZCBvbiBY
ZW4gd2l0aG91dCBndWVzdCBjby1vcGVyYXRpb24gYnV0Citvbmx5IGlmIHRoZXkgZG9u4oCZdCBo
YXZlIFBWIGRyaXZlcnMgaW5zdGFsbGVkWzFdIG9yIGFyZSBub3QgaW4gcG93ZXIgc3RhdGUKK1Mw
LiBUaGUgcmVhc29uIGZvciBub3QgZXhwZWN0aW5nIGNvLW9wZXJhdGlvbiBpZiB0aGUgZ3Vlc3Qg
aXMgYW55IHNvcnQgb2YKK3N1c3BlbmRlZCBzdGF0ZSBpcyBvYnZpb3VzLCBidXQgdGhlIHJlYXNv
biBjby1vcGVyYXRpb24gaXMgZXhwZWN0ZWQgaWYgUFYKK2RyaXZlcnMgYXJlIGluc3RhbGxlZCBp
cyBkdWUgdG8gdGhlIG5hdHVyZSBvZiBQViBwcm90b2NvbHMuCisKKyMjIFhlbnN0b3JlIE5vZGVz
IGFuZCBEb21haW4gSUQKKworVGhlIFBWIGRyaXZlciBtb2RlbCBjb25zaXN0cyBvZiBhICpmcm9u
dGVuZCogYW5kIGEgKmJhY2tlbmQqLiBUaGUgZnJvbnRlbmQKK3J1bnMgaW5zaWRlIHRoZSBndWVz
dCBkb21haW4gYW5kIHRoZSBiYWNrZW5kIHJ1bnMgaW5zaWRlIGEgKnNlcnZpY2UgZG9tYWluKgor
d2hpY2ggbWF5IG9yIG1heSBub3QgYmUgZG9tYWluIDAuIFRoZSBmcm9udGVuZCBhbmQgYmFja2Vu
ZCB0eXBpY2FsbHkgcGFzcworZGF0YSB2aWEgbWVtb3J5IHBhZ2VzIHdoaWNoIGFyZSBzaGFyZWQg
YmV0d2VlbiB0aGUgdHdvIGRvbWFpbnMsIGJ1dCB0aGlzCitjaGFubmVsIG9mIGNvbW11bmljYXRp
b24gaXMgZ2VuZXJhbGx5IGVzdGFibGlzaGVkIHVzaW5nIHhlbnN0b3JlICh0aGUgc3RvcmUKK3By
b3RvY29sIGl0c2VsZiBiZWluZyBhbiBleGNlcHRpb24gdG8gdGhpcyBmb3Igb2J2aW91cyBjaGlj
a2VuLWFuZC1lZ2cKK3JlYXNvbnMpLgorCitUeXBpY2FsIHByb3RvY29sIGVzdGFibGlzaG1lbnQg
aXMgYmFzZWQgb24gdXNlIG9mIHR3byBzZXBhcmF0ZSB4ZW5zdG9yZQorKmFyZWFzKi4gSWYgd2Ug
Y29uc2lkZXIgUFYgZHJpdmVycyBmb3IgdGhlICpuZXRpZiogcHJvdG9jb2wgKGkuZS4gY2xhc3Mg
dmlmKQorYW5kIGFzc3VtZSB0aGUgZ3Vlc3QgaGFzIGRvbWlkIFgsIHRoZSBzZXJ2aWNlIGRvbWFp
biBoYXMgZG9taWQgWSwgYW5kIHRoZQordmlmIGhhcyBpbmRleCBaIHRoZW4gdGhlIGZyb250ZW5k
IGFyZWEgd2lsbCByZXNpZGUgdW5kZXIgdGhlIHBhcmVudCBub2RlOgorCitgL2xvY2FsL2RvbWFp
bi9ZL2RldmljZS92aWYvWmAKKworQWxsIGJhY2tlbmRzLCBieSBjb252ZW50aW9uLCB0eXBpY2Fs
bHkgcmVzaWRlIHVuZGVyIHBhcmVudCBub2RlOgorCitgL2xvY2FsL2RvbWFpbi9YL2JhY2tlbmRg
CisKK2FuZCB0aGUgbm9ybWFsIGJhY2tlbmQgYXJlYSBmb3IgdmlmIFogd291bGQgYmU6CisKK2Av
bG9jYWwvZG9tYWluL1gvYmFja2VuZC92aWYvWS9aYAorCitidXQgdGhpcyBzaG91bGQgbm90IGJl
IGFzc3VtZWQuCisKK1RoZSB0b29sc3RhY2sgd2lsbCBwbGFjZSB0d28gbm9kZXMgaW4gdGhlIGZy
b250ZW5kIGFyZWEgdG8gZXhwbGljaXRseSBsb2NhdGUKK3RoZSBiYWNrZW5kOgorCisgICAgKiBg
YmFja2VuZGA6IHRoZSBmdWxseSBxdWFsaWZpZWQgeGVuc3RvcmUgcGF0aCBvZiB0aGUgYmFja2Vu
ZCBhcmVhCisgICAgKiBgYmFja2VuZC1pZGA6IHRoZSBkb21pZCBvZiB0aGUgc2VydmljZSBkb21h
aW4KKworYW5kIHNpbWlsYXJseSB0d28gbm9kZXMgaW4gdGhlIGJhY2tlbmQgYXJlYSB0byBsb2Nh
dGUgdGhlIGZyb250ZW5kIGFyZWE6CisKKyAgICAqIGBmcm9udGVuZGA6IHRoZSBmdWxseSBxdWFs
aWZpZWQgeGVuc3RvcmUgcGF0aCBvZiB0aGUgZnJvbnRlbmQgYXJlYQorICAgICogYGZyb250ZW5k
LWlkYDogdGhlIGRvbWlkIG9mIHRoZSBndWVzdCBkb21haW4KKworCitUaGUgZ3Vlc3QgZG9tYWlu
IG9ubHkgaGFzIHdyaXRlIHBlcm1pc3Npb24gdG8gdGhlIGZyb250ZW5kIGFyZWEgYW5kCitzaW1p
bGFybHkgdGhlIHNlcnZpY2UgZG9tYWluIG9ubHkgaGFzIHdyaXRlIHBlcm1pc3Npb24gdG8gdGhl
IGJhY2tlbmQgYXJlYSwKK2J1dCBib3RoIGVuZHMgaGF2ZSByZWFkIHBlcm1pc3Npb24gdG8gYm90
aCBhcmVhcy4KKworVW5kZXIgYm90aCBmcm9udGVuZCBhbmQgYmFja2VuZCBhcmVhcyBpcyBhIG5v
ZGUgY2FsbGVkICpzdGF0ZSouIFRoaXMgaXMga2V5Cit0byBwcm90b2NvbCBlc3RhYmxpc2htZW50
LiBVcG9uIFBWIGRldmljZSBjcmVhdGlvbiB0aGUgdG9vbHN0YWNrIHdpbGwgc2V0Cit0aGUgdmFs
dWUgb2YgYm90aCBzdGF0ZSBub2RlcyB0byAxIChYZW5idXNTdGF0ZUluaXRpYWxpc2luZ1syXSku
IFRoaXMKK3Nob3VsZCBjYXVzZSBlbnVtZXJhdGlvbiBvZiBhcHByb3ByaWF0ZSBkZXZpY2VzIGlu
IGJvdGggdGhlIGd1ZXN0IGFuZAorc2VydmljZSBkb21haW5zLiBUaGUgYmFja2VuZCBkZXZpY2Us
IG9uY2UgaXQgaGFzIHdyaXR0ZW4gYW55IG5lY2Vzc2FyeQorcHJvdG9jb2wgc3BlY2lmaWMgaW5m
b3JtYXRpb24gaW50byB0aGUgeGVuc3RvcmUgYmFja2VuZCBhcmVhICh0byBiZSByZWFkCitieSB0
aGUgZnJvbnRlbmQgZHJpdmVyKSB3aWxsIHVwZGF0ZSB0aGUgYmFja2VuZCBzdGF0ZSBub2RlIHRv
IDIKKyhYZW5idXNTdGF0ZUluaXRXYWl0KS4gRnJvbSB0aGlzIHBvaW50IG9uIFBWIHByb3RvY29s
cyBkaWZmZXIgc2xpZ2h0bHk7IHRoZQorZm9sbG93aW5nIGlsbHVzdHJhdGlvbiBpcyB0cnVlIG9m
IHRoZSBuZXRpZiBwcm90b2NvbC4KKworVXBvbiBzZWVpbmcgYSBiYWNrZW5kIHN0YXRlIHZhbHVl
IG9mIDIsIHRoZSBmcm9udGVuZCBkcml2ZXIgd2lsbCB0aGVuIHJlYWQKK3RoZSBwcm90b2NvbCBz
cGVjaWZpYyBpbmZvcm1hdGlvbiwgd3JpdGUgZGV0YWlscyBvZiBncmFudCByZWZlcmVuY2VzIChm
b3IKK3NoYXJlZCBwYWdlcykgYW5kIGV2ZW50IGNoYW5uZWwgcG9ydHMgKGZvciBzaWduYWxsaW5n
KSB0aGF0IGl0IGhhcyBjcmVhdGVkLAorYW5kIHNldCB0aGUgc3RhdGUgbm9kZSBpbiB0aGUgZnJv
bnRlbmQgYXJlYSB0byA0IChYZW5idXNTdGF0ZUNvbm5lY3RlZCkuCitVcG9uIHNlZSB0aGlzIGZy
b250ZW5kIHN0YXRlLCB0aGUgYmFja2VuZCBkcml2ZXIgd2lsbCB0aGVuIHJlYWQgdGhlIGdyYW50
CityZWZlcmVuY2VzIChtYXBwaW5nIHRoZSBzaGFyZWQgcGFnZXMpIGFuZCBldmVudCBjaGFubmVs
IHBvcnRzIChvcGVuaW5nIGl0cworZW5kIG9mIHRoZW0pIGFuZCBzZXQgdGhlIHN0YXRlIG5vZGUg
aW4gdGhlIGJhY2tlbmQgYXJlYSB0byA0LiBQcm90b2NvbAorZXN0YWJsaXNobWVudCBpcyBub3cg
Y29tcGxldGUgYW5kIHRoZSBmcm9udGVuZCBhbmQgYmFja2VuZCBzdGFydCB0byBwYXNzCitkYXRh
LgorCitCZWNhdXNlIHRoZSBkb21pZCBvZiBib3RoIGVuZHMgb2YgYSBQViBwcm90b2NvbCBmb3Jt
cyBhIGtleSBwYXJ0IG9mCituZWdvdGlhdGluZyB0aGUgZGF0YSBwbGFuZSBmb3IgdGhhdCBwcm90
b2NvbCAoYmVjYXVzZSBpdCBpcyBlbmNvZGVkIGludG8KK2JvdGggeGVuc3RvcmUgbm9kZXMgYW5k
IG5vZGUgcGF0aHMpLCBhbmQgYmVjYXVzZSBndWVzdOKAmXMgb3duIGRvbWlkIGFuZCB0aGUKK2Rv
bWlkIG9mIHRoZSBzZXJ2aWNlIGRvbWFpbiBhcmUgdmlzaWJsZSB0byB0aGUgZ3Vlc3QgaW4geGVu
c3RvcmUgKGFuZCBoZW5jZQorYXkgY2FjaGVkIGludGVybmFsbHkpLCBhbmQgbmVpdGhlciBhcmUg
bmVjZXNzYXJpbHkgcHJlc2VydmVkIGR1cmluZworbWlncmF0aW9uLCBpdCBpcyBoZW5jZSBuZWNl
c3NhcnkgdG8gaGF2ZSB0aGUgY28tb3BlcmF0aW9uIG9mIHRoZSBmcm9udGVuZAoraW4gcmUtbmVn
b3RpYXRpbmcgdGhlIHByb3RvY29sIHVzaW5nIHRoZSBuZXcgZG9taWQgYWZ0ZXIgbWlncmF0aW9u
LgorCitNb3Jlb3ZlciB0aGUgYmFja2VuZC1pZCB2YWx1ZSB3aWxsIGJlIHVzZWQgYnkgdGhlIGZy
b250ZW5kIGRyaXZlciBpbgorc2V0dGluZyB1cCBncmFudCB0YWJsZSBlbnRyaWVzIGFuZCBldmVu
dCBjaGFubmVscyB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZQorc2VydmljZSBkb21haW4sIHNvIHRo
ZSBjby1vcGVyYXRpb24gb2YgdGhlIGd1ZXN0IGlzIHJlcXVpcmVkIHRvCityZS1lc3RhYmxpc2gg
dGhlc2UgaW4gdGhlIG5ldyBob3N0IGVudmlyb25tZW50IGFmdGVyIG1pZ3JhdGlvbi4KKworVGh1
cyBpZiB3ZSBhcmUgdG8gY2hhbmdlIHRoZSBtb2RlbCBhbmQgc3VwcG9ydCBtaWdyYXRpb24gb2Yg
YSBndWVzdCB3aXRoIFBWCitkcml2ZXJzLCB3aXRob3V0IHRoZSBjby1vcGVyYXRpb24gb2YgdGhl
IGZyb250ZW5kIGRyaXZlciBjb2RlLCB0aGUgcGF0aHMgYW5kCit2YWx1ZXMgaW4gYm90aCB0aGUg
ZnJvbnRlbmQgYW5kIGJhY2tlbmQgeGVuc3RvcmUgYXJlYXMgbXVzdCByZW1haW4gdW5jaGFuZ2Vk
CithbmQgdmFsaWQgaW4gdGhlIG5ldyBob3N0IGVudmlyb25tZW50LCBhbmQgdGhlIGdyYW50IHRh
YmxlIGVudHJpZXMgYW5kIGV2ZW50CitjaGFubmVscyBtdXN0IGJlIHByZXNlcnZlZCAoYW5kIHJl
bWFpbiBvcGVyYXRpb25hbCBvbmNlIGd1ZXN0IGV4ZWN1dGlvbiBpcworcmVzdW1lZCkuCisKK0Jl
Y2F1c2UgdGhlIHNlcnZpY2UgZG9tYWlu4oCZcyBkb21pZCBpcyB1c2VkIGRpcmVjdGx5IGJ5IHRo
ZSBndWVzdCBpbiBzZXR0aW5nCit1cCBncmFudCBlbnRyaWVzIGFuZCBldmVudCBjaGFubmVscywg
dGhlIGJhY2tlbmQgZHJpdmVycyBpbiB0aGUgbmV3IGhvc3QKK2Vudmlyb25tZW50IG11c3QgYmUg
cHJvdmlkZWQgYnkgc2VydmljZSBkb21haW4gd2l0aCB0aGUgc2FtZSBkb21pZC4gQWxzbywKK2Jl
Y2F1c2UgdGhlIGd1ZXN0IGNhbiBzYW1wbGUgaXRzIG93biBkb21pZCBmcm9tIHRoZSBmcm9udGVu
ZCBhcmVhIGFuZCB1c2UKK2l0IGluIGh5cGVyY2FsbHMgKGUuZy4gSFZNT1Bfc2V0X3BhcmFtKSBy
YXRoZXIgdGhhbiBET01JRF9TRUxGLCB0aGUgZ3Vlc3QKK2RvbWlkIG11c3QgYWxzbyBiZSBwcmVz
ZXJ2ZWQgdG8gbWFpbnRhaW4gdGhlIEFCSS4KKworRnVydGhlcm1vcmUsIGl0IHdpbGwgbmVjZXNz
YXJ5IHRvIG1vZGlmeSBiYWNrZW5kIGRyaXZlcnMgdG8gcmUtZXN0YWJsaXNoCitjb21tdW5pY2F0
aW9uIHdpdGggZnJvbnRlbmQgZHJpdmVycyB3aXRob3V0IHBlcnR1cmJpbmcgdGhlIGNvbnRlbnQg
b2YgdGhlCitiYWNrZW5kIGFyZWEgb3IgcmVxdWlyaW5nIGFueSBjaGFuZ2VzIHRvIHRoZSB2YWx1
ZXMgb2YgdGhlIHhlbnN0b3JlIHN0YXRlCitub2Rlcy4KKworIyMgT3RoZXIgUGFyYS1WaXJ0dWFs
IFN0YXRlCisKKyMjIyBTaGFyZWQgUmluZ3MKKworQmVjYXVzZSB0aGUgY29uc29sZSBhbmQgc3Rv
cmUgcHJvdG9jb2wgc2hhcmVkIHBhZ2VzIGFyZSBhY3R1YWxseSBwYXJ0IG9mCit0aGUgZ3Vlc3Qg
bWVtb3J5IGltYWdlIChpbiBhbiBFODIwIHJlc2VydmVkIHJlZ2lvbiBqdXN0IGJlbG93IDRHIGlu
IHg4NgorVk1zKSB0aGVuIHRoZSBjb250ZW50IHdpbGwgZ2V0IG1pZ3JhdGVkIGFzIHBhcnQgb2Yg
dGhlIGd1ZXN0IG1lbW9yeSBpbWFnZS4KK0hlbmNlIG5vIGFkZGl0aW9uYWwgY29kZSBpcyByZXF1
aXJlIHRvIHByZXZlbnQgYW55IGd1ZXN0IHZpc2libGUgY2hhbmdlIGluCit0aGUgY29udGVudC4K
KworIyMjIFNoYXJlZCBJbmZvCisKK1RoZXJlIGlzIGFscmVhZHkgYSByZWNvcmQgZGVmaW5lZCBp
biAqbGlieGVuY3RybCBEb21haW4gSW1hZ2UgRm9ybWF0KiBbM10KK2NhbGxlZCBgU0hBUkVEX0lO
Rk9gIHdoaWNoIHNpbXBseSBjb250YWlucyBhIGNvbXBsZXRlIGNvcHkgb2YgdGhlIGRvbWFpbuKA
mXMKK3NoYXJlZCBpbmZvIHBhZ2UuIEl0IGlzIG5vdCBjdXJyZW50bHkgaW5jdWRlZCBpbiBhbiBI
Vk0gKHR5cGUgYDB4MDAwMmApCittaWdyYXRpb24gc3RyZWFtLiBJdCBtYXkgYmUgZmVhc2libGUg
dG8gaW5jbHVkZSBpdCBhcyBhbiBvcHRpb25hbCByZWNvcmQKK2J1dCBpdCBpcyBub3QgY2xlYXIg
dGhhdCB0aGUgY29udGVudCBvZiB0aGUgc2hhcmVkIGluZm8gcGFnZSBldmVyIG5lZWRzCit0byBi
ZSBwcmVzZXJ2ZWQgZm9yIGFuIEhWTSBndWVzdC4KKworRm9yIGEgUFYgZ3Vlc3QgdGhlIGBhcmNo
X3NoYXJlZF9pbmZvYCBzdWItc3RydWN0dXJlIGNvbnRhaW5zIGltcG9ydGFudAoraW5mb3JtYXRp
b24gYWJvdXQgdGhlIGd1ZXN04oCZcyBQMk0sIGJ1dCB0aGlzIGluZm9ybWF0aW9uIGlzIG5vdCBy
ZWxldmFudCBmb3IKK2FuIEhWTSBndWVzdCB3aGVyZSB0aGUgUDJNIGlzIG5vdCBkaXJlY3RseSBt
YW5pcHVsYXRlZCB2aWEgdGhlIGd1ZXN0LiBUaGUKK290aGVyIHN0YXRlIGNvbnRhaW5lZCBpbiB0
aGUgYHNoYXJlZF9pbmZvYCBzdHJ1Y3R1cmUgcmVsYXRlcyB0aGUgZG9tYWluCit3YWxsLWNsb2Nr
ICh0aGUgc3RhdGUgb2Ygd2hpY2ggc2hvdWxkIGFscmVhZHkgYmUgdHJhbnNmZXJyZWQgYnkgdGhl
IGBSVENgCitIVk0gY29udGV4dCBpbmZvcm1hdGlvbiB3aGljaCBjb250YWluZWQgaW4gdGhlIGBI
Vk1fQ09OVEVYVGAgc2F2ZSByZWNvcmQpCithbmQgc29tZSBldmVudCBjaGFubmVsIHN0YXRlIChw
YXJ0aWN1bGFybHkgaWYgdXNpbmcgdGhlICoybCogcHJvdG9jb2wpLgorRXZlbnQgY2hhbm5lbCBz
dGF0ZSB3aWxsIG5lZWQgdG8gYmUgZnVsbHkgdHJhbnNmZXJyZWQgaWYgd2UgYXJlIG5vdCBnb2lu
ZwordG8gcmVxdWlyZSB0aGUgZ3Vlc3QgY28tb3BlcmF0aW9uIHRvIHJlLW9wZW4gdGhlIGNoYW5u
ZWxzIGFuZCBzbyBpdCBzaG91bGQKK2JlIHBvc3NpYmxlIHRvIHJlLWJ1aWxkIGEgc2hhcmVkIGlu
Zm8gcGFnZSBmb3IgYW4gSFZNIGd1ZXN0IGZyb20gc3VjaCBvdGhlcgorc3RhdGUuCisKK05vdGUg
dGhhdCB0aGUgc2hhcmVkIGluZm8gcGFnZSBhbHNvIGNvbnRhaW5zIGFuIGFycmF5IG9mCitgWEVO
X0xFR0FDWV9NQVhfVkNQVVNgICgzMikgYHZjcHVfaW5mb2Agc3RydWN0dXJlcy4gQSBkb21haW4g
bWF5IG5vbWluYXRlCithIGRpZmZlcmVudCBndWVzdCBwaHlzaWNhbCBhZGRyZXNzIHRvIHVzZSBm
b3IgdGhlIHZjcHUgaW5mby4gRml4IHg4NgorZG9tYWlucyB0aGlzIGlzIG1hbmRhdG9yeSBpZiBh
IGRvbWFpbiB3YW50cyB0byB1c2UgbW9yZSB0aGFuIDMyIHZDUFVzCithbmQgb3B0aW9uYWwgb3Ro
ZXJ3aXNlLiBUaGlzIG1hcHBpbmcgaXMgbm90IGN1cnJlbnRseSB0cmFuc2ZlcnJlZCBpbiB0aGUK
K21pZ3JhdGlvbiBzdGF0ZSBzbyB0aGlzIHdpbGwgZWl0aGVyIG5lZWQgdG8gYmUgYWRkZWQgaW50
byBhbiBleGlzdGluZyBzYXZlCityZWNvcmQsIG9yIGFuIGFkZGl0aW9uYWwgdHlwZSBvZiBzYXZl
IHJlY29yZCB3aWxsIGJlIG5lZWRlZC4KKworIyMjIFhlbnN0b3JlIFdhdGNoZXMKKworQXMgbWVu
dGlvbmVkIGFib3ZlLCBubyBkb21haW4gWGVuc3RvcmUgc3RhdGUgaXMgY3VycmVudGx5IHRyYW5z
ZmVycmVkIGluCit0aGUgbWlncmF0aW9uIHN0cmVhbS4gVGhlcmUgaXMgYSByZWNvcmQgZGVmaW5l
ZCBpbiAqbGlieGVubGlnaHQgRG9tYWluCitJbWFnZSBGb3JtYXQqIFs0XSBjYWxsZWQgYEVNVUxB
VE9SX1hFTlNUT1JFX0RBVEFgIGZvciB0cmFuc2ZlcnJpbmcgWGVuc3RvcmUKK25vZGVzIHJlbGF0
aW5nIHRvIGVtdWxhdG9ycyBidXQgbm8gcmVjb3JkIHR5cGUgaXMgZGVmaW5lZCBmb3Igbm9kZXMK
K3JlbGF0aW5nIHRvIHRoZSBkb21haW4gaXRzZWxmLCBub3IgZm9yIHJlZ2lzdGVyZWQgKndhdGNo
ZXMqLiBBIFhlblN0b3JlCit3YXRjaCBpcyBhIG1lY2hhbmlzbSB1c2VkIGJ5IFBWIGZyb250ZW5k
IGFuZCBiYWNrZW5kIGRyaXZlcnMgdG8gcmVxdWVzdCBhCitub3RpZmljYXRpb24gaWYgdGhlIHZh
bHVlIG9mIGEgcGFydGljdWxhciBub2RlIChlLmcuIHRoZSBvdGhlciBlbmTigJlzIHN0YXRlCitu
b2RlKSBjaGFuZ2VzLCBzbyBpdCBpcyBpbXBvcnRhbnQgdGhhdCB3YXRjaGVzIGNvbnRpbnVlIHRv
IGZ1bmN0aW9uIGFmdGVyIGEKK21pZ3JhdGlvbi4gT25lIG9yIG1vcmUgbmV3IHNhdmUgcmVjb3Jk
cyB3aWxsIHRoZXJlZm9yZSBiZSByZXF1aXJlZCB0bwordHJhbnNmZXIgWGVuc3RvcmUgc3RhdGUu
IEl0IHdpbGwgYWxzbyBiZSBuZWNlc3NhcnkgdG8gZXh0ZW5kIHRoZSAqc3RvcmUqCitwcm90b2Nv
bFs1XSB3aXRoIG1lY2hhbmlzbXMgdG8gYWxsb3cgdGhlIHRvb2xzdGFjayB0byBhY3F1aXJlIHRo
ZSBsaXN0IG9mCit3YXRjaGVzIHRoYXQgdGhlIGd1ZXN0IGhhcyByZWdpc3RlcmVkIGFuZCBmb3Ig
dGhlIHRvb2xzdGFjayB0byByZWdpc3RlciBhCit3YXRjaCBvbiBiZWhhbGYgb2YgYSBkb21haW4u
CisKKyMjIyBFdmVudCBjaGFubmVscworCitFdmVudCBjaGFubmVscyBhcmUgZXNzZW50aWFsbHkg
dGhlIHBhcmEtdmlydHVhbCBlcXVpdmFsZW50IG9mIGludGVycnVwdHMuCitUaGV5IGFyZSBhbiBp
bXBvcnRhbnQgcGFydCBvZiBwb3N0IFBWIHByb3RvY29scy4gTm9ybWFsbHkgYSBmcm9udGVuZCBk
cml2ZXIKK2NyZWF0ZXMgYW4gKmludGVyLWRvbWFpbiogZXZlbnQgY2hhbm5lbCBiZXR3ZWVuIGl0
cyBvd24gZG9tYWluIGFuZCB0aGUKK2RvbWFpbiBydW5uaW5nIHRoZSBiYWNrZW5kLCB3aGljaCBp
dCBkaXNjb3ZlcnMgdXNpbmcgdGhlIGBiYWNrZW5kLWlkYCBub2RlCitpbiBYZW5zdG9yZSAoc2Vl
IGFib3ZlKSwgYnkgbWFraW5nIGEgYEVWVENITk9QX2FsbG9jX3VuYm91bmRgIGh5cGVyY2FsbC4K
K1RoaXMgaHlwZXJjYWxsIGFsbG9jYXRlcyBhbiBldmVudCBjaGFubmVsIG9iamVjdCBpbiB0aGUg
aHlwZXJ2aXNvciBhbmQKK2Fzc2lnbnMgYSAqbG9jYWwgcG9ydCogbnVtYmVyIHdoaWNoIGlzIHRo
ZW4gd3JpdHRlbiBpbnRvIHRoZSBmcm9udGVuZCBhcmVhCitpbiBYZW5zdG9yZS4gVGhlIGJhY2tl
bmQgZHJpdmVyIHRoZW4gcmVhZHMgdGhpcyBwb3J0IG51bWJlciBhbmQgKmJpbmRzKiB0bwordGhl
IGV2ZW50IGNoYW5uZWwgYnkgc3BlY2lmeWluZyBpdCwgYW5kIHRoZSB2YWx1ZSBvZiBgZnJvbnRl
bmQtaWRgLCBhcworKnJlbW90ZSBkb21haW4qIGFuZCAqcmVtb3RlIHBvcnQqIChyZXNwZWN0aXZl
bHkpIHRvIGEKK2BFVlRDSE5PUF9iaW5kX2ludGVyZG9tYWluYCBoeXBlcmNhbGwuIE9uY2UgY29u
bmVjdGlvbiBpcyBlc3RhYmxpc2hlZCBpbgordGhpcyBmYXNoaW9uIGZyb250ZW5kIGFuZCBiYWNr
ZW5kIGRyaXZlcnMgY2FuIHVzZSB0aGUgZXZlbnQgY2hhbm5lbCBhcyBhCisqbWFpbGJveCogdG8g
bm90aWZ5IGVhY2ggb3RoZXIgd2hlbiBhIHNoYXJlZCByaW5nIGhhcyBiZWVuIHVwZGF0ZWQgd2l0
aCBuZXcKK3JlcXVlc3RzIG9yIHJlc3BvbnNlIHN0cnVjdHVyZXMuCisKK0N1cnJlbnRseSBubyBl
dmVudCBjaGFubmVsIHN0YXRlIGlzIHByZXNlcnZlZCBvbiBtaWdyYXRpb24sIHJlcXVpcmluZwor
ZnJvbnRlbmQgYW5kIGJhY2tlbmQgZHJpdmVycyB0byBjcmVhdGUgYW5kIGJpbmQgYSBjb21wbGV0
ZSBuZXcgc2V0IG9mIGV2ZW50CitjaGFubmVscyBpbiBvcmRlciB0byByZS1lc3RhYmxpc2ggYSBw
cm90b2NvbCBjb25uZWN0aW9uLiBIZW5jZSwgb25lIG9yIG1vcmUKK25ldyBzYXZlIHJlY29yZHMg
d2lsbCBiZSByZXF1aXJlZCB0byB0cmFuc2ZlciBldmVudCBjaGFubmVsIHN0YXRlIGluIG9yZGVy
Cit0byBhdm9pZCB0aGUgbmVlZCBmb3IgZXhwbGljaXQgYWN0aW9uIGJ5IGZyb250ZW5kIGRyaXZl
cnMgcnVubmluZyBpbiB0aGUKK2d1ZXN0LiBOb3RlIHRoYXQgdGhlIGxvY2FsIHBvcnQgbnVtYmVy
cyBuZWVkIHRvIHByZXNlcnZlZCBpbiB0aGlzIHN0YXRlIGFzCit0aGV5IGFyZSB0aGUgb25seSBj
b250ZXh0IHRoZSBndWVzdCBoYXMgdG8gcmVmZXIgdG8gdGhlIGh5cGVydmlzb3IgZXZlbnQKK2No
YW5uZWwgb2JqZWN0cy4KKworTm90ZSBhbHNvIHRoYXQgdGhlIFBWICpzdG9yZSogKFhlbnN0b3Jl
IGFjY2VzcykgYW5kICpjb25zb2xlKiBwcm90b2NvbHMKK2Fsc28gcmVseSBvbiBldmVudCBjaGFu
bmVscyB3aGljaCBhcmUgc2V0IHVwIGJ5IHRoZSB0b29sc3RhY2suIE5vcm1hbGx5LAorZWFybHkg
aW4gbWlncmF0aW9uLCB0aGUgdG9vbHN0YWNrIHJ1bm5pbmcgb24gdGhlIHJlbW90ZSBob3N0IHdv
dWxkIHNldCB1cCBhCituZXcgcGFpciBvZiBldmVudCBjaGFubmVscyBmb3IgdGhlc2UgcHJvdG9j
b2xzIGluIHRoZSBkZXN0aW5hdGlvbiBkb21haW4uCitUaGVzZSBtYXkgbm90IGJlIGFzc2lnbmVk
IHRoZSBzYW1lIGxvY2FsIHBvcnQgbnVtYmVycyBhcyB0aGUgcHJvdG9jb2xzCitydW5uaW5nIGlu
IHRoZSBzb3VyY2UgZG9tYWluLiBGb3Igbm9uLWNvb3BlcmF0aXZlIG1pZ3JhdGlvbiB0aGVzZSBj
aGFubmVscworbXVzdCBlaXRoZXIgYmUgY3JlYXRlZCB3aXRoIGZpeGVkIHBvcnQgbnVtYmVycywg
b3IgdGhlaXIgY3JlYXRpb24gbXVzdCBiZQorYXZvaWRlZCBhbmQgaW5zdGVhZCBiZSBpbmNsdWRl
ZCBpbiB0aGUgZ2VuZXJhbCBldmVudCBjaGFubmVsIHN0YXRlCityZWNvcmQocykuCisKKyMjIyBH
cmFudCB0YWJsZQorCitUaGUgZ3JhbnQgdGFibGUgaXMgZXNzZW50aWFsbHkgdGhlIHBhcmEtdmly
dHVhbCBlcXVpdmFsZW50IG9mIGFuIElPTU1VLiBGb3IKK2V4YW1wbGUsIHRoZSBzaGFyZWQgcmlu
Z3Mgb2YgYSBQViBwcm90b2NvbCBhcmUgKmdyYW50ZWQqIGJ5IGEgZnJvbnRlbmQKK2RyaXZlciB0
byB0aGUgYmFja2VuZCBkcml2ZXIgYnkgYWxsb2NhdGluZyAqZ3JhbnQgZW50cmllcyogaW4gdGhl
IGd1ZXN04oCZcwordGFibGUsIGZpbGxpbmcgaW4gZGV0YWlscyBvZiB0aGUgbWVtb3J5IHBhZ2Vz
IGFuZCB0aGVuIHdyaXRpbmcgdGhlICpncmFudAorcmVmZXJlbmNlcyogKHRoZSBpbmRleCB2YWx1
ZXMgb2YgdGhlIGdyYW50IGVudHJpZXMpIGludG8gWGVuc3RvcmUuIFRoZQorZ3JhbnQgcmVmZXJl
bmNlcyBvZiB0aGUgcHJvdG9jb2wgYnVmZmVycyB0aGVtc2VsdmVzIGFyZSB0eXBpY2FsbHkgd3Jp
dHRlbgorZGlyZWN0bHkgaW50byB0aGUgcmVxdWVzdCBzdHJ1Y3R1cmVzIHBhc3NlZCB2aWEgYSBz
aGFyZWQgcmluZy4KKworVGhlIGd1ZXN0IGlzIHJlc3BvbnNpYmxlIGZvciBtYW5hZ2luZyBpdHMg
b3duIGdyYW50IHRhYmxlLiBObyBoeXBlcmNhbGwgaXMKK3JlcXVpcmVkIHRvIGdyYW50IGEgbWVt
b3J5IHBhZ2UgdG8gYW5vdGhlciBkb21haW4uIEl0IGlzIHN1ZmZpY2llbnQgdG8gZmluZAorYW4g
dW51c2VkIGdyYW50IGVudHJ5IGFuZCBzZXQgYml0cyBpbiB0aGUgZW50cnkgdG8gZ2l2ZSByZWFk
IGFuZC9vciB3cml0ZQorYWNjZXNzIHRvIGEgcmVtb3RlIGRvbWFpbiBhbHNvIHNwZWNpZmllZCBp
biB0aGUgZW50cnkgYWxvbmcgd2l0aCB0aGUgcGFnZQorZnJhbWUgbnVtYmVyLiBUaHVzIHRoZSBs
YXlvdXQgYW5kIGNvbnRlbnQgb2YgdGhlIGdyYW50IHRhYmxlIGxvZ2ljYWxseQorZm9ybXMgcGFy
dCBvZiB0aGUgZ3Vlc3Qgc3RhdGUuCisKK0N1cnJlbnRseSBubyBncmFudCB0YWJsZSBzdGF0ZSBp
cyBtaWdyYXRlZCwgcmVxdWlyaW5nIGEgZ3Vlc3QgdG8gc2VwYXJhdGVseQorbWFpbnRhaW4gYW55
IHN0YXRlIHRoYXQgaXQgd2lzaGVzIHRvIHBlcnNpc3QgZWxzZXdoZXJlIGluIGl0cyBtZW1vcnkg
aW1hZ2UKK2FuZCB0aGVuIHJlc3RvcmUgaXQgYWZ0ZXIgbWlncmF0aW9uLiBUaHVzIHRvIGF2b2lk
IHRoZSBuZWVkIGZvciBzdWNoCitleHBsaWNpdCBhY3Rpb24gYnkgdGhlIGd1ZXN0LCBvbmUgb3Ig
bW9yZSBuZXcgc2F2ZSByZWNvcmRzIHdpbGwgYmUgcmVxdWlyZWQKK3RvIG1pZ3JhdGUgdGhlIGNv
bnRlbnRzIG9mIHRoZSBncmFudCB0YWJsZS4KKworIyBPdXRsaW5lIFByb3Bvc2FsCisKKyogUFYg
YmFja2VuZCBkcml2ZXJzIHdpbGwgYmUgbW9kaWZpZWQgdG8gdW5pbGF0ZXJhbGx5IHJlLWVzdGFi
bGlzaAorY29ubmVjdGlvbiB0byBhIGZyb250ZW5kIGlmIHRoZSBiYWNrZW5kIHN0YXRlIG5vZGUg
aXMgcmVzdG9yZWQgd2l0aCB2YWx1ZSA0CisoWGVuYnVzU3RhdGVDb25uZWN0ZWQpWzZdLgorCisq
IFRoZSB0b29sc3RhY2sgY2hvb3NlIGEgcmFuZG9taXplZCBkb21pZCBmb3IgaW5pdGlhbCBjcmVh
dGlvbiBvciBkZWZhdWx0CittaWdyYXRpb24sIGJ1dCBwcmVzZXJ2ZSB0aGUgc291cmNlIGRvbWlk
IG5vbi1jb29wZXJhdGl2ZSBtaWdyYXRpb24uCitOb24tQ29vcGVyYXRpdmUgbWlncmF0aW9uIHdp
bGwgaGF2ZSB0byBiZSBkZW5pZWQgaWYgdGhlIGRvbWlkIGlzCit1bmF2YWlsYWJsZSBvbiB0aGUg
dGFyZ2V0IGhvc3QsIGJ1dCByYW5kb21pemF0aW9uIG9mIGRvbWlkIG9uIGNyZWF0aW9uCitzaG91
bGQgaG9wZWZ1bGx5IG1pbmltaXplIHRoZSBsaWtlbGlob29kIG9mIHRoaXMuIE5vbi1Db29wZXJh
dGl2ZSBtaWdyYXRpb24KK3RvIGxvY2FsaG9zdCB3aWxsIGNsZWFybHkgbm90IGJlIHBvc3NpYmxl
LgorCisqIGB4ZW5zdG9yZWRgIHNob3VsZCBiZSBtb2RpZmllZCB0byBpbXBsZW1lbnQgdGhlIG5l
dyBtZWNoYW5pc21zIG5lZWRlZC4KK1NlZSAqT3RoZXIgUGFyYS1WaXJ0dWFsIFN0YXRlKiBhYm92
ZS4gQSBmdXJ0aGVyIGRlc2lnbiBkb2N1bWVudCB3aWxsCitwcm9wb3NlIGFkZGl0aW9uYWwgcHJv
dG9jb2wgbWVzc2FnZXMuCisKKyogV2l0aGluIHRoZSBtaWdyYXRpb24gc3RyZWFtIGV4dHJhIHNh
dmUgcmVjb3JkcyB3aWxsIGJlIGRlZmluZWQgYXMKK3JlcXVpcmVkLiBTZWUgKk90aGVyIFBhcmEt
VmlydHVhbCBTdGF0ZSogYWJvdmUuIEEgZnVydGhlciBkZXNpZ24gZG9jdW1lbnQKK3dpbGwgcHJv
cG9zZSBtb2RpZmljYXRpb25zIHRvIHRoZSBsaWJ4ZW5saWdodCBhbmQgbGlieGVuY3RybCBEb21h
aW4gSW1hZ2UKK0Zvcm1hdHMuCisKKyogQW4gb3B0aW9uIHNob3VsZCBiZSBhZGRlZCB0byB0aGUg
dG9vbHN0YWNrIHRvIGluaXRpYXRlIGEgbm9uLWNvb3BlcmF0aXZlCittaWdyYXRpb24sIGluc3Rl
YWQgb2YgdGhlIChkZWZhdWx0KSBwb3RlbnRpYWxseSBjby1vcGVyYXRpdmUgbWlncmF0aW9uLgor
RXNzZW50aWFsbHkgdGhpcyBzaG91bGQgc2tpcCB0aGUgY2hlY2sgdG8gc2VlIGlmIFBWIGRyaXZl
cnMgYW5kIG1pZ3JhdGUgYXMKK2lmIHRoZXJlIGFyZSBub25lIHByZXNlbnQsIGJ1dCBhbHNvIGVu
YWJsaW5nIHRoZSBleHRyYSBzYXZlIHJlY29yZHMuIE5vdGUKK3RoYXQgYXQgbGVhc3Qgc29tZSBv
ZiB0aGUgZXh0cmEgcmVjb3JkcyBzaG91bGQgb25seSBmb3JtIHBhcnQgb2YgYQorbm9uLWNvb3Bl
cmF0aXZlIG1pZ3JhdGlvbiBzdHJlYW0uIEZvciBleGFtcGxlLCBtaWdyYXRpbmcgZXZlbnQgY2hh
bm5lbAorc3RhdGUgd291bGQgYmUgY291bnRlciBwcm9kdWN0aXZlIGluIGEgbm9ybWFsIG1pZ3Jh
dGlvbiBhcyB0aGlzIHdpbGwKK2Vzc2VudGlhbGx5IGxlYWsgZXZlbnQgY2hhbm5lbCBvYmplY3Rz
IGF0IHRoZSByZWNlaXZpbmcgZW5kLiBPdGhlcnMsIHN1Y2gKK2FzIGdyYW50IHRhYmxlIHN0YXRl
LCBjb3VsZCBwb3RlbnRpYWxseSBoYXJtbGVzc2x5IGZvcm0gcGFydCBvZiBhIG5vcm1hbAorbWln
cmF0aW9uIHN0cmVhbS4KKworKiAqICoKK1sxXSBQViBkcml2ZXJzIGFyZSBkZWVtZWQgdG8gYmUg
aW5zdGFsbGVkIGlmIHRoZSBIVk0gcGFyYW1ldGVyCisqSFZNX1BBUkFNX0NBTExCQUNLX0lSUSog
aGFzIGJlZW4gc2V0IHRvIGEgbm9uLXplcm8gdmFsdWUuCisKK1syXSBTZWUgaHR0cHM6Ly94ZW5i
aXRzLnhlbi5vcmcvZ2l0d2ViLz9wPXhlbi5naXQ7YT1ibG9iO2Y9eGVuL2luY2x1ZGUvcHVibGlj
L2lvL3hlbmJ1cy5oCisKK1szXSBTZWUgaHR0cHM6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViLz9w
PXhlbi5naXQ7YT1ibG9iO2Y9ZG9jcy9zcGVjcy9saWJ4Yy1taWdyYXRpb24tc3RyZWFtLnBhbmRv
YworCitbNF0gU2VlIGh0dHBzOi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYi8/cD14ZW4uZ2l0O2E9
YmxvYjtmPWRvY3Mvc3BlY3MvbGlieGwtbWlncmF0aW9uLXN0cmVhbS5wYW5kb2MKKworWzVdIFNl
ZSBodHRwczovL3hlbmJpdHMueGVuLm9yZy9naXR3ZWIvP3A9eGVuLmdpdDthPWJsb2I7Zj1kb2Nz
L21pc2MveGVuc3RvcmUudHh0CisKK1s2XSBgeGVuLWJsa2JhY2tgIGFuZCBgeGVuLW5ldGJhY2tg
IGhhdmUgYWxyZWFkeSBiZWVuIG1vZGlmaWVkIGluIExpbnV4IHRvIGRvCit0aGlzLgotLSAKMi4y
MC4xCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVu
LWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6
Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

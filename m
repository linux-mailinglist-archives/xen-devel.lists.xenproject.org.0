Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 5CE4DD7B87
	for <lists+xen-devel@lfdr.de>; Tue, 15 Oct 2019 18:30:16 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iKPfW-0002ys-K0; Tue, 15 Oct 2019 16:27:30 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=cnbq=YI=redhat.com=philmd@srs-us1.protection.inumbo.net>)
 id 1iKPfU-0002yb-U3
 for xen-devel@lists.xenproject.org; Tue, 15 Oct 2019 16:27:28 +0000
X-Inumbo-ID: adb7c6ae-ef68-11e9-9396-12813bfff9fa
Received: from mx1.redhat.com (unknown [209.132.183.28])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id adb7c6ae-ef68-11e9-9396-12813bfff9fa;
 Tue, 15 Oct 2019 16:27:28 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
 [10.5.11.23])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id BEB018E1CF1;
 Tue, 15 Oct 2019 16:27:27 +0000 (UTC)
Received: from x1w.redhat.com (ovpn-204-35.brq.redhat.com [10.40.204.35])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id BB9AE19C58;
 Tue, 15 Oct 2019 16:27:20 +0000 (UTC)
From: =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue, 15 Oct 2019 18:26:34 +0200
Message-Id: <20191015162705.28087-2-philmd@redhat.com>
In-Reply-To: <20191015162705.28087-1-philmd@redhat.com>
References: <20191015162705.28087-1-philmd@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.6.2
 (mx1.redhat.com [10.5.110.69]); Tue, 15 Oct 2019 16:27:27 +0000 (UTC)
Subject: [Xen-devel] [PATCH 01/32] hw/i386: Remove obsolete
 LoadStateHandler::load_state_old handlers
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>,
 Peter Maydell <peter.maydell@linaro.org>, Thomas Huth <thuth@redhat.com>,
 Stefano Stabellini <sstabellini@kernel.org>,
 Eduardo Habkost <ehabkost@redhat.com>, kvm@vger.kernel.org,
 Paul Durrant <paul@xen.org>, "Michael S. Tsirkin" <mst@redhat.com>,
 Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Herv=C3=A9=20Poussineau?= <hpoussin@reactos.org>,
 Aleksandar Markovic <amarkovic@wavecomp.com>, xen-devel@lists.xenproject.org,
 Anthony Perard <anthony.perard@citrix.com>,
 Igor Mammedov <imammedo@redhat.com>,
 Aleksandar Rikalo <aleksandar.rikalo@rt-rk.com>,
 =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>,
 Aurelien Jarno <aurelien@aurel32.net>, Richard Henderson <rth@twiddle.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhlc2UgZGV2aWNlcyBpbXBsZW1lbnRlZCB0aGVpciBsb2FkX3N0YXRlX29sZCgpIGhhbmRsZXIg
MTAgeWVhcnMKYWdvLCBwcmV2aW91cyB0byBRRU1VIHYwLjEyLgpTaW5jZSBjb21taXQgY2M0MjVi
NWRkZiByZW1vdmVkIHRoZSBwYy0wLjEwIGFuZCBwYy0wLjExIG1hY2hpbmVzLAp3ZSBjYW4gZHJv
cCB0aGlzIGNvZGUuCgpOb3RlOiB0aGUgbWlwc19yNGsgbWFjaGluZSBzdGFydGVkIHRvIHVzZSB0
aGUgaTgyNTQgZGV2aWNlIGp1c3QKYWZ0ZXIgUUVNVSB2MC41LjAsIGJ1dCB0aGUgTUlQUyBtYWNo
aW5lIHR5cGVzIGFyZSBub3QgdmVyc2lvbmVkLApzbyB0aGVyZSBpcyBubyBtaWdyYXRpb24gY29t
cGF0aWJpbGl0eSBpc3N1ZSByZW1vdmluZyB0aGlzIGhhbmRsZXIuCgpTdWdnZXN0ZWQtYnk6IFBl
dGVyIE1heWRlbGwgPHBldGVyLm1heWRlbGxAbGluYXJvLm9yZz4KU2lnbmVkLW9mZi1ieTogUGhp
bGlwcGUgTWF0aGlldS1EYXVkw6kgPHBoaWxtZEByZWRoYXQuY29tPgotLS0KIGh3L2FjcGkvcGlp
eDQuYyAgICAgICAgIHwgNDAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBody9p
bnRjL2FwaWNfY29tbW9uLmMgICB8IDQ5IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tCiBody9wY2ktaG9zdC9waWl4LmMgICAgICB8IDI1IC0tLS0tLS0tLS0tLS0tLS0t
LS0tLQogaHcvdGltZXIvaTgyNTRfY29tbW9uLmMgfCA0MCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0KIDQgZmlsZXMgY2hhbmdlZCwgMTU0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2h3L2FjcGkvcGlpeDQuYyBiL2h3L2FjcGkvcGlpeDQuYwppbmRleCA1NzQyYzNkZjg3Li4x
ZDI5ZDQzOGM3IDEwMDY0NAotLS0gYS9ody9hY3BpL3BpaXg0LmMKKysrIGIvaHcvYWNwaS9waWl4
NC5jCkBAIC00Miw3ICs0Miw2IEBACiAjaW5jbHVkZSAiaHcvYWNwaS9tZW1vcnlfaG90cGx1Zy5o
IgogI2luY2x1ZGUgImh3L2FjcGkvYWNwaV9kZXZfaW50ZXJmYWNlLmgiCiAjaW5jbHVkZSAiaHcv
eGVuL3hlbi5oIgotI2luY2x1ZGUgIm1pZ3JhdGlvbi9xZW11LWZpbGUtdHlwZXMuaCIKICNpbmNs
dWRlICJtaWdyYXRpb24vdm1zdGF0ZS5oIgogI2luY2x1ZGUgImh3L2NvcmUvY3B1LmgiCiAjaW5j
bHVkZSAidHJhY2UuaCIKQEAgLTIwNSw0MyArMjA0LDYgQEAgc3RhdGljIGNvbnN0IFZNU3RhdGVE
ZXNjcmlwdGlvbiB2bXN0YXRlX3BjaV9zdGF0dXMgPSB7CiAgICAgfQogfTsKIAotc3RhdGljIGlu
dCBhY3BpX2xvYWRfb2xkKFFFTVVGaWxlICpmLCB2b2lkICpvcGFxdWUsIGludCB2ZXJzaW9uX2lk
KQotewotICAgIFBJSVg0UE1TdGF0ZSAqcyA9IG9wYXF1ZTsKLSAgICBpbnQgcmV0LCBpOwotICAg
IHVpbnQxNl90IHRlbXA7Ci0KLSAgICByZXQgPSBwY2lfZGV2aWNlX2xvYWQoUENJX0RFVklDRShz
KSwgZik7Ci0gICAgaWYgKHJldCA8IDApIHsKLSAgICAgICAgcmV0dXJuIHJldDsKLSAgICB9Ci0g
ICAgcWVtdV9nZXRfYmUxNnMoZiwgJnMtPmFyLnBtMS5ldnQuc3RzKTsKLSAgICBxZW11X2dldF9i
ZTE2cyhmLCAmcy0+YXIucG0xLmV2dC5lbik7Ci0gICAgcWVtdV9nZXRfYmUxNnMoZiwgJnMtPmFy
LnBtMS5jbnQuY250KTsKLQotICAgIHJldCA9IHZtc3RhdGVfbG9hZF9zdGF0ZShmLCAmdm1zdGF0
ZV9hcG0sICZzLT5hcG0sIDEpOwotICAgIGlmIChyZXQpIHsKLSAgICAgICAgcmV0dXJuIHJldDsK
LSAgICB9Ci0KLSAgICB0aW1lcl9nZXQoZiwgcy0+YXIudG1yLnRpbWVyKTsKLSAgICBxZW11X2dl
dF9zYmU2NHMoZiwgJnMtPmFyLnRtci5vdmVyZmxvd190aW1lKTsKLQotICAgIHFlbXVfZ2V0X2Jl
MTZzKGYsICh1aW50MTZfdCAqKXMtPmFyLmdwZS5zdHMpOwotICAgIGZvciAoaSA9IDA7IGkgPCAz
OyBpKyspIHsKLSAgICAgICAgcWVtdV9nZXRfYmUxNnMoZiwgJnRlbXApOwotICAgIH0KLQotICAg
IHFlbXVfZ2V0X2JlMTZzKGYsICh1aW50MTZfdCAqKXMtPmFyLmdwZS5lbik7Ci0gICAgZm9yIChp
ID0gMDsgaSA8IDM7IGkrKykgewotICAgICAgICBxZW11X2dldF9iZTE2cyhmLCAmdGVtcCk7Ci0g
ICAgfQotCi0gICAgcmV0ID0gdm1zdGF0ZV9sb2FkX3N0YXRlKGYsICZ2bXN0YXRlX3BjaV9zdGF0
dXMsCi0gICAgICAgICZzLT5hY3BpX3BjaV9ob3RwbHVnLmFjcGlfcGNpaHBfcGNpX3N0YXR1c1tB
Q1BJX1BDSUhQX0JTRUxfREVGQVVMVF0sIDEpOwotICAgIHJldHVybiByZXQ7Ci19Ci0KIHN0YXRp
YyBib29sIHZtc3RhdGVfdGVzdF91c2VfYWNwaV9wY2lfaG90cGx1Zyh2b2lkICpvcGFxdWUsIGlu
dCB2ZXJzaW9uX2lkKQogewogICAgIFBJSVg0UE1TdGF0ZSAqcyA9IG9wYXF1ZTsKQEAgLTMxMyw4
ICsyNzUsNiBAQCBzdGF0aWMgY29uc3QgVk1TdGF0ZURlc2NyaXB0aW9uIHZtc3RhdGVfYWNwaSA9
IHsKICAgICAubmFtZSA9ICJwaWl4NF9wbSIsCiAgICAgLnZlcnNpb25faWQgPSAzLAogICAgIC5t
aW5pbXVtX3ZlcnNpb25faWQgPSAzLAotICAgIC5taW5pbXVtX3ZlcnNpb25faWRfb2xkID0gMSwK
LSAgICAubG9hZF9zdGF0ZV9vbGQgPSBhY3BpX2xvYWRfb2xkLAogICAgIC5wb3N0X2xvYWQgPSB2
bXN0YXRlX2FjcGlfcG9zdF9sb2FkLAogICAgIC5maWVsZHMgPSAoVk1TdGF0ZUZpZWxkW10pIHsK
ICAgICAgICAgVk1TVEFURV9QQ0lfREVWSUNFKHBhcmVudF9vYmosIFBJSVg0UE1TdGF0ZSksCmRp
ZmYgLS1naXQgYS9ody9pbnRjL2FwaWNfY29tbW9uLmMgYi9ody9pbnRjL2FwaWNfY29tbW9uLmMK
aW5kZXggYWFmZDhlMGUzMy4uMzc1Y2I2YWJlOSAxMDA2NDQKLS0tIGEvaHcvaW50Yy9hcGljX2Nv
bW1vbi5jCisrKyBiL2h3L2ludGMvYXBpY19jb21tb24uYwpAQCAtMzEsNyArMzEsNiBAQAogI2lu
Y2x1ZGUgInN5c2VtdS9rdm0uaCIKICNpbmNsdWRlICJody9xZGV2LXByb3BlcnRpZXMuaCIKICNp
bmNsdWRlICJody9zeXNidXMuaCIKLSNpbmNsdWRlICJtaWdyYXRpb24vcWVtdS1maWxlLXR5cGVz
LmgiCiAjaW5jbHVkZSAibWlncmF0aW9uL3Ztc3RhdGUuaCIKIAogc3RhdGljIGludCBhcGljX2ly
cV9kZWxpdmVyZWQ7CkBAIC0yNjIsNTIgKzI2MSw2IEBAIHN0YXRpYyB2b2lkIGFwaWNfcmVzZXRf
Y29tbW9uKERldmljZVN0YXRlICpkZXYpCiAgICAgYXBpY19pbml0X3Jlc2V0KGRldik7CiB9CiAK
LS8qIFRoaXMgZnVuY3Rpb24gaXMgb25seSB1c2VkIGZvciBvbGQgc3RhdGUgdmVyc2lvbiAxIGFu
ZCAyICovCi1zdGF0aWMgaW50IGFwaWNfbG9hZF9vbGQoUUVNVUZpbGUgKmYsIHZvaWQgKm9wYXF1
ZSwgaW50IHZlcnNpb25faWQpCi17Ci0gICAgQVBJQ0NvbW1vblN0YXRlICpzID0gb3BhcXVlOwot
ICAgIEFQSUNDb21tb25DbGFzcyAqaW5mbyA9IEFQSUNfQ09NTU9OX0dFVF9DTEFTUyhzKTsKLSAg
ICBpbnQgaTsKLQotICAgIGlmICh2ZXJzaW9uX2lkID4gMikgewotICAgICAgICByZXR1cm4gLUVJ
TlZBTDsKLSAgICB9Ci0KLSAgICAvKiBYWFg6IHdoYXQgaWYgdGhlIGJhc2UgY2hhbmdlcz8gKHJl
Z2lzdGVyZWQgbWVtb3J5IHJlZ2lvbnMpICovCi0gICAgcWVtdV9nZXRfYmUzMnMoZiwgJnMtPmFw
aWNiYXNlKTsKLSAgICBxZW11X2dldF84cyhmLCAmcy0+aWQpOwotICAgIHFlbXVfZ2V0XzhzKGYs
ICZzLT5hcmJfaWQpOwotICAgIHFlbXVfZ2V0XzhzKGYsICZzLT50cHIpOwotICAgIHFlbXVfZ2V0
X2JlMzJzKGYsICZzLT5zcHVyaW91c192ZWMpOwotICAgIHFlbXVfZ2V0XzhzKGYsICZzLT5sb2df
ZGVzdCk7Ci0gICAgcWVtdV9nZXRfOHMoZiwgJnMtPmRlc3RfbW9kZSk7Ci0gICAgZm9yIChpID0g
MDsgaSA8IDg7IGkrKykgewotICAgICAgICBxZW11X2dldF9iZTMycyhmLCAmcy0+aXNyW2ldKTsK
LSAgICAgICAgcWVtdV9nZXRfYmUzMnMoZiwgJnMtPnRtcltpXSk7Ci0gICAgICAgIHFlbXVfZ2V0
X2JlMzJzKGYsICZzLT5pcnJbaV0pOwotICAgIH0KLSAgICBmb3IgKGkgPSAwOyBpIDwgQVBJQ19M
VlRfTkI7IGkrKykgewotICAgICAgICBxZW11X2dldF9iZTMycyhmLCAmcy0+bHZ0W2ldKTsKLSAg
ICB9Ci0gICAgcWVtdV9nZXRfYmUzMnMoZiwgJnMtPmVzcik7Ci0gICAgcWVtdV9nZXRfYmUzMnMo
ZiwgJnMtPmljclswXSk7Ci0gICAgcWVtdV9nZXRfYmUzMnMoZiwgJnMtPmljclsxXSk7Ci0gICAg
cWVtdV9nZXRfYmUzMnMoZiwgJnMtPmRpdmlkZV9jb25mKTsKLSAgICBzLT5jb3VudF9zaGlmdCA9
IHFlbXVfZ2V0X2JlMzIoZik7Ci0gICAgcWVtdV9nZXRfYmUzMnMoZiwgJnMtPmluaXRpYWxfY291
bnQpOwotICAgIHMtPmluaXRpYWxfY291bnRfbG9hZF90aW1lID0gcWVtdV9nZXRfYmU2NChmKTsK
LSAgICBzLT5uZXh0X3RpbWUgPSBxZW11X2dldF9iZTY0KGYpOwotCi0gICAgaWYgKHZlcnNpb25f
aWQgPj0gMikgewotICAgICAgICBzLT50aW1lcl9leHBpcnkgPSBxZW11X2dldF9iZTY0KGYpOwot
ICAgIH0KLQotICAgIGlmIChpbmZvLT5wb3N0X2xvYWQpIHsKLSAgICAgICAgaW5mby0+cG9zdF9s
b2FkKHMpOwotICAgIH0KLSAgICByZXR1cm4gMDsKLX0KLQogc3RhdGljIGNvbnN0IFZNU3RhdGVE
ZXNjcmlwdGlvbiB2bXN0YXRlX2FwaWNfY29tbW9uOwogCiBzdGF0aWMgdm9pZCBhcGljX2NvbW1v
bl9yZWFsaXplKERldmljZVN0YXRlICpkZXYsIEVycm9yICoqZXJycCkKQEAgLTQwOCw4ICszNjEs
NiBAQCBzdGF0aWMgY29uc3QgVk1TdGF0ZURlc2NyaXB0aW9uIHZtc3RhdGVfYXBpY19jb21tb24g
PSB7CiAgICAgLm5hbWUgPSAiYXBpYyIsCiAgICAgLnZlcnNpb25faWQgPSAzLAogICAgIC5taW5p
bXVtX3ZlcnNpb25faWQgPSAzLAotICAgIC5taW5pbXVtX3ZlcnNpb25faWRfb2xkID0gMSwKLSAg
ICAubG9hZF9zdGF0ZV9vbGQgPSBhcGljX2xvYWRfb2xkLAogICAgIC5wcmVfbG9hZCA9IGFwaWNf
cHJlX2xvYWQsCiAgICAgLnByZV9zYXZlID0gYXBpY19kaXNwYXRjaF9wcmVfc2F2ZSwKICAgICAu
cG9zdF9sb2FkID0gYXBpY19kaXNwYXRjaF9wb3N0X2xvYWQsCmRpZmYgLS1naXQgYS9ody9wY2kt
aG9zdC9waWl4LmMgYi9ody9wY2ktaG9zdC9waWl4LmMKaW5kZXggMTM1YzY0NTUzNS4uMmY0Y2Jj
YmZlOSAxMDA2NDQKLS0tIGEvaHcvcGNpLWhvc3QvcGlpeC5jCisrKyBiL2h3L3BjaS1ob3N0L3Bp
aXguYwpAQCAtMzMsNyArMzMsNiBAQAogI2luY2x1ZGUgInFhcGkvZXJyb3IuaCIKICNpbmNsdWRl
ICJxZW11L3JhbmdlLmgiCiAjaW5jbHVkZSAiaHcveGVuL3hlbi5oIgotI2luY2x1ZGUgIm1pZ3Jh
dGlvbi9xZW11LWZpbGUtdHlwZXMuaCIKICNpbmNsdWRlICJtaWdyYXRpb24vdm1zdGF0ZS5oIgog
I2luY2x1ZGUgImh3L3BjaS1ob3N0L3BhbS5oIgogI2luY2x1ZGUgInN5c2VtdS9yZXNldC5oIgpA
QCAtMTc0LDI4ICsxNzMsNiBAQCBzdGF0aWMgdm9pZCBpNDQwZnhfd3JpdGVfY29uZmlnKFBDSURl
dmljZSAqZGV2LAogICAgIH0KIH0KIAotc3RhdGljIGludCBpNDQwZnhfbG9hZF9vbGQoUUVNVUZp
bGUqIGYsIHZvaWQgKm9wYXF1ZSwgaW50IHZlcnNpb25faWQpCi17Ci0gICAgUENJSTQ0MEZYU3Rh
dGUgKmQgPSBvcGFxdWU7Ci0gICAgUENJRGV2aWNlICpwZCA9IFBDSV9ERVZJQ0UoZCk7Ci0gICAg
aW50IHJldCwgaTsKLSAgICB1aW50OF90IHNtbV9lbmFibGVkOwotCi0gICAgcmV0ID0gcGNpX2Rl
dmljZV9sb2FkKHBkLCBmKTsKLSAgICBpZiAocmV0IDwgMCkKLSAgICAgICAgcmV0dXJuIHJldDsK
LSAgICBpNDQwZnhfdXBkYXRlX21lbW9yeV9tYXBwaW5ncyhkKTsKLSAgICBxZW11X2dldF84cyhm
LCAmc21tX2VuYWJsZWQpOwotCi0gICAgaWYgKHZlcnNpb25faWQgPT0gMikgewotICAgICAgICBm
b3IgKGkgPSAwOyBpIDwgUElJWF9OVU1fUElSUVM7IGkrKykgewotICAgICAgICAgICAgcWVtdV9n
ZXRfYmUzMihmKTsgLyogZHVtbXkgbG9hZCBmb3IgY29tcGF0aWJpbGl0eSAqLwotICAgICAgICB9
Ci0gICAgfQotCi0gICAgcmV0dXJuIDA7Ci19Ci0KIHN0YXRpYyBpbnQgaTQ0MGZ4X3Bvc3RfbG9h
ZCh2b2lkICpvcGFxdWUsIGludCB2ZXJzaW9uX2lkKQogewogICAgIFBDSUk0NDBGWFN0YXRlICpk
ID0gb3BhcXVlOwpAQCAtMjA4LDggKzE4NSw2IEBAIHN0YXRpYyBjb25zdCBWTVN0YXRlRGVzY3Jp
cHRpb24gdm1zdGF0ZV9pNDQwZnggPSB7CiAgICAgLm5hbWUgPSAiSTQ0MEZYIiwKICAgICAudmVy
c2lvbl9pZCA9IDMsCiAgICAgLm1pbmltdW1fdmVyc2lvbl9pZCA9IDMsCi0gICAgLm1pbmltdW1f
dmVyc2lvbl9pZF9vbGQgPSAxLAotICAgIC5sb2FkX3N0YXRlX29sZCA9IGk0NDBmeF9sb2FkX29s
ZCwKICAgICAucG9zdF9sb2FkID0gaTQ0MGZ4X3Bvc3RfbG9hZCwKICAgICAuZmllbGRzID0gKFZN
U3RhdGVGaWVsZFtdKSB7CiAgICAgICAgIFZNU1RBVEVfUENJX0RFVklDRShwYXJlbnRfb2JqLCBQ
Q0lJNDQwRlhTdGF0ZSksCmRpZmYgLS1naXQgYS9ody90aW1lci9pODI1NF9jb21tb24uYyBiL2h3
L3RpbWVyL2k4MjU0X2NvbW1vbi5jCmluZGV4IDU3YmYxMGNjOTQuLjA1MDg3NWI0OTcgMTAwNjQ0
Ci0tLSBhL2h3L3RpbWVyL2k4MjU0X2NvbW1vbi5jCisrKyBiL2h3L3RpbWVyL2k4MjU0X2NvbW1v
bi5jCkBAIC0yOSw3ICsyOSw2IEBACiAjaW5jbHVkZSAicWVtdS90aW1lci5oIgogI2luY2x1ZGUg
Imh3L3RpbWVyL2k4MjU0LmgiCiAjaW5jbHVkZSAiaHcvdGltZXIvaTgyNTRfaW50ZXJuYWwuaCIK
LSNpbmNsdWRlICJtaWdyYXRpb24vcWVtdS1maWxlLXR5cGVzLmgiCiAjaW5jbHVkZSAibWlncmF0
aW9uL3Ztc3RhdGUuaCIKIAogLyogdmFsIG11c3QgYmUgMCBvciAxICovCkBAIC0yMDIsNDMgKzIw
MSw2IEBAIHN0YXRpYyBjb25zdCBWTVN0YXRlRGVzY3JpcHRpb24gdm1zdGF0ZV9waXRfY2hhbm5l
bCA9IHsKICAgICB9CiB9OwogCi1zdGF0aWMgaW50IHBpdF9sb2FkX29sZChRRU1VRmlsZSAqZiwg
dm9pZCAqb3BhcXVlLCBpbnQgdmVyc2lvbl9pZCkKLXsKLSAgICBQSVRDb21tb25TdGF0ZSAqcGl0
ID0gb3BhcXVlOwotICAgIFBJVENvbW1vbkNsYXNzICpjID0gUElUX0NPTU1PTl9HRVRfQ0xBU1Mo
cGl0KTsKLSAgICBQSVRDaGFubmVsU3RhdGUgKnM7Ci0gICAgaW50IGk7Ci0KLSAgICBpZiAodmVy
c2lvbl9pZCAhPSAxKSB7Ci0gICAgICAgIHJldHVybiAtRUlOVkFMOwotICAgIH0KLQotICAgIGZv
ciAoaSA9IDA7IGkgPCAzOyBpKyspIHsKLSAgICAgICAgcyA9ICZwaXQtPmNoYW5uZWxzW2ldOwot
ICAgICAgICBzLT5jb3VudCA9IHFlbXVfZ2V0X2JlMzIoZik7Ci0gICAgICAgIHFlbXVfZ2V0X2Jl
MTZzKGYsICZzLT5sYXRjaGVkX2NvdW50KTsKLSAgICAgICAgcWVtdV9nZXRfOHMoZiwgJnMtPmNv
dW50X2xhdGNoZWQpOwotICAgICAgICBxZW11X2dldF84cyhmLCAmcy0+c3RhdHVzX2xhdGNoZWQp
OwotICAgICAgICBxZW11X2dldF84cyhmLCAmcy0+c3RhdHVzKTsKLSAgICAgICAgcWVtdV9nZXRf
OHMoZiwgJnMtPnJlYWRfc3RhdGUpOwotICAgICAgICBxZW11X2dldF84cyhmLCAmcy0+d3JpdGVf
c3RhdGUpOwotICAgICAgICBxZW11X2dldF84cyhmLCAmcy0+d3JpdGVfbGF0Y2gpOwotICAgICAg
ICBxZW11X2dldF84cyhmLCAmcy0+cndfbW9kZSk7Ci0gICAgICAgIHFlbXVfZ2V0XzhzKGYsICZz
LT5tb2RlKTsKLSAgICAgICAgcWVtdV9nZXRfOHMoZiwgJnMtPmJjZCk7Ci0gICAgICAgIHFlbXVf
Z2V0XzhzKGYsICZzLT5nYXRlKTsKLSAgICAgICAgcy0+Y291bnRfbG9hZF90aW1lID0gcWVtdV9n
ZXRfYmU2NChmKTsKLSAgICAgICAgcy0+aXJxX2Rpc2FibGVkID0gMDsKLSAgICAgICAgaWYgKGkg
PT0gMCkgewotICAgICAgICAgICAgcy0+bmV4dF90cmFuc2l0aW9uX3RpbWUgPSBxZW11X2dldF9i
ZTY0KGYpOwotICAgICAgICB9Ci0gICAgfQotICAgIGlmIChjLT5wb3N0X2xvYWQpIHsKLSAgICAg
ICAgYy0+cG9zdF9sb2FkKHBpdCk7Ci0gICAgfQotICAgIHJldHVybiAwOwotfQotCiBzdGF0aWMg
aW50IHBpdF9kaXNwYXRjaF9wcmVfc2F2ZSh2b2lkICpvcGFxdWUpCiB7CiAgICAgUElUQ29tbW9u
U3RhdGUgKnMgPSBvcGFxdWU7CkBAIC0yNjYsOCArMjI4LDYgQEAgc3RhdGljIGNvbnN0IFZNU3Rh
dGVEZXNjcmlwdGlvbiB2bXN0YXRlX3BpdF9jb21tb24gPSB7CiAgICAgLm5hbWUgPSAiaTgyNTQi
LAogICAgIC52ZXJzaW9uX2lkID0gMywKICAgICAubWluaW11bV92ZXJzaW9uX2lkID0gMiwKLSAg
ICAubWluaW11bV92ZXJzaW9uX2lkX29sZCA9IDEsCi0gICAgLmxvYWRfc3RhdGVfb2xkID0gcGl0
X2xvYWRfb2xkLAogICAgIC5wcmVfc2F2ZSA9IHBpdF9kaXNwYXRjaF9wcmVfc2F2ZSwKICAgICAu
cG9zdF9sb2FkID0gcGl0X2Rpc3BhdGNoX3Bvc3RfbG9hZCwKICAgICAuZmllbGRzID0gKFZNU3Rh
dGVGaWVsZFtdKSB7Ci0tIAoyLjIxLjAKCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54
ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4vbGlzdGlu
Zm8veGVuLWRldmVs

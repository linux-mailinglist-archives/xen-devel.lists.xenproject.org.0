Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 6C377B2AA5
	for <lists+xen-devel@lfdr.de>; Sat, 14 Sep 2019 10:56:25 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1i93o5-0007pH-AP; Sat, 14 Sep 2019 08:53:25 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=rDpt=XJ=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1i93o3-0007nd-KU
 for xen-devel@lists.xenproject.org; Sat, 14 Sep 2019 08:53:23 +0000
X-Inumbo-ID: 0d042e90-d6cd-11e9-95c1-12813bfff9fa
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 0d042e90-d6cd-11e9-95c1-12813bfff9fa;
 Sat, 14 Sep 2019 08:52:59 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 5ADB5B65E;
 Sat, 14 Sep 2019 08:52:57 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: xen-devel@lists.xenproject.org
Date: Sat, 14 Sep 2019 10:52:12 +0200
Message-Id: <20190914085251.18816-9-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190914085251.18816-1-jgross@suse.com>
References: <20190914085251.18816-1-jgross@suse.com>
Subject: [Xen-devel] [PATCH v3 08/47] xen/sched: switch vcpu_schedule_lock
 to unit_schedule_lock
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, Tim Deegan <tim@xen.org>,
 Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wl@xen.org>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <george.dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Dario Faggioli <dfaggioli@suse.com>,
 Julien Grall <julien.grall@arm.com>, Meng Xu <mengxu@cis.upenn.edu>,
 Jan Beulich <jbeulich@suse.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

UmVuYW1lIHZjcHVfc2NoZWR1bGVfW3VuXWxvY2tbX2lycV0oKSB0byB1bml0X3NjaGVkdWxlX1t1
bl1sb2NrW19pcnFdKCkKYW5kIGxldCBpdCB0YWtlIGEgc2NoZWRfdW5pdCBwb2ludGVyIGluc3Rl
YWQgb2YgYSB2Y3B1IHBvaW50ZXIgYXMKcGFyYW1ldGVyLgoKU2lnbmVkLW9mZi1ieTogSnVlcmdl
biBHcm9zcyA8amdyb3NzQHN1c2UuY29tPgotLS0KIHhlbi9jb21tb24vc2NoZWRfY3JlZGl0LmMg
IHwgMTcgKysrKysrKysrLS0tLS0tLS0KIHhlbi9jb21tb24vc2NoZWRfY3JlZGl0Mi5jIHwgNDAg
KysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tLQogeGVuL2NvbW1vbi9zY2hl
ZF9udWxsLmMgICAgfCAxNiArKysrKysrKy0tLS0tLS0tCiB4ZW4vY29tbW9uL3NjaGVkX3J0LmMg
ICAgICB8IDE1ICsrKysrKystLS0tLS0tLQogeGVuL2NvbW1vbi9zY2hlZHVsZS5jICAgICAgfCA0
NSArKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIHhlbi9pbmNs
dWRlL3hlbi9zY2hlZC1pZi5oIHwgMTIgKysrKysrLS0tLS0tCiA2IGZpbGVzIGNoYW5nZWQsIDcz
IGluc2VydGlvbnMoKyksIDcyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3hlbi9jb21tb24v
c2NoZWRfY3JlZGl0LmMgYi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdC5jCmluZGV4IGVlNDJkZTZi
Y2UuLjc2MjFhNTUyN2UgMTAwNjQ0Ci0tLSBhL3hlbi9jb21tb24vc2NoZWRfY3JlZGl0LmMKKysr
IGIveGVuL2NvbW1vbi9zY2hlZF9jcmVkaXQuYwpAQCAtOTI2LDcgKzkyNiw4IEBAIF9fY3NjaGVk
X3ZjcHVfYWNjdF9zdG9wX2xvY2tlZChzdHJ1Y3QgY3NjaGVkX3ByaXZhdGUgKnBydiwKIHN0YXRp
YyB2b2lkCiBjc2NoZWRfdmNwdV9hY2N0KHN0cnVjdCBjc2NoZWRfcHJpdmF0ZSAqcHJ2LCB1bnNp
Z25lZCBpbnQgY3B1KQogewotICAgIHN0cnVjdCBjc2NoZWRfdW5pdCAqIGNvbnN0IHN2YyA9IENT
Q0hFRF9VTklUKGN1cnJlbnQtPnNjaGVkX3VuaXQpOworICAgIHN0cnVjdCBzY2hlZF91bml0ICpj
dXJydW5pdCA9IGN1cnJlbnQtPnNjaGVkX3VuaXQ7CisgICAgc3RydWN0IGNzY2hlZF91bml0ICog
Y29uc3Qgc3ZjID0gQ1NDSEVEX1VOSVQoY3VycnVuaXQpOwogICAgIGNvbnN0IHN0cnVjdCBzY2hl
ZHVsZXIgKm9wcyA9IHBlcl9jcHUoc2NoZWR1bGVyLCBjcHUpOwogCiAgICAgQVNTRVJUKCBjdXJy
ZW50LT5wcm9jZXNzb3IgPT0gY3B1ICk7CkBAIC05NjIsNyArOTYzLDcgQEAgY3NjaGVkX3ZjcHVf
YWNjdChzdHJ1Y3QgY3NjaGVkX3ByaXZhdGUgKnBydiwgdW5zaWduZWQgaW50IGNwdSkKICAgICB7
CiAgICAgICAgIHVuc2lnbmVkIGludCBuZXdfY3B1OwogICAgICAgICB1bnNpZ25lZCBsb25nIGZs
YWdzOwotICAgICAgICBzcGlubG9ja190ICpsb2NrID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycXNh
dmUoY3VycmVudCwgJmZsYWdzKTsKKyAgICAgICAgc3BpbmxvY2tfdCAqbG9jayA9IHVuaXRfc2No
ZWR1bGVfbG9ja19pcnFzYXZlKGN1cnJ1bml0LCAmZmxhZ3MpOwogCiAgICAgICAgIC8qCiAgICAg
ICAgICAqIElmIGl0J3MgYmVlbiBhY3RpdmUgYSB3aGlsZSwgY2hlY2sgaWYgd2UnZCBiZSBiZXR0
ZXIgb2ZmCkBAIC05NzEsNyArOTcyLDcgQEAgY3NjaGVkX3ZjcHVfYWNjdChzdHJ1Y3QgY3NjaGVk
X3ByaXZhdGUgKnBydiwgdW5zaWduZWQgaW50IGNwdSkKICAgICAgICAgICovCiAgICAgICAgIG5l
d19jcHUgPSBfY3NjaGVkX2NwdV9waWNrKG9wcywgY3VycmVudCwgMCk7CiAKLSAgICAgICAgdmNw
dV9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywgY3VycmVudCk7CisgICAg
ICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrX2lycXJlc3RvcmUobG9jaywgZmxhZ3MsIGN1cnJ1bml0
KTsKIAogICAgICAgICBpZiAoIG5ld19jcHUgIT0gY3B1ICkKICAgICAgICAgewpAQCAtMTAyMywx
OSArMTAyNCwxOSBAQCBjc2NoZWRfdW5pdF9pbnNlcnQoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAq
b3BzLCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqdW5pdCkKICAgICBCVUdfT04oIGlzX2lkbGVfdmNwdSh2
YykgKTsKIAogICAgIC8qIGNzY2hlZF9yZXNfcGljaygpIGxvb2tzIGluIHZjLT5wcm9jZXNzb3In
cyBydW5xLCBzbyB3ZSBuZWVkIHRoZSBsb2NrLiAqLwotICAgIGxvY2sgPSB2Y3B1X3NjaGVkdWxl
X2xvY2tfaXJxKHZjKTsKKyAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh1bml0KTsK
IAogICAgIHVuaXQtPnJlcyA9IGNzY2hlZF9yZXNfcGljayhvcHMsIHVuaXQpOwogICAgIHZjLT5w
cm9jZXNzb3IgPSB1bml0LT5yZXMtPm1hc3Rlcl9jcHU7CiAKICAgICBzcGluX3VubG9ja19pcnEo
bG9jayk7CiAKLSAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycSh2Yyk7CisgICAgbG9j
ayA9IHVuaXRfc2NoZWR1bGVfbG9ja19pcnEodW5pdCk7CiAKICAgICBpZiAoICFfX3ZjcHVfb25f
cnVucShzdmMpICYmIHZjcHVfcnVubmFibGUodmMpICYmICF2Yy0+aXNfcnVubmluZyApCiAgICAg
ICAgIHJ1bnFfaW5zZXJ0KHN2Yyk7CiAKLSAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9j
aywgdmMpOworICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB1bml0KTsKIAogICAg
IFNDSEVEX1NUQVRfQ1JBTksodmNwdV9pbnNlcnQpOwogfQpAQCAtMjEzMywxMiArMjEzNCwxMiBA
QCBjc2NoZWRfZHVtcChjb25zdCBzdHJ1Y3Qgc2NoZWR1bGVyICpvcHMpCiAgICAgICAgICAgICBz
cGlubG9ja190ICpsb2NrOwogCiAgICAgICAgICAgICBzdmMgPSBsaXN0X2VudHJ5KGl0ZXJfc3Zj
LCBzdHJ1Y3QgY3NjaGVkX3VuaXQsIGFjdGl2ZV92Y3B1X2VsZW0pOwotICAgICAgICAgICAgbG9j
ayA9IHZjcHVfc2NoZWR1bGVfbG9jayhzdmMtPnZjcHUpOworICAgICAgICAgICAgbG9jayA9IHVu
aXRfc2NoZWR1bGVfbG9jayhzdmMtPnZjcHUtPnNjaGVkX3VuaXQpOwogCiAgICAgICAgICAgICBw
cmludGsoIlx0JTNkOiAiLCArK2xvb3ApOwogICAgICAgICAgICAgY3NjaGVkX2R1bXBfdmNwdShz
dmMpOwogCi0gICAgICAgICAgICB2Y3B1X3NjaGVkdWxlX3VubG9jayhsb2NrLCBzdmMtPnZjcHUp
OworICAgICAgICAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2sobG9jaywgc3ZjLT52Y3B1LT5zY2hl
ZF91bml0KTsKICAgICAgICAgfQogICAgIH0KIApkaWZmIC0tZ2l0IGEveGVuL2NvbW1vbi9zY2hl
ZF9jcmVkaXQyLmMgYi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdDIuYwppbmRleCA4NDlmM2E5MTZl
Li40YzQ3MWJmNDgyIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdDIuYworKysg
Yi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdDIuYwpAQCAtMTcxLDcgKzE3MSw3IEBACiAgKiAtIHJ1
bnF1ZXVlIGxvY2sKICAqICArIGl0IGlzIHBlci1ydW5xdWV1ZSwgc286CiAgKiAgICogY3B1cyBp
biBhIHJ1bnF1ZXVlIHRha2UgdGhlIHJ1bnF1ZXVlIGxvY2ssIHdoZW4gdXNpbmcKLSAqICAgICBw
Y3B1X3NjaGVkdWxlX2xvY2soKSAvIHZjcHVfc2NoZWR1bGVfbG9jaygpIChhbmQgZnJpZW5kcyks
CisgKiAgICAgcGNwdV9zY2hlZHVsZV9sb2NrKCkgLyB1bml0X3NjaGVkdWxlX2xvY2soKSAoYW5k
IGZyaWVuZHMpLAogICogICAqIGEgY3B1IG1heSAodHJ5IHRvKSB0YWtlIGEgInJlbW90ZSIgcnVu
cXVldWUgbG9jaywgZS5nLiwgZm9yCiAgKiAgICAgbG9hZCBiYWxhbmNpbmc7CiAgKiAgKyBzZXJp
YWxpemVzIHJ1bnF1ZXVlIG9wZXJhdGlvbnMgKHJlbW92aW5nIGFuZCBpbnNlcnRpbmcgdmNwdXMp
OwpAQCAtMTg5MSw3ICsxODkxLDcgQEAgdW5wYXJrX3BhcmtlZF92Y3B1cyhjb25zdCBzdHJ1Y3Qg
c2NoZWR1bGVyICpvcHMsIHN0cnVjdCBsaXN0X2hlYWQgKnZjcHVzKQogICAgICAgICB1bnNpZ25l
ZCBsb25nIGZsYWdzOwogICAgICAgICBzX3RpbWVfdCBub3c7CiAKLSAgICAgICAgbG9jayA9IHZj
cHVfc2NoZWR1bGVfbG9ja19pcnFzYXZlKHN2Yy0+dmNwdSwgJmZsYWdzKTsKKyAgICAgICAgbG9j
ayA9IHVuaXRfc2NoZWR1bGVfbG9ja19pcnFzYXZlKHN2Yy0+dmNwdS0+c2NoZWRfdW5pdCwgJmZs
YWdzKTsKIAogICAgICAgICBfX2NsZWFyX2JpdChfVlBGX3BhcmtlZCwgJnN2Yy0+dmNwdS0+cGF1
c2VfZmxhZ3MpOwogICAgICAgICBpZiAoIHVubGlrZWx5KHN2Yy0+ZmxhZ3MgJiBDU0ZMQUdfc2No
ZWR1bGVkKSApCkBAIC0xOTI0LDcgKzE5MjQsNyBAQCB1bnBhcmtfcGFya2VkX3ZjcHVzKGNvbnN0
IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgc3RydWN0IGxpc3RfaGVhZCAqdmNwdXMpCiAgICAgICAg
IH0KICAgICAgICAgbGlzdF9kZWxfaW5pdCgmc3ZjLT5wYXJrZWRfZWxlbSk7CiAKLSAgICAgICAg
dmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywgc3ZjLT52Y3B1KTsK
KyAgICAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywgc3Zj
LT52Y3B1LT5zY2hlZF91bml0KTsKICAgICB9CiB9CiAKQEAgLTIxNjMsNyArMjE2Myw3IEBAIGNz
Y2hlZDJfY29udGV4dF9zYXZlZChjb25zdCBzdHJ1Y3Qgc2NoZWR1bGVyICpvcHMsIHN0cnVjdCBz
Y2hlZF91bml0ICp1bml0KQogewogICAgIHN0cnVjdCB2Y3B1ICp2YyA9IHVuaXQtPnZjcHVfbGlz
dDsKICAgICBzdHJ1Y3QgY3NjaGVkMl91bml0ICogY29uc3Qgc3ZjID0gY3NjaGVkMl91bml0KHVu
aXQpOwotICAgIHNwaW5sb2NrX3QgKmxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2tfaXJxKHZjKTsK
KyAgICBzcGlubG9ja190ICpsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh1bml0KTsKICAg
ICBzX3RpbWVfdCBub3cgPSBOT1coKTsKICAgICBMSVNUX0hFQUQod2VyZV9wYXJrZWQpOwogCkBA
IC0yMTk1LDcgKzIxOTUsNyBAQCBjc2NoZWQyX2NvbnRleHRfc2F2ZWQoY29uc3Qgc3RydWN0IHNj
aGVkdWxlciAqb3BzLCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqdW5pdCkKICAgICBlbHNlIGlmICggIWlz
X2lkbGVfdmNwdSh2YykgKQogICAgICAgICB1cGRhdGVfbG9hZChvcHMsIHN2Yy0+cnFkLCBzdmMs
IC0xLCBub3cpOwogCi0gICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHZjKTsKKyAg
ICB1bml0X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgdW5pdCk7CiAKICAgICB1bnBhcmtfcGFy
a2VkX3ZjcHVzKG9wcywgJndlcmVfcGFya2VkKTsKIH0KQEAgLTI4NDgsMTQgKzI4NDgsMTQgQEAg
Y3NjaGVkMl9kb21fY250bCgKICAgICAgICAgICAgIGZvcl9lYWNoX3ZjcHUgKCBkLCB2ICkKICAg
ICAgICAgICAgIHsKICAgICAgICAgICAgICAgICBzdHJ1Y3QgY3NjaGVkMl91bml0ICpzdmMgPSBj
c2NoZWQyX3VuaXQodi0+c2NoZWRfdW5pdCk7Ci0gICAgICAgICAgICAgICAgc3BpbmxvY2tfdCAq
bG9jayA9IHZjcHVfc2NoZWR1bGVfbG9jayhzdmMtPnZjcHUpOworICAgICAgICAgICAgICAgIHNw
aW5sb2NrX3QgKmxvY2sgPSB1bml0X3NjaGVkdWxlX2xvY2soc3ZjLT52Y3B1LT5zY2hlZF91bml0
KTsKIAogICAgICAgICAgICAgICAgIEFTU0VSVChzdmMtPnJxZCA9PSBjMnJxZChvcHMsIHN2Yy0+
dmNwdS0+cHJvY2Vzc29yKSk7CiAKICAgICAgICAgICAgICAgICBzdmMtPndlaWdodCA9IHNkb20t
PndlaWdodDsKICAgICAgICAgICAgICAgICB1cGRhdGVfbWF4X3dlaWdodChzdmMtPnJxZCwgc3Zj
LT53ZWlnaHQsIG9sZF93ZWlnaHQpOwogCi0gICAgICAgICAgICAgICAgdmNwdV9zY2hlZHVsZV91
bmxvY2sobG9jaywgc3ZjLT52Y3B1KTsKKyAgICAgICAgICAgICAgICB1bml0X3NjaGVkdWxlX3Vu
bG9jayhsb2NrLCBzdmMtPnZjcHUtPnNjaGVkX3VuaXQpOwogICAgICAgICAgICAgfQogICAgICAg
ICB9CiAgICAgICAgIC8qIENhcCAqLwpAQCAtMjg4Niw3ICsyODg2LDcgQEAgY3NjaGVkMl9kb21f
Y250bCgKICAgICAgICAgICAgIGZvcl9lYWNoX3ZjcHUgKCBkLCB2ICkKICAgICAgICAgICAgIHsK
ICAgICAgICAgICAgICAgICBzdmMgPSBjc2NoZWQyX3VuaXQodi0+c2NoZWRfdW5pdCk7Ci0gICAg
ICAgICAgICAgICAgbG9jayA9IHZjcHVfc2NoZWR1bGVfbG9jayhzdmMtPnZjcHUpOworICAgICAg
ICAgICAgICAgIGxvY2sgPSB1bml0X3NjaGVkdWxlX2xvY2soc3ZjLT52Y3B1LT5zY2hlZF91bml0
KTsKICAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgICAqIFRvbyBzbWFsbCBxdW90
YXMgd291bGQgaW4gdGhlb3J5IGNhdXNlIGEgbG90IG9mIG92ZXJoZWFkLAogICAgICAgICAgICAg
ICAgICAqIHdoaWNoIHRoZW4gd29uJ3QgaGFwcGVuIGJlY2F1c2UsIGluIGNzY2hlZDJfcnVudGlt
ZSgpLApAQCAtMjg5NCw3ICsyODk0LDcgQEAgY3NjaGVkMl9kb21fY250bCgKICAgICAgICAgICAg
ICAgICAgKi8KICAgICAgICAgICAgICAgICBzdmMtPmJ1ZGdldF9xdW90YSA9IG1heChzZG9tLT50
b3RfYnVkZ2V0IC8gc2RvbS0+bnJfdmNwdXMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgQ1NDSEVEMl9NSU5fVElNRVIpOwotICAgICAgICAgICAgICAgIHZjcHVfc2No
ZWR1bGVfdW5sb2NrKGxvY2ssIHN2Yy0+dmNwdSk7CisgICAgICAgICAgICAgICAgdW5pdF9zY2hl
ZHVsZV91bmxvY2sobG9jaywgc3ZjLT52Y3B1LT5zY2hlZF91bml0KTsKICAgICAgICAgICAgIH0K
IAogICAgICAgICAgICAgaWYgKCBzZG9tLT5jYXAgPT0gMCApCkBAIC0yOTI5LDcgKzI5MjksNyBA
QCBjc2NoZWQyX2RvbV9jbnRsKAogICAgICAgICAgICAgICAgIGZvcl9lYWNoX3ZjcHUgKCBkLCB2
ICkKICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIHN2YyA9IGNzY2hlZDJf
dW5pdCh2LT5zY2hlZF91bml0KTsKLSAgICAgICAgICAgICAgICAgICAgbG9jayA9IHZjcHVfc2No
ZWR1bGVfbG9jayhzdmMtPnZjcHUpOworICAgICAgICAgICAgICAgICAgICBsb2NrID0gdW5pdF9z
Y2hlZHVsZV9sb2NrKHN2Yy0+dmNwdS0+c2NoZWRfdW5pdCk7CiAgICAgICAgICAgICAgICAgICAg
IGlmICggdi0+aXNfcnVubmluZyApCiAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAg
ICAgICAgICAgICAgIHVuc2lnbmVkIGludCBjcHUgPSB2LT5wcm9jZXNzb3I7CkBAIC0yOTYwLDcg
KzI5NjAsNyBAQCBjc2NoZWQyX2RvbV9jbnRsKAogICAgICAgICAgICAgICAgICAgICAgICAgY3B1
X3JhaXNlX3NvZnRpcnEoY3B1LCBTQ0hFRFVMRV9TT0ZUSVJRKTsKICAgICAgICAgICAgICAgICAg
ICAgfQogICAgICAgICAgICAgICAgICAgICBzdmMtPmJ1ZGdldCA9IDA7Ci0gICAgICAgICAgICAg
ICAgICAgIHZjcHVfc2NoZWR1bGVfdW5sb2NrKGxvY2ssIHN2Yy0+dmNwdSk7CisgICAgICAgICAg
ICAgICAgICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrKGxvY2ssIHN2Yy0+dmNwdS0+c2NoZWRfdW5p
dCk7CiAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgfQogCkBAIC0yOTc2LDEyICsyOTc2
LDEyIEBAIGNzY2hlZDJfZG9tX2NudGwoCiAgICAgICAgICAgICBmb3JfZWFjaF92Y3B1ICggZCwg
diApCiAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgc3RydWN0IGNzY2hlZDJfdW5pdCAq
c3ZjID0gY3NjaGVkMl91bml0KHYtPnNjaGVkX3VuaXQpOwotICAgICAgICAgICAgICAgIHNwaW5s
b2NrX3QgKmxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2soc3ZjLT52Y3B1KTsKKyAgICAgICAgICAg
ICAgICBzcGlubG9ja190ICpsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrKHN2Yy0+dmNwdS0+c2No
ZWRfdW5pdCk7CiAKICAgICAgICAgICAgICAgICBzdmMtPmJ1ZGdldCA9IFNUSU1FX01BWDsKICAg
ICAgICAgICAgICAgICBzdmMtPmJ1ZGdldF9xdW90YSA9IDA7CiAKLSAgICAgICAgICAgICAgICB2
Y3B1X3NjaGVkdWxlX3VubG9jayhsb2NrLCBzdmMtPnZjcHUpOworICAgICAgICAgICAgICAgIHVu
aXRfc2NoZWR1bGVfdW5sb2NrKGxvY2ssIHN2Yy0+dmNwdS0+c2NoZWRfdW5pdCk7CiAgICAgICAg
ICAgICB9CiAgICAgICAgICAgICBzZG9tLT5jYXAgPSAwOwogICAgICAgICAgICAgLyoKQEAgLTMx
MjAsMTkgKzMxMjAsMTkgQEAgY3NjaGVkMl91bml0X2luc2VydChjb25zdCBzdHJ1Y3Qgc2NoZWR1
bGVyICpvcHMsIHN0cnVjdCBzY2hlZF91bml0ICp1bml0KQogICAgIEFTU0VSVChsaXN0X2VtcHR5
KCZzdmMtPnJ1bnFfZWxlbSkpOwogCiAgICAgLyogY3NjaGVkMl9yZXNfcGljaygpIGV4cGVjdHMg
dGhlIHBjcHUgbG9jayB0byBiZSBoZWxkICovCi0gICAgbG9jayA9IHZjcHVfc2NoZWR1bGVfbG9j
a19pcnEodmMpOworICAgIGxvY2sgPSB1bml0X3NjaGVkdWxlX2xvY2tfaXJxKHVuaXQpOwogCiAg
ICAgdW5pdC0+cmVzID0gY3NjaGVkMl9yZXNfcGljayhvcHMsIHVuaXQpOwogICAgIHZjLT5wcm9j
ZXNzb3IgPSB1bml0LT5yZXMtPm1hc3Rlcl9jcHU7CiAKICAgICBzcGluX3VubG9ja19pcnEobG9j
ayk7CiAKLSAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycSh2Yyk7CisgICAgbG9jayA9
IHVuaXRfc2NoZWR1bGVfbG9ja19pcnEodW5pdCk7CiAKICAgICAvKiBBZGQgdmNwdSB0byBydW5x
dWV1ZSBvZiBpbml0aWFsIHByb2Nlc3NvciAqLwogICAgIHJ1bnFfYXNzaWduKG9wcywgdmMpOwog
Ci0gICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHZjKTsKKyAgICB1bml0X3NjaGVk
dWxlX3VubG9ja19pcnEobG9jaywgdW5pdCk7CiAKICAgICBzZG9tLT5ucl92Y3B1cysrOwogCkBA
IC0zMTYyLDExICszMTYyLDExIEBAIGNzY2hlZDJfdW5pdF9yZW1vdmUoY29uc3Qgc3RydWN0IHNj
aGVkdWxlciAqb3BzLCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqdW5pdCkKICAgICBTQ0hFRF9TVEFUX0NS
QU5LKHZjcHVfcmVtb3ZlKTsKIAogICAgIC8qIFJlbW92ZSBmcm9tIHJ1bnF1ZXVlICovCi0gICAg
bG9jayA9IHZjcHVfc2NoZWR1bGVfbG9ja19pcnEodmMpOworICAgIGxvY2sgPSB1bml0X3NjaGVk
dWxlX2xvY2tfaXJxKHVuaXQpOwogCiAgICAgcnVucV9kZWFzc2lnbihvcHMsIHZjKTsKIAotICAg
IHZjcHVfc2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB2Yyk7CisgICAgdW5pdF9zY2hlZHVsZV91
bmxvY2tfaXJxKGxvY2ssIHVuaXQpOwogCiAgICAgc3ZjLT5zZG9tLT5ucl92Y3B1cy0tOwogfQpA
QCAtMzc1MCwxMiArMzc1MCwxMiBAQCBjc2NoZWQyX2R1bXAoY29uc3Qgc3RydWN0IHNjaGVkdWxl
ciAqb3BzKQogICAgICAgICAgICAgc3RydWN0IGNzY2hlZDJfdW5pdCAqIGNvbnN0IHN2YyA9IGNz
Y2hlZDJfdW5pdCh2LT5zY2hlZF91bml0KTsKICAgICAgICAgICAgIHNwaW5sb2NrX3QgKmxvY2s7
CiAKLSAgICAgICAgICAgIGxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2soc3ZjLT52Y3B1KTsKKyAg
ICAgICAgICAgIGxvY2sgPSB1bml0X3NjaGVkdWxlX2xvY2soc3ZjLT52Y3B1LT5zY2hlZF91bml0
KTsKIAogICAgICAgICAgICAgcHJpbnRrKCJcdCUzZDogIiwgKytsb29wKTsKICAgICAgICAgICAg
IGNzY2hlZDJfZHVtcF92Y3B1KHBydiwgc3ZjKTsKIAotICAgICAgICAgICAgdmNwdV9zY2hlZHVs
ZV91bmxvY2sobG9jaywgc3ZjLT52Y3B1KTsKKyAgICAgICAgICAgIHVuaXRfc2NoZWR1bGVfdW5s
b2NrKGxvY2ssIHN2Yy0+dmNwdS0+c2NoZWRfdW5pdCk7CiAgICAgICAgIH0KICAgICB9CiAKZGlm
ZiAtLWdpdCBhL3hlbi9jb21tb24vc2NoZWRfbnVsbC5jIGIveGVuL2NvbW1vbi9zY2hlZF9udWxs
LmMKaW5kZXggZTdiYTU1YzY1MC4uYjc3MDBjOTFhMiAxMDA2NDQKLS0tIGEveGVuL2NvbW1vbi9z
Y2hlZF9udWxsLmMKKysrIGIveGVuL2NvbW1vbi9zY2hlZF9udWxsLmMKQEAgLTMwOSw3ICszMDks
NyBAQCBwaWNrX3JlcyhzdHJ1Y3QgbnVsbF9wcml2YXRlICpwcnYsIGNvbnN0IHN0cnVjdCBzY2hl
ZF91bml0ICp1bml0KQogICAgICAqIGFsbCB0aGUgcENQVXMgYXJlIGJ1c3kuCiAgICAgICoKICAg
ICAgKiBJbiBmYWN0LCB0aGVyZSBtdXN0IGFsd2F5cyBiZSBzb21ldGhpbmcgc2FuZSBpbiB2LT5w
cm9jZXNzb3IsIG9yCi0gICAgICogdmNwdV9zY2hlZHVsZV9sb2NrKCkgYW5kIGZyaWVuZHMgd29u
J3Qgd29yay4gVGhpcyBpcyBub3QgYSBwcm9ibGVtLAorICAgICAqIHVuaXRfc2NoZWR1bGVfbG9j
aygpIGFuZCBmcmllbmRzIHdvbid0IHdvcmsuIFRoaXMgaXMgbm90IGEgcHJvYmxlbSwKICAgICAg
KiBhcyB3ZSB3aWxsIGFjdHVhbGx5IGFzc2lnbiB0aGUgdkNQVSB0byB0aGUgcENQVSB3ZSByZXR1
cm4gZnJvbSBoZXJlLAogICAgICAqIG9ubHkgaWYgdGhlIHBDUFUgaXMgZnJlZS4KICAgICAgKi8K
QEAgLTQ1MCwxMSArNDUwLDExIEBAIHN0YXRpYyB2b2lkIG51bGxfdW5pdF9pbnNlcnQoY29uc3Qg
c3RydWN0IHNjaGVkdWxlciAqb3BzLAogCiAgICAgQVNTRVJUKCFpc19pZGxlX3ZjcHUodikpOwog
Ci0gICAgbG9jayA9IHZjcHVfc2NoZWR1bGVfbG9ja19pcnEodik7CisgICAgbG9jayA9IHVuaXRf
c2NoZWR1bGVfbG9ja19pcnEodW5pdCk7CiAKICAgICBpZiAoIHVubGlrZWx5KCFpc192Y3B1X29u
bGluZSh2KSkgKQogICAgIHsKLSAgICAgICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ss
IHYpOworICAgICAgICB1bml0X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgdW5pdCk7CiAgICAg
ICAgIHJldHVybjsKICAgICB9CiAKQEAgLTQ2NCw3ICs0NjQsNyBAQCBzdGF0aWMgdm9pZCBudWxs
X3VuaXRfaW5zZXJ0KGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywKIAogICAgIHNwaW5fdW5s
b2NrKGxvY2spOwogCi0gICAgbG9jayA9IHZjcHVfc2NoZWR1bGVfbG9jayh2KTsKKyAgICBsb2Nr
ID0gdW5pdF9zY2hlZHVsZV9sb2NrKHVuaXQpOwogCiAgICAgY3B1bWFza19hbmQoY3B1bWFza19z
Y3JhdGNoX2NwdShjcHUpLCB2LT5jcHVfaGFyZF9hZmZpbml0eSwKICAgICAgICAgICAgICAgICBj
cHVwb29sX2RvbWFpbl9jcHVtYXNrKHYtPmRvbWFpbikpOwpAQCAtNTEzLDcgKzUxMyw3IEBAIHN0
YXRpYyB2b2lkIG51bGxfdW5pdF9yZW1vdmUoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLAog
CiAgICAgQVNTRVJUKCFpc19pZGxlX3ZjcHUodikpOwogCi0gICAgbG9jayA9IHZjcHVfc2NoZWR1
bGVfbG9ja19pcnEodik7CisgICAgbG9jayA9IHVuaXRfc2NoZWR1bGVfbG9ja19pcnEodW5pdCk7
CiAKICAgICAvKiBJZiBvZmZsaW5lLCB0aGUgdmNwdSBzaG91bGRuJ3QgYmUgYXNzaWduZWQsIG5v
ciBpbiB0aGUgd2FpdHF1ZXVlICovCiAgICAgaWYgKCB1bmxpa2VseSghaXNfdmNwdV9vbmxpbmUo
dikpICkKQEAgLTUzNiw3ICs1MzYsNyBAQCBzdGF0aWMgdm9pZCBudWxsX3VuaXRfcmVtb3ZlKGNv
bnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywKICAgICB2Y3B1X2RlYXNzaWduKHBydiwgdik7CiAK
ICBvdXQ6Ci0gICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHYpOworICAgIHVuaXRf
c2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB1bml0KTsKIAogICAgIFNDSEVEX1NUQVRfQ1JBTkso
dmNwdV9yZW1vdmUpOwogfQpAQCAtOTM1LDEzICs5MzUsMTMgQEAgc3RhdGljIHZvaWQgbnVsbF9k
dW1wKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcykKICAgICAgICAgICAgIHN0cnVjdCBudWxs
X3VuaXQgKiBjb25zdCBudmMgPSBudWxsX3VuaXQodi0+c2NoZWRfdW5pdCk7CiAgICAgICAgICAg
ICBzcGlubG9ja190ICpsb2NrOwogCi0gICAgICAgICAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9s
b2NrKG52Yy0+dmNwdSk7CisgICAgICAgICAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrKG52
Yy0+dmNwdS0+c2NoZWRfdW5pdCk7CiAKICAgICAgICAgICAgIHByaW50aygiXHQlM2Q6ICIsICsr
bG9vcCk7CiAgICAgICAgICAgICBkdW1wX3ZjcHUocHJ2LCBudmMpOwogICAgICAgICAgICAgcHJp
bnRrKCJcbiIpOwogCi0gICAgICAgICAgICB2Y3B1X3NjaGVkdWxlX3VubG9jayhsb2NrLCBudmMt
PnZjcHUpOworICAgICAgICAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2sobG9jaywgbnZjLT52Y3B1
LT5zY2hlZF91bml0KTsKICAgICAgICAgfQogICAgIH0KIApkaWZmIC0tZ2l0IGEveGVuL2NvbW1v
bi9zY2hlZF9ydC5jIGIveGVuL2NvbW1vbi9zY2hlZF9ydC5jCmluZGV4IGYzMWM3ZGMwMmMuLjBk
NDE5Yjk2MGUgMTAwNjQ0Ci0tLSBhL3hlbi9jb21tb24vc2NoZWRfcnQuYworKysgYi94ZW4vY29t
bW9uL3NjaGVkX3J0LmMKQEAgLTE3Nyw3ICsxNzcsNyBAQCBzdGF0aWMgdm9pZCByZXBsX3RpbWVy
X2hhbmRsZXIodm9pZCAqZGF0YSk7CiAvKgogICogU3lzdGVtLXdpZGUgcHJpdmF0ZSBkYXRhLCBp
bmNsdWRlIGdsb2JhbCBSdW5RdWV1ZS9EZXBsZXRlZFEKICAqIEdsb2JhbCBsb2NrIGlzIHJlZmVy
ZW5jZWQgYnkgc2NoZWRfcmVzLT5zY2hlZHVsZV9sb2NrIGZyb20gYWxsCi0gKiBwaHlzaWNhbCBj
cHVzLiBJdCBjYW4gYmUgZ3JhYmJlZCB2aWEgdmNwdV9zY2hlZHVsZV9sb2NrX2lycSgpCisgKiBw
aHlzaWNhbCBjcHVzLiBJdCBjYW4gYmUgZ3JhYmJlZCB2aWEgdW5pdF9zY2hlZHVsZV9sb2NrX2ly
cSgpCiAgKi8KIHN0cnVjdCBydF9wcml2YXRlIHsKICAgICBzcGlubG9ja190IGxvY2s7ICAgICAg
ICAgICAgLyogdGhlIGdsb2JhbCBjb2Fyc2UtZ3JhaW5lZCBsb2NrICovCkBAIC04OTYsNyArODk2
LDcgQEAgcnRfdW5pdF9pbnNlcnQoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCBzdHJ1Y3Qg
c2NoZWRfdW5pdCAqdW5pdCkKICAgICB1bml0LT5yZXMgPSBydF9yZXNfcGljayhvcHMsIHVuaXQp
OwogICAgIHZjLT5wcm9jZXNzb3IgPSB1bml0LT5yZXMtPm1hc3Rlcl9jcHU7CiAKLSAgICBsb2Nr
ID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycSh2Yyk7CisgICAgbG9jayA9IHVuaXRfc2NoZWR1bGVf
bG9ja19pcnEodW5pdCk7CiAKICAgICBub3cgPSBOT1coKTsKICAgICBpZiAoIG5vdyA+PSBzdmMt
PmN1cl9kZWFkbGluZSApCkBAIC05MDksNyArOTA5LDcgQEAgcnRfdW5pdF9pbnNlcnQoY29uc3Qg
c3RydWN0IHNjaGVkdWxlciAqb3BzLCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqdW5pdCkKICAgICAgICAg
aWYgKCAhdmMtPmlzX3J1bm5pbmcgKQogICAgICAgICAgICAgcnVucV9pbnNlcnQob3BzLCBzdmMp
OwogICAgIH0KLSAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgdmMpOworICAgIHVu
aXRfc2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB1bml0KTsKIAogICAgIFNDSEVEX1NUQVRfQ1JB
TksodmNwdV9pbnNlcnQpOwogfQpAQCAtOTIwLDcgKzkyMCw2IEBAIHJ0X3VuaXRfaW5zZXJ0KGNv
bnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgc3RydWN0IHNjaGVkX3VuaXQgKnVuaXQpCiBzdGF0
aWMgdm9pZAogcnRfdW5pdF9yZW1vdmUoY29uc3Qgc3RydWN0IHNjaGVkdWxlciAqb3BzLCBzdHJ1
Y3Qgc2NoZWRfdW5pdCAqdW5pdCkKIHsKLSAgICBzdHJ1Y3QgdmNwdSAqdmMgPSB1bml0LT52Y3B1
X2xpc3Q7CiAgICAgc3RydWN0IHJ0X3VuaXQgKiBjb25zdCBzdmMgPSBydF91bml0KHVuaXQpOwog
ICAgIHN0cnVjdCBydF9kb20gKiBjb25zdCBzZG9tID0gc3ZjLT5zZG9tOwogICAgIHNwaW5sb2Nr
X3QgKmxvY2s7CkBAIC05MjksMTQgKzkyOCwxNCBAQCBydF91bml0X3JlbW92ZShjb25zdCBzdHJ1
Y3Qgc2NoZWR1bGVyICpvcHMsIHN0cnVjdCBzY2hlZF91bml0ICp1bml0KQogCiAgICAgQlVHX09O
KCBzZG9tID09IE5VTEwgKTsKIAotICAgIGxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2tfaXJxKHZj
KTsKKyAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh1bml0KTsKICAgICBpZiAoIHZj
cHVfb25fcShzdmMpICkKICAgICAgICAgcV9yZW1vdmUoc3ZjKTsKIAogICAgIGlmICggdmNwdV9v
bl9yZXBscShzdmMpICkKICAgICAgICAgcmVwbHFfcmVtb3ZlKG9wcyxzdmMpOwogCi0gICAgdmNw
dV9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHZjKTsKKyAgICB1bml0X3NjaGVkdWxlX3VubG9j
a19pcnEobG9jaywgdW5pdCk7CiB9CiAKIC8qCkBAIC0xMzMxLDcgKzEzMzAsNyBAQCBydF9jb250
ZXh0X3NhdmVkKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgc3RydWN0IHNjaGVkX3VuaXQg
KnVuaXQpCiB7CiAgICAgc3RydWN0IHZjcHUgKnZjID0gdW5pdC0+dmNwdV9saXN0OwogICAgIHN0
cnVjdCBydF91bml0ICpzdmMgPSBydF91bml0KHVuaXQpOwotICAgIHNwaW5sb2NrX3QgKmxvY2sg
PSB2Y3B1X3NjaGVkdWxlX2xvY2tfaXJxKHZjKTsKKyAgICBzcGlubG9ja190ICpsb2NrID0gdW5p
dF9zY2hlZHVsZV9sb2NrX2lycSh1bml0KTsKIAogICAgIF9fY2xlYXJfYml0KF9fUlREU19zY2hl
ZHVsZWQsICZzdmMtPmZsYWdzKTsKICAgICAvKiBub3QgaW5zZXJ0IGlkbGUgdmNwdSB0byBydW5x
ICovCkBAIC0xMzQ4LDcgKzEzNDcsNyBAQCBydF9jb250ZXh0X3NhdmVkKGNvbnN0IHN0cnVjdCBz
Y2hlZHVsZXIgKm9wcywgc3RydWN0IHNjaGVkX3VuaXQgKnVuaXQpCiAgICAgICAgIHJlcGxxX3Jl
bW92ZShvcHMsIHN2Yyk7CiAKIG91dDoKLSAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9j
aywgdmMpOworICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB1bml0KTsKIH0KIAog
LyoKZGlmZiAtLWdpdCBhL3hlbi9jb21tb24vc2NoZWR1bGUuYyBiL3hlbi9jb21tb24vc2NoZWR1
bGUuYwppbmRleCA0MmJjYThkZjU0Li5mZWQ0ODhiYzFmIDEwMDY0NAotLS0gYS94ZW4vY29tbW9u
L3NjaGVkdWxlLmMKKysrIGIveGVuL2NvbW1vbi9zY2hlZHVsZS5jCkBAIC0yNTMsNyArMjUzLDgg
QEAgc3RhdGljIGlubGluZSB2b2lkIHZjcHVfcnVuc3RhdGVfY2hhbmdlKAogCiB2b2lkIHZjcHVf
cnVuc3RhdGVfZ2V0KHN0cnVjdCB2Y3B1ICp2LCBzdHJ1Y3QgdmNwdV9ydW5zdGF0ZV9pbmZvICpy
dW5zdGF0ZSkKIHsKLSAgICBzcGlubG9ja190ICpsb2NrID0gbGlrZWx5KHYgPT0gY3VycmVudCkg
PyBOVUxMIDogdmNwdV9zY2hlZHVsZV9sb2NrX2lycSh2KTsKKyAgICBzcGlubG9ja190ICpsb2Nr
ID0gbGlrZWx5KHYgPT0gY3VycmVudCkKKyAgICAgICAgICAgICAgICAgICAgICAgPyBOVUxMIDog
dW5pdF9zY2hlZHVsZV9sb2NrX2lycSh2LT5zY2hlZF91bml0KTsKICAgICBzX3RpbWVfdCBkZWx0
YTsKIAogICAgIG1lbWNweShydW5zdGF0ZSwgJnYtPnJ1bnN0YXRlLCBzaXplb2YoKnJ1bnN0YXRl
KSk7CkBAIC0yNjIsNyArMjYzLDcgQEAgdm9pZCB2Y3B1X3J1bnN0YXRlX2dldChzdHJ1Y3QgdmNw
dSAqdiwgc3RydWN0IHZjcHVfcnVuc3RhdGVfaW5mbyAqcnVuc3RhdGUpCiAgICAgICAgIHJ1bnN0
YXRlLT50aW1lW3J1bnN0YXRlLT5zdGF0ZV0gKz0gZGVsdGE7CiAKICAgICBpZiAoIHVubGlrZWx5
KGxvY2sgIT0gTlVMTCkgKQotICAgICAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywg
dik7CisgICAgICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCB2LT5zY2hlZF91bml0
KTsKIH0KIAogdWludDY0X3QgZ2V0X2NwdV9pZGxlX3RpbWUodW5zaWduZWQgaW50IGNwdSkKQEAg
LTQ3Nyw3ICs0NzgsNyBAQCBpbnQgc2NoZWRfbW92ZV9kb21haW4oc3RydWN0IGRvbWFpbiAqZCwg
c3RydWN0IGNwdXBvb2wgKmMpCiAgICAgICAgIG1pZ3JhdGVfdGltZXIoJnYtPnNpbmdsZXNob3Rf
dGltZXIsIG5ld19wKTsKICAgICAgICAgbWlncmF0ZV90aW1lcigmdi0+cG9sbF90aW1lciwgbmV3
X3ApOwogCi0gICAgICAgIGxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2tfaXJxKHYpOworICAgICAg
ICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh2LT5zY2hlZF91bml0KTsKIAogICAgICAg
ICBzY2hlZF9zZXRfYWZmaW5pdHkodiwgJmNwdW1hc2tfYWxsLCAmY3B1bWFza19hbGwpOwogCkBA
IC00ODYsNyArNDg3LDcgQEAgaW50IHNjaGVkX21vdmVfZG9tYWluKHN0cnVjdCBkb21haW4gKmQs
IHN0cnVjdCBjcHVwb29sICpjKQogICAgICAgICAvKgogICAgICAgICAgKiBXaXRoIHYtPnByb2Nl
c3NvciBtb2RpZmllZCB3ZSBtdXN0IG5vdAogICAgICAgICAgKiAtIG1ha2UgYW55IGZ1cnRoZXIg
Y2hhbmdlcyBhc3N1bWluZyB3ZSBob2xkIHRoZSBzY2hlZHVsZXIgbG9jaywKLSAgICAgICAgICog
LSB1c2UgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKCkuCisgICAgICAgICAqIC0gdXNlIHVuaXRf
c2NoZWR1bGVfdW5sb2NrX2lycSgpLgogICAgICAgICAgKi8KICAgICAgICAgc3Bpbl91bmxvY2tf
aXJxKGxvY2spOwogCkBAIC01ODUsMTEgKzU4NiwxMSBAQCB2b2lkIHZjcHVfc2xlZXBfbm9zeW5j
KHN0cnVjdCB2Y3B1ICp2KQogCiAgICAgVFJBQ0VfMkQoVFJDX1NDSEVEX1NMRUVQLCB2LT5kb21h
aW4tPmRvbWFpbl9pZCwgdi0+dmNwdV9pZCk7CiAKLSAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9s
b2NrX2lycXNhdmUodiwgJmZsYWdzKTsKKyAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2ly
cXNhdmUodi0+c2NoZWRfdW5pdCwgJmZsYWdzKTsKIAogICAgIHZjcHVfc2xlZXBfbm9zeW5jX2xv
Y2tlZCh2KTsKIAotICAgIHZjcHVfc2NoZWR1bGVfdW5sb2NrX2lycXJlc3RvcmUobG9jaywgZmxh
Z3MsIHYpOworICAgIHVuaXRfc2NoZWR1bGVfdW5sb2NrX2lycXJlc3RvcmUobG9jaywgZmxhZ3Ms
IHYtPnNjaGVkX3VuaXQpOwogfQogCiB2b2lkIHZjcHVfc2xlZXBfc3luYyhzdHJ1Y3QgdmNwdSAq
dikKQEAgLTYwOSw3ICs2MTAsNyBAQCB2b2lkIHZjcHVfd2FrZShzdHJ1Y3QgdmNwdSAqdikKIAog
ICAgIFRSQUNFXzJEKFRSQ19TQ0hFRF9XQUtFLCB2LT5kb21haW4tPmRvbWFpbl9pZCwgdi0+dmNw
dV9pZCk7CiAKLSAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycXNhdmUodiwgJmZsYWdz
KTsKKyAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycXNhdmUodi0+c2NoZWRfdW5pdCwg
JmZsYWdzKTsKIAogICAgIGlmICggbGlrZWx5KHZjcHVfcnVubmFibGUodikpICkKICAgICB7CkBA
IC02MjMsNyArNjI0LDcgQEAgdm9pZCB2Y3B1X3dha2Uoc3RydWN0IHZjcHUgKnYpCiAgICAgICAg
ICAgICB2Y3B1X3J1bnN0YXRlX2NoYW5nZSh2LCBSVU5TVEFURV9vZmZsaW5lLCBOT1coKSk7CiAg
ICAgfQogCi0gICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywg
dik7CisgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywgdi0+
c2NoZWRfdW5pdCk7CiB9CiAKIHZvaWQgdmNwdV91bmJsb2NrKHN0cnVjdCB2Y3B1ICp2KQpAQCAt
NjkxLDkgKzY5Miw5IEBAIHN0YXRpYyB2b2lkIHZjcHVfbW92ZV9sb2NrZWQoc3RydWN0IHZjcHUg
KnYsIHVuc2lnbmVkIGludCBuZXdfY3B1KQogICogVGhlc2Ugc3RlcHMgYXJlIGVuY2Fwc3VsYXRl
ZCBpbiB0aGUgZm9sbG93aW5nIHR3byBmdW5jdGlvbnM7IHRoZXkKICAqIHNob3VsZCBiZSBjYWxs
ZWQgbGlrZSB0aGlzOgogICoKLSAqICAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9sb2NrX2lycSh2
KTsKKyAqICAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh1bml0KTsKICAqICAgICB2
Y3B1X21pZ3JhdGVfc3RhcnQodik7Ci0gKiAgICAgdmNwdV9zY2hlZHVsZV91bmxvY2tfaXJxKGxv
Y2ssIHYpCisgKiAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHVuaXQpCiAgKiAg
ICAgdmNwdV9taWdyYXRlX2ZpbmlzaCh2KTsKICAqCiAgKiB2Y3B1X21pZ3JhdGVfZmluaXNoKCkg
d2lsbCBkbyB0aGUgd29yayBub3cgaWYgaXQgY2FuLCBvciBzaW1wbHkKQEAgLTgxMiw3ICs4MTMs
NyBAQCB2b2lkIHJlc3RvcmVfdmNwdV9hZmZpbml0eShzdHJ1Y3QgZG9tYWluICpkKQogICAgICAg
ICAgKiBzZXQgdi0+cHJvY2Vzc29yIG9mIGVhY2ggb2YgdGhlaXIgdkNQVXMgdG8gc29tZXRoaW5n
IHRoYXQgd2lsbAogICAgICAgICAgKiBtYWtlIHNlbnNlIGZvciB0aGUgc2NoZWR1bGVyIG9mIHRo
ZSBjcHVwb29sIGluIHdoaWNoIHRoZXkgYXJlIGluLgogICAgICAgICAgKi8KLSAgICAgICAgbG9j
ayA9IHZjcHVfc2NoZWR1bGVfbG9ja19pcnEodik7CisgICAgICAgIGxvY2sgPSB1bml0X3NjaGVk
dWxlX2xvY2tfaXJxKHYtPnNjaGVkX3VuaXQpOwogCiAgICAgICAgIGNwdW1hc2tfYW5kKGNwdW1h
c2tfc2NyYXRjaF9jcHUoY3B1KSwgdi0+Y3B1X2hhcmRfYWZmaW5pdHksCiAgICAgICAgICAgICAg
ICAgICAgIGNwdXBvb2xfZG9tYWluX2NwdW1hc2soZCkpOwpAQCAtODQxLDcgKzg0Miw3IEBAIHZv
aWQgcmVzdG9yZV92Y3B1X2FmZmluaXR5KHN0cnVjdCBkb21haW4gKmQpCiAgICAgICAgIHNwaW5f
dW5sb2NrX2lycShsb2NrKTsKIAogICAgICAgICAvKiB2LT5wcm9jZXNzb3IgbWlnaHQgaGF2ZSBj
aGFuZ2VkLCBzbyByZWFjcXVpcmUgdGhlIGxvY2suICovCi0gICAgICAgIGxvY2sgPSB2Y3B1X3Nj
aGVkdWxlX2xvY2tfaXJxKHYpOworICAgICAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2ly
cSh2LT5zY2hlZF91bml0KTsKICAgICAgICAgdi0+c2NoZWRfdW5pdC0+cmVzID0gc2NoZWRfcGlj
a19yZXNvdXJjZSh2Y3B1X3NjaGVkdWxlcih2KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB2LT5zY2hlZF91bml0KTsKICAgICAgICAgdi0+cHJvY2Vz
c29yID0gdi0+c2NoZWRfdW5pdC0+cmVzLT5tYXN0ZXJfY3B1OwpAQCAtODc2LDcgKzg3Nyw3IEBA
IGludCBjcHVfZGlzYWJsZV9zY2hlZHVsZXIodW5zaWduZWQgaW50IGNwdSkKICAgICAgICAgZm9y
X2VhY2hfdmNwdSAoIGQsIHYgKQogICAgICAgICB7CiAgICAgICAgICAgICB1bnNpZ25lZCBsb25n
IGZsYWdzOwotICAgICAgICAgICAgc3BpbmxvY2tfdCAqbG9jayA9IHZjcHVfc2NoZWR1bGVfbG9j
a19pcnFzYXZlKHYsICZmbGFncyk7CisgICAgICAgICAgICBzcGlubG9ja190ICpsb2NrID0gdW5p
dF9zY2hlZHVsZV9sb2NrX2lycXNhdmUodi0+c2NoZWRfdW5pdCwgJmZsYWdzKTsKIAogICAgICAg
ICAgICAgY3B1bWFza19hbmQoJm9ubGluZV9hZmZpbml0eSwgdi0+Y3B1X2hhcmRfYWZmaW5pdHks
IGMtPmNwdV92YWxpZCk7CiAgICAgICAgICAgICBpZiAoIGNwdW1hc2tfZW1wdHkoJm9ubGluZV9h
ZmZpbml0eSkgJiYKQEAgLTg4NSw3ICs4ODYsNyBAQCBpbnQgY3B1X2Rpc2FibGVfc2NoZWR1bGVy
KHVuc2lnbmVkIGludCBjcHUpCiAgICAgICAgICAgICAgICAgaWYgKCB2LT5hZmZpbml0eV9icm9r
ZW4gKQogICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgLyogVGhlIHZjcHUg
aXMgdGVtcG9yYXJpbHkgcGlubmVkLCBjYW4ndCBtb3ZlIGl0LiAqLwotICAgICAgICAgICAgICAg
ICAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnFyZXN0b3JlKGxvY2ssIGZsYWdzLCB2KTsKKyAg
ICAgICAgICAgICAgICAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBm
bGFncywgdi0+c2NoZWRfdW5pdCk7CiAgICAgICAgICAgICAgICAgICAgIHJldCA9IC1FQUREUklO
VVNFOwogICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICB9CkBAIC04
OTgsNyArODk5LDcgQEAgaW50IGNwdV9kaXNhYmxlX3NjaGVkdWxlcih1bnNpZ25lZCBpbnQgY3B1
KQogICAgICAgICAgICAgaWYgKCB2LT5wcm9jZXNzb3IgIT0gY3B1ICkKICAgICAgICAgICAgIHsK
ICAgICAgICAgICAgICAgICAvKiBUaGUgdmNwdSBpcyBub3Qgb24gdGhpcyBjcHUsIHNvIHdlIGNh
biBtb3ZlIG9uLiAqLwotICAgICAgICAgICAgICAgIHZjcHVfc2NoZWR1bGVfdW5sb2NrX2lycXJl
c3RvcmUobG9jaywgZmxhZ3MsIHYpOworICAgICAgICAgICAgICAgIHVuaXRfc2NoZWR1bGVfdW5s
b2NrX2lycXJlc3RvcmUobG9jaywgZmxhZ3MsIHYtPnNjaGVkX3VuaXQpOwogICAgICAgICAgICAg
ICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgfQogCkBAIC05MTEsNyArOTEyLDcgQEAgaW50IGNw
dV9kaXNhYmxlX3NjaGVkdWxlcih1bnNpZ25lZCBpbnQgY3B1KQogICAgICAgICAgICAgICogICAg
dGhpbmdzIHdvdWxkIGhhdmUgZmFpbGVkIGJlZm9yZSBnZXR0aW5nIGluIGhlcmUuCiAgICAgICAg
ICAgICAgKi8KICAgICAgICAgICAgIHZjcHVfbWlncmF0ZV9zdGFydCh2KTsKLSAgICAgICAgICAg
IHZjcHVfc2NoZWR1bGVfdW5sb2NrX2lycXJlc3RvcmUobG9jaywgZmxhZ3MsIHYpOworICAgICAg
ICAgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxcmVzdG9yZShsb2NrLCBmbGFncywgdi0+c2No
ZWRfdW5pdCk7CiAKICAgICAgICAgICAgIHZjcHVfbWlncmF0ZV9maW5pc2godik7CiAKQEAgLTk3
NSw3ICs5NzYsNyBAQCBzdGF0aWMgaW50IHZjcHVfc2V0X2FmZmluaXR5KAogICAgIHNwaW5sb2Nr
X3QgKmxvY2s7CiAgICAgaW50IHJldCA9IDA7CiAKLSAgICBsb2NrID0gdmNwdV9zY2hlZHVsZV9s
b2NrX2lycSh2KTsKKyAgICBsb2NrID0gdW5pdF9zY2hlZHVsZV9sb2NrX2lycSh2LT5zY2hlZF91
bml0KTsKIAogICAgIGlmICggdi0+YWZmaW5pdHlfYnJva2VuICkKICAgICAgICAgcmV0ID0gLUVC
VVNZOwpAQCAtOTk3LDcgKzk5OCw3IEBAIHN0YXRpYyBpbnQgdmNwdV9zZXRfYWZmaW5pdHkoCiAg
ICAgICAgIHZjcHVfbWlncmF0ZV9zdGFydCh2KTsKICAgICB9CiAKLSAgICB2Y3B1X3NjaGVkdWxl
X3VubG9ja19pcnEobG9jaywgdik7CisgICAgdW5pdF9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ss
IHYtPnNjaGVkX3VuaXQpOwogCiAgICAgZG9tYWluX3VwZGF0ZV9ub2RlX2FmZmluaXR5KHYtPmRv
bWFpbik7CiAKQEAgLTExMjksMTAgKzExMzAsMTAgQEAgc3RhdGljIGxvbmcgZG9fcG9sbChzdHJ1
Y3Qgc2NoZWRfcG9sbCAqc2NoZWRfcG9sbCkKIGxvbmcgdmNwdV95aWVsZCh2b2lkKQogewogICAg
IHN0cnVjdCB2Y3B1ICogdj1jdXJyZW50OwotICAgIHNwaW5sb2NrX3QgKmxvY2sgPSB2Y3B1X3Nj
aGVkdWxlX2xvY2tfaXJxKHYpOworICAgIHNwaW5sb2NrX3QgKmxvY2sgPSB1bml0X3NjaGVkdWxl
X2xvY2tfaXJxKHYtPnNjaGVkX3VuaXQpOwogCiAgICAgc2NoZWRfeWllbGQodmNwdV9zY2hlZHVs
ZXIodiksIHYtPnNjaGVkX3VuaXQpOwotICAgIHZjcHVfc2NoZWR1bGVfdW5sb2NrX2lycShsb2Nr
LCB2KTsKKyAgICB1bml0X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgdi0+c2NoZWRfdW5pdCk7
CiAKICAgICBTQ0hFRF9TVEFUX0NSQU5LKHZjcHVfeWllbGQpOwogCkBAIC0xMjI5LDcgKzEyMzAs
NyBAQCBpbnQgdmNwdV90ZW1wb3JhcnlfYWZmaW5pdHkoc3RydWN0IHZjcHUgKnYsIHVuc2lnbmVk
IGludCBjcHUsIHVpbnQ4X3QgcmVhc29uKQogICAgIGludCByZXQgPSAtRUlOVkFMOwogICAgIGJv
b2wgbWlncmF0ZTsKIAotICAgIGxvY2sgPSB2Y3B1X3NjaGVkdWxlX2xvY2tfaXJxKHYpOworICAg
IGxvY2sgPSB1bml0X3NjaGVkdWxlX2xvY2tfaXJxKHYtPnNjaGVkX3VuaXQpOwogCiAgICAgaWYg
KCBjcHUgPT0gTlJfQ1BVUyApCiAgICAgewpAQCAtMTI2Miw3ICsxMjYzLDcgQEAgaW50IHZjcHVf
dGVtcG9yYXJ5X2FmZmluaXR5KHN0cnVjdCB2Y3B1ICp2LCB1bnNpZ25lZCBpbnQgY3B1LCB1aW50
OF90IHJlYXNvbikKICAgICBpZiAoIG1pZ3JhdGUgKQogICAgICAgICB2Y3B1X21pZ3JhdGVfc3Rh
cnQodik7CiAKLSAgICB2Y3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgdik7CisgICAgdW5p
dF9zY2hlZHVsZV91bmxvY2tfaXJxKGxvY2ssIHYtPnNjaGVkX3VuaXQpOwogCiAgICAgaWYgKCBt
aWdyYXRlICkKICAgICAgICAgdmNwdV9taWdyYXRlX2ZpbmlzaCh2KTsKZGlmZiAtLWdpdCBhL3hl
bi9pbmNsdWRlL3hlbi9zY2hlZC1pZi5oIGIveGVuL2luY2x1ZGUveGVuL3NjaGVkLWlmLmgKaW5k
ZXggMmIxNTJkMWM3NS4uYjhjYzM3OWUzYSAxMDA2NDQKLS0tIGEveGVuL2luY2x1ZGUveGVuL3Nj
aGVkLWlmLmgKKysrIGIveGVuL2luY2x1ZGUveGVuL3NjaGVkLWlmLmgKQEAgLTEwMiwyMiArMTAy
LDIyIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBraW5kIyNfc2NoZWR1bGVfdW5sb2NrIyNpcnEoc3Bp
bmxvY2tfdCAqbG9jayBcCiAKICNkZWZpbmUgRVhUUkFfVFlQRShhcmcpCiBzY2hlZF9sb2NrKHBj
cHUsIHVuc2lnbmVkIGludCBjcHUsICAgICBjcHUsICkKLXNjaGVkX2xvY2sodmNwdSwgY29uc3Qg
c3RydWN0IHZjcHUgKnYsIHYtPnByb2Nlc3NvciwgKQorc2NoZWRfbG9jayh1bml0LCBjb25zdCBz
dHJ1Y3Qgc2NoZWRfdW5pdCAqaSwgaS0+cmVzLT5tYXN0ZXJfY3B1LCApCiBzY2hlZF9sb2NrKHBj
cHUsIHVuc2lnbmVkIGludCBjcHUsICAgICBjcHUsICAgICAgICAgIF9pcnEpCi1zY2hlZF9sb2Nr
KHZjcHUsIGNvbnN0IHN0cnVjdCB2Y3B1ICp2LCB2LT5wcm9jZXNzb3IsIF9pcnEpCitzY2hlZF9s
b2NrKHVuaXQsIGNvbnN0IHN0cnVjdCBzY2hlZF91bml0ICppLCBpLT5yZXMtPm1hc3Rlcl9jcHUs
IF9pcnEpCiBzY2hlZF91bmxvY2socGNwdSwgdW5zaWduZWQgaW50IGNwdSwgICAgIGNwdSwgKQot
c2NoZWRfdW5sb2NrKHZjcHUsIGNvbnN0IHN0cnVjdCB2Y3B1ICp2LCB2LT5wcm9jZXNzb3IsICkK
K3NjaGVkX3VubG9jayh1bml0LCBjb25zdCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqaSwgaS0+cmVzLT5t
YXN0ZXJfY3B1LCApCiBzY2hlZF91bmxvY2socGNwdSwgdW5zaWduZWQgaW50IGNwdSwgICAgIGNw
dSwgICAgICAgICAgX2lycSkKLXNjaGVkX3VubG9jayh2Y3B1LCBjb25zdCBzdHJ1Y3QgdmNwdSAq
diwgdi0+cHJvY2Vzc29yLCBfaXJxKQorc2NoZWRfdW5sb2NrKHVuaXQsIGNvbnN0IHN0cnVjdCBz
Y2hlZF91bml0ICppLCBpLT5yZXMtPm1hc3Rlcl9jcHUsIF9pcnEpCiAjdW5kZWYgRVhUUkFfVFlQ
RQogCiAjZGVmaW5lIEVYVFJBX1RZUEUoYXJnKSAsIHVuc2lnbmVkIGxvbmcgYXJnCiAjZGVmaW5l
IHNwaW5fdW5sb2NrX2lycXNhdmUgc3Bpbl91bmxvY2tfaXJxcmVzdG9yZQogc2NoZWRfbG9jayhw
Y3B1LCB1bnNpZ25lZCBpbnQgY3B1LCAgICAgY3B1LCAgICAgICAgICBfaXJxc2F2ZSwgKmZsYWdz
KQotc2NoZWRfbG9jayh2Y3B1LCBjb25zdCBzdHJ1Y3QgdmNwdSAqdiwgdi0+cHJvY2Vzc29yLCBf
aXJxc2F2ZSwgKmZsYWdzKQorc2NoZWRfbG9jayh1bml0LCBjb25zdCBzdHJ1Y3Qgc2NoZWRfdW5p
dCAqaSwgaS0+cmVzLT5tYXN0ZXJfY3B1LCBfaXJxc2F2ZSwgKmZsYWdzKQogI3VuZGVmIHNwaW5f
dW5sb2NrX2lycXNhdmUKIHNjaGVkX3VubG9jayhwY3B1LCB1bnNpZ25lZCBpbnQgY3B1LCAgICAg
Y3B1LCAgICAgICAgICBfaXJxcmVzdG9yZSwgZmxhZ3MpCi1zY2hlZF91bmxvY2sodmNwdSwgY29u
c3Qgc3RydWN0IHZjcHUgKnYsIHYtPnByb2Nlc3NvciwgX2lycXJlc3RvcmUsIGZsYWdzKQorc2No
ZWRfdW5sb2NrKHVuaXQsIGNvbnN0IHN0cnVjdCBzY2hlZF91bml0ICppLCBpLT5yZXMtPm1hc3Rl
cl9jcHUsIF9pcnFyZXN0b3JlLCBmbGFncykKICN1bmRlZiBFWFRSQV9UWVBFCiAKICN1bmRlZiBz
Y2hlZF91bmxvY2sKLS0gCjIuMTYuNAoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhl
bnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5m
by94ZW4tZGV2ZWw=

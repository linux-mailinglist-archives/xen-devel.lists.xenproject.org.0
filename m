Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id CD6B32F70F
	for <lists+xen-devel@lfdr.de>; Thu, 30 May 2019 07:19:58 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hWDPe-0002qf-G2; Thu, 30 May 2019 05:15:38 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=IXeH=T5=bombadil.infradead.org=mchehab@srs-us1.protection.inumbo.net>)
 id 1hW7wP-0001ep-O3
 for xen-devel@lists.xenproject.org; Wed, 29 May 2019 23:25:05 +0000
X-Inumbo-ID: fbd55b6a-8268-11e9-8980-bc764e045a96
Received: from bombadil.infradead.org (unknown [2607:7c80:54:e::133])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id fbd55b6a-8268-11e9-8980-bc764e045a96;
 Wed, 29 May 2019 23:25:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Sender:Content-Transfer-Encoding:
 Content-Type:MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:
 To:From:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
 Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=RazRaO77oi4v76+wx0dJdEaoi/VQFuVEwWYPPHKu8xs=; b=dSUfwFTu0gLEPKtvUampsHgA4J
 kPaJt8m6hx9U6afg1qs4m5bepAFuSc2co2qkpWV5JcLBvveizAbZbEd3p4LLmv6HrJBMOs2ag3B9z
 St0HgJpW8+69omI+VNqqut7Kbhzx43aQntWAV3rAws5Rk/pHDc4ALTSSAfzdUMXhjl2j8Bl7iHJF4
 UrIM2q+VvtNabupNTw4ys30hAi5nWGZj3pPZyu0LivD8vUBT9tOYFiS8GdMbYj/8/J5nJpiIMxW3H
 ftxzi9bqvZHyqhg2efDLwnAZwS0uLJMzc4bFMiGxI6oL++P0pmkjSIoPTjO/d2KQfgzG1O6gkjUk3
 yk5L8OdA==;
Received: from 177.132.232.81.dynamic.adsl.gvt.net.br ([177.132.232.81]
 helo=bombadil.infradead.org)
 by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
 id 1hW7vN-0005Sn-OP; Wed, 29 May 2019 23:24:02 +0000
Received: from mchehab by bombadil.infradead.org with local (Exim 4.92)
 (envelope-from <mchehab@bombadil.infradead.org>)
 id 1hW7vJ-0007yG-2E; Wed, 29 May 2019 20:23:57 -0300
From: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
To: Linux Doc Mailing List <linux-doc@vger.kernel.org>
Date: Wed, 29 May 2019 20:23:53 -0300
Message-Id: <f9fecacbe4ce0b2b3aed38d71ae3753f2daf3ce3.1559171394.git.mchehab+samsung@kernel.org>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <cover.1559171394.git.mchehab+samsung@kernel.org>
References: <cover.1559171394.git.mchehab+samsung@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Thu, 30 May 2019 05:15:37 +0000
Subject: [Xen-devel] [PATCH 22/22] docs: fix broken documentation links
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Andrew Lunn <andrew@lunn.ch>, Andy Lutomirski <luto@kernel.org>,
 Wolfram Sang <wsa@the-dreams.de>, Catalin Marinas <catalin.marinas@arm.com>,
 Linus Walleij <linus.walleij@linaro.org>, Will Deacon <will.deacon@arm.com>,
 Pavel Tatashin <pasha.tatashin@oracle.com>, Paul Mackerras <paulus@samba.org>,
 Alessia Mantegazza <amantegazza@vaga.pv.it>,
 Mauro Carvalho Chehab <mchehab+samsung@kernel.org>,
 Bartosz Golaszewski <bgolaszewski@baylibre.com>,
 "Paul E. McKenney" <paulmck@linux.ibm.com>,
 Kevin Hilman <khilman@baylibre.com>, James Morris <jmorris@namei.org>,
 linux-acpi@vger.kernel.org, Ingo Molnar <mingo@redhat.com>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 xen-devel@lists.xenproject.org, Jason Wang <jasowang@redhat.com>,
 Alexander Popov <alex.popov@linux.com>, Qian Cai <cai@lca.pw>,
 Al Viro <viro@zeniv.linux.org.uk>,
 Thomas Preston <thomas.preston@codethink.co.uk>,
 Thomas Gleixner <tglx@linutronix.de>, Kairui Song <kasong@redhat.com>,
 Jakub Wilk <jwilk@jwilk.net>, Ding Xiang <dingxiang@cmss.chinamobile.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 "Rafael J. Wysocki" <rjw@rjwysocki.net>, linux-kernel@vger.kernel.org,
 Paul Burton <paul.burton@mips.com>, Jiri Kosina <jkosina@suse.cz>,
 Casey Schaufler <casey@schaufler-ca.com>,
 Andrew Morton <akpm@linux-foundation.org>, Lu Baolu <baolu.lu@linux.intel.com>,
 Mark Rutland <mark.rutland@arm.com>, Feng Tang <feng.tang@intel.com>,
 Dave Hansen <dave.hansen@linux.intel.com>, Mimi Zohar <zohar@linux.ibm.com>,
 Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>, linux-mm@kvack.org,
 Masahiro Yamada <yamada.masahiro@socionext.com>,
 Yannik Sembritzki <yannik@sembritzki.me>, Harry Wei <harryxiyou@gmail.com>,
 linux-i2c@vger.kernel.org, Shuah Khan <shuah@kernel.org>,
 Stephen Rothwell <sfr@canb.auug.org.au>,
 Stefano Stabellini <sstabellini@kernel.org>, Alexandre Ghiti <alex@ghiti.fr>,
 YueHaibing <yuehaibing@huawei.com>, Robert Moore <robert.moore@intel.com>,
 AKASHI Takahiro <takahiro.akashi@linaro.org>, Len Brown <lenb@kernel.org>,
 Joerg Roedel <jroedel@suse.de>, linux-arm-msm@vger.kernel.org,
 linuxppc-dev@lists.ozlabs.org, Mauro Carvalho Chehab <mchehab@infradead.org>,
 linux-gpio@vger.kernel.org, Claudiu Manoil <claudiu.manoil@nxp.com>,
 Florian Fainelli <f.fainelli@gmail.com>,
 Jacek Anaszewski <jacek.anaszewski@gmail.com>,
 Bjorn Helgaas <bhelgaas@google.com>, linux-amlogic@lists.infradead.org,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Mika Westerberg <mika.westerberg@linux.intel.com>,
 linux-arm-kernel@lists.infradead.org, Tony Luck <tony.luck@intel.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 James Morse <james.morse@arm.com>, Michael Ellerman <mpe@ellerman.id.au>,
 Samuel Mendoza-Jonas <sam@mendozajonas.com>, linux-pci@vger.kernel.org,
 Bhupesh Sharma <bhsharma@redhat.com>,
 Jonathan Cameron <Jonathan.Cameron@huawei.com>,
 platform-driver-x86@vger.kernel.org, Quentin Perret <quentin.perret@arm.com>,
 linux-kselftest@vger.kernel.org, Alex Shi <alex.shi@linux.alibaba.com>,
 Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>, Baoquan He <bhe@redhat.com>,
 Jonathan Corbet <corbet@lwn.net>, Raphael Gault <raphael.gault@arm.com>,
 Joel Stanley <joel@jms.id.au>, Federico Vaga <federico.vaga@vaga.pv.it>,
 Darren Hart <dvhart@infradead.org>, linux-edac@vger.kernel.org,
 Erik Schmauss <erik.schmauss@intel.com>, "Serge E. Hallyn" <serge@hallyn.com>,
 Palmer Dabbelt <palmer@sifive.com>, Kees Cook <keescook@chromium.org>,
 Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>,
 =?UTF-8?q?Jonathan=20Neusch=C3=A4fer?= <j.neuschaefer@gmx.net>,
 SeongJae Park <sj38.park@gmail.com>, Mark Brown <broonie@kernel.org>,
 Borislav Petkov <bp@alien8.de>, Sunil Muthuswamy <sunilmut@microsoft.com>,
 virtualization@lists.linux-foundation.org, devel@acpica.org,
 Ard Biesheuvel <ard.biesheuvel@linaro.org>,
 Liam Girdwood <lgirdwood@gmail.com>,
 Sakari Ailus <sakari.ailus@linux.intel.com>, Olof Johansson <olof@lixom.net>,
 Logan Gunthorpe <logang@deltatee.com>, "David S. Miller" <davem@davemloft.net>,
 "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>,
 Sven Van Asbroeck <thesven73@gmail.com>, Michal Hocko <mhocko@suse.com>,
 kvm@vger.kernel.org, "Michael S. Tsirkin" <mst@redhat.com>,
 Peter Zijlstra <peterz@infradead.org>, Thorsten Leemhuis <linux@leemhuis.info>,
 David Howells <dhowells@redhat.com>, David Brown <david.brown@linaro.org>,
 "H. Peter Anvin" <hpa@zytor.com>, devel@driverdev.osuosl.org,
 Manfred Spraul <manfred@colorfullife.com>, x86@kernel.org,
 Russell King <linux@armlinux.org.uk>, Mike Rapoport <rppt@linux.ibm.com>,
 Andy Gross <agross@kernel.org>, Dave Young <dyoung@redhat.com>,
 devicetree@vger.kernel.org, Arnaldo Carvalho de Melo <acme@redhat.com>,
 Jerome Glisse <jglisse@redhat.com>, Rob Herring <robh+dt@kernel.org>,
 Josh Poimboeuf <jpoimboe@redhat.com>, Dmitry Vyukov <dvyukov@google.com>,
 Luis Chamberlain <mcgrof@kernel.org>, Juergen Gross <jgross@suse.com>,
 Denis Efremov <efremov@ispras.ru>, netdev@vger.kernel.org,
 Nicolas Ferre <nicolas.ferre@microchip.com>,
 Changbin Du <changbin.du@intel.com>, linux-security-module@vger.kernel.org,
 Robin Murphy <robin.murphy@arm.com>, Andy Shevchenko <andy@infradead.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

TW9zdGx5IGR1ZSB0byB4ODYgYW5kIGFjcGkgY29udmVyc2lvbiwgc2V2ZXJhbCBkb2N1bWVudGF0
aW9uCmxpbmtzIGFyZSBzdGlsbCBwb2ludGluZyB0byB0aGUgb2xkIGZpbGUuIEZpeCB0aGVtLgoK
U2lnbmVkLW9mZi1ieTogTWF1cm8gQ2FydmFsaG8gQ2hlaGFiIDxtY2hlaGFiK3NhbXN1bmdAa2Vy
bmVsLm9yZz4KLS0tCiBEb2N1bWVudGF0aW9uL2FjcGkvZHNkL2xlZHMudHh0ICAgICAgICAgICAg
ICAgICAgfCAgMiArLQogRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9rZXJuZWwtcGFyYW1ldGVy
cy5yc3QgIHwgIDYgKysrLS0tCiBEb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL2tlcm5lbC1wYXJh
bWV0ZXJzLnR4dCAgfCAxNiArKysrKysrKy0tLS0tLS0tCiBEb2N1bWVudGF0aW9uL2FkbWluLWd1
aWRlL3Jhcy5yc3QgICAgICAgICAgICAgICAgfCAgMiArLQogLi4uL2RldmljZXRyZWUvYmluZGlu
Z3MvbmV0L2ZzbC1lbmV0Yy50eHQgICAgICAgIHwgIDcgKysrLS0tLQogLi4uL2JpbmRpbmdzL3Bj
aS9hbWxvZ2ljLG1lc29uLXBjaWUudHh0ICAgICAgICAgIHwgIDIgKy0KIC4uLi9iaW5kaW5ncy9y
ZWd1bGF0b3IvcWNvbSxycG1oLXJlZ3VsYXRvci50eHQgICB8ICAyICstCiBEb2N1bWVudGF0aW9u
L2RldmljZXRyZWUvYm9vdGluZy13aXRob3V0LW9mLnR4dCAgfCAgMiArLQogRG9jdW1lbnRhdGlv
bi9kcml2ZXItYXBpL2dwaW8vYm9hcmQucnN0ICAgICAgICAgIHwgIDIgKy0KIERvY3VtZW50YXRp
b24vZHJpdmVyLWFwaS9ncGlvL2NvbnN1bWVyLnJzdCAgICAgICB8ICAyICstCiAuLi4vZmlybXdh
cmUtZ3VpZGUvYWNwaS9lbnVtZXJhdGlvbi5yc3QgICAgICAgICAgfCAgMiArLQogLi4uL2Zpcm13
YXJlLWd1aWRlL2FjcGkvbWV0aG9kLXRyYWNpbmcucnN0ICAgICAgIHwgIDIgKy0KIERvY3VtZW50
YXRpb24vaTJjL2luc3RhbnRpYXRpbmctZGV2aWNlcyAgICAgICAgICB8ICAyICstCiBEb2N1bWVu
dGF0aW9uL3N5c2N0bC9rZXJuZWwudHh0ICAgICAgICAgICAgICAgICAgfCAgNCArKy0tCiAuLi4v
dHJhbnNsYXRpb25zL2l0X0lUL3Byb2Nlc3MvaG93dG8ucnN0ICAgICAgICAgfCAgMiArLQogLi4u
L2l0X0lUL3Byb2Nlc3Mvc3RhYmxlLWtlcm5lbC1ydWxlcy5yc3QgICAgICAgIHwgIDQgKystLQog
Li4uL3RyYW5zbGF0aW9ucy96aF9DTi9wcm9jZXNzLzQuQ29kaW5nLnJzdCAgICAgIHwgIDIgKy0K
IERvY3VtZW50YXRpb24veDg2L3g4Nl82NC81bGV2ZWwtcGFnaW5nLnJzdCAgICAgICB8ICAyICst
CiBEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvYm9vdC1vcHRpb25zLnJzdCAgICAgICAgfCAgNCAr
Ky0tCiAuLi4veDg2L3g4Nl82NC9mYWtlLW51bWEtZm9yLWNwdXNldHMucnN0ICAgICAgICAgfCAg
MiArLQogTUFJTlRBSU5FUlMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwg
IDYgKysrLS0tCiBhcmNoL2FybS9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgMiArLQogYXJjaC9hcm02NC9rZXJuZWwva2V4ZWNfaW1hZ2UuYyAgICAgICAgICAgICAg
ICAgIHwgIDIgKy0KIGFyY2gvcG93ZXJwYy9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB8ICAyICstCiBhcmNoL3g4Ni9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgfCAxNiArKysrKysrKy0tLS0tLS0tCiBhcmNoL3g4Ni9LY29uZmlnLmRlYnVnICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYvYm9vdC9oZWFkZXIuUyAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gveDg2L2VudHJ5L2VudHJ5XzY0LlMg
ICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBhcmNoL3g4Ni9pbmNsdWRlL2FzbS9ib290
cGFyYW1fdXRpbHMuaCAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYvaW5jbHVkZS9hc20vcGFn
ZV82NF90eXBlcy5oICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gveDg2L2luY2x1ZGUvYXNtL3Bn
dGFibGVfNjRfdHlwZXMuaCAgICAgICAgICB8ICAyICstCiBhcmNoL3g4Ni9rZXJuZWwvY3B1L21p
Y3JvY29kZS9hbWQuYyAgICAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYva2VybmVsL2tleGVj
LWJ6aW1hZ2U2NC5jICAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gveDg2L2tlcm5lbC9wY2kt
ZG1hLmMgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBhcmNoL3g4Ni9tbS90bGIuYyAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYvcGxhdGZvcm0v
cHZoL2VubGlnaHRlbi5jICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvYWNwaS9LY29u
ZmlnICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDEwICsrKysrLS0tLS0KIGRyaXZlcnMv
bmV0L2V0aGVybmV0L2ZhcmFkYXkvZnRnbWFjMTAwLmMgICAgICAgICB8ICAyICstCiAuLi4vZmll
bGRidXMvRG9jdW1lbnRhdGlvbi9maWVsZGJ1c19kZXYudHh0ICAgICAgfCAgNCArKy0tCiBkcml2
ZXJzL3Zob3N0L3Zob3N0LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQogaW5j
bHVkZS9hY3BpL2FjcGlfZHJpdmVycy5oICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGlu
Y2x1ZGUvbGludXgvZnNfY29udGV4dC5oICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBp
bmNsdWRlL2xpbnV4L2xzbV9ob29rcy5oICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiArLQog
bW0vS2NvbmZpZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0K
IHNlY3VyaXR5L0tjb25maWcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICst
CiB0b29scy9pbmNsdWRlL2xpbnV4L2Vyci5oICAgICAgICAgICAgICAgICAgICAgICAgfCAgMiAr
LQogdG9vbHMvb2JqdG9vbC9Eb2N1bWVudGF0aW9uL3N0YWNrLXZhbGlkYXRpb24udHh0IHwgIDQg
KystLQogdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMveDg2L3Byb3RlY3Rpb25fa2V5cy5jICAgIHwg
IDIgKy0KIDQ4IGZpbGVzIGNoYW5nZWQsIDc3IGluc2VydGlvbnMoKyksIDc4IGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vYWNwaS9kc2QvbGVkcy50eHQgYi9Eb2N1bWVu
dGF0aW9uL2FjcGkvZHNkL2xlZHMudHh0CmluZGV4IDgxYTYzYWY0MmVkMi4uY2M1OGIxYTU3NGM1
IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2FjcGkvZHNkL2xlZHMudHh0CisrKyBiL0RvY3Vt
ZW50YXRpb24vYWNwaS9kc2QvbGVkcy50eHQKQEAgLTk2LDQgKzk2LDQgQEAgd2hlcmUKICAgICA8
VVJMOmh0dHA6Ly93d3cudWVmaS5vcmcvc2l0ZXMvZGVmYXVsdC9maWxlcy9yZXNvdXJjZXMvX0RT
RC1oaWVyYXJjaGljYWwtZGF0YS1leHRlbnNpb24tVVVJRC12MS4xLnBkZj4sCiAgICAgcmVmZXJl
bmNlZCAyMDE5LTAyLTIxLgogCi1bN10gRG9jdW1lbnRhdGlvbi9hY3BpL2RzZC9kYXRhLW5vZGUt
cmVmZXJlbmNlLnR4dAorWzddIERvY3VtZW50YXRpb24vZmlybXdhcmUtZ3VpZGUvYWNwaS9kc2Qv
ZGF0YS1ub2RlLXJlZmVyZW5jZXMucnN0CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2FkbWlu
LWd1aWRlL2tlcm5lbC1wYXJhbWV0ZXJzLnJzdCBiL0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUv
a2VybmVsLXBhcmFtZXRlcnMucnN0CmluZGV4IDAxMjQ5ODBkY2EyZC4uOGQzMjczZTMyZWIxIDEw
MDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL2tlcm5lbC1wYXJhbWV0ZXJzLnJz
dAorKysgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL2tlcm5lbC1wYXJhbWV0ZXJzLnJzdApA
QCAtMTY3LDcgKzE2Nyw3IEBAIHBhcmFtZXRlciBpcyBhcHBsaWNhYmxlOjoKIAlYODYtMzIJWDg2
LTMyLCBha2EgaTM4NiBhcmNoaXRlY3R1cmUgaXMgZW5hYmxlZC4KIAlYODYtNjQJWDg2LTY0IGFy
Y2hpdGVjdHVyZSBpcyBlbmFibGVkLgogCQkJTW9yZSBYODYtNjQgYm9vdCBvcHRpb25zIGNhbiBi
ZSBmb3VuZCBpbgotCQkJRG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy50eHQg
LgorCQkJRG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy5yc3QuCiAJWDg2CUVp
dGhlciAzMi1iaXQgb3IgNjQtYml0IHg4NiAoc2FtZSBhcyBYODYtMzIrWDg2LTY0KQogCVg4Nl9V
VglTR0kgVVYgc3VwcG9ydCBpcyBlbmFibGVkLgogCVhFTglYZW4gc3VwcG9ydCBpcyBlbmFibGVk
CkBAIC0xODEsMTAgKzE4MSwxMCBAQCBJbiBhZGRpdGlvbiwgdGhlIGZvbGxvd2luZyB0ZXh0IGlu
ZGljYXRlcyB0aGF0IHRoZSBvcHRpb246OgogUGFyYW1ldGVycyBkZW5vdGVkIHdpdGggQk9PVCBh
cmUgYWN0dWFsbHkgaW50ZXJwcmV0ZWQgYnkgdGhlIGJvb3QKIGxvYWRlciwgYW5kIGhhdmUgbm8g
bWVhbmluZyB0byB0aGUga2VybmVsIGRpcmVjdGx5LgogRG8gbm90IG1vZGlmeSB0aGUgc3ludGF4
IG9mIGJvb3QgbG9hZGVyIHBhcmFtZXRlcnMgd2l0aG91dCBleHRyZW1lCi1uZWVkIG9yIGNvb3Jk
aW5hdGlvbiB3aXRoIDxEb2N1bWVudGF0aW9uL3g4Ni9ib290LnR4dD4uCituZWVkIG9yIGNvb3Jk
aW5hdGlvbiB3aXRoIDxEb2N1bWVudGF0aW9uL3g4Ni9ib290LnJzdD4uCiAKIFRoZXJlIGFyZSBh
bHNvIGFyY2gtc3BlY2lmaWMga2VybmVsLXBhcmFtZXRlcnMgbm90IGRvY3VtZW50ZWQgaGVyZS4K
LVNlZSBmb3IgZXhhbXBsZSA8RG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy50
eHQ+LgorU2VlIGZvciBleGFtcGxlIDxEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvYm9vdC1vcHRp
b25zLnJzdD4uCiAKIE5vdGUgdGhhdCBBTEwga2VybmVsIHBhcmFtZXRlcnMgbGlzdGVkIGJlbG93
IGFyZSBDQVNFIFNFTlNJVElWRSwgYW5kIHRoYXQKIGEgdHJhaWxpbmcgPSBvbiB0aGUgbmFtZSBv
ZiBhbnkgcGFyYW1ldGVyIHN0YXRlcyB0aGF0IHRoYXQgcGFyYW1ldGVyIHdpbGwKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUva2VybmVsLXBhcmFtZXRlcnMudHh0IGIvRG9j
dW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9rZXJuZWwtcGFyYW1ldGVycy50eHQKaW5kZXggMTM4ZjY2
NjRiMmUyLi40YTAyZDEzNDY2MzUgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vYWRtaW4tZ3Vp
ZGUva2VybmVsLXBhcmFtZXRlcnMudHh0CisrKyBiL0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUv
a2VybmVsLXBhcmFtZXRlcnMudHh0CkBAIC01Myw3ICs1Myw3IEBACiAJCQlBQ1BJX0RFQlVHX1BS
SU5UIHN0YXRlbWVudHMsIGUuZy4sCiAJCQkgICAgQUNQSV9ERUJVR19QUklOVCgoQUNQSV9EQl9J
TkZPLCAuLi4KIAkJCVRoZSBkZWJ1Z19sZXZlbCBtYXNrIGRlZmF1bHRzIHRvICJpbmZvIi4gIFNl
ZQotCQkJRG9jdW1lbnRhdGlvbi9hY3BpL2RlYnVnLnR4dCBmb3IgbW9yZSBpbmZvcm1hdGlvbiBh
Ym91dAorCQkJRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1ndWlkZS9hY3BpL2RlYnVnLnJzdCBmb3Ig
bW9yZSBpbmZvcm1hdGlvbiBhYm91dAogCQkJZGVidWcgbGF5ZXJzIGFuZCBsZXZlbHMuCiAKIAkJ
CUVuYWJsZSBwcm9jZXNzb3IgZHJpdmVyIGluZm8gbWVzc2FnZXM6CkBAIC05NjMsNyArOTYzLDcg
QEAKIAkJCWZvciBkZXRhaWxzLgogCiAJbm9tcHgJCVtYODZdIERpc2FibGVzIEludGVsIE1lbW9y
eSBQcm90ZWN0aW9uIEV4dGVuc2lvbnMuCi0JCQlTZWUgRG9jdW1lbnRhdGlvbi94ODYvaW50ZWxf
bXB4LnR4dCBmb3IgbW9yZQorCQkJU2VlIERvY3VtZW50YXRpb24veDg2L2ludGVsX21weC5yc3Qg
Zm9yIG1vcmUKIAkJCWluZm9ybWF0aW9uIGFib3V0IHRoZSBmZWF0dXJlLgogCiAJbm9wa3UJCVtY
ODZdIERpc2FibGUgTWVtb3J5IFByb3RlY3Rpb24gS2V5cyBDUFUgZmVhdHVyZSBmb3VuZApAQCAt
MTE4OSw3ICsxMTg5LDcgQEAKIAkJCXRoYXQgaXMgdG8gYmUgZHluYW1pY2FsbHkgbG9hZGVkIGJ5
IExpbnV4LiBJZiB0aGVyZSBhcmUKIAkJCW11bHRpcGxlIHZhcmlhYmxlcyB3aXRoIHRoZSBzYW1l
IG5hbWUgYnV0IHdpdGggZGlmZmVyZW50CiAJCQl2ZW5kb3IgR1VJRHMsIGFsbCBvZiB0aGVtIHdp
bGwgYmUgbG9hZGVkLiBTZWUKLQkJCURvY3VtZW50YXRpb24vYWNwaS9zc2R0LW92ZXJsYXlzLnR4
dCBmb3IgZGV0YWlscy4KKwkJCURvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvYWNwaS9zc2R0LW92
ZXJsYXlzLnJzdCBmb3IgZGV0YWlscy4KIAogCiAJZWlzYV9pcnFfZWRnZT0JW1BBUklTQyxIV10K
QEAgLTIzODMsNyArMjM4Myw3IEBACiAKIAltY2UJCVtYODYtMzJdIE1hY2hpbmUgQ2hlY2sgRXhj
ZXB0aW9uCiAKLQltY2U9b3B0aW9uCVtYODYtNjRdIFNlZSBEb2N1bWVudGF0aW9uL3g4Ni94ODZf
NjQvYm9vdC1vcHRpb25zLnR4dAorCW1jZT1vcHRpb24JW1g4Ni02NF0gU2VlIERvY3VtZW50YXRp
b24veDg2L3g4Nl82NC9ib290LW9wdGlvbnMucnN0CiAKIAltZD0JCVtIV10gUkFJRCBzdWJzeXN0
ZW1zIGRldmljZXMgYW5kIGxldmVsCiAJCQlTZWUgRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9t
ZC5yc3QuCkBAIC0yNDM5LDcgKzI0MzksNyBAQAogCQkJc2V0IGFjY29yZGluZyB0byB0aGUKIAkJ
CUNPTkZJR19NRU1PUllfSE9UUExVR19ERUZBVUxUX09OTElORSBrZXJuZWwgY29uZmlnCiAJCQlv
cHRpb24uCi0JCQlTZWUgRG9jdW1lbnRhdGlvbi9tZW1vcnktaG90cGx1Zy50eHQuCisJCQlTZWUg
RG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9tbS9tZW1vcnktaG90cGx1Zy5yc3QuCiAKIAltZW1t
YXA9ZXhhY3RtYXAJW0tOTCxYODZdIEVuYWJsZSBzZXR0aW5nIG9mIGFuIGV4YWN0CiAJCQlFODIw
IG1lbW9yeSBtYXAsIGFzIHNwZWNpZmllZCBieSB0aGUgdXNlci4KQEAgLTI1MjgsNyArMjUyOCw3
IEBACiAJCQltZW1fZW5jcnlwdD1vbjoJCUFjdGl2YXRlIFNNRQogCQkJbWVtX2VuY3J5cHQ9b2Zm
OglEbyBub3QgYWN0aXZhdGUgU01FCiAKLQkJCVJlZmVyIHRvIERvY3VtZW50YXRpb24veDg2L2Ft
ZC1tZW1vcnktZW5jcnlwdGlvbi50eHQKKwkJCVJlZmVyIHRvIERvY3VtZW50YXRpb24vdmlydHVh
bC9rdm0vYW1kLW1lbW9yeS1lbmNyeXB0aW9uLnJzdAogCQkJZm9yIGRldGFpbHMgb24gd2hlbiBt
ZW1vcnkgZW5jcnlwdGlvbiBjYW4gYmUgYWN0aXZhdGVkLgogCiAJbWVtX3NsZWVwX2RlZmF1bHQ9
CVtTVVNQRU5EXSBEZWZhdWx0IHN5c3RlbSBzdXNwZW5kIG1vZGU6CkBAIC0zNTI4LDcgKzM1Mjgs
NyBAQAogCQkJU2VlIERvY3VtZW50YXRpb24vYmxvY2tkZXYvcGFyaWRlLnR4dC4KIAogCXBpcnE9
CQlbU01QLEFQSUNdIE1hbnVhbCBtcC10YWJsZSBzZXR1cAotCQkJU2VlIERvY3VtZW50YXRpb24v
eDg2L2kzODYvSU8tQVBJQy50eHQuCisJCQlTZWUgRG9jdW1lbnRhdGlvbi94ODYvaTM4Ni9JTy1B
UElDLnJzdC4KIAogCXBsaXA9CQlbUFBULE5FVF0gUGFyYWxsZWwgcG9ydCBuZXR3b3JrIGxpbmsK
IAkJCUZvcm1hdDogeyBwYXJwb3J0PG5yPiB8IHRpbWlkIHwgMCB9CkBAIC01MDU0LDcgKzUwNTQs
NyBAQAogCQkJQ2FuIGJlIHVzZWQgbXVsdGlwbGUgdGltZXMgZm9yIG11bHRpcGxlIGRldmljZXMu
CiAKIAl2Z2E9CQlbQk9PVCxYODYtMzJdIFNlbGVjdCBhIHBhcnRpY3VsYXIgdmlkZW8gbW9kZQot
CQkJU2VlIERvY3VtZW50YXRpb24veDg2L2Jvb3QudHh0IGFuZAorCQkJU2VlIERvY3VtZW50YXRp
b24veDg2L2Jvb3QucnN0IGFuZAogCQkJRG9jdW1lbnRhdGlvbi9zdmdhLnR4dC4KIAkJCVVzZSB2
Z2E9YXNrIGZvciBtZW51LgogCQkJVGhpcyBpcyBhY3R1YWxseSBhIGJvb3QgbG9hZGVyIHBhcmFt
ZXRlcjsgdGhlIHZhbHVlIGlzCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRl
L3Jhcy5yc3QgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL3Jhcy5yc3QKaW5kZXggYzc0OTVl
NDJlNmY0Li4yYjIwZjVmNzM4MGQgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vYWRtaW4tZ3Vp
ZGUvcmFzLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL3Jhcy5yc3QKQEAgLTE5
OSw3ICsxOTksNyBAQCBBcmNoaXRlY3R1cmUgKE1DQSlcIFsjZjNdXy4KICAgbW9kZSkuCiAKIC4u
IFsjZjNdIEZvciBtb3JlIGRldGFpbHMgYWJvdXQgdGhlIE1hY2hpbmUgQ2hlY2sgQXJjaGl0ZWN0
dXJlIChNQ0EpLAotICBwbGVhc2UgcmVhZCBEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvbWFjaGlu
ZWNoZWNrIGF0IHRoZSBLZXJuZWwgdHJlZS4KKyAgcGxlYXNlIHJlYWQgRG9jdW1lbnRhdGlvbi94
ODYveDg2XzY0L21hY2hpbmVjaGVjay5yc3QgYXQgdGhlIEtlcm5lbCB0cmVlLgogCiBFREFDIC0g
RXJyb3IgRGV0ZWN0aW9uIEFuZCBDb3JyZWN0aW9uCiAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGlu
Z3MvbmV0L2ZzbC1lbmV0Yy50eHQgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3Mv
bmV0L2ZzbC1lbmV0Yy50eHQKaW5kZXggYzgxMmUyNWFlOTBmLi4yNWZjNjg3NDE5ZGIgMTAwNjQ0
Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvZnNsLWVuZXRjLnR4
dAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0L2ZzbC1lbmV0Yy50
eHQKQEAgLTE2LDggKzE2LDggQEAgUmVxdWlyZWQgcHJvcGVydGllczoKIEluIHRoaXMgY2FzZSwg
dGhlIEVORVRDIG5vZGUgc2hvdWxkIGluY2x1ZGUgYSAibWRpbyIgc3ViLW5vZGUKIHRoYXQgaW4g
dHVybiBzaG91bGQgY29udGFpbiB0aGUgImV0aGVybmV0LXBoeSIgbm9kZSBkZXNjcmliaW5nIHRo
ZQogZXh0ZXJuYWwgcGh5LiAgQmVsb3cgcHJvcGVydGllcyBhcmUgcmVxdWlyZWQsIHRoZWlyIGJp
bmRpbmdzCi1hbHJlYWR5IGRlZmluZWQgaW4gZXRoZXJuZXQudHh0IG9yIHBoeS50eHQsIHVuZGVy
Ci1Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0LyouCithbHJlYWR5IGRlZmlu
ZWQgaW4gRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9ldGhlcm5ldC50eHQg
b3IKK0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9uZXQvcGh5LnR4dC4KIAogUmVx
dWlyZWQ6CiAKQEAgLTUxLDggKzUxLDcgQEAgRXhhbXBsZToKIGNvbm5lY3Rpb246CiAKIEluIHRo
aXMgY2FzZSwgdGhlIEVORVRDIHBvcnQgbm9kZSBkZWZpbmVzIGEgZml4ZWQgbGluayBjb25uZWN0
aW9uLAotYXMgc3BlY2lmaWVkIGJ5ICJmaXhlZC1saW5rLnR4dCIsIHVuZGVyCi1Eb2N1bWVudGF0
aW9uL2RldmljZXRyZWUvYmluZGluZ3MvbmV0LyouCithcyBzcGVjaWZpZWQgYnkgRG9jdW1lbnRh
dGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL25ldC9maXhlZC1saW5rLnR4dC4KIAogUmVxdWlyZWQ6
CiAKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9wY2kvYW1s
b2dpYyxtZXNvbi1wY2llLnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9w
Y2kvYW1sb2dpYyxtZXNvbi1wY2llLnR4dAppbmRleCAxMmIxOGY4MmQ0NDEuLmVmYTJjOGI5Yjg1
YSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL3BjaS9hbWxv
Z2ljLG1lc29uLXBjaWUudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5n
cy9wY2kvYW1sb2dpYyxtZXNvbi1wY2llLnR4dApAQCAtMyw3ICszLDcgQEAgQW1sb2dpYyBNZXNv
biBBWEcgRFdDIFBDSUUgU29DIGNvbnRyb2xsZXIKIEFtbG9naWMgTWVzb24gUENJZSBob3N0IGNv
bnRyb2xsZXIgaXMgYmFzZWQgb24gdGhlIFN5bm9wc3lzIERlc2lnbldhcmUgUENJIGNvcmUuCiBJ
dCBzaGFyZXMgY29tbW9uIGZ1bmN0aW9ucyB3aXRoIHRoZSBQQ0llIERlc2lnbldhcmUgY29yZSBk
cml2ZXIgYW5kCiBpbmhlcml0cyBjb21tb24gcHJvcGVydGllcyBkZWZpbmVkIGluCi1Eb2N1bWVu
dGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvcGNpL2Rlc2lnbndhcmUtcGNpLnR4dC4KK0RvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9wY2kvZGVzaWdud2FyZS1wY2llLnR4dC4KIAog
QWRkaXRpb25hbCBwcm9wZXJ0aWVzIGFyZSBkZXNjcmliZWQgaGVyZToKIApkaWZmIC0tZ2l0IGEv
RG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL3JlZ3VsYXRvci9xY29tLHJwbWgtcmVn
dWxhdG9yLnR4dCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9yZWd1bGF0b3Iv
cWNvbSxycG1oLXJlZ3VsYXRvci50eHQKaW5kZXggN2VmMmRiZTQ4ZThhLi4xNGQyZWVlOTZiM2Qg
MTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9yZWd1bGF0b3Iv
cWNvbSxycG1oLXJlZ3VsYXRvci50eHQKKysrIGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2Jp
bmRpbmdzL3JlZ3VsYXRvci9xY29tLHJwbWgtcmVndWxhdG9yLnR4dApAQCAtOTcsNyArOTcsNyBA
QCBTZWNvbmQgTGV2ZWwgTm9kZXMgLSBSZWd1bGF0b3JzCiAJCSAgICBzZW50IGZvciB0aGlzIHJl
Z3VsYXRvciBpbmNsdWRpbmcgdGhvc2Ugd2hpY2ggYXJlIGZvciBhCiAJCSAgICBzdHJpY3RseSBs
b3dlciBwb3dlciBzdGF0ZS4KIAotT3RoZXIgcHJvcGVydGllcyBkZWZpbmVkIGluIERvY3VtZW50
YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9yZWd1bGF0b3IudHh0CitPdGhlciBwcm9wZXJ0aWVz
IGRlZmluZWQgaW4gRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL3JlZ3VsYXRvci9y
ZWd1bGF0b3IudHh0CiBtYXkgYWxzbyBiZSB1c2VkLiAgcmVndWxhdG9yLWluaXRpYWwtbW9kZSBh
bmQgcmVndWxhdG9yLWFsbG93ZWQtbW9kZXMgbWF5IGJlCiBzcGVjaWZpZWQgZm9yIFZSTSByZWd1
bGF0b3JzIHVzaW5nIG1vZGUgdmFsdWVzIGZyb20KIGluY2x1ZGUvZHQtYmluZGluZ3MvcmVndWxh
dG9yL3Fjb20scnBtaC1yZWd1bGF0b3IuaC4gIHJlZ3VsYXRvci1hbGxvdy1ieXBhc3MKZGlmZiAt
LWdpdCBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9ib290aW5nLXdpdGhvdXQtb2YudHh0IGIv
RG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2Jvb3Rpbmctd2l0aG91dC1vZi50eHQKaW5kZXggZTg2
YmQyZjY0MTE3Li42MGY4NjQwZjJiMmYgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNl
dHJlZS9ib290aW5nLXdpdGhvdXQtb2YudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJl
ZS9ib290aW5nLXdpdGhvdXQtb2YudHh0CkBAIC0yNzcsNyArMjc3LDcgQEAgaXQgd2l0aCBzcGVj
aWFsIGNhc2VzLgogICB0aGUgZGVjb21wcmVzc29yICh0aGUgcmVhbCBtb2RlIGVudHJ5IHBvaW50
IGdvZXMgdG8gdGhlIHNhbWUgIDMyYml0CiAgIGVudHJ5IHBvaW50IG9uY2UgaXQgc3dpdGNoZWQg
aW50byBwcm90ZWN0ZWQgbW9kZSkuIFRoYXQgZW50cnkgcG9pbnQKICAgc3VwcG9ydHMgb25lIGNh
bGxpbmcgY29udmVudGlvbiB3aGljaCBpcyBkb2N1bWVudGVkIGluCi0gIERvY3VtZW50YXRpb24v
eDg2L2Jvb3QudHh0CisgIERvY3VtZW50YXRpb24veDg2L2Jvb3QucnN0CiAgIFRoZSBwaHlzaWNh
bCBwb2ludGVyIHRvIHRoZSBkZXZpY2UtdHJlZSBibG9jayAoZGVmaW5lZCBpbiBjaGFwdGVyIElJ
KQogICBpcyBwYXNzZWQgdmlhIHNldHVwX2RhdGEgd2hpY2ggcmVxdWlyZXMgYXQgbGVhc3QgYm9v
dCBwcm90b2NvbCAyLjA5LgogICBUaGUgdHlwZSBmaWxlZCBpcyBkZWZpbmVkIGFzCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZ3Bpby9ib2FyZC5yc3QgYi9Eb2N1bWVudGF0
aW9uL2RyaXZlci1hcGkvZ3Bpby9ib2FyZC5yc3QKaW5kZXggYjM3ZjNmN2I4OTI2Li5jZTkxNTE4
YmY5ZjQgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9ncGlvL2JvYXJkLnJz
dAorKysgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZ3Bpby9ib2FyZC5yc3QKQEAgLTEwMSw3
ICsxMDEsNyBAQCB3aXRoIHRoZSBoZWxwIG9mIF9EU0QgKERldmljZSBTcGVjaWZpYyBEYXRhKSwg
aW50cm9kdWNlZCBpbiBBQ1BJIDUuMTo6CiAJfQogCiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91
dCB0aGUgQUNQSSBHUElPIGJpbmRpbmdzIHNlZQotRG9jdW1lbnRhdGlvbi9hY3BpL2dwaW8tcHJv
cGVydGllcy50eHQuCitEb2N1bWVudGF0aW9uL2Zpcm13YXJlLWd1aWRlL2FjcGkvZ3Bpby1wcm9w
ZXJ0aWVzLnJzdC4KIAogUGxhdGZvcm0gRGF0YQogLS0tLS0tLS0tLS0tLQpkaWZmIC0tZ2l0IGEv
RG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2dwaW8vY29uc3VtZXIucnN0IGIvRG9jdW1lbnRhdGlv
bi9kcml2ZXItYXBpL2dwaW8vY29uc3VtZXIucnN0CmluZGV4IDVlNGQ4YWE2ODkxMy4uZmRlY2I2
ZDcxMWRiIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZ3Bpby9jb25zdW1l
ci5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2dwaW8vY29uc3VtZXIucnN0CkBA
IC00MzcsNyArNDM3LDcgQEAgY2FzZSwgaXQgd2lsbCBiZSBoYW5kbGVkIGJ5IHRoZSBHUElPIHN1
YnN5c3RlbSBhdXRvbWF0aWNhbGx5LiAgSG93ZXZlciwgaWYgdGhlCiBfRFNEIGlzIG5vdCBwcmVz
ZW50LCB0aGUgbWFwcGluZ3MgYmV0d2VlbiBHcGlvSW8oKS9HcGlvSW50KCkgcmVzb3VyY2VzIGFu
ZCBHUElPCiBjb25uZWN0aW9uIElEcyBuZWVkIHRvIGJlIHByb3ZpZGVkIGJ5IGRldmljZSBkcml2
ZXJzLgogCi1Gb3IgZGV0YWlscyByZWZlciB0byBEb2N1bWVudGF0aW9uL2FjcGkvZ3Bpby1wcm9w
ZXJ0aWVzLnR4dAorRm9yIGRldGFpbHMgcmVmZXIgdG8gRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1n
dWlkZS9hY3BpL2dwaW8tcHJvcGVydGllcy5yc3QKIAogCiBJbnRlcmFjdGluZyBXaXRoIHRoZSBM
ZWdhY3kgR1BJTyBTdWJzeXN0ZW0KZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZmlybXdhcmUt
Z3VpZGUvYWNwaS9lbnVtZXJhdGlvbi5yc3QgYi9Eb2N1bWVudGF0aW9uL2Zpcm13YXJlLWd1aWRl
L2FjcGkvZW51bWVyYXRpb24ucnN0CmluZGV4IDg1MGJlOTY5NjkzMS4uMTI1MjYxN2I1MjBmIDEw
MDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2Zpcm13YXJlLWd1aWRlL2FjcGkvZW51bWVyYXRpb24u
cnN0CisrKyBiL0RvY3VtZW50YXRpb24vZmlybXdhcmUtZ3VpZGUvYWNwaS9lbnVtZXJhdGlvbi5y
c3QKQEAgLTMzOSw3ICszMzksNyBAQCBhIGNvZGUgbGlrZSB0aGlzOjoKIFRoZXJlIGFyZSBhbHNv
IGRldm1fKiB2ZXJzaW9ucyBvZiB0aGVzZSBmdW5jdGlvbnMgd2hpY2ggcmVsZWFzZSB0aGUKIGRl
c2NyaXB0b3JzIG9uY2UgdGhlIGRldmljZSBpcyByZWxlYXNlZC4KIAotU2VlIERvY3VtZW50YXRp
b24vYWNwaS9ncGlvLXByb3BlcnRpZXMudHh0IGZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRo
ZQorU2VlIERvY3VtZW50YXRpb24vZmlybXdhcmUtZ3VpZGUvYWNwaS9ncGlvLXByb3BlcnRpZXMu
cnN0IGZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZQogX0RTRCBiaW5kaW5nIHJlbGF0ZWQg
dG8gR1BJT3MuCiAKIE1GRCBkZXZpY2VzCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2Zpcm13
YXJlLWd1aWRlL2FjcGkvbWV0aG9kLXRyYWNpbmcucnN0IGIvRG9jdW1lbnRhdGlvbi9maXJtd2Fy
ZS1ndWlkZS9hY3BpL21ldGhvZC10cmFjaW5nLnJzdAppbmRleCBkMGIwNzdiNzNmNWYuLjBhYTdl
MmM1ZDMyYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1ndWlkZS9hY3BpL21l
dGhvZC10cmFjaW5nLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2Zpcm13YXJlLWd1aWRlL2FjcGkv
bWV0aG9kLXRyYWNpbmcucnN0CkBAIC02OCw3ICs2OCw3IEBAIGMuIEZpbHRlciBvdXQgdGhlIGRl
YnVnIGxheWVyL2xldmVsIG1hdGNoZWQgbG9ncyB3aGVuIHRoZSBzcGVjaWZpZWQKIAogV2hlcmU6
CiAgICAweFhYWFhYWFhYLzB4WVlZWVlZWVkKLSAgICAgUmVmZXIgdG8gRG9jdW1lbnRhdGlvbi9h
Y3BpL2RlYnVnLnR4dCBmb3IgcG9zc2libGUgZGVidWcgbGF5ZXIvbGV2ZWwKKyAgICAgUmVmZXIg
dG8gRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1ndWlkZS9hY3BpL2RlYnVnLnJzdCBmb3IgcG9zc2li
bGUgZGVidWcgbGF5ZXIvbGV2ZWwKICAgICAgbWFza2luZyB2YWx1ZXMuCiAgICBcUFBQUC5BQUFB
LlRUVFQuSEhISAogICAgICBGdWxsIHBhdGggb2YgYSBjb250cm9sIG1ldGhvZCB0aGF0IGNhbiBi
ZSBmb3VuZCBpbiB0aGUgQUNQSSBuYW1lc3BhY2UuCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9u
L2kyYy9pbnN0YW50aWF0aW5nLWRldmljZXMgYi9Eb2N1bWVudGF0aW9uL2kyYy9pbnN0YW50aWF0
aW5nLWRldmljZXMKaW5kZXggMGQ4NWFjMTkzNWI3Li41YTNlMmYzMzFlOGMgMTAwNjQ0Ci0tLSBh
L0RvY3VtZW50YXRpb24vaTJjL2luc3RhbnRpYXRpbmctZGV2aWNlcworKysgYi9Eb2N1bWVudGF0
aW9uL2kyYy9pbnN0YW50aWF0aW5nLWRldmljZXMKQEAgLTg1LDcgKzg1LDcgQEAgTWV0aG9kIDFj
OiBEZWNsYXJlIHRoZSBJMkMgZGV2aWNlcyB2aWEgQUNQSQogLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogCiBBQ1BJIGNhbiBhbHNvIGRlc2NyaWJlIEkyQyBkZXZp
Y2VzLiBUaGVyZSBpcyBzcGVjaWFsIGRvY3VtZW50YXRpb24gZm9yIHRoaXMKLXdoaWNoIGlzIGN1
cnJlbnRseSBsb2NhdGVkIGF0IERvY3VtZW50YXRpb24vYWNwaS9lbnVtZXJhdGlvbi50eHQuCit3
aGljaCBpcyBjdXJyZW50bHkgbG9jYXRlZCBhdCBEb2N1bWVudGF0aW9uL2Zpcm13YXJlLWd1aWRl
L2FjcGkvZW51bWVyYXRpb24ucnN0LgogCiAKIE1ldGhvZCAyOiBJbnN0YW50aWF0ZSB0aGUgZGV2
aWNlcyBleHBsaWNpdGx5CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3N5c2N0bC9rZXJuZWwu
dHh0IGIvRG9jdW1lbnRhdGlvbi9zeXNjdGwva2VybmVsLnR4dAppbmRleCBmMGM4NmZiYjNiNDgu
LjkyZjdmMzRiMDIxYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9zeXNjdGwva2VybmVsLnR4
dAorKysgYi9Eb2N1bWVudGF0aW9uL3N5c2N0bC9rZXJuZWwudHh0CkBAIC0xNTUsNyArMTU1LDcg
QEAgaXMgMHgxNSBhbmQgdGhlIGZ1bGwgdmVyc2lvbiBudW1iZXIgaXMgMHgyMzQsIHRoaXMgZmls
ZSB3aWxsIGNvbnRhaW4KIHRoZSB2YWx1ZSAzNDAgPSAweDE1NC4KIAogU2VlIHRoZSB0eXBlX29m
X2xvYWRlciBhbmQgZXh0X2xvYWRlcl90eXBlIGZpZWxkcyBpbgotRG9jdW1lbnRhdGlvbi94ODYv
Ym9vdC50eHQgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uCitEb2N1bWVudGF0aW9uL3g4Ni9i
b290LnJzdCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4KIAogPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIApAQCAtMTY3LDcg
KzE2Nyw3IEBAIFRoZSBjb21wbGV0ZSBib290bG9hZGVyIHZlcnNpb24gbnVtYmVyLiAgSW4gdGhl
IGV4YW1wbGUgYWJvdmUsIHRoaXMKIGZpbGUgd2lsbCBjb250YWluIHRoZSB2YWx1ZSA1NjQgPSAw
eDIzNC4KIAogU2VlIHRoZSB0eXBlX29mX2xvYWRlciBhbmQgZXh0X2xvYWRlcl92ZXIgZmllbGRz
IGluCi1Eb2N1bWVudGF0aW9uL3g4Ni9ib290LnR4dCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlv
bi4KK0RvY3VtZW50YXRpb24veDg2L2Jvb3QucnN0IGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9u
LgogCiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQogCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3RyYW5zbGF0aW9ucy9pdF9J
VC9wcm9jZXNzL2hvd3RvLnJzdCBiL0RvY3VtZW50YXRpb24vdHJhbnNsYXRpb25zL2l0X0lUL3By
b2Nlc3MvaG93dG8ucnN0CmluZGV4IDk5MDNhYzdjNTY2Yi4uNDRlNjA3NzczMGU4IDEwMDY0NAot
LS0gYS9Eb2N1bWVudGF0aW9uL3RyYW5zbGF0aW9ucy9pdF9JVC9wcm9jZXNzL2hvd3RvLnJzdAor
KysgYi9Eb2N1bWVudGF0aW9uL3RyYW5zbGF0aW9ucy9pdF9JVC9wcm9jZXNzL2hvd3RvLnJzdApA
QCAtMTMxLDcgKzEzMSw3IEBAIERpIHNlZ3VpdG8gdW5hIGxpc3RhIGRpIGZpbGUgY2hlIHNvbm8g
cHJlc2VudGkgbmVpIHNvcmdlbnRlIGRlbCBrZXJuZWwgZSBjaGUKIAkiTGludXgga2VybmVsIHBh
dGNoIHN1Ym1pc3Npb24gZm9ybWF0IgogCQlodHRwOi8vbGludXgueXl6LnVzL3BhdGNoLWZvcm1h
dC5odG1sCiAKLSAgOnJlZjpgRG9jdW1lbnRhdGlvbi9wcm9jZXNzL3RyYW5zbGF0aW9ucy9pdF9J
VC9zdGFibGUtYXBpLW5vbnNlbnNlLnJzdCA8aXRfc3RhYmxlX2FwaV9ub25zZW5zZT5gCisgIDpy
ZWY6YERvY3VtZW50YXRpb24vdHJhbnNsYXRpb25zL2l0X0lUL3Byb2Nlc3Mvc3RhYmxlLWFwaS1u
b25zZW5zZS5yc3QgPGl0X3N0YWJsZV9hcGlfbm9uc2Vuc2U+YAogCiAgICAgUXVlc3RvIGZpbGUg
ZGVzY3JpdmUgbGEgbW90aXZhemlvbmkgc290dG9zdGFudGkgbGEgY29uc2NpYSBkZWNpc2lvbmUg
ZGkKICAgICBub24gYXZlcmUgdW4gQVBJIHN0YWJpbGUgYWxsJ2ludGVybm8gZGVsIGtlcm5lbCwg
aW5jbHVzbyBjb3NlIGNvbWU6CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3RyYW5zbGF0aW9u
cy9pdF9JVC9wcm9jZXNzL3N0YWJsZS1rZXJuZWwtcnVsZXMucnN0IGIvRG9jdW1lbnRhdGlvbi90
cmFuc2xhdGlvbnMvaXRfSVQvcHJvY2Vzcy9zdGFibGUta2VybmVsLXJ1bGVzLnJzdAppbmRleCA0
OGU4OGU1YWQyYzUuLjRmMjA2Y2VlMzFhNyAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi90cmFu
c2xhdGlvbnMvaXRfSVQvcHJvY2Vzcy9zdGFibGUta2VybmVsLXJ1bGVzLnJzdAorKysgYi9Eb2N1
bWVudGF0aW9uL3RyYW5zbGF0aW9ucy9pdF9JVC9wcm9jZXNzL3N0YWJsZS1rZXJuZWwtcnVsZXMu
cnN0CkBAIC0zMyw3ICszMyw3IEBAIFJlZ29sZSBzdWwgdGlwbyBkaSBwYXRjaCBjaGUgdmVuZ29u
byBvIG5vbiB2ZW5nb25vIGFjY2V0dGF0ZSBuZWkgc29yZ2VudGkKICAtIE5vbiBkZXZlIGluY2x1
ZGVyZSBhbGN1bmEgY29ycmV6aW9uZSAiYmFuYWxlIiAoY29ycmV6aW9uaSBncmFtbWF0aWNhbGks
CiAgICBwdWxpemlhIGRhZ2xpIHNwYXppIGJpYW5jaGksIGVjY2V0ZXJhKS4KICAtIERldmUgcmlz
cGV0dGFyZSBsZSByZWdvbGUgc2NyaXR0ZSBpbgotICAgOnJlZjpgRG9jdW1lbnRhdGlvbi90cmFu
c2xhdGlvbi9pdF9JVC9wcm9jZXNzL3N1Ym1pdHRpbmctcGF0Y2hlcy5yc3QgPGl0X3N1Ym1pdHRp
bmdwYXRjaGVzPmAKKyAgIDpyZWY6YERvY3VtZW50YXRpb24vdHJhbnNsYXRpb25zL2l0X0lUL3By
b2Nlc3Mvc3VibWl0dGluZy1wYXRjaGVzLnJzdCA8aXRfc3VibWl0dGluZ3BhdGNoZXM+YAogIC0g
UXVlc3RhIHBhdGNoIG8gdW5hIGVxdWl2YWxlbnRlIGRldmUgZXNpc3RlcmUgZ2nDoCBuZWkgc29y
Z2VudGkgcHJpbmNpcGFsaSBkaQogICAgTGludXgKIApAQCAtNDMsNyArNDMsNyBAQCBQcm9jZWR1
cmEgcGVyIHNvdHRvbWV0dGVyZSBwYXRjaCBwZXIgaSBzb3JnZW50aSAtc3RhYmxlCiAKICAtIFNl
IGxhIHBhdGNoIGNvbnRpZW5lIG1vZGlmaWNoZSBhIGRlaSBmaWxlIG5lbGxlIGNhcnRlbGxlIG5l
dC8gbyBkcml2ZXJzL25ldCwKICAgIGFsbG9yYSBzZWd1aXRlIGxlIGxpbmVlIGd1aWRhIGRlc2Ny
aXR0ZSBpbgotICAgOnJlZjpgRG9jdW1lbnRhdGlvbi90cmFuc2xhdGlvbi9pdF9JVC9uZXR3b3Jr
aW5nL25ldGRldi1GQVEucnN0IDxpdF9uZXRkZXYtRkFRPmA7CisgICA6cmVmOmBEb2N1bWVudGF0
aW9uL3RyYW5zbGF0aW9ucy9pdF9JVC9uZXR3b3JraW5nL25ldGRldi1GQVEucnN0IDxpdF9uZXRk
ZXYtRkFRPmA7CiAgICBtYSBzb2xvIGRvcG8gYXZlciB2ZXJpZmljYXRvIGFsIHNlZ3VlbnRlIGlu
ZGlyaXp6byBjaGUgbGEgcGF0Y2ggbm9uIHNpYQogICAgZ2nDoCBpbiBjb2RhOgogICAgaHR0cHM6
Ly9wYXRjaHdvcmsub3psYWJzLm9yZy9idW5kbGUvZGF2ZW0vc3RhYmxlLz9zZXJpZXM9JnN1Ym1p
dHRlcj0mc3RhdGU9KiZxPSZhcmNoaXZlPQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi90cmFu
c2xhdGlvbnMvemhfQ04vcHJvY2Vzcy80LkNvZGluZy5yc3QgYi9Eb2N1bWVudGF0aW9uL3RyYW5z
bGF0aW9ucy96aF9DTi9wcm9jZXNzLzQuQ29kaW5nLnJzdAppbmRleCA1MzAxZTlkNTUyNTUuLjhi
Yjc3Nzk0MTM5NCAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi90cmFuc2xhdGlvbnMvemhfQ04v
cHJvY2Vzcy80LkNvZGluZy5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi90cmFuc2xhdGlvbnMvemhf
Q04vcHJvY2Vzcy80LkNvZGluZy5yc3QKQEAgLTI0MSw3ICsyNDEsNyBAQCBzY3JpcHRzL2NvY2Np
bmVsbGXnm67lvZXkuIvlt7Lnu4/miZPljIXkuobnm7jlvZPlpJrnmoTlhoXmoLjigJzor63kuYno
oaXkuIHigJ0KIAog5Lu75L2V5re75Yqg5paw55So5oi356m66Ze055WM6Z2i55qE5Luj56CB77yI
5YyF5ous5paw55qEc3lzZnPmiJYvcHJvY+aWh+S7tu+8iemDveW6lOivpeWMheWQq+ivpeeVjOmd
oueahAog5paH5qGj77yM6K+l5paH5qGj5L2/55So5oi356m66Ze05byA5Y+R5Lq65ZGY6IO95aSf
55+l6YGT5LuW5Lus5Zyo5L2/55So5LuA5LmI44CC6K+35Y+C6ZiFCi1Eb2N1bWVudGF0aW9uL2Fi
aS9yZWFkbWXvvIzkuobop6PlpoLkvZXmoLzlvI/ljJbmraTmlofmoaPku6Xlj4rpnIDopoHmj5Dk
vpvlk6rkupvkv6Hmga/jgIIKK0RvY3VtZW50YXRpb24vQUJJL1JFQURNRe+8jOS6huino+WmguS9
leagvOW8j+WMluatpOaWh+aho+S7peWPiumcgOimgeaPkOS+m+WTquS6m+S/oeaBr+OAggogCiDm
lofku7YgOnJlZjpgRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9rZXJuZWwtcGFyYW1ldGVycy5y
c3QgPGtlcm5lbHBhcmFtZXRlcnM+YAog5o+P6L+w5LqG5YaF5qC455qE5omA5pyJ5byV5a+85pe2
6Ze05Y+C5pWw44CC5Lu75L2V5re75Yqg5paw5Y+C5pWw55qE6KGl5LiB6YO95bqU6K+l5ZCR6K+l
5paH5Lu25re75Yqg6YCC5b2T55qECmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3g4Ni94ODZf
NjQvNWxldmVsLXBhZ2luZy5yc3QgYi9Eb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvNWxldmVsLXBh
Z2luZy5yc3QKaW5kZXggYWI4OGE0NTE0MTYzLi40NDg1NjQxN2U2YTUgMTAwNjQ0Ci0tLSBhL0Rv
Y3VtZW50YXRpb24veDg2L3g4Nl82NC81bGV2ZWwtcGFnaW5nLnJzdAorKysgYi9Eb2N1bWVudGF0
aW9uL3g4Ni94ODZfNjQvNWxldmVsLXBhZ2luZy5yc3QKQEAgLTIwLDcgKzIwLDcgQEAgcGh5c2lj
YWwgYWRkcmVzcyBzcGFjZS4gVGhpcyAib3VnaHQgdG8gYmUgZW5vdWdoIGZvciBhbnlib2R5IiDC
qS4KIFFFTVUgMi45IGFuZCBsYXRlciBzdXBwb3J0IDUtbGV2ZWwgcGFnaW5nLgogCiBWaXJ0dWFs
IG1lbW9yeSBsYXlvdXQgZm9yIDUtbGV2ZWwgcGFnaW5nIGlzIGRlc2NyaWJlZCBpbgotRG9jdW1l
bnRhdGlvbi94ODYveDg2XzY0L21tLnR4dAorRG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L21tLnJz
dAogCiAKIEVuYWJsaW5nIDUtbGV2ZWwgcGFnaW5nCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9u
L3g4Ni94ODZfNjQvYm9vdC1vcHRpb25zLnJzdCBiL0RvY3VtZW50YXRpb24veDg2L3g4Nl82NC9i
b290LW9wdGlvbnMucnN0CmluZGV4IDJmNjk4MzZiODQ0NS4uNmE0Mjg1YTNjN2E0IDEwMDY0NAot
LS0gYS9Eb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvYm9vdC1vcHRpb25zLnJzdAorKysgYi9Eb2N1
bWVudGF0aW9uL3g4Ni94ODZfNjQvYm9vdC1vcHRpb25zLnJzdApAQCAtOSw3ICs5LDcgQEAgb25s
eSB0aGUgQU1ENjQgc3BlY2lmaWMgb25lcyBhcmUgbGlzdGVkIGhlcmUuCiAKIE1hY2hpbmUgY2hl
Y2sKID09PT09PT09PT09PT0KLVBsZWFzZSBzZWUgRG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L21h
Y2hpbmVjaGVjayBmb3Igc3lzZnMgcnVudGltZSB0dW5hYmxlcy4KK1BsZWFzZSBzZWUgRG9jdW1l
bnRhdGlvbi94ODYveDg2XzY0L21hY2hpbmVjaGVjay5yc3QgZm9yIHN5c2ZzIHJ1bnRpbWUgdHVu
YWJsZXMuCiAKICAgIG1jZT1vZmYKIAkJRGlzYWJsZSBtYWNoaW5lIGNoZWNrCkBAIC04OSw3ICs4
OSw3IEBAIEFQSUNzCiAgICAgIERvbid0IHVzZSB0aGUgbG9jYWwgQVBJQyAoYWxpYXMgZm9yIGkz
ODYgY29tcGF0aWJpbGl0eSkKIAogICAgcGlycT0uLi4KLQlTZWUgRG9jdW1lbnRhdGlvbi94ODYv
aTM4Ni9JTy1BUElDLnR4dAorCVNlZSBEb2N1bWVudGF0aW9uL3g4Ni9pMzg2L0lPLUFQSUMucnN0
CiAKICAgIG5vYXBpY3RpbWVyCiAJRG9uJ3Qgc2V0IHVwIHRoZSBBUElDIHRpbWVyCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvZmFrZS1udW1hLWZvci1jcHVzZXRzLnJzdCBi
L0RvY3VtZW50YXRpb24veDg2L3g4Nl82NC9mYWtlLW51bWEtZm9yLWNwdXNldHMucnN0CmluZGV4
IDc0ZmJiNzhiM2M2Ny4uMDRkZjU3YjlhYTNmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL3g4
Ni94ODZfNjQvZmFrZS1udW1hLWZvci1jcHVzZXRzLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL3g4
Ni94ODZfNjQvZmFrZS1udW1hLWZvci1jcHVzZXRzLnJzdApAQCAtMTgsNyArMTgsNyBAQCBGb3Ig
bW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUgZmVhdHVyZXMgb2YgY3B1c2V0cywgc2VlCiBEb2N1bWVu
dGF0aW9uL2Nncm91cC12MS9jcHVzZXRzLnR4dC4KIFRoZXJlIGFyZSBhIG51bWJlciBvZiBkaWZm
ZXJlbnQgY29uZmlndXJhdGlvbnMgeW91IGNhbiB1c2UgZm9yIHlvdXIgbmVlZHMuICBGb3IKIG1v
cmUgaW5mb3JtYXRpb24gb24gdGhlIG51bWE9ZmFrZSBjb21tYW5kIGxpbmUgb3B0aW9uIGFuZCBp
dHMgdmFyaW91cyB3YXlzIG9mCi1jb25maWd1cmluZyBmYWtlIG5vZGVzLCBzZWUgRG9jdW1lbnRh
dGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy50eHQuCitjb25maWd1cmluZyBmYWtlIG5vZGVz
LCBzZWUgRG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy5yc3QuCiAKIEZvciB0
aGUgcHVycG9zZXMgb2YgdGhpcyBpbnRyb2R1Y3Rpb24sIHdlJ2xsIGFzc3VtZSBhIHZlcnkgcHJp
bWl0aXZlIE5VTUEKIGVtdWxhdGlvbiBzZXR1cCBvZiAibnVtYT1mYWtlPTQqNTEyLCIuICBUaGlz
IHdpbGwgc3BsaXQgb3VyIHN5c3RlbSBtZW1vcnkgaW50bwpkaWZmIC0tZ2l0IGEvTUFJTlRBSU5F
UlMgYi9NQUlOVEFJTkVSUwppbmRleCA1Y2ZiZWE0Y2U1NzUuLmEzOGQ3MjczNzA1YSAxMDA2NDQK
LS0tIGEvTUFJTlRBSU5FUlMKKysrIGIvTUFJTlRBSU5FUlMKQEAgLTM4NzQsNyArMzg3NCw3IEBA
IEY6CURvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9od21vbi9jaXJydXMsbG9jaG5h
Z2FyLnR4dAogRjoJRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL3BpbmN0cmwvY2ly
cnVzLGxvY2huYWdhci50eHQKIEY6CURvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9y
ZWd1bGF0b3IvY2lycnVzLGxvY2huYWdhci50eHQKIEY6CURvY3VtZW50YXRpb24vZGV2aWNldHJl
ZS9iaW5kaW5ncy9zb3VuZC9jaXJydXMsbG9jaG5hZ2FyLnR4dAotRjoJRG9jdW1lbnRhdGlvbi9o
d21vbi9sb2NobmFnYXIKK0Y6CURvY3VtZW50YXRpb24vaHdtb24vbG9jaG5hZ2FyLnJzdAogCiBD
SVNDTyBGQ09FIEhCQSBEUklWRVIKIE06CVNhdGlzaCBLaGFyYXQgPHNhdGlzaGtoQGNpc2NvLmNv
bT4KQEAgLTExMjcyLDcgKzExMjcyLDcgQEAgTlhQIEZYQVMyMTAwMkMgRFJJVkVSCiBNOglSdWkg
TWlndWVsIFNpbHZhIDxybWZyZnNAZ21haWwuY29tPgogTDoJbGludXgtaWlvQHZnZXIua2VybmVs
Lm9yZwogUzoJTWFpbnRhaW5lZAotRjoJRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdz
L2lpby9neXJvc2NvcGUvZnhhczIxMDAyYy50eHQKK0Y6CURvY3VtZW50YXRpb24vZGV2aWNldHJl
ZS9iaW5kaW5ncy9paW8vZ3lyb3Njb3BlL254cCxmeGFzMjEwMDJjLnR4dAogRjoJZHJpdmVycy9p
aW8vZ3lyby9meGFzMjEwMDJjX2NvcmUuYwogRjoJZHJpdmVycy9paW8vZ3lyby9meGFzMjEwMDJj
LmgKIEY6CWRyaXZlcnMvaWlvL2d5cm8vZnhhczIxMDAyY19pMmMuYwpAQCAtMTMwNDMsNyArMTMw
NDMsNyBAQCBNOglOaWtsYXMgQ2Fzc2VsIDxuaWtsYXMuY2Fzc2VsQGxpbmFyby5vcmc+CiBMOglu
ZXRkZXZAdmdlci5rZXJuZWwub3JnCiBTOglNYWludGFpbmVkCiBGOglkcml2ZXJzL25ldC9ldGhl
cm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYy1xY29tLWV0aHFvcy5jCi1GOglEb2N1bWVudGF0aW9u
L2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3Fjb20sZHdtYWMudHh0CitGOglEb2N1bWVudGF0aW9u
L2RldmljZXRyZWUvYmluZGluZ3MvbmV0L3Fjb20sZXRocW9zLnR4dAogCiBRVUFMQ09NTSBHRU5F
UklDIElOVEVSRkFDRSBJMkMgRFJJVkVSCiBNOglBbG9rIENoYXVoYW4gPGFsb2tjQGNvZGVhdXJv
cmEub3JnPgpkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vS2NvbmZpZyBiL2FyY2gvYXJtL0tjb25maWcK
aW5kZXggODg2OTc0MmE4NWRmLi4wZjIyMDI2NGNjMjMgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL0tj
b25maWcKKysrIGIvYXJjaC9hcm0vS2NvbmZpZwpAQCAtMTI2Myw3ICsxMjYzLDcgQEAgY29uZmln
IFNNUAogCSAgdW5pcHJvY2Vzc29yIG1hY2hpbmVzLiBPbiBhIHVuaXByb2Nlc3NvciBtYWNoaW5l
LCB0aGUga2VybmVsCiAJICB3aWxsIHJ1biBmYXN0ZXIgaWYgeW91IHNheSBOIGhlcmUuCiAKLQkg
IFNlZSBhbHNvIDxmaWxlOkRvY3VtZW50YXRpb24veDg2L2kzODYvSU8tQVBJQy50eHQ+LAorCSAg
U2VlIGFsc28gPGZpbGU6RG9jdW1lbnRhdGlvbi94ODYvaTM4Ni9JTy1BUElDLnJzdD4sCiAJICA8
ZmlsZTpEb2N1bWVudGF0aW9uL2xvY2t1cC13YXRjaGRvZ3MudHh0PiBhbmQgdGhlIFNNUC1IT1dU
TyBhdmFpbGFibGUgYXQKIAkgIDxodHRwOi8vdGxkcC5vcmcvSE9XVE8vU01QLUhPV1RPLmh0bWw+
LgogCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2tlcm5lbC9rZXhlY19pbWFnZS5jIGIvYXJjaC9h
cm02NC9rZXJuZWwva2V4ZWNfaW1hZ2UuYwppbmRleCAwN2JmNzQwYmVhOTEuLjMxY2MyZjQyM2Fh
OCAxMDA2NDQKLS0tIGEvYXJjaC9hcm02NC9rZXJuZWwva2V4ZWNfaW1hZ2UuYworKysgYi9hcmNo
L2FybTY0L2tlcm5lbC9rZXhlY19pbWFnZS5jCkBAIC01Myw3ICs1Myw3IEBAIHN0YXRpYyB2b2lk
ICppbWFnZV9sb2FkKHN0cnVjdCBraW1hZ2UgKmltYWdlLAogCiAJLyoKIAkgKiBXZSByZXF1aXJl
IGEga2VybmVsIHdpdGggYW4gdW5hbWJpZ3VvdXMgSW1hZ2UgaGVhZGVyLiBQZXIKLQkgKiBEb2N1
bWVudGF0aW9uL2Jvb3RpbmcudHh0LCB0aGlzIGlzIHRoZSBjYXNlIHdoZW4gaW1hZ2Vfc2l6ZQor
CSAqIERvY3VtZW50YXRpb24vYXJtNjQvYm9vdGluZy50eHQsIHRoaXMgaXMgdGhlIGNhc2Ugd2hl
biBpbWFnZV9zaXplCiAJICogaXMgbm9uLXplcm8gKHByYWN0aWNhbGx5IHNwZWFraW5nLCBzaW5j
ZSB2My4xNykuCiAJICovCiAJaCA9IChzdHJ1Y3QgYXJtNjRfaW1hZ2VfaGVhZGVyICopa2VybmVs
OwpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL0tjb25maWcgYi9hcmNoL3Bvd2VycGMvS2NvbmZp
ZwppbmRleCA4YzFjNjM2MzA4YzguLmU4NjhkMmJkNDhiOCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dl
cnBjL0tjb25maWcKKysrIGIvYXJjaC9wb3dlcnBjL0tjb25maWcKQEAgLTg5OCw3ICs4OTgsNyBA
QCBjb25maWcgUFBDX01FTV9LRVlTCiAJICBwYWdlLWJhc2VkIHByb3RlY3Rpb25zLCBidXQgd2l0
aG91dCByZXF1aXJpbmcgbW9kaWZpY2F0aW9uIG9mIHRoZQogCSAgcGFnZSB0YWJsZXMgd2hlbiBh
biBhcHBsaWNhdGlvbiBjaGFuZ2VzIHByb3RlY3Rpb24gZG9tYWlucy4KIAotCSAgRm9yIGRldGFp
bHMsIHNlZSBEb2N1bWVudGF0aW9uL3ZtL3Byb3RlY3Rpb24ta2V5cy5yc3QKKwkgIEZvciBkZXRh
aWxzLCBzZWUgRG9jdW1lbnRhdGlvbi94ODYvcHJvdGVjdGlvbi1rZXlzLnJzdAogCiAJICBJZiB1
bnN1cmUsIHNheSB5LgogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9LY29uZmlnIGIvYXJjaC94ODYv
S2NvbmZpZwppbmRleCAyYmJiZDRkMWJhMzEuLjc4ZmRmMmRkNzFkMSAxMDA2NDQKLS0tIGEvYXJj
aC94ODYvS2NvbmZpZworKysgYi9hcmNoL3g4Ni9LY29uZmlnCkBAIC0zOTUsNyArMzk1LDcgQEAg
Y29uZmlnIFNNUAogCSAgWSB0byAiRW5oYW5jZWQgUmVhbCBUaW1lIENsb2NrIFN1cHBvcnQiLCBi
ZWxvdy4gVGhlICJBZHZhbmNlZCBQb3dlcgogCSAgTWFuYWdlbWVudCIgY29kZSB3aWxsIGJlIGRp
c2FibGVkIGlmIHlvdSBzYXkgWSBoZXJlLgogCi0JICBTZWUgYWxzbyA8ZmlsZTpEb2N1bWVudGF0
aW9uL3g4Ni9pMzg2L0lPLUFQSUMudHh0PiwKKwkgIFNlZSBhbHNvIDxmaWxlOkRvY3VtZW50YXRp
b24veDg2L2kzODYvSU8tQVBJQy5yc3Q+LAogCSAgPGZpbGU6RG9jdW1lbnRhdGlvbi9sb2NrdXAt
d2F0Y2hkb2dzLnR4dD4gYW5kIHRoZSBTTVAtSE9XVE8gYXZhaWxhYmxlIGF0CiAJICA8aHR0cDov
L3d3dy50bGRwLm9yZy9kb2NzLmh0bWwjaG93dG8+LgogCkBAIC0xMjkwLDcgKzEyOTAsNyBAQCBj
b25maWcgTUlDUk9DT0RFCiAJICB0aGUgTGludXgga2VybmVsLgogCiAJICBUaGUgcHJlZmVycmVk
IG1ldGhvZCB0byBsb2FkIG1pY3JvY29kZSBmcm9tIGEgZGV0YWNoZWQgaW5pdHJkIGlzIGRlc2Ny
aWJlZAotCSAgaW4gRG9jdW1lbnRhdGlvbi94ODYvbWljcm9jb2RlLnR4dC4gRm9yIHRoYXQgeW91
IG5lZWQgdG8gZW5hYmxlCisJICBpbiBEb2N1bWVudGF0aW9uL3g4Ni9taWNyb2NvZGUucnN0LiBG
b3IgdGhhdCB5b3UgbmVlZCB0byBlbmFibGUKIAkgIENPTkZJR19CTEtfREVWX0lOSVRSRCBpbiBv
cmRlciBmb3IgdGhlIGxvYWRlciB0byBiZSBhYmxlIHRvIHNjYW4gdGhlCiAJICBpbml0cmQgZm9y
IG1pY3JvY29kZSBibG9icy4KIApAQCAtMTMyOSw3ICsxMzI5LDcgQEAgY29uZmlnIE1JQ1JPQ09E
RV9PTERfSU5URVJGQUNFCiAJICBJdCBpcyBpbmFkZXF1YXRlIGJlY2F1c2UgaXQgcnVucyB0b28g
bGF0ZSB0byBiZSBhYmxlIHRvIHByb3Blcmx5CiAJICBsb2FkIG1pY3JvY29kZSBvbiBhIG1hY2hp
bmUgYW5kIGl0IG5lZWRzIHNwZWNpYWwgdG9vbHMuIEluc3RlYWQsIHlvdQogCSAgc2hvdWxkJ3Zl
IHN3aXRjaGVkIHRvIHRoZSBlYXJseSBsb2FkaW5nIG1ldGhvZCB3aXRoIHRoZSBpbml0cmQgb3IK
LQkgIGJ1aWx0aW4gbWljcm9jb2RlIGJ5IG5vdzogRG9jdW1lbnRhdGlvbi94ODYvbWljcm9jb2Rl
LnR4dAorCSAgYnVpbHRpbiBtaWNyb2NvZGUgYnkgbm93OiBEb2N1bWVudGF0aW9uL3g4Ni9taWNy
b2NvZGUucnN0CiAKIGNvbmZpZyBYODZfTVNSCiAJdHJpc3RhdGUgIi9kZXYvY3B1LyovbXNyIC0g
TW9kZWwtc3BlY2lmaWMgcmVnaXN0ZXIgc3VwcG9ydCIKQEAgLTE0NzgsNyArMTQ3OCw3IEBAIGNv
bmZpZyBYODZfNUxFVkVMCiAJICBBIGtlcm5lbCB3aXRoIHRoZSBvcHRpb24gZW5hYmxlZCBjYW4g
YmUgYm9vdGVkIG9uIG1hY2hpbmVzIHRoYXQKIAkgIHN1cHBvcnQgNC0gb3IgNS1sZXZlbCBwYWdp
bmcuCiAKLQkgIFNlZSBEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvNWxldmVsLXBhZ2luZy50eHQg
Zm9yIG1vcmUKKwkgIFNlZSBEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvNWxldmVsLXBhZ2luZy5y
c3QgZm9yIG1vcmUKIAkgIGluZm9ybWF0aW9uLgogCiAJICBTYXkgTiBpZiB1bnN1cmUuCkBAIC0x
NjI2LDcgKzE2MjYsNyBAQCBjb25maWcgQVJDSF9NRU1PUllfUFJPQkUKIAlkZXBlbmRzIG9uIFg4
Nl82NCAmJiBNRU1PUllfSE9UUExVRwogCWhlbHAKIAkgIFRoaXMgb3B0aW9uIGVuYWJsZXMgYSBz
eXNmcyBtZW1vcnkvcHJvYmUgaW50ZXJmYWNlIGZvciB0ZXN0aW5nLgotCSAgU2VlIERvY3VtZW50
YXRpb24vbWVtb3J5LWhvdHBsdWcudHh0IGZvciBtb3JlIGluZm9ybWF0aW9uLgorCSAgU2VlIERv
Y3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvbW0vbWVtb3J5LWhvdHBsdWcucnN0IGZvciBtb3JlIGlu
Zm9ybWF0aW9uLgogCSAgSWYgeW91IGFyZSB1bnN1cmUgaG93IHRvIGFuc3dlciB0aGlzIHF1ZXN0
aW9uLCBhbnN3ZXIgTi4KIAogY29uZmlnIEFSQ0hfUFJPQ19LQ09SRV9URVhUCkBAIC0xNzgzLDcg
KzE3ODMsNyBAQCBjb25maWcgTVRSUgogCSAgWW91IGNhbiBzYWZlbHkgc2F5IFkgZXZlbiBpZiB5
b3VyIG1hY2hpbmUgZG9lc24ndCBoYXZlIE1UUlJzLCB5b3UnbGwKIAkgIGp1c3QgYWRkIGFib3V0
IDkgS0IgdG8geW91ciBrZXJuZWwuCiAKLQkgIFNlZSA8ZmlsZTpEb2N1bWVudGF0aW9uL3g4Ni9t
dHJyLnR4dD4gZm9yIG1vcmUgaW5mb3JtYXRpb24uCisJICBTZWUgPGZpbGU6RG9jdW1lbnRhdGlv
bi94ODYvbXRyci5yc3Q+IGZvciBtb3JlIGluZm9ybWF0aW9uLgogCiBjb25maWcgTVRSUl9TQU5J
VElaRVIKIAlkZWZfYm9vbCB5CkBAIC0xODk1LDcgKzE4OTUsNyBAQCBjb25maWcgWDg2X0lOVEVM
X01QWAogCSAgcHJvY2VzcyBhbmQgYWRkcyBzb21lIGJyYW5jaGVzIHRvIHBhdGhzIHVzZWQgZHVy
aW5nCiAJICBleGVjKCkgYW5kIG11bm1hcCgpLgogCi0JICBGb3IgZGV0YWlscywgc2VlIERvY3Vt
ZW50YXRpb24veDg2L2ludGVsX21weC50eHQKKwkgIEZvciBkZXRhaWxzLCBzZWUgRG9jdW1lbnRh
dGlvbi94ODYvaW50ZWxfbXB4LnJzdAogCiAJICBJZiB1bnN1cmUsIHNheSBOLgogCkBAIC0xOTEx
LDcgKzE5MTEsNyBAQCBjb25maWcgWDg2X0lOVEVMX01FTU9SWV9QUk9URUNUSU9OX0tFWVMKIAkg
IHBhZ2UtYmFzZWQgcHJvdGVjdGlvbnMsIGJ1dCB3aXRob3V0IHJlcXVpcmluZyBtb2RpZmljYXRp
b24gb2YgdGhlCiAJICBwYWdlIHRhYmxlcyB3aGVuIGFuIGFwcGxpY2F0aW9uIGNoYW5nZXMgcHJv
dGVjdGlvbiBkb21haW5zLgogCi0JICBGb3IgZGV0YWlscywgc2VlIERvY3VtZW50YXRpb24veDg2
L3Byb3RlY3Rpb24ta2V5cy50eHQKKwkgIEZvciBkZXRhaWxzLCBzZWUgRG9jdW1lbnRhdGlvbi94
ODYvcHJvdGVjdGlvbi1rZXlzLnJzdAogCiAJICBJZiB1bnN1cmUsIHNheSB5LgogCmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9LY29uZmlnLmRlYnVnIGIvYXJjaC94ODYvS2NvbmZpZy5kZWJ1ZwppbmRl
eCBmNzMwNjgwZGM4MTguLjU5ZjU5ODU0MzIwMyAxMDA2NDQKLS0tIGEvYXJjaC94ODYvS2NvbmZp
Zy5kZWJ1ZworKysgYi9hcmNoL3g4Ni9LY29uZmlnLmRlYnVnCkBAIC0xNTYsNyArMTU2LDcgQEAg
Y29uZmlnIElPTU1VX0RFQlVHCiAJICBjb2RlLiBXaGVuIHlvdSB1c2UgaXQgbWFrZSBzdXJlIHlv
dSBoYXZlIGEgYmlnIGVub3VnaAogCSAgSU9NTVUvQUdQIGFwZXJ0dXJlLiAgTW9zdCBvZiB0aGUg
b3B0aW9ucyBlbmFibGVkIGJ5IHRoaXMgY2FuCiAJICBiZSBzZXQgbW9yZSBmaW5lZ3JhaW5lZCB1
c2luZyB0aGUgaW9tbXU9IGNvbW1hbmQgbGluZQotCSAgb3B0aW9ucy4gU2VlIERvY3VtZW50YXRp
b24veDg2L3g4Nl82NC9ib290LW9wdGlvbnMudHh0IGZvciBtb3JlCisJICBvcHRpb25zLiBTZWUg
RG9jdW1lbnRhdGlvbi94ODYveDg2XzY0L2Jvb3Qtb3B0aW9ucy5yc3QgZm9yIG1vcmUKIAkgIGRl
dGFpbHMuCiAKIGNvbmZpZyBJT01NVV9MRUFLCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9ib290L2hl
YWRlci5TIGIvYXJjaC94ODYvYm9vdC9oZWFkZXIuUwppbmRleCA4NTBiODc2MmU4ODkuLjkwZDc5
MWNhMWE5NSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvYm9vdC9oZWFkZXIuUworKysgYi9hcmNoL3g4
Ni9ib290L2hlYWRlci5TCkBAIC0zMTMsNyArMzEzLDcgQEAgc3RhcnRfc3lzX3NlZzoJLndvcmQJ
U1lTU0VHCQkjIG9ic29sZXRlIGFuZCBtZWFuaW5nbGVzcywgYnV0IGp1c3QKIAogdHlwZV9vZl9s
b2FkZXI6CS5ieXRlCTAJCSMgMCBtZWFucyBhbmNpZW50IGJvb3Rsb2FkZXIsIG5ld2VyCiAJCQkJ
CSMgYm9vdGxvYWRlcnMga25vdyB0byBjaGFuZ2UgdGhpcy4KLQkJCQkJIyBTZWUgRG9jdW1lbnRh
dGlvbi94ODYvYm9vdC50eHQgZm9yCisJCQkJCSMgU2VlIERvY3VtZW50YXRpb24veDg2L2Jvb3Qu
cnN0IGZvcgogCQkJCQkjIGFzc2lnbmVkIGlkcwogCiAjIGZsYWdzLCB1bnVzZWQgYml0cyBtdXN0
IGJlIHplcm8gKFJGVSkgYml0IHdpdGhpbiBsb2FkZmxhZ3MKZGlmZiAtLWdpdCBhL2FyY2gveDg2
L2VudHJ5L2VudHJ5XzY0LlMgYi9hcmNoL3g4Ni9lbnRyeS9lbnRyeV82NC5TCmluZGV4IDExYWEz
YjJhZmE0ZC4uMzNmOWZjMzhkMDE0IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9lbnRyeS9lbnRyeV82
NC5TCisrKyBiL2FyY2gveDg2L2VudHJ5L2VudHJ5XzY0LlMKQEAgLTgsNyArOCw3IEBACiAgKgog
ICogZW50cnkuUyBjb250YWlucyB0aGUgc3lzdGVtLWNhbGwgYW5kIGZhdWx0IGxvdy1sZXZlbCBo
YW5kbGluZyByb3V0aW5lcy4KICAqCi0gKiBTb21lIG9mIHRoaXMgaXMgZG9jdW1lbnRlZCBpbiBE
b2N1bWVudGF0aW9uL3g4Ni9lbnRyeV82NC50eHQKKyAqIFNvbWUgb2YgdGhpcyBpcyBkb2N1bWVu
dGVkIGluIERvY3VtZW50YXRpb24veDg2L2VudHJ5XzY0LnJzdAogICoKICAqIEEgbm90ZSBvbiB0
ZXJtaW5vbG9neToKICAqIC0gaXJldCBmcmFtZToJQXJjaGl0ZWN0dXJlIGRlZmluZWQgaW50ZXJy
dXB0IGZyYW1lIGZyb20gU1MgdG8gUklQCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2Fz
bS9ib290cGFyYW1fdXRpbHMuaCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL2Jvb3RwYXJhbV91dGls
cy5oCmluZGV4IGY2ZjZlZjQzNjU5OS4uMTAxZWI5NDRmMTNjIDEwMDY0NAotLS0gYS9hcmNoL3g4
Ni9pbmNsdWRlL2FzbS9ib290cGFyYW1fdXRpbHMuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2Fz
bS9ib290cGFyYW1fdXRpbHMuaApAQCAtMjQsNyArMjQsNyBAQCBzdGF0aWMgdm9pZCBzYW5pdGl6
ZV9ib290X3BhcmFtcyhzdHJ1Y3QgYm9vdF9wYXJhbXMgKmJvb3RfcGFyYW1zKQogCSAqIElNUE9S
VEFOVCBOT1RFIFRPIEJPT1RMT0FERVIgQVVUSE9SUzogZG8gbm90IHNpbXBseSBjbGVhcgogCSAq
IHRoaXMgZmllbGQuICBUaGUgcHVycG9zZSBvZiB0aGlzIGZpZWxkIGlzIHRvIGd1YXJhbnRlZQog
CSAqIGNvbXBsaWFuY2Ugd2l0aCB0aGUgeDg2IGJvb3Qgc3BlYyBsb2NhdGVkIGluCi0JICogRG9j
dW1lbnRhdGlvbi94ODYvYm9vdC50eHQgLiAgVGhhdCBzcGVjIHNheXMgdGhhdCB0aGUKKwkgKiBE
b2N1bWVudGF0aW9uL3g4Ni9ib290LnJzdCAuICBUaGF0IHNwZWMgc2F5cyB0aGF0IHRoZQogCSAq
ICp3aG9sZSogc3RydWN0dXJlIHNob3VsZCBiZSBjbGVhcmVkLCBhZnRlciB3aGljaCBvbmx5IHRo
ZQogCSAqIHBvcnRpb24gZGVmaW5lZCBieSBzdHJ1Y3Qgc2V0dXBfaGVhZGVyIChib290X3BhcmFt
cy0+aGRyKQogCSAqIHNob3VsZCBiZSBjb3BpZWQgaW4uCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9p
bmNsdWRlL2FzbS9wYWdlXzY0X3R5cGVzLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYWdlXzY0
X3R5cGVzLmgKaW5kZXggNzkzYzE0YzM3MmNiLi4yODhiMDY1OTU1YjcgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L2luY2x1ZGUvYXNtL3BhZ2VfNjRfdHlwZXMuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRl
L2FzbS9wYWdlXzY0X3R5cGVzLmgKQEAgLTQ4LDcgKzQ4LDcgQEAKIAogI2RlZmluZSBfX1NUQVJU
X0tFUk5FTF9tYXAJX0FDKDB4ZmZmZmZmZmY4MDAwMDAwMCwgVUwpCiAKLS8qIFNlZSBEb2N1bWVu
dGF0aW9uL3g4Ni94ODZfNjQvbW0udHh0IGZvciBhIGRlc2NyaXB0aW9uIG9mIHRoZSBtZW1vcnkg
bWFwLiAqLworLyogU2VlIERvY3VtZW50YXRpb24veDg2L3g4Nl82NC9tbS5yc3QgZm9yIGEgZGVz
Y3JpcHRpb24gb2YgdGhlIG1lbW9yeSBtYXAuICovCiAKICNkZWZpbmUgX19QSFlTSUNBTF9NQVNL
X1NISUZUCTUyCiAKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGVfNjRf
dHlwZXMuaCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGVfNjRfdHlwZXMuaAppbmRleCA4
OGJjYTQ1NmRhOTkuLjUyZTVmNWYyMjQwZCAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9h
c20vcGd0YWJsZV82NF90eXBlcy5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGVf
NjRfdHlwZXMuaApAQCAtMTAzLDcgKzEwMyw3IEBAIGV4dGVybiB1bnNpZ25lZCBpbnQgcHRyc19w
ZXJfcDRkOwogI2RlZmluZSBQR0RJUl9NQVNLCSh+KFBHRElSX1NJWkUgLSAxKSkKIAogLyoKLSAq
IFNlZSBEb2N1bWVudGF0aW9uL3g4Ni94ODZfNjQvbW0udHh0IGZvciBhIGRlc2NyaXB0aW9uIG9m
IHRoZSBtZW1vcnkgbWFwLgorICogU2VlIERvY3VtZW50YXRpb24veDg2L3g4Nl82NC9tbS5yc3Qg
Zm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlIG1lbW9yeSBtYXAuCiAgKgogICogQmUgdmVyeSBjYXJl
ZnVsIHZzLiBLQVNMUiB3aGVuIGNoYW5naW5nIGFueXRoaW5nIGhlcmUuIFRoZSBLQVNMUiBhZGRy
ZXNzCiAgKiByYW5nZSBtdXN0IG5vdCBvdmVybGFwIHdpdGggYW55dGhpbmcgZXhjZXB0IHRoZSBL
QVNBTiBzaGFkb3cgYXJlYSwgd2hpY2gKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2tlcm5lbC9jcHUv
bWljcm9jb2RlL2FtZC5jIGIvYXJjaC94ODYva2VybmVsL2NwdS9taWNyb2NvZGUvYW1kLmMKaW5k
ZXggZTFmM2JhMTliYTU0Li4wNmQ0ZTY3ZjMxYWIgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2tlcm5l
bC9jcHUvbWljcm9jb2RlL2FtZC5jCisrKyBiL2FyY2gveDg2L2tlcm5lbC9jcHUvbWljcm9jb2Rl
L2FtZC5jCkBAIC02MSw3ICs2MSw3IEBAIHN0YXRpYyB1OCBhbWRfdWNvZGVfcGF0Y2hbUEFUQ0hf
TUFYX1NJWkVdOwogCiAvKgogICogTWljcm9jb2RlIHBhdGNoIGNvbnRhaW5lciBmaWxlIGlzIHBy
ZXBlbmRlZCB0byB0aGUgaW5pdHJkIGluIGNwaW8KLSAqIGZvcm1hdC4gU2VlIERvY3VtZW50YXRp
b24veDg2L21pY3JvY29kZS50eHQKKyAqIGZvcm1hdC4gU2VlIERvY3VtZW50YXRpb24veDg2L21p
Y3JvY29kZS5yc3QKICAqLwogc3RhdGljIGNvbnN0IGNoYXIKIHVjb2RlX3BhdGhbXSBfX21heWJl
X3VudXNlZCA9ICJrZXJuZWwveDg2L21pY3JvY29kZS9BdXRoZW50aWNBTUQuYmluIjsKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2tlcm5lbC9rZXhlYy1iemltYWdlNjQuYyBiL2FyY2gveDg2L2tlcm5l
bC9rZXhlYy1iemltYWdlNjQuYwppbmRleCAyMmY2MGRkMjY0NjAuLmIwN2U3MDY5YjA5ZSAxMDA2
NDQKLS0tIGEvYXJjaC94ODYva2VybmVsL2tleGVjLWJ6aW1hZ2U2NC5jCisrKyBiL2FyY2gveDg2
L2tlcm5lbC9rZXhlYy1iemltYWdlNjQuYwpAQCAtNDE2LDcgKzQxNiw3IEBAIHN0YXRpYyB2b2lk
ICpiekltYWdlNjRfbG9hZChzdHJ1Y3Qga2ltYWdlICppbWFnZSwgY2hhciAqa2VybmVsLAogCWVm
aV9tYXBfb2Zmc2V0ID0gcGFyYW1zX2NtZGxpbmVfc3o7CiAJZWZpX3NldHVwX2RhdGFfb2Zmc2V0
ID0gZWZpX21hcF9vZmZzZXQgKyBBTElHTihlZmlfbWFwX3N6LCAxNik7CiAKLQkvKiBDb3B5IHNl
dHVwIGhlYWRlciBvbnRvIGJvb3RwYXJhbXMuIERvY3VtZW50YXRpb24veDg2L2Jvb3QudHh0ICov
CisJLyogQ29weSBzZXR1cCBoZWFkZXIgb250byBib290cGFyYW1zLiBEb2N1bWVudGF0aW9uL3g4
Ni9ib290LnJzdCAqLwogCXNldHVwX2hlYWRlcl9zaXplID0gMHgwMjAyICsga2VybmVsWzB4MDIw
MV0gLSBzZXR1cF9oZHJfb2Zmc2V0OwogCiAJLyogSXMgdGhlcmUgYSBsaW1pdCBvbiBzZXR1cCBo
ZWFkZXIgc2l6ZT8gKi8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2tlcm5lbC9wY2ktZG1hLmMgYi9h
cmNoL3g4Ni9rZXJuZWwvcGNpLWRtYS5jCmluZGV4IGRjZDI3MmRiZDBhOS4uZjYyYjQ5OGIxOGZi
IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rZXJuZWwvcGNpLWRtYS5jCisrKyBiL2FyY2gveDg2L2tl
cm5lbC9wY2ktZG1hLmMKQEAgLTcwLDcgKzcwLDcgQEAgdm9pZCBfX2luaXQgcGNpX2lvbW11X2Fs
bG9jKHZvaWQpCiB9CiAKIC8qCi0gKiBTZWUgPERvY3VtZW50YXRpb24veDg2L3g4Nl82NC9ib290
LW9wdGlvbnMudHh0PiBmb3IgdGhlIGlvbW11IGtlcm5lbAorICogU2VlIDxEb2N1bWVudGF0aW9u
L3g4Ni94ODZfNjQvYm9vdC1vcHRpb25zLnJzdD4gZm9yIHRoZSBpb21tdSBrZXJuZWwKICAqIHBh
cmFtZXRlciBkb2N1bWVudGF0aW9uLgogICovCiBzdGF0aWMgX19pbml0IGludCBpb21tdV9zZXR1
cChjaGFyICpwKQpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvbW0vdGxiLmMgYi9hcmNoL3g4Ni9tbS90
bGIuYwppbmRleCA3ZjYxNDMxYzc1ZmIuLjQwMGMxYmEwMzNhYSAxMDA2NDQKLS0tIGEvYXJjaC94
ODYvbW0vdGxiLmMKKysrIGIvYXJjaC94ODYvbW0vdGxiLmMKQEAgLTcxMSw3ICs3MTEsNyBAQCB2
b2lkIG5hdGl2ZV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNr
LAogfQogCiAvKgotICogU2VlIERvY3VtZW50YXRpb24veDg2L3RsYi50eHQgZm9yIGRldGFpbHMu
ICBXZSBjaG9vc2UgMzMKKyAqIFNlZSBEb2N1bWVudGF0aW9uL3g4Ni90bGIucnN0IGZvciBkZXRh
aWxzLiAgV2UgY2hvb3NlIDMzCiAgKiBiZWNhdXNlIGl0IGlzIGxhcmdlIGVub3VnaCB0byBjb3Zl
ciB0aGUgdmFzdCBtYWpvcml0eSAoYXQKICAqIGxlYXN0IDk1JSkgb2YgYWxsb2NhdGlvbnMsIGFu
ZCBpcyBzbWFsbCBlbm91Z2ggdGhhdCB3ZSBhcmUKICAqIGNvbmZpZGVudCBpdCB3aWxsIG5vdCBj
YXVzZSB0b28gbXVjaCBvdmVyaGVhZC4gIEVhY2ggc2luZ2xlCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni9wbGF0Zm9ybS9wdmgvZW5saWdodGVuLmMgYi9hcmNoL3g4Ni9wbGF0Zm9ybS9wdmgvZW5saWdo
dGVuLmMKaW5kZXggMTg2MWEyYmEwZjJiLi5jMGE1MDJmN2UzYTcgMTAwNjQ0Ci0tLSBhL2FyY2gv
eDg2L3BsYXRmb3JtL3B2aC9lbmxpZ2h0ZW4uYworKysgYi9hcmNoL3g4Ni9wbGF0Zm9ybS9wdmgv
ZW5saWdodGVuLmMKQEAgLTg2LDcgKzg2LDcgQEAgc3RhdGljIHZvaWQgX19pbml0IGluaXRfcHZo
X2Jvb3RwYXJhbXMoYm9vbCB4ZW5fZ3Vlc3QpCiAJfQogCiAJLyoKLQkgKiBTZWUgRG9jdW1lbnRh
dGlvbi94ODYvYm9vdC50eHQuCisJICogU2VlIERvY3VtZW50YXRpb24veDg2L2Jvb3QucnN0Lgog
CSAqCiAJICogVmVyc2lvbiAyLjEyIHN1cHBvcnRzIFhlbiBlbnRyeSBwb2ludCBidXQgd2Ugd2ls
bCB1c2UgZGVmYXVsdCB4ODYvUEMKIAkgKiBlbnZpcm9ubWVudCAoaS5lLiBoYXJkd2FyZV9zdWJh
cmNoIDApLgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9hY3BpL0tjb25maWcgYi9kcml2ZXJzL2FjcGkv
S2NvbmZpZwppbmRleCAyODNlZTk0MjI0YzYuLjI0MzhmMzdmMmNhMSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9hY3BpL0tjb25maWcKKysrIGIvZHJpdmVycy9hY3BpL0tjb25maWcKQEAgLTMzMyw3ICsz
MzMsNyBAQCBjb25maWcgQUNQSV9DVVNUT01fRFNEVF9GSUxFCiAJZGVwZW5kcyBvbiAhU1RBTkRB
TE9ORQogCWhlbHAKIAkgIFRoaXMgb3B0aW9uIHN1cHBvcnRzIGEgY3VzdG9tIERTRFQgYnkgbGlu
a2luZyBpdCBpbnRvIHRoZSBrZXJuZWwuCi0JICBTZWUgRG9jdW1lbnRhdGlvbi9hY3BpL2RzZHQt
b3ZlcnJpZGUudHh0CisJICBTZWUgRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9hY3BpL2RzZHQt
b3ZlcnJpZGUucnN0CiAKIAkgIEVudGVyIHRoZSBmdWxsIHBhdGggbmFtZSB0byB0aGUgZmlsZSB3
aGljaCBpbmNsdWRlcyB0aGUgQW1sQ29kZQogCSAgb3IgZHNkdF9hbWxfY29kZSBkZWNsYXJhdGlv
bi4KQEAgLTM1NSw3ICszNTUsNyBAQCBjb25maWcgQUNQSV9UQUJMRV9VUEdSQURFCiAJICBUaGlz
IG9wdGlvbiBwcm92aWRlcyBmdW5jdGlvbmFsaXR5IHRvIHVwZ3JhZGUgYXJiaXRyYXJ5IEFDUEkg
dGFibGVzCiAJICB2aWEgaW5pdHJkLiBObyBmdW5jdGlvbmFsIGNoYW5nZSBpZiBubyBBQ1BJIHRh
YmxlcyBhcmUgcGFzc2VkIHZpYQogCSAgaW5pdHJkLCB0aGVyZWZvcmUgaXQncyBzYWZlIHRvIHNh
eSBZLgotCSAgU2VlIERvY3VtZW50YXRpb24vYWNwaS9pbml0cmRfdGFibGVfb3ZlcnJpZGUudHh0
IGZvciBkZXRhaWxzCisJICBTZWUgRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9hY3BpL2luaXRy
ZF90YWJsZV9vdmVycmlkZS5yc3QgZm9yIGRldGFpbHMKIAogY29uZmlnIEFDUElfVEFCTEVfT1ZF
UlJJREVfVklBX0JVSUxUSU5fSU5JVFJECiAJYm9vbCAiT3ZlcnJpZGUgQUNQSSB0YWJsZXMgZnJv
bSBidWlsdC1pbiBpbml0cmQiCkBAIC0zNjUsNyArMzY1LDcgQEAgY29uZmlnIEFDUElfVEFCTEVf
T1ZFUlJJREVfVklBX0JVSUxUSU5fSU5JVFJECiAJICBUaGlzIG9wdGlvbiBwcm92aWRlcyBmdW5j
dGlvbmFsaXR5IHRvIG92ZXJyaWRlIGFyYml0cmFyeSBBQ1BJIHRhYmxlcwogCSAgZnJvbSBidWls
dC1pbiB1bmNvbXByZXNzZWQgaW5pdHJkLgogCi0JICBTZWUgRG9jdW1lbnRhdGlvbi9hY3BpL2lu
aXRyZF90YWJsZV9vdmVycmlkZS50eHQgZm9yIGRldGFpbHMKKwkgIFNlZSBEb2N1bWVudGF0aW9u
L2FkbWluLWd1aWRlL2FjcGkvaW5pdHJkX3RhYmxlX292ZXJyaWRlLnJzdCBmb3IgZGV0YWlscwog
CiBjb25maWcgQUNQSV9ERUJVRwogCWJvb2wgIkRlYnVnIFN0YXRlbWVudHMiCkBAIC0zNzQsNyAr
Mzc0LDcgQEAgY29uZmlnIEFDUElfREVCVUcKIAkgIG91dHB1dCBhbmQgaW5jcmVhc2VzIHRoZSBr
ZXJuZWwgc2l6ZSBieSBhcm91bmQgNTBLLgogCiAJICBVc2UgdGhlIGFjcGkuZGVidWdfbGF5ZXIg
YW5kIGFjcGkuZGVidWdfbGV2ZWwga2VybmVsIGNvbW1hbmQtbGluZQotCSAgcGFyYW1ldGVycyBk
b2N1bWVudGVkIGluIERvY3VtZW50YXRpb24vYWNwaS9kZWJ1Zy50eHQgYW5kCisJICBwYXJhbWV0
ZXJzIGRvY3VtZW50ZWQgaW4gRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1ndWlkZS9hY3BpL2RlYnVn
LnJzdCBhbmQKIAkgIERvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUva2VybmVsLXBhcmFtZXRlcnMu
cnN0IHRvIGNvbnRyb2wgdGhlIHR5cGUgYW5kCiAJICBhbW91bnQgb2YgZGVidWcgb3V0cHV0Lgog
CkBAIC00NDUsNyArNDQ1LDcgQEAgY29uZmlnIEFDUElfQ1VTVE9NX01FVEhPRAogCWhlbHAKIAkg
IFRoaXMgZGVidWcgZmFjaWxpdHkgYWxsb3dzIEFDUEkgQU1MIG1ldGhvZHMgdG8gYmUgaW5zZXJ0
ZWQgYW5kL29yCiAJICByZXBsYWNlZCB3aXRob3V0IHJlYm9vdGluZyB0aGUgc3lzdGVtLiBGb3Ig
ZGV0YWlscyByZWZlciB0bzoKLQkgIERvY3VtZW50YXRpb24vYWNwaS9tZXRob2QtY3VzdG9taXpp
bmcudHh0LgorCSAgRG9jdW1lbnRhdGlvbi9maXJtd2FyZS1ndWlkZS9hY3BpL21ldGhvZC1jdXN0
b21pemluZy5yc3QuCiAKIAkgIE5PVEU6IFRoaXMgb3B0aW9uIGlzIHNlY3VyaXR5IHNlbnNpdGl2
ZSwgYmVjYXVzZSBpdCBhbGxvd3MgYXJiaXRyYXJ5CiAJICBrZXJuZWwgbWVtb3J5IHRvIGJlIHdy
aXR0ZW4gdG8gYnkgcm9vdCAodWlkPTApIHVzZXJzLCBhbGxvd2luZyB0aGVtCmRpZmYgLS1naXQg
YS9kcml2ZXJzL25ldC9ldGhlcm5ldC9mYXJhZGF5L2Z0Z21hYzEwMC5jIGIvZHJpdmVycy9uZXQv
ZXRoZXJuZXQvZmFyYWRheS9mdGdtYWMxMDAuYwppbmRleCBiMTdiNzllNjEyYTMuLmFjNjI4MGFk
NDNhMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvZmFyYWRheS9mdGdtYWMxMDAu
YworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9mYXJhZGF5L2Z0Z21hYzEwMC5jCkBAIC0xMDc1
LDcgKzEwNzUsNyBAQCBzdGF0aWMgaW50IGZ0Z21hYzEwMF9taWlfcHJvYmUoc3RydWN0IGZ0Z21h
YzEwMCAqcHJpdiwgcGh5X2ludGVyZmFjZV90IGludGYpCiAJfQogCiAJLyogSW5kaWNhdGUgdGhh
dCB3ZSBzdXBwb3J0IFBBVVNFIGZyYW1lcyAoc2VlIGNvbW1lbnQgaW4KLQkgKiBEb2N1bWVudGF0
aW9uL25ldHdvcmtpbmcvcGh5LnR4dCkKKwkgKiBEb2N1bWVudGF0aW9uL25ldHdvcmtpbmcvcGh5
LnJzdCkKIAkgKi8KIAlwaHlfc3VwcG9ydF9hc3ltX3BhdXNlKHBoeWRldik7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvc3RhZ2luZy9maWVsZGJ1cy9Eb2N1bWVudGF0aW9uL2ZpZWxkYnVzX2Rldi50
eHQgYi9kcml2ZXJzL3N0YWdpbmcvZmllbGRidXMvRG9jdW1lbnRhdGlvbi9maWVsZGJ1c19kZXYu
dHh0CmluZGV4IDU2YWYzZjY1MGZhMy4uODlmYjhlMTQ2NzZmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L3N0YWdpbmcvZmllbGRidXMvRG9jdW1lbnRhdGlvbi9maWVsZGJ1c19kZXYudHh0CisrKyBiL2Ry
aXZlcnMvc3RhZ2luZy9maWVsZGJ1cy9Eb2N1bWVudGF0aW9uL2ZpZWxkYnVzX2Rldi50eHQKQEAg
LTU0LDggKzU0LDggQEAgYSBsaW1pdGVkIGZldyBjb21tb24gYmVoYXZpb3VycyBhbmQgcHJvcGVy
dGllcy4gVGhpcyBhbGxvd3MgdXMgdG8gZGVmaW5lCiBhIHNpbXBsZSBpbnRlcmZhY2UgY29uc2lz
dGluZyBvZiBhIGNoYXJhY3RlciBkZXZpY2UgYW5kIGEgc2V0IG9mIHN5c2ZzIGZpbGVzOgogCiBT
ZWU6Ci1Eb2N1bWVudGF0aW9uL0FCSS90ZXN0aW5nL3N5c2ZzLWNsYXNzLWZpZWxkYnVzLWRldgot
RG9jdW1lbnRhdGlvbi9BQkkvdGVzdGluZy9maWVsZGJ1cy1kZXYtY2RldgorZHJpdmVycy9zdGFn
aW5nL2ZpZWxkYnVzL0RvY3VtZW50YXRpb24vQUJJL3N5c2ZzLWNsYXNzLWZpZWxkYnVzLWRldgor
ZHJpdmVycy9zdGFnaW5nL2ZpZWxkYnVzL0RvY3VtZW50YXRpb24vQUJJL2ZpZWxkYnVzLWRldi1j
ZGV2CiAKIE5vdGUgdGhhdCB0aGlzIHNpbXBsZSBpbnRlcmZhY2UgZG9lcyBub3QgcHJvdmlkZSBh
IHdheSB0byBtb2RpZnkgYWRhcHRlcgogY29uZmlndXJhdGlvbiBzZXR0aW5ncy4gSXQgaXMgdGhl
cmVmb3JlIHVzZWZ1bCBvbmx5IGZvciBhZGFwdGVycyB0aGF0IGdldCB0aGVpcgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy92aG9zdC92aG9zdC5jIGIvZHJpdmVycy92aG9zdC92aG9zdC5jCmluZGV4IDFl
M2VkNDFhZTFmMy4uNjk5MzhkYmFlMmQwIDEwMDY0NAotLS0gYS9kcml2ZXJzL3Zob3N0L3Zob3N0
LmMKKysrIGIvZHJpdmVycy92aG9zdC92aG9zdC5jCkBAIC0xNjk0LDcgKzE2OTQsNyBAQCBFWFBP
UlRfU1lNQk9MX0dQTCh2aG9zdF9kZXZfaW9jdGwpOwogCiAvKiBUT0RPOiBUaGlzIGlzIHJlYWxs
eSBpbmVmZmljaWVudC4gIFdlIG5lZWQgc29tZXRoaW5nIGxpa2UgZ2V0X3VzZXIoKQogICogKGlu
c3RydWN0aW9uIGRpcmVjdGx5IGFjY2Vzc2VzIHRoZSBkYXRhLCB3aXRoIGFuIGV4Y2VwdGlvbiB0
YWJsZSBlbnRyeQotICogcmV0dXJuaW5nIC1FRkFVTFQpLiBTZWUgRG9jdW1lbnRhdGlvbi94ODYv
ZXhjZXB0aW9uLXRhYmxlcy50eHQuCisgKiByZXR1cm5pbmcgLUVGQVVMVCkuIFNlZSBEb2N1bWVu
dGF0aW9uL3g4Ni9leGNlcHRpb24tdGFibGVzLnJzdC4KICAqLwogc3RhdGljIGludCBzZXRfYml0
X3RvX3VzZXIoaW50IG5yLCB2b2lkIF9fdXNlciAqYWRkcikKIHsKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvYWNwaS9hY3BpX2RyaXZlcnMuaCBiL2luY2x1ZGUvYWNwaS9hY3BpX2RyaXZlcnMuaAppbmRl
eCBkZTE4MDRhZWFmNjkuLjk4ZTNkYjdhODljZCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9hY3BpL2Fj
cGlfZHJpdmVycy5oCisrKyBiL2luY2x1ZGUvYWNwaS9hY3BpX2RyaXZlcnMuaApAQCAtMjUsNyAr
MjUsNyBAQAogI2RlZmluZSBBQ1BJX01BWF9TVFJJTkcJCQk4MAogCiAvKgotICogUGxlYXNlIHVw
ZGF0ZSBkcml2ZXJzL2FjcGkvZGVidWcuYyBhbmQgRG9jdW1lbnRhdGlvbi9hY3BpL2RlYnVnLnR4
dAorICogUGxlYXNlIHVwZGF0ZSBkcml2ZXJzL2FjcGkvZGVidWcuYyBhbmQgRG9jdW1lbnRhdGlv
bi9maXJtd2FyZS1ndWlkZS9hY3BpL2RlYnVnLnJzdAogICogaWYgeW91IGFkZCB0byB0aGlzIGxp
c3QuCiAgKi8KICNkZWZpbmUgQUNQSV9CVVNfQ09NUE9ORU5UCQkweDAwMDEwMDAwCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L2ZzX2NvbnRleHQuaCBiL2luY2x1ZGUvbGludXgvZnNfY29udGV4
dC5oCmluZGV4IDFmOTY2NjcwYzhkYy4uNjIzZWI1ODU2MGI5IDEwMDY0NAotLS0gYS9pbmNsdWRl
L2xpbnV4L2ZzX2NvbnRleHQuaAorKysgYi9pbmNsdWRlL2xpbnV4L2ZzX2NvbnRleHQuaApAQCAt
ODUsNyArODUsNyBAQCBzdHJ1Y3QgZnNfcGFyYW1ldGVyIHsKICAqIFN1cGVyYmxvY2sgY3JlYXRp
b24gZmlsbHMgaW4gLT5yb290IHdoZXJlYXMgcmVjb25maWd1cmF0aW9uIGJlZ2lucyB3aXRoIHRo
aXMKICAqIGFscmVhZHkgc2V0LgogICoKLSAqIFNlZSBEb2N1bWVudGF0aW9uL2ZpbGVzeXN0ZW1z
L21vdW50aW5nLnR4dAorICogU2VlIERvY3VtZW50YXRpb24vZmlsZXN5c3RlbXMvbW91bnRfYXBp
LnR4dAogICovCiBzdHJ1Y3QgZnNfY29udGV4dCB7CiAJY29uc3Qgc3RydWN0IGZzX2NvbnRleHRf
b3BlcmF0aW9ucyAqb3BzOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9sc21faG9va3MuaCBi
L2luY2x1ZGUvbGludXgvbHNtX2hvb2tzLmgKaW5kZXggNDdmNThjZmI2YTE5Li5kZjEzMThkODVm
N2QgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbHNtX2hvb2tzLmgKKysrIGIvaW5jbHVkZS9s
aW51eC9sc21faG9va3MuaApAQCAtNzcsNyArNzcsNyBAQAogICoJc3RhdGUuICBUaGlzIGlzIGNh
bGxlZCBpbW1lZGlhdGVseSBhZnRlciBjb21taXRfY3JlZHMoKS4KICAqCiAgKiBTZWN1cml0eSBo
b29rcyBmb3IgbW91bnQgdXNpbmcgZnNfY29udGV4dC4KLSAqCVtTZWUgYWxzbyBEb2N1bWVudGF0
aW9uL2ZpbGVzeXN0ZW1zL21vdW50aW5nLnR4dF0KKyAqCVtTZWUgYWxzbyBEb2N1bWVudGF0aW9u
L2ZpbGVzeXN0ZW1zL21vdW50X2FwaS50eHRdCiAgKgogICogQGZzX2NvbnRleHRfZHVwOgogICoJ
QWxsb2NhdGUgYW5kIGF0dGFjaCBhIHNlY3VyaXR5IHN0cnVjdHVyZSB0byBzYy0+c2VjdXJpdHku
ICBUaGlzIHBvaW50ZXIKZGlmZiAtLWdpdCBhL21tL0tjb25maWcgYi9tbS9LY29uZmlnCmluZGV4
IGVlOGQxZjMxMTg1OC4uNmU1ZmI4MWJkZTRiIDEwMDY0NAotLS0gYS9tbS9LY29uZmlnCisrKyBi
L21tL0tjb25maWcKQEAgLTE2NSw3ICsxNjUsNyBAQCBjb25maWcgTUVNT1JZX0hPVFBMVUdfREVG
QVVMVF9PTkxJTkUKIAkgIG9ubGluaW5nIHBvbGljeSAoL3N5cy9kZXZpY2VzL3N5c3RlbS9tZW1v
cnkvYXV0b19vbmxpbmVfYmxvY2tzKSB3aGljaAogCSAgZGV0ZXJtaW5lcyB3aGF0IGhhcHBlbnMg
dG8gbmV3bHkgYWRkZWQgbWVtb3J5IHJlZ2lvbnMuIFBvbGljeSBzZXR0aW5nCiAJICBjYW4gYWx3
YXlzIGJlIGNoYW5nZWQgYXQgcnVudGltZS4KLQkgIFNlZSBEb2N1bWVudGF0aW9uL21lbW9yeS1o
b3RwbHVnLnR4dCBmb3IgbW9yZSBpbmZvcm1hdGlvbi4KKwkgIFNlZSBEb2N1bWVudGF0aW9uL2Fk
bWluLWd1aWRlL21tL21lbW9yeS1ob3RwbHVnLnJzdCBmb3IgbW9yZSBpbmZvcm1hdGlvbi4KIAog
CSAgU2F5IFkgaGVyZSBpZiB5b3Ugd2FudCBhbGwgaG90LXBsdWdnZWQgbWVtb3J5IGJsb2NrcyB0
byBhcHBlYXIgaW4KIAkgICdvbmxpbmUnIHN0YXRlIGJ5IGRlZmF1bHQuCmRpZmYgLS1naXQgYS9z
ZWN1cml0eS9LY29uZmlnIGIvc2VjdXJpdHkvS2NvbmZpZwppbmRleCBhZWFjMzY3NmRkNGQuLjZk
NzVlZDcxOTcwYyAxMDA2NDQKLS0tIGEvc2VjdXJpdHkvS2NvbmZpZworKysgYi9zZWN1cml0eS9L
Y29uZmlnCkBAIC02Miw3ICs2Miw3IEBAIGNvbmZpZyBQQUdFX1RBQkxFX0lTT0xBVElPTgogCSAg
ZW5zdXJpbmcgdGhhdCB0aGUgbWFqb3JpdHkgb2Yga2VybmVsIGFkZHJlc3NlcyBhcmUgbm90IG1h
cHBlZAogCSAgaW50byB1c2Vyc3BhY2UuCiAKLQkgIFNlZSBEb2N1bWVudGF0aW9uL3g4Ni9wdGku
dHh0IGZvciBtb3JlIGRldGFpbHMuCisJICBTZWUgRG9jdW1lbnRhdGlvbi94ODYvcHRpLnJzdCBm
b3IgbW9yZSBkZXRhaWxzLgogCiBjb25maWcgU0VDVVJJVFlfSU5GSU5JQkFORAogCWJvb2wgIklu
ZmluaWJhbmQgU2VjdXJpdHkgSG9va3MiCmRpZmYgLS1naXQgYS90b29scy9pbmNsdWRlL2xpbnV4
L2Vyci5oIGIvdG9vbHMvaW5jbHVkZS9saW51eC9lcnIuaAppbmRleCAyZjVhMTJiODhhODYuLjI1
ZjJiYjNhOTkxZCAxMDA2NDQKLS0tIGEvdG9vbHMvaW5jbHVkZS9saW51eC9lcnIuaAorKysgYi90
b29scy9pbmNsdWRlL2xpbnV4L2Vyci5oCkBAIC0yMCw3ICsyMCw3IEBACiAgKiBVc2Vyc3BhY2Ug
bm90ZToKICAqIFRoZSBzYW1lIHByaW5jaXBsZSB3b3JrcyBmb3IgdXNlcnNwYWNlLCBiZWNhdXNl
ICdlcnJvcicgcG9pbnRlcnMKICAqIGZhbGwgZG93biB0byB0aGUgdW51c2VkIGhvbGUgZmFyIGZy
b20gdXNlciBzcGFjZSwgYXMgZGVzY3JpYmVkCi0gKiBpbiBEb2N1bWVudGF0aW9uL3g4Ni94ODZf
NjQvbW0udHh0IGZvciB4ODZfNjQgYXJjaDoKKyAqIGluIERvY3VtZW50YXRpb24veDg2L3g4Nl82
NC9tbS5yc3QgZm9yIHg4Nl82NCBhcmNoOgogICoKICAqIDAwMDAwMDAwMDAwMDAwMDAgLSAwMDAw
N2ZmZmZmZmZmZmZmICg9NDcgYml0cykgdXNlciBzcGFjZSwgZGlmZmVyZW50IHBlciBtbSBob2xl
IGNhdXNlZCBieSBbNDg6NjNdIHNpZ24gZXh0ZW5zaW9uCiAgKiBmZmZmZmZmZmZmZTAwMDAwIC0g
ZmZmZmZmZmZmZmZmZmZmZiAoPTIgTUIpIHVudXNlZCBob2xlCmRpZmYgLS1naXQgYS90b29scy9v
Ymp0b29sL0RvY3VtZW50YXRpb24vc3RhY2stdmFsaWRhdGlvbi50eHQgYi90b29scy9vYmp0b29s
L0RvY3VtZW50YXRpb24vc3RhY2stdmFsaWRhdGlvbi50eHQKaW5kZXggNGRkMTFhNTU0YjliLi5k
ZTA5NDY3MDA1MGIgMTAwNjQ0Ci0tLSBhL3Rvb2xzL29ianRvb2wvRG9jdW1lbnRhdGlvbi9zdGFj
ay12YWxpZGF0aW9uLnR4dAorKysgYi90b29scy9vYmp0b29sL0RvY3VtZW50YXRpb24vc3RhY2st
dmFsaWRhdGlvbi50eHQKQEAgLTIxLDcgKzIxLDcgQEAgaW5zdHJ1Y3Rpb25zKS4gIFNpbWlsYXJs
eSwgaXQga25vd3MgaG93IHRvIGZvbGxvdyBzd2l0Y2ggc3RhdGVtZW50cywgZm9yCiB3aGljaCBn
Y2Mgc29tZXRpbWVzIHVzZXMganVtcCB0YWJsZXMuCiAKIChPYmp0b29sIGFsc28gaGFzIGFuICdv
cmMgZ2VuZXJhdGUnIHN1YmNvbW1hbmQgd2hpY2ggZ2VuZXJhdGVzIGRlYnVnaW5mbwotZm9yIHRo
ZSBPUkMgdW53aW5kZXIuICBTZWUgRG9jdW1lbnRhdGlvbi94ODYvb3JjLXVud2luZGVyLnR4dCBp
biB0aGUKK2ZvciB0aGUgT1JDIHVud2luZGVyLiAgU2VlIERvY3VtZW50YXRpb24veDg2L29yYy11
bndpbmRlci5yc3QgaW4gdGhlCiBrZXJuZWwgdHJlZSBmb3IgbW9yZSBkZXRhaWxzLikKIAogCkBA
IC0xMDEsNyArMTAxLDcgQEAgYikgT1JDIChPb3BzIFJld2luZCBDYXBhYmlsaXR5KSB1bndpbmQg
dGFibGUgZ2VuZXJhdGlvbgogICAgYmFuZC4gIFNvIGl0IGRvZXNuJ3QgYWZmZWN0IHJ1bnRpbWUg
cGVyZm9ybWFuY2UgYW5kIGl0IGNhbiBiZQogICAgcmVsaWFibGUgZXZlbiB3aGVuIGludGVycnVw
dHMgb3IgZXhjZXB0aW9ucyBhcmUgaW52b2x2ZWQuCiAKLSAgIEZvciBtb3JlIGRldGFpbHMsIHNl
ZSBEb2N1bWVudGF0aW9uL3g4Ni9vcmMtdW53aW5kZXIudHh0LgorICAgRm9yIG1vcmUgZGV0YWls
cywgc2VlIERvY3VtZW50YXRpb24veDg2L29yYy11bndpbmRlci5yc3QuCiAKIGMpIEhpZ2hlciBs
aXZlIHBhdGNoaW5nIGNvbXBhdGliaWxpdHkgcmF0ZQogCmRpZmYgLS1naXQgYS90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy94ODYvcHJvdGVjdGlvbl9rZXlzLmMgYi90b29scy90ZXN0aW5nL3NlbGZ0
ZXN0cy94ODYvcHJvdGVjdGlvbl9rZXlzLmMKaW5kZXggNWQ1NDZkY2RiYzgwLi43OThhNWRkZWVl
NTUgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL3g4Ni9wcm90ZWN0aW9uX2tl
eXMuYworKysgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy94ODYvcHJvdGVjdGlvbl9rZXlzLmMK
QEAgLTEsNiArMSw2IEBACiAvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAogLyoK
LSAqIFRlc3RzIHg4NiBNZW1vcnkgUHJvdGVjdGlvbiBLZXlzIChzZWUgRG9jdW1lbnRhdGlvbi94
ODYvcHJvdGVjdGlvbi1rZXlzLnR4dCkKKyAqIFRlc3RzIHg4NiBNZW1vcnkgUHJvdGVjdGlvbiBL
ZXlzIChzZWUgRG9jdW1lbnRhdGlvbi94ODYvcHJvdGVjdGlvbi1rZXlzLnJzdCkKICAqCiAgKiBU
aGVyZSBhcmUgZXhhbXBsZXMgaW4gaGVyZSBvZjoKICAqICAqIGhvdyB0byBzZXQgcHJvdGVjdGlv
biBrZXlzIG9uIG1lbW9yeQotLSAKMi4yMS4wCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlz
dHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xp
c3RpbmZvL3hlbi1kZXZlbA==

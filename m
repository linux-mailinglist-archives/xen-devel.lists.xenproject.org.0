Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 70D02F97D3
	for <lists+xen-devel@lfdr.de>; Tue, 12 Nov 2019 18:57:32 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iUaMo-0003xD-AK; Tue, 12 Nov 2019 17:54:14 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=Np2b=ZE=linutronix.de=tip-bot2@srs-us1.protection.inumbo.net>)
 id 1iUaMm-0003x7-TU
 for xen-devel@lists.xenproject.org; Tue, 12 Nov 2019 17:54:12 +0000
X-Inumbo-ID: 6bbf526c-0575-11ea-b678-bc764e2007e4
Received: from Galois.linutronix.de (unknown [2a0a:51c0:0:12e:550::1])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 6bbf526c-0575-11ea-b678-bc764e2007e4;
 Tue, 12 Nov 2019 17:54:07 +0000 (UTC)
Received: from [5.158.153.53] (helo=tip-bot2.lab.linutronix.de)
 by Galois.linutronix.de with esmtpsa (TLS1.2:DHE_RSA_AES_256_CBC_SHA256:256)
 (Exim 4.80) (envelope-from <tip-bot2@linutronix.de>)
 id 1iUaMX-0000f4-BJ; Tue, 12 Nov 2019 18:53:57 +0100
Received: from [127.0.1.1] (localhost [IPv6:::1])
 by tip-bot2.lab.linutronix.de (Postfix) with ESMTP id E64A01C0084;
 Tue, 12 Nov 2019 18:53:56 +0100 (CET)
Date: Tue, 12 Nov 2019 17:53:56 -0000
From: "tip-bot2 for Daniel Kiper" <tip-bot2@linutronix.de>
To: linux-tip-commits@vger.kernel.org
In-Reply-To: <20191112134640.16035-2-daniel.kiper@oracle.com>
References: <20191112134640.16035-2-daniel.kiper@oracle.com>
MIME-Version: 1.0
Message-ID: <157358123647.29376.11005597821774950557.tip-bot2@tip-bot2>
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot2.linutronix.de>
Robot-Unsubscribe: Contact <mailto:tglx@linutronix.de> to get blacklisted from
 these emails
Precedence: bulk
X-Linutronix-Spam-Score: -1.0
X-Linutronix-Spam-Level: -
X-Linutronix-Spam-Status: No , -1.0 points, 5.0 required, ALL_TRUSTED=-1,
 SHORTCIRCUIT=-0.0001
Subject: [Xen-devel] [tip: x86/boot] x86/boot: Introduce kernel_info
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Reply-To: linux-kernel@vger.kernel.org
Cc: linux-efi <linux-efi@vger.kernel.org>, linux-doc@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>, dave.hansen@linux.intel.com,
 "H. Peter Anvin \(Intel\)" <hpa@zytor.com>, Ingo Molnar <mingo@kernel.org>,
 eric.snowberg@oracle.com, Jonathan Corbet <corbet@lwn.net>,
 Daniel Kiper <daniel.kiper@oracle.com>, x86-ml <x86@kernel.org>,
 Ingo Molnar <mingo@redhat.com>, kanth.ghatraju@oracle.com,
 xen-devel@lists.xenproject.org, Borislav Petkov <bp@suse.de>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 Ross Philipson <ross.philipson@oracle.com>, Borislav Petkov <bp@alien8.de>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>, Juergen Gross <jgross@suse.com>,
 ard.biesheuvel@linaro.org, rdunlap@infradead.org, linux-kernel@vger.kernel.org,
 Andy Lutomirski <luto@amacapital.net>, Thomas Gleixner <tglx@linutronix.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhlIGZvbGxvd2luZyBjb21taXQgaGFzIGJlZW4gbWVyZ2VkIGludG8gdGhlIHg4Ni9ib290IGJy
YW5jaCBvZiB0aXA6CgpDb21taXQtSUQ6ICAgICAyYzMzYzI3ZmQ2MDMzY2VkOTQyYzlhNTkxYjhh
YzE1YzA3YzU3ZDcwCkdpdHdlYjogICAgICAgIGh0dHBzOi8vZ2l0Lmtlcm5lbC5vcmcvdGlwLzJj
MzNjMjdmZDYwMzNjZWQ5NDJjOWE1OTFiOGFjMTVjMDdjNTdkNzAKQXV0aG9yOiAgICAgICAgRGFu
aWVsIEtpcGVyIDxkYW5pZWwua2lwZXJAb3JhY2xlLmNvbT4KQXV0aG9yRGF0ZTogICAgVHVlLCAx
MiBOb3YgMjAxOSAxNDo0NjozOCArMDE6MDAKQ29tbWl0dGVyOiAgICAgQm9yaXNsYXYgUGV0a292
IDxicEBzdXNlLmRlPgpDb21taXR0ZXJEYXRlOiBUdWUsIDEyIE5vdiAyMDE5IDE2OjEwOjM0ICsw
MTowMAoKeDg2L2Jvb3Q6IEludHJvZHVjZSBrZXJuZWxfaW5mbwoKVGhlIHJlbGF0aW9uc2hpcHMg
YmV0d2VlbiB0aGUgaGVhZGVycyBhcmUgYW5hbG9nb3VzIHRvIHRoZSB2YXJpb3VzIGRhdGEKc2Vj
dGlvbnM6CgogIHNldHVwX2hlYWRlciA9IC5kYXRhCiAgYm9vdF9wYXJhbXMvc2V0dXBfZGF0YSA9
IC5ic3MKCldoYXQgaXMgbWlzc2luZyBmcm9tIHRoZSBhYm92ZSBsaXN0PyBUaGF0J3MgcmlnaHQ6
CgogIGtlcm5lbF9pbmZvID0gLnJvZGF0YQoKV2UgaGF2ZSBiZWVuIChhYil1c2luZyAuZGF0YSBm
b3IgdGhpbmdzIHRoYXQgY291bGQgZ28gaW50byAucm9kYXRhIG9yIC5ic3MgZm9yCmEgbG9uZyB0
aW1lLCBmb3IgbGFjayBvZiBhbHRlcm5hdGl2ZXMgYW5kIC0tIGVzcGVjaWFsbHkgZWFybHkgb24g
LS0gaW5lcnRpYS4KQWxzbywgdGhlIEJJT1Mgc3R1YiBpcyByZXNwb25zaWJsZSBmb3IgY3JlYXRp
bmcgYm9vdF9wYXJhbXMsIHNvIGl0IGlzbid0CmF2YWlsYWJsZSB0byBhIEJJT1MtYmFzZWQgbG9h
ZGVyIChzZXR1cF9kYXRhIGlzLCB0aG91Z2gpLgoKc2V0dXBfaGVhZGVyIGlzIHBlcm1hbmVudGx5
IGxpbWl0ZWQgdG8gMTQ0IGJ5dGVzIGR1ZSB0byB0aGUgcmVhY2ggb2YgdGhlCjItYnl0ZSBqdW1w
IGZpZWxkLCB3aGljaCBkb3VibGVzIGFzIGEgbGVuZ3RoIGZpZWxkIGZvciB0aGUgc3RydWN0dXJl
LCBjb21iaW5lZAp3aXRoIHRoZSBzaXplIG9mIHRoZSAiaG9sZSIgaW4gc3RydWN0IGJvb3RfcGFy
YW1zIHRoYXQgYSBwcm90ZWN0ZWQtbW9kZSBsb2FkZXIKb3IgdGhlIEJJT1Mgc3R1YiBoYXMgdG8g
Y29weSBpdCBpbnRvLiBJdCBpcyBjdXJyZW50bHkgMTE5IGJ5dGVzIGxvbmcsIHdoaWNoCmxlYXZl
cyB1cyB3aXRoIDI1IHZlcnkgcHJlY2lvdXMgYnl0ZXMuIFRoaXMgaXNuJ3Qgc29tZXRoaW5nIHRo
YXQgY2FuIGJlIGZpeGVkCndpdGhvdXQgcmV2aXNpbmcgdGhlIGJvb3QgcHJvdG9jb2wgZW50aXJl
bHksIGJyZWFraW5nIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LgoKYm9vdF9wYXJhbXMgcHJvcGVy
IGlzIGxpbWl0ZWQgdG8gNDA5NiBieXRlcywgYnV0IGNhbiBiZSBhcmJpdHJhcmlseSBleHRlbmRl
ZApieSBhZGRpbmcgc2V0dXBfZGF0YSBlbnRyaWVzLiBJdCBjYW5ub3QgYmUgdXNlZCB0byBjb21t
dW5pY2F0ZSBwcm9wZXJ0aWVzIG9mCnRoZSBrZXJuZWwgaW1hZ2UsIGJlY2F1c2UgaXQgaXMgLmJz
cyBhbmQgaGFzIG5vIGltYWdlLXByb3ZpZGVkIGNvbnRlbnQuCgprZXJuZWxfaW5mbyBzb2x2ZXMg
dGhpcyBieSBwcm92aWRpbmcgYW4gZXh0ZW5zaWJsZSBwbGFjZSBmb3IgaW5mb3JtYXRpb24gYWJv
dXQKdGhlIGtlcm5lbCBpbWFnZS4gSXQgaXMgcmVhZG9ubHksIGJlY2F1c2UgdGhlIGtlcm5lbCBj
YW5ub3QgcmVseSBvbiBhCmJvb3Rsb2FkZXIgY29weWluZyBpdHMgY29udGVudHMgYW55d2hlcmUs
IGJ1dCB0aGF0IGlzIE9LOyBpZiBpdCBiZWNvbWVzCm5lY2Vzc2FyeSBpdCBjYW4gc3RpbGwgY29u
dGFpbiBkYXRhIGl0ZW1zIHRoYXQgYW4gZW5hYmxlZCBib290bG9hZGVyIHdvdWxkIGJlCmV4cGVj
dGVkIHRvIGNvcHkgaW50byBhIHNldHVwX2RhdGEgY2h1bmsuCgpEbyBub3QgYnVtcCBzZXR1cF9o
ZWFkZXIgdmVyc2lvbiBpbiBhcmNoL3g4Ni9ib290L2hlYWRlci5TIGJlY2F1c2UgaXQKd2lsbCBi
ZSBmb2xsb3dlZCBieSBhZGRpdGlvbmFsIGNoYW5nZXMgY29taW5nIGludG8gdGhlIExpbnV4L3g4
NiBib290CnByb3RvY29sLgoKU3VnZ2VzdGVkLWJ5OiBILiBQZXRlciBBbnZpbiAoSW50ZWwpIDxo
cGFAenl0b3IuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgS2lwZXIgPGRhbmllbC5raXBlckBv
cmFjbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBCb3Jpc2xhdiBQZXRrb3YgPGJwQHN1c2UuZGU+ClJl
dmlld2VkLWJ5OiBLb25yYWQgUnplc3p1dGVrIFdpbGsgPGtvbnJhZC53aWxrQG9yYWNsZS5jb20+
ClJldmlld2VkLWJ5OiBSb3NzIFBoaWxpcHNvbiA8cm9zcy5waGlsaXBzb25Ab3JhY2xlLmNvbT4K
UmV2aWV3ZWQtYnk6IEguIFBldGVyIEFudmluIChJbnRlbCkgPGhwYUB6eXRvci5jb20+CkNjOiBB
bmR5IEx1dG9taXJza2kgPGx1dG9AYW1hY2FwaXRhbC5uZXQ+CkNjOiBhcmQuYmllc2hldXZlbEBs
aW5hcm8ub3JnCkNjOiBCb3JpcyBPc3Ryb3Zza3kgPGJvcmlzLm9zdHJvdnNreUBvcmFjbGUuY29t
PgpDYzogZGF2ZS5oYW5zZW5AbGludXguaW50ZWwuY29tCkNjOiBlcmljLnNub3diZXJnQG9yYWNs
ZS5jb20KQ2M6IEluZ28gTW9sbmFyIDxtaW5nb0ByZWRoYXQuY29tPgpDYzogSm9uYXRoYW4gQ29y
YmV0IDxjb3JiZXRAbHduLm5ldD4KQ2M6IEp1ZXJnZW4gR3Jvc3MgPGpncm9zc0BzdXNlLmNvbT4K
Q2M6IGthbnRoLmdoYXRyYWp1QG9yYWNsZS5jb20KQ2M6IGxpbnV4LWRvY0B2Z2VyLmtlcm5lbC5v
cmcKQ2M6IGxpbnV4LWVmaSA8bGludXgtZWZpQHZnZXIua2VybmVsLm9yZz4KQ2M6IFBldGVyIFpp
amxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KQ2M6IHJkdW5sYXBAaW5mcmFkZWFkLm9yZwpD
Yzogcm9zcy5waGlsaXBzb25Ab3JhY2xlLmNvbQpDYzogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxp
bnV0cm9uaXguZGU+CkNjOiB4ODYtbWwgPHg4NkBrZXJuZWwub3JnPgpDYzogeGVuLWRldmVsQGxp
c3RzLnhlbnByb2plY3Qub3JnCkxpbms6IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAxOTEx
MTIxMzQ2NDAuMTYwMzUtMi1kYW5pZWwua2lwZXJAb3JhY2xlLmNvbQotLS0KIERvY3VtZW50YXRp
b24veDg2L2Jvb3QucnN0ICAgICAgICAgICAgIHwgMTI2ICsrKysrKysrKysrKysrKysrKysrKysr
Ky0KIGFyY2gveDg2L2Jvb3QvTWFrZWZpbGUgICAgICAgICAgICAgICAgIHwgICAyICstCiBhcmNo
L3g4Ni9ib290L2NvbXByZXNzZWQvTWFrZWZpbGUgICAgICB8ICAgNCArLQogYXJjaC94ODYvYm9v
dC9jb21wcmVzc2VkL2tlcm5lbF9pbmZvLlMgfCAgMTcgKysrLQogYXJjaC94ODYvYm9vdC9oZWFk
ZXIuUyAgICAgICAgICAgICAgICAgfCAgIDEgKy0KIGFyY2gveDg2L2Jvb3QvdG9vbHMvYnVpbGQu
YyAgICAgICAgICAgIHwgICA1ICstCiBhcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2Jvb3RwYXJh
bS5oICB8ICAgMSArLQogNyBmaWxlcyBjaGFuZ2VkLCAxNTMgaW5zZXJ0aW9ucygrKSwgMyBkZWxl
dGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBhcmNoL3g4Ni9ib290L2NvbXByZXNzZWQva2Vy
bmVsX2luZm8uUwoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24veDg2L2Jvb3QucnN0IGIvRG9j
dW1lbnRhdGlvbi94ODYvYm9vdC5yc3QKaW5kZXggMDhhMmYxMC4uYzYwZmFmZCAxMDA2NDQKLS0t
IGEvRG9jdW1lbnRhdGlvbi94ODYvYm9vdC5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi94ODYvYm9v
dC5yc3QKQEAgLTY4LDggKzY4LDI1IEBAIFByb3RvY29sIDIuMTIJKEtlcm5lbCAzLjgpIEFkZGVk
IHRoZSB4bG9hZGZsYWdzIGZpZWxkIGFuZCBleHRlbnNpb24gZmllbGRzCiBQcm90b2NvbCAyLjEz
CShLZXJuZWwgMy4xNCkgU3VwcG9ydCAzMi0gYW5kIDY0LWJpdCBmbGFncyBiZWluZyBzZXQgaW4K
IAkJeGxvYWRmbGFncyB0byBzdXBwb3J0IGJvb3RpbmcgYSA2NC1iaXQga2VybmVsIGZyb20gMzIt
Yml0CiAJCUVGSQorCitQcm90b2NvbCAyLjE0OglCVVJOVCBCWSBJTkNPUlJFQ1QgQ09NTUlUIGFl
N2UxMjM4ZTY4ZjJhNDcyYTEyNTY3M2FiNTA2ZDQ5MTU4YzE4ODkKKwkJKHg4Ni9ib290OiBBZGQg
QUNQSSBSU0RQIGFkZHJlc3MgdG8gc2V0dXBfaGVhZGVyKQorCQlETyBOT1QgVVNFISEhIEFTU1VN
RSBTQU1FIEFTIDIuMTMuCisKK1Byb3RvY29sIDIuMTU6CShLZXJuZWwgNS41KSBBZGRlZCB0aGUg
a2VybmVsX2luZm8uCiA9PT09PT09PT09PT09CT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogCisuLiBub3RlOjoKKyAgICAgVGhlIHBy
b3RvY29sIHZlcnNpb24gbnVtYmVyIHNob3VsZCBiZSBjaGFuZ2VkIG9ubHkgaWYgdGhlIHNldHVw
IGhlYWRlcgorICAgICBpcyBjaGFuZ2VkLiBUaGVyZSBpcyBubyBuZWVkIHRvIHVwZGF0ZSB0aGUg
dmVyc2lvbiBudW1iZXIgaWYgYm9vdF9wYXJhbXMKKyAgICAgb3Iga2VybmVsX2luZm8gYXJlIGNo
YW5nZWQuIEFkZGl0aW9uYWxseSwgaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlCisgICAgIHhsb2Fk
ZmxhZ3MgKGluIHRoaXMgY2FzZSB0aGUgcHJvdG9jb2wgdmVyc2lvbiBudW1iZXIgc2hvdWxkIG5v
dCBiZQorICAgICB1cGRhdGVkIGVpdGhlcikgb3Iga2VybmVsX2luZm8gdG8gY29tbXVuaWNhdGUg
c3VwcG9ydGVkIExpbnV4IGtlcm5lbAorICAgICBmZWF0dXJlcyB0byB0aGUgYm9vdCBsb2FkZXIu
IER1ZSB0byB2ZXJ5IGxpbWl0ZWQgc3BhY2UgYXZhaWxhYmxlIGluCisgICAgIHRoZSBvcmlnaW5h
bCBzZXR1cCBoZWFkZXIgZXZlcnkgdXBkYXRlIHRvIGl0IHNob3VsZCBiZSBjb25zaWRlcmVkCisg
ICAgIHdpdGggZ3JlYXQgY2FyZS4gU3RhcnRpbmcgZnJvbSB0aGUgcHJvdG9jb2wgMi4xNSB0aGUg
cHJpbWFyeSB3YXkgdG8KKyAgICAgY29tbXVuaWNhdGUgdGhpbmdzIHRvIHRoZSBib290IGxvYWRl
ciBpcyB0aGUga2VybmVsX2luZm8uCisKIAogTWVtb3J5IExheW91dAogPT09PT09PT09PT09PQpA
QCAtMjA3LDYgKzIyNCw3IEBAIE9mZnNldC9TaXplCVByb3RvCQlOYW1lCQkJTWVhbmluZwogMDI1
OC84CQkyLjEwKwkJcHJlZl9hZGRyZXNzCQlQcmVmZXJyZWQgbG9hZGluZyBhZGRyZXNzCiAwMjYw
LzQJCTIuMTArCQlpbml0X3NpemUJCUxpbmVhciBtZW1vcnkgcmVxdWlyZWQgZHVyaW5nIGluaXRp
YWxpemF0aW9uCiAwMjY0LzQJCTIuMTErCQloYW5kb3Zlcl9vZmZzZXQJCU9mZnNldCBvZiBoYW5k
b3ZlciBlbnRyeSBwb2ludAorMDI2OC80CQkyLjE1KwkJa2VybmVsX2luZm9fb2Zmc2V0CU9mZnNl
dCBvZiB0aGUga2VybmVsX2luZm8KID09PT09PT09PT09CT09PT09PT09CT09PT09PT09PT09PT09
PT09PT09PQk9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogCiAu
LiBub3RlOjoKQEAgLTg1NSw2ICs4NzMsMTE0IEBAIE9mZnNldC9zaXplOgkweDI2NC80CiAKICAg
U2VlIEVGSSBIQU5ET1ZFUiBQUk9UT0NPTCBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLgogCis9PT09
PT09PT09PT0JPT09PT09PT09PT09PT09PT09CitGaWVsZCBuYW1lOglrZXJuZWxfaW5mb19vZmZz
ZXQKK1R5cGU6CQlyZWFkCitPZmZzZXQvc2l6ZToJMHgyNjgvNAorUHJvdG9jb2w6CTIuMTUrCis9
PT09PT09PT09PT0JPT09PT09PT09PT09PT09PT09CisKKyAgVGhpcyBmaWVsZCBpcyB0aGUgb2Zm
c2V0IGZyb20gdGhlIGJlZ2lubmluZyBvZiB0aGUga2VybmVsIGltYWdlIHRvIHRoZQorICBrZXJu
ZWxfaW5mby4gVGhlIGtlcm5lbF9pbmZvIHN0cnVjdHVyZSBpcyBlbWJlZGRlZCBpbiB0aGUgTGlu
dXggaW1hZ2UKKyAgaW4gdGhlIHVuY29tcHJlc3NlZCBwcm90ZWN0ZWQgbW9kZSByZWdpb24uCisK
KworVGhlIGtlcm5lbF9pbmZvCis9PT09PT09PT09PT09PT0KKworVGhlIHJlbGF0aW9uc2hpcHMg
YmV0d2VlbiB0aGUgaGVhZGVycyBhcmUgYW5hbG9nb3VzIHRvIHRoZSB2YXJpb3VzIGRhdGEKK3Nl
Y3Rpb25zOgorCisgIHNldHVwX2hlYWRlciA9IC5kYXRhCisgIGJvb3RfcGFyYW1zL3NldHVwX2Rh
dGEgPSAuYnNzCisKK1doYXQgaXMgbWlzc2luZyBmcm9tIHRoZSBhYm92ZSBsaXN0PyBUaGF0J3Mg
cmlnaHQ6CisKKyAga2VybmVsX2luZm8gPSAucm9kYXRhCisKK1dlIGhhdmUgYmVlbiAoYWIpdXNp
bmcgLmRhdGEgZm9yIHRoaW5ncyB0aGF0IGNvdWxkIGdvIGludG8gLnJvZGF0YSBvciAuYnNzIGZv
cgorYSBsb25nIHRpbWUsIGZvciBsYWNrIG9mIGFsdGVybmF0aXZlcyBhbmQgLS0gZXNwZWNpYWxs
eSBlYXJseSBvbiAtLSBpbmVydGlhLgorQWxzbywgdGhlIEJJT1Mgc3R1YiBpcyByZXNwb25zaWJs
ZSBmb3IgY3JlYXRpbmcgYm9vdF9wYXJhbXMsIHNvIGl0IGlzbid0CithdmFpbGFibGUgdG8gYSBC
SU9TLWJhc2VkIGxvYWRlciAoc2V0dXBfZGF0YSBpcywgdGhvdWdoKS4KKworc2V0dXBfaGVhZGVy
IGlzIHBlcm1hbmVudGx5IGxpbWl0ZWQgdG8gMTQ0IGJ5dGVzIGR1ZSB0byB0aGUgcmVhY2ggb2Yg
dGhlCisyLWJ5dGUganVtcCBmaWVsZCwgd2hpY2ggZG91YmxlcyBhcyBhIGxlbmd0aCBmaWVsZCBm
b3IgdGhlIHN0cnVjdHVyZSwgY29tYmluZWQKK3dpdGggdGhlIHNpemUgb2YgdGhlICJob2xlIiBp
biBzdHJ1Y3QgYm9vdF9wYXJhbXMgdGhhdCBhIHByb3RlY3RlZC1tb2RlIGxvYWRlcgorb3IgdGhl
IEJJT1Mgc3R1YiBoYXMgdG8gY29weSBpdCBpbnRvLiBJdCBpcyBjdXJyZW50bHkgMTE5IGJ5dGVz
IGxvbmcsIHdoaWNoCitsZWF2ZXMgdXMgd2l0aCAyNSB2ZXJ5IHByZWNpb3VzIGJ5dGVzLiBUaGlz
IGlzbid0IHNvbWV0aGluZyB0aGF0IGNhbiBiZSBmaXhlZAord2l0aG91dCByZXZpc2luZyB0aGUg
Ym9vdCBwcm90b2NvbCBlbnRpcmVseSwgYnJlYWtpbmcgYmFja3dhcmRzIGNvbXBhdGliaWxpdHku
CisKK2Jvb3RfcGFyYW1zIHByb3BlciBpcyBsaW1pdGVkIHRvIDQwOTYgYnl0ZXMsIGJ1dCBjYW4g
YmUgYXJiaXRyYXJpbHkgZXh0ZW5kZWQKK2J5IGFkZGluZyBzZXR1cF9kYXRhIGVudHJpZXMuIEl0
IGNhbm5vdCBiZSB1c2VkIHRvIGNvbW11bmljYXRlIHByb3BlcnRpZXMgb2YKK3RoZSBrZXJuZWwg
aW1hZ2UsIGJlY2F1c2UgaXQgaXMgLmJzcyBhbmQgaGFzIG5vIGltYWdlLXByb3ZpZGVkIGNvbnRl
bnQuCisKK2tlcm5lbF9pbmZvIHNvbHZlcyB0aGlzIGJ5IHByb3ZpZGluZyBhbiBleHRlbnNpYmxl
IHBsYWNlIGZvciBpbmZvcm1hdGlvbiBhYm91dAordGhlIGtlcm5lbCBpbWFnZS4gSXQgaXMgcmVh
ZG9ubHksIGJlY2F1c2UgdGhlIGtlcm5lbCBjYW5ub3QgcmVseSBvbiBhCitib290bG9hZGVyIGNv
cHlpbmcgaXRzIGNvbnRlbnRzIGFueXdoZXJlLCBidXQgdGhhdCBpcyBPSzsgaWYgaXQgYmVjb21l
cworbmVjZXNzYXJ5IGl0IGNhbiBzdGlsbCBjb250YWluIGRhdGEgaXRlbXMgdGhhdCBhbiBlbmFi
bGVkIGJvb3Rsb2FkZXIgd291bGQgYmUKK2V4cGVjdGVkIHRvIGNvcHkgaW50byBhIHNldHVwX2Rh
dGEgY2h1bmsuCisKK0FsbCBrZXJuZWxfaW5mbyBkYXRhIHNob3VsZCBiZSBwYXJ0IG9mIHRoaXMg
c3RydWN0dXJlLiBGaXhlZCBzaXplIGRhdGEgaGF2ZSB0bworYmUgcHV0IGJlZm9yZSBrZXJuZWxf
aW5mb192YXJfbGVuX2RhdGEgbGFiZWwuIFZhcmlhYmxlIHNpemUgZGF0YSBoYXZlIHRvIGJlIHB1
dAorYWZ0ZXIga2VybmVsX2luZm9fdmFyX2xlbl9kYXRhIGxhYmVsLiBFYWNoIGNodW5rIG9mIHZh
cmlhYmxlIHNpemUgZGF0YSBoYXMgdG8KK2JlIHByZWZpeGVkIHdpdGggaGVhZGVyL21hZ2ljIGFu
ZCBpdHMgc2l6ZSwgZS5nLjoKKworICBrZXJuZWxfaW5mbzoKKyAgICAgICAgICAuYXNjaWkgICJM
VG9QIiAgICAgICAgICAvKiBIZWFkZXIsIExpbnV4IHRvcCAoc3RydWN0dXJlKS4gKi8KKyAgICAg
ICAgICAubG9uZyAgIGtlcm5lbF9pbmZvX3Zhcl9sZW5fZGF0YSAtIGtlcm5lbF9pbmZvCisgICAg
ICAgICAgLmxvbmcgICBrZXJuZWxfaW5mb19lbmQgLSBrZXJuZWxfaW5mbworICAgICAgICAgIC5s
b25nICAgMHgwMTIzNDU2NyAgICAgIC8qIFNvbWUgZml4ZWQgc2l6ZSBkYXRhIGZvciB0aGUgYm9v
dGxvYWRlcnMuICovCisgIGtlcm5lbF9pbmZvX3Zhcl9sZW5fZGF0YToKKyAgZXhhbXBsZV9zdHJ1
Y3Q6ICAgICAgICAgICAgICAgICAvKiBTb21lIHZhcmlhYmxlIHNpemUgZGF0YSBmb3IgdGhlIGJv
b3Rsb2FkZXJzLiAqLworICAgICAgICAgIC5hc2NpaSAgIjAxMjMiICAgICAgICAgIC8qIEhlYWRl
ci9NYWdpYy4gKi8KKyAgICAgICAgICAubG9uZyAgIGV4YW1wbGVfc3RydWN0X2VuZCAtIGV4YW1w
bGVfc3RydWN0CisgICAgICAgICAgLmFzY2lpICAiU3RydWN0IgorICAgICAgICAgIC5sb25nICAg
MHg4OTAxMjM0NQorICBleGFtcGxlX3N0cnVjdF9lbmQ6CisgIGV4YW1wbGVfc3RyaW5nczogICAg
ICAgICAgICAgICAgLyogU29tZSB2YXJpYWJsZSBzaXplIGRhdGEgZm9yIHRoZSBib290bG9hZGVy
cy4gKi8KKyAgICAgICAgICAuYXNjaWkgICJBQkNEIiAgICAgICAgICAvKiBIZWFkZXIvTWFnaWMu
ICovCisgICAgICAgICAgLmxvbmcgICBleGFtcGxlX3N0cmluZ3NfZW5kIC0gZXhhbXBsZV9zdHJp
bmdzCisgICAgICAgICAgLmFzY2l6ICAiU3RyaW5nXzAiCisgICAgICAgICAgLmFzY2l6ICAiU3Ry
aW5nXzEiCisgIGV4YW1wbGVfc3RyaW5nc19lbmQ6CisgIGtlcm5lbF9pbmZvX2VuZDoKKworVGhp
cyB3YXkgdGhlIGtlcm5lbF9pbmZvIGlzIHNlbGYtY29udGFpbmVkIGJsb2IuCisKKy4uIG5vdGU6
OgorICAgICBFYWNoIHZhcmlhYmxlIHNpemUgZGF0YSBoZWFkZXIvbWFnaWMgY2FuIGJlIGFueSA0
LWNoYXJhY3RlciBzdHJpbmcsCisgICAgIHdpdGhvdXQgXDAgYXQgdGhlIGVuZCBvZiB0aGUgc3Ry
aW5nLCB3aGljaCBkb2VzIG5vdCBjb2xsaWRlIHdpdGgKKyAgICAgZXhpc3RpbmcgdmFyaWFibGUg
bGVuZ3RoIGRhdGEgaGVhZGVycy9tYWdpY3MuCisKKworRGV0YWlscyBvZiB0aGUga2VybmVsX2lu
Zm8gRmllbGRzCis9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KKworPT09PT09PT09
PT09CT09PT09PT09CitGaWVsZCBuYW1lOgloZWFkZXIKK09mZnNldC9zaXplOgkweDAwMDAvNAor
PT09PT09PT09PT09CT09PT09PT09CisKKyAgQ29udGFpbnMgdGhlIG1hZ2ljIG51bWJlciAiTFRv
UCIgKDB4NTA2ZjU0NGMpLgorCis9PT09PT09PT09PT0JPT09PT09PT0KK0ZpZWxkIG5hbWU6CXNp
emUKK09mZnNldC9zaXplOgkweDAwMDQvNAorPT09PT09PT09PT09CT09PT09PT09CisKKyAgVGhp
cyBmaWVsZCBjb250YWlucyB0aGUgc2l6ZSBvZiB0aGUga2VybmVsX2luZm8gaW5jbHVkaW5nIGtl
cm5lbF9pbmZvLmhlYWRlci4KKyAgSXQgZG9lcyBub3QgY291bnQga2VybmVsX2luZm8ua2VybmVs
X2luZm9fdmFyX2xlbl9kYXRhIHNpemUuIFRoaXMgZmllbGQgc2hvdWxkIGJlCisgIHVzZWQgYnkg
dGhlIGJvb3Rsb2FkZXJzIHRvIGRldGVjdCBzdXBwb3J0ZWQgZml4ZWQgc2l6ZSBmaWVsZHMgaW4g
dGhlIGtlcm5lbF9pbmZvCisgIGFuZCBiZWdpbm5pbmcgb2Yga2VybmVsX2luZm8ua2VybmVsX2lu
Zm9fdmFyX2xlbl9kYXRhLgorCis9PT09PT09PT09PT0JPT09PT09PT0KK0ZpZWxkIG5hbWU6CXNp
emVfdG90YWwKK09mZnNldC9zaXplOgkweDAwMDgvNAorPT09PT09PT09PT09CT09PT09PT09CisK
KyAgVGhpcyBmaWVsZCBjb250YWlucyB0aGUgc2l6ZSBvZiB0aGUga2VybmVsX2luZm8gaW5jbHVk
aW5nIGtlcm5lbF9pbmZvLmhlYWRlcgorICBhbmQga2VybmVsX2luZm8ua2VybmVsX2luZm9fdmFy
X2xlbl9kYXRhLgorCiAKIFRoZSBJbWFnZSBDaGVja3N1bQogPT09PT09PT09PT09PT09PT09CmRp
ZmYgLS1naXQgYS9hcmNoL3g4Ni9ib290L01ha2VmaWxlIGIvYXJjaC94ODYvYm9vdC9NYWtlZmls
ZQppbmRleCBlMjgzOWI1Li5jMzBhOWI2IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9ib290L01ha2Vm
aWxlCisrKyBiL2FyY2gveDg2L2Jvb3QvTWFrZWZpbGUKQEAgLTg3LDcgKzg3LDcgQEAgJChvYmop
L3ZtbGludXguYmluOiAkKG9iaikvY29tcHJlc3NlZC92bWxpbnV4IEZPUkNFCiAKIFNFVFVQX09C
SlMgPSAkKGFkZHByZWZpeCAkKG9iaikvLCQoc2V0dXAteSkpCiAKLXNlZC16b2Zmc2V0IDo9IC1l
ICdzL15cKFswLTlhLWZBLUZdKlwpIFtBQkNER1JTVFZXXSBcKHN0YXJ0dXBfMzJcfHN0YXJ0dXBf
NjRcfGVmaTMyX3N0dWJfZW50cnlcfGVmaTY0X3N0dWJfZW50cnlcfGVmaV9wZV9lbnRyeVx8aW5w
dXRfZGF0YVx8X2VuZFx8X2VoZWFkXHxfdGV4dFx8el8uKlwpJCQvXCNkZWZpbmUgWk9fXDIgMHhc
MS9wJworc2VkLXpvZmZzZXQgOj0gLWUgJ3MvXlwoWzAtOWEtZkEtRl0qXCkgW0FCQ0RHUlNUVldd
IFwoc3RhcnR1cF8zMlx8c3RhcnR1cF82NFx8ZWZpMzJfc3R1Yl9lbnRyeVx8ZWZpNjRfc3R1Yl9l
bnRyeVx8ZWZpX3BlX2VudHJ5XHxpbnB1dF9kYXRhXHxrZXJuZWxfaW5mb1x8X2VuZFx8X2VoZWFk
XHxfdGV4dFx8el8uKlwpJCQvXCNkZWZpbmUgWk9fXDIgMHhcMS9wJwogCiBxdWlldF9jbWRfem9m
ZnNldCA9IFpPRkZTRVQgJEAKICAgICAgIGNtZF96b2Zmc2V0ID0gJChOTSkgJDwgfCBzZWQgLW4g
JChzZWQtem9mZnNldCkgPiAkQApkaWZmIC0tZ2l0IGEvYXJjaC94ODYvYm9vdC9jb21wcmVzc2Vk
L01ha2VmaWxlIGIvYXJjaC94ODYvYm9vdC9jb21wcmVzc2VkL01ha2VmaWxlCmluZGV4IDZiODRh
ZmQuLmZhZDNiMTggMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2Jvb3QvY29tcHJlc3NlZC9NYWtlZmls
ZQorKysgYi9hcmNoL3g4Ni9ib290L2NvbXByZXNzZWQvTWFrZWZpbGUKQEAgLTcyLDggKzcyLDgg
QEAgJChvYmopLy4uL3ZvZmZzZXQuaDogdm1saW51eCBGT1JDRQogCiAkKG9iaikvbWlzYy5vOiAk
KG9iaikvLi4vdm9mZnNldC5oCiAKLXZtbGludXgtb2Jqcy15IDo9ICQob2JqKS92bWxpbnV4Lmxk
cyAkKG9iaikvaGVhZF8kKEJJVFMpLm8gJChvYmopL21pc2MubyBcCi0JJChvYmopL3N0cmluZy5v
ICQob2JqKS9jbWRsaW5lLm8gJChvYmopL2Vycm9yLm8gXAordm1saW51eC1vYmpzLXkgOj0gJChv
YmopL3ZtbGludXgubGRzICQob2JqKS9rZXJuZWxfaW5mby5vICQob2JqKS9oZWFkXyQoQklUUyku
byBcCisJJChvYmopL21pc2MubyAkKG9iaikvc3RyaW5nLm8gJChvYmopL2NtZGxpbmUubyAkKG9i
aikvZXJyb3IubyBcCiAJJChvYmopL3BpZ2d5Lm8gJChvYmopL2NwdWZsYWdzLm8KIAogdm1saW51
eC1vYmpzLSQoQ09ORklHX0VBUkxZX1BSSU5USykgKz0gJChvYmopL2Vhcmx5X3NlcmlhbF9jb25z
b2xlLm8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2Jvb3QvY29tcHJlc3NlZC9rZXJuZWxfaW5mby5T
IGIvYXJjaC94ODYvYm9vdC9jb21wcmVzc2VkL2tlcm5lbF9pbmZvLlMKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMC4uOGVhNmY2ZQotLS0gL2Rldi9udWxsCisrKyBiL2FyY2gveDg2
L2Jvb3QvY29tcHJlc3NlZC9rZXJuZWxfaW5mby5TCkBAIC0wLDAgKzEsMTcgQEAKKy8qIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wICovCisKKwkuc2VjdGlvbiAiLnJvZGF0YS5rZXJu
ZWxfaW5mbyIsICJhIgorCisJLmdsb2JhbCBrZXJuZWxfaW5mbworCitrZXJuZWxfaW5mbzoKKwkv
KiBIZWFkZXIsIExpbnV4IHRvcCAoc3RydWN0dXJlKS4gKi8KKwkuYXNjaWkJIkxUb1AiCisJLyog
U2l6ZS4gKi8KKwkubG9uZwlrZXJuZWxfaW5mb192YXJfbGVuX2RhdGEgLSBrZXJuZWxfaW5mbwor
CS8qIFNpemUgdG90YWwuICovCisJLmxvbmcJa2VybmVsX2luZm9fZW5kIC0ga2VybmVsX2luZm8K
Kwora2VybmVsX2luZm9fdmFyX2xlbl9kYXRhOgorCS8qIEVtcHR5IGZvciB0aW1lIGJlaW5nLi4u
ICovCitrZXJuZWxfaW5mb19lbmQ6CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9ib290L2hlYWRlci5T
IGIvYXJjaC94ODYvYm9vdC9oZWFkZXIuUwppbmRleCAyYzExYzBmLi4yMmRjZWNhIDEwMDY0NAot
LS0gYS9hcmNoL3g4Ni9ib290L2hlYWRlci5TCisrKyBiL2FyY2gveDg2L2Jvb3QvaGVhZGVyLlMK
QEAgLTU2Nyw2ICs1NjcsNyBAQCBwcmVmX2FkZHJlc3M6CQkucXVhZCBMT0FEX1BIWVNJQ0FMX0FE
RFIJIyBwcmVmZXJyZWQgbG9hZCBhZGRyCiAKIGluaXRfc2l6ZToJCS5sb25nIElOSVRfU0laRQkJ
IyBrZXJuZWwgaW5pdGlhbGl6YXRpb24gc2l6ZQogaGFuZG92ZXJfb2Zmc2V0OgkubG9uZyAwCQkJ
IyBGaWxsZWQgaW4gYnkgYnVpbGQuYwora2VybmVsX2luZm9fb2Zmc2V0OgkubG9uZyAwCQkJIyBG
aWxsZWQgaW4gYnkgYnVpbGQuYwogCiAjIEVuZCBvZiBzZXR1cCBoZWFkZXIgIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIApkaWZmIC0tZ2l0IGEv
YXJjaC94ODYvYm9vdC90b29scy9idWlsZC5jIGIvYXJjaC94ODYvYm9vdC90b29scy9idWlsZC5j
CmluZGV4IGE5M2Q0NGUuLjU1ZTY2OWQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2Jvb3QvdG9vbHMv
YnVpbGQuYworKysgYi9hcmNoL3g4Ni9ib290L3Rvb2xzL2J1aWxkLmMKQEAgLTU2LDYgKzU2LDcg
QEAgdTggYnVmW1NFVFVQX1NFQ1RfTUFYKjUxMl07CiB1bnNpZ25lZCBsb25nIGVmaTMyX3N0dWJf
ZW50cnk7CiB1bnNpZ25lZCBsb25nIGVmaTY0X3N0dWJfZW50cnk7CiB1bnNpZ25lZCBsb25nIGVm
aV9wZV9lbnRyeTsKK3Vuc2lnbmVkIGxvbmcga2VybmVsX2luZm87CiB1bnNpZ25lZCBsb25nIHN0
YXJ0dXBfNjQ7CiAKIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCkBAIC0zMjEsNiArMzIyLDcgQEAgc3RhdGlj
IHZvaWQgcGFyc2Vfem9mZnNldChjaGFyICpmbmFtZSkKIAkJUEFSU0VfWk9GUyhwLCBlZmkzMl9z
dHViX2VudHJ5KTsKIAkJUEFSU0VfWk9GUyhwLCBlZmk2NF9zdHViX2VudHJ5KTsKIAkJUEFSU0Vf
Wk9GUyhwLCBlZmlfcGVfZW50cnkpOworCQlQQVJTRV9aT0ZTKHAsIGtlcm5lbF9pbmZvKTsKIAkJ
UEFSU0VfWk9GUyhwLCBzdGFydHVwXzY0KTsKIAogCQlwID0gc3RyY2hyKHAsICdcbicpOwpAQCAt
NDEwLDYgKzQxMiw5IEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICoqIGFyZ3YpCiAKIAllZmlf
c3R1Yl9lbnRyeV91cGRhdGUoKTsKIAorCS8qIFVwZGF0ZSBrZXJuZWxfaW5mbyBvZmZzZXQuICov
CisJcHV0X3VuYWxpZ25lZF9sZTMyKGtlcm5lbF9pbmZvLCAmYnVmWzB4MjY4XSk7CisKIAljcmMg
PSBwYXJ0aWFsX2NyYzMyKGJ1ZiwgaSwgY3JjKTsKIAlpZiAoZndyaXRlKGJ1ZiwgMSwgaSwgZGVz
dCkgIT0gaSkKIAkJZGllKCJXcml0aW5nIHNldHVwIGZhaWxlZCIpOwpkaWZmIC0tZ2l0IGEvYXJj
aC94ODYvaW5jbHVkZS91YXBpL2FzbS9ib290cGFyYW0uaCBiL2FyY2gveDg2L2luY2x1ZGUvdWFw
aS9hc20vYm9vdHBhcmFtLmgKaW5kZXggYzg5NWRmNS4uYTFlYmNkNyAxMDA2NDQKLS0tIGEvYXJj
aC94ODYvaW5jbHVkZS91YXBpL2FzbS9ib290cGFyYW0uaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRl
L3VhcGkvYXNtL2Jvb3RwYXJhbS5oCkBAIC04OCw2ICs4OCw3IEBAIHN0cnVjdCBzZXR1cF9oZWFk
ZXIgewogCV9fdTY0CXByZWZfYWRkcmVzczsKIAlfX3UzMglpbml0X3NpemU7CiAJX191MzIJaGFu
ZG92ZXJfb2Zmc2V0OworCV9fdTMyCWtlcm5lbF9pbmZvX29mZnNldDsKIH0gX19hdHRyaWJ1dGVf
XygocGFja2VkKSk7CiAKIHN0cnVjdCBzeXNfZGVzY190YWJsZSB7CgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhl
bi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3Jn
L21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

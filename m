Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id CAE7313A4BB
	for <lists+xen-devel@lfdr.de>; Tue, 14 Jan 2020 10:59:25 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1irIwY-0000GR-Ja; Tue, 14 Jan 2020 09:57:02 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=26Li=3D=xenproject.org=osstest-admin@srs-us1.protection.inumbo.net>)
 id 1irIwW-0000GJ-NY
 for xen-devel@lists.xenproject.org; Tue, 14 Jan 2020 09:57:00 +0000
X-Inumbo-ID: 2acab222-36b4-11ea-b89f-bc764e2007e4
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 2acab222-36b4-11ea-b89f-bc764e2007e4;
 Tue, 14 Jan 2020 09:56:42 +0000 (UTC)
Received: from host146.205.237.98.conversent.net ([205.237.98.146]
 helo=infra.test-lab.xenproject.org)
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1irIwE-0007Mx-Cv; Tue, 14 Jan 2020 09:56:42 +0000
Received: from [172.16.144.3] (helo=osstest.test-lab.xenproject.org)
 by infra.test-lab.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1irIwD-0000ce-IQ; Tue, 14 Jan 2020 09:56:41 +0000
Received: from osstest by osstest.test-lab.xenproject.org with local (Exim
 4.89) (envelope-from <osstest-admin@xenproject.org>)
 id 1irIwD-0003Fq-Hn; Tue, 14 Jan 2020 09:56:41 +0000
To: xen-devel@lists.xenproject.org,
    osstest-admin@xenproject.org
Message-ID: <osstest-146061-mainreport@xen.org>
MIME-Version: 1.0
X-Osstest-Failures: libvirt:test-arm64-arm64-libvirt-qcow2:guest-start/debian.repeat:fail:regression
 libvirt:test-armhf-armhf-libvirt:leak-check/check:fail:regression
 libvirt:test-armhf-armhf-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:saverestore-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-vhd:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:migrate-support-check:fail:nonblocking
X-Osstest-Versions-This: libvirt=7d608469621a3fda72dff2a89308e68cc9fb4c9a
X-Osstest-Versions-That: libvirt=4a09c143f6c467230ab60c20fea560e710ddeee0
From: osstest service owner <osstest-admin@xenproject.org>
Date: Tue, 14 Jan 2020 09:56:41 +0000
Subject: [Xen-devel] [libvirt test] 146061: regressions - FAIL
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

ZmxpZ2h0IDE0NjA2MSBsaWJ2aXJ0IHJlYWwgW3JlYWxdCmh0dHA6Ly9sb2dzLnRlc3QtbGFiLnhl
bnByb2plY3Qub3JnL29zc3Rlc3QvbG9ncy8xNDYwNjEvCgpSZWdyZXNzaW9ucyA6LSgKClRlc3Rz
IHdoaWNoIGRpZCBub3Qgc3VjY2VlZCBhbmQgYXJlIGJsb2NraW5nLAppbmNsdWRpbmcgdGVzdHMg
d2hpY2ggY291bGQgbm90IGJlIHJ1bjoKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293MiAx
NSBndWVzdC1zdGFydC9kZWJpYW4ucmVwZWF0IGZhaWwgUkVHUi4gdnMuIDE0NTk2OQogdGVzdC1h
cm1oZi1hcm1oZi1saWJ2aXJ0ICAgICAxOSBsZWFrLWNoZWNrL2NoZWNrICAgICAgICAgZmFpbCBS
RUdSLiB2cy4gMTQ1OTY5CgpUZXN0cyB3aGljaCBkaWQgbm90IHN1Y2NlZWQsIGJ1dCBhcmUgbm90
IGJsb2NraW5nOgogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0ICAgICAxNCBzYXZlcmVzdG9yZS1z
dXBwb3J0LWNoZWNrICAgIGZhaWwgIGxpa2UgMTQ1OTY5CiB0ZXN0LWFybWhmLWFybWhmLWxpYnZp
cnQtcmF3IDEzIHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAgZmFpbCAgbGlrZSAxNDU5NjkK
IHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC14c20gMTMgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAg
ICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1hbWQ2NC1saWJ2aXJ0ICAgICAxMyBt
aWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFtZDY0
LWkzODYtbGlidmlydCAgICAgIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAg
IG5ldmVyIHBhc3MKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0LXhzbSAgMTMgbWlncmF0ZS1zdXBw
b3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1hbWQ2NC1saWJ2
aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gMTEgbWlncmF0ZS1zdXBwb3J0LWNoZWNrIGZh
aWwgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQtcWVtdXUtZGViaWFuaHZtLWFt
ZDY0LXhzbSAxMSBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgZmFpbCBuZXZlciBwYXNzCiB0ZXN0LWFy
bTY0LWFybTY0LWxpYnZpcnQteHNtIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFp
bCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC14c20gMTQgc2F2ZXJlc3Rv
cmUtc3VwcG9ydC1jaGVjayAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1s
aWJ2aXJ0ICAgICAxMyBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBw
YXNzCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQgICAgIDE0IHNhdmVyZXN0b3JlLXN1cHBvcnQt
Y2hlY2sgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC12aGQg
MTIgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1h
cm02NC1hcm02NC1saWJ2aXJ0LXFjb3cyIDEyIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAg
ZmFpbCBuZXZlciBwYXNzCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQtcWNvdzIgMTMgc2F2ZXJl
c3RvcmUtc3VwcG9ydC1jaGVjayAgICBmYWlsIG5ldmVyIHBhc3MKIHRlc3QtYXJtaGYtYXJtaGYt
bGlidmlydCAgICAgMTMgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIg
cGFzcwogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0LXJhdyAxMiBtaWdyYXRlLXN1cHBvcnQtY2hl
Y2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCgp2ZXJzaW9uIHRhcmdldGVkIGZvciB0ZXN0aW5n
OgogbGlidmlydCAgICAgICAgICAgICAgN2Q2MDg0Njk2MjFhM2ZkYTcyZGZmMmE4OTMwOGU2OGNj
OWZiNGM5YQpiYXNlbGluZSB2ZXJzaW9uOgogbGlidmlydCAgICAgICAgICAgICAgNGEwOWMxNDNm
NmM0NjcyMzBhYjYwYzIwZmVhNTYwZTcxMGRkZWVlMAoKTGFzdCB0ZXN0IG9mIGJhc2lzICAgMTQ1
OTY5ICAyMDIwLTAxLTExIDA0OjE4OjQyIFogICAgMyBkYXlzClRlc3Rpbmcgc2FtZSBzaW5jZSAg
IDE0NjA2MSAgMjAyMC0wMS0xNCAwNDoxOToyMiBaICAgIDAgZGF5cyAgICAxIGF0dGVtcHRzCgot
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KUGVvcGxlIHdobyB0b3VjaGVkIHJldmlzaW9ucyB1bmRlciB0ZXN0OgogIEFuZHJlYSBCb2xv
Z25hbmkgPGFib2xvZ25hQHJlZGhhdC5jb20+CiAgSmlyaSBEZW5lbWFyayA8amRlbmVtYXJAcmVk
aGF0LmNvbT4KICBNaWNoYWwgUHJpdm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgogIFBhdmVs
IEhyZGluYSA8cGhyZGluYUByZWRoYXQuY29tPgogIFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRo
YXQuY29tPgogIFRob21hcyBIdXRoIDx0aHV0aEByZWRoYXQuY29tPgoKam9iczoKIGJ1aWxkLWFt
ZDY0LXhzbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNz
ICAgIAogYnVpbGQtYXJtNjQteHNtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1pMzg2LXhzbSAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFtZDY0ICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYXJt
NjQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3Mg
ICAgCiBidWlsZC1hcm1oZiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWkzODYgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYW1kNjQtbGlidmlydCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hcm02
NC1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAg
ICAKIGJ1aWxkLWFybWhmLWxpYnZpcnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBwYXNzICAgIAogYnVpbGQtaTM4Ni1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hbWQ2NC1wdm9wcyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFybTY0
LXB2b3BzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAg
IAogYnVpbGQtYXJtaGYtcHZvcHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHBhc3MgICAgCiBidWlsZC1pMzg2LXB2b3BzICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC1x
ZW11dS1kZWJpYW5odm0tYW1kNjQteHNtICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1p
Mzg2LWxpYnZpcnQtcWVtdXUtZGViaWFuaHZtLWFtZDY0LXhzbSAgICAgICAgICAgIHBhc3MgICAg
CiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZpcnQteHNtICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgcGFzcyAgICAKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC14c20gICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQteHNt
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0LWFt
ZDY0LWxpYnZpcnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAK
IHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBwYXNzICAgIAogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0ICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIGZhaWwgICAgCiB0ZXN0LWFtZDY0LWkzODYtbGlidmlydCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1kNjQtYW1k
NjQtbGlidmlydC1wYWlyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAog
dGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQtcGFpciAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHBhc3MgICAgCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQtcWNvdzIgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgZmFpbCAgICAKIHRlc3QtYXJtaGYtYXJtaGYtbGlidmlydC1yYXcg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1hbWQ2
NC1saWJ2aXJ0LXZoZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCgoK
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tCnNnLXJlcG9ydC1mbGlnaHQgb24gb3NzdGVzdC50ZXN0LWxhYi54ZW5wcm9qZWN0Lm9yZwps
b2dzOiAvaG9tZS9sb2dzL2xvZ3MKaW1hZ2VzOiAvaG9tZS9sb2dzL2ltYWdlcwoKTG9ncywgY29u
ZmlnIGZpbGVzLCBldGMuIGFyZSBhdmFpbGFibGUgYXQKICAgIGh0dHA6Ly9sb2dzLnRlc3QtbGFi
LnhlbnByb2plY3Qub3JnL29zc3Rlc3QvbG9ncwoKRXhwbGFuYXRpb24gb2YgdGhlc2UgcmVwb3J0
cywgYW5kIG9mIG9zc3Rlc3QgaW4gZ2VuZXJhbCwgaXMgYXQKICAgIGh0dHA6Ly94ZW5iaXRzLnhl
bi5vcmcvZ2l0d2ViLz9wPW9zc3Rlc3QuZ2l0O2E9YmxvYjtmPVJFQURNRS5lbWFpbDtoYj1tYXN0
ZXIKICAgIGh0dHA6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViLz9wPW9zc3Rlc3QuZ2l0O2E9Ymxv
YjtmPVJFQURNRTtoYj1tYXN0ZXIKClRlc3QgaGFybmVzcyBjb2RlIGNhbiBiZSBmb3VuZCBhdAog
ICAgaHR0cDovL3hlbmJpdHMueGVuLm9yZy9naXR3ZWI/cD1vc3N0ZXN0LmdpdDthPXN1bW1hcnkK
CgpOb3QgcHVzaGluZy4KCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLQpjb21taXQgN2Q2MDg0Njk2MjFhM2ZkYTcyZGZmMmE4OTMwOGU2
OGNjOWZiNGM5YQpBdXRob3I6IFBhdmVsIEhyZGluYSA8cGhyZGluYUByZWRoYXQuY29tPgpEYXRl
OiAgIE1vbiBKYW4gMTMgMTI6NTA6NDEgMjAyMCArMDEwMAoKICAgIHZpcmNncm91cHYyZGV2aWNl
czogZnJlZSBCUEYgbWFwIHdoZW4gcmVwbGFjaW5nIHdpdGggbmV3IG9uZQogICAgCiAgICBUaGlz
IGxlYWtzIHRoZSBGRCBvZiBCUEYgbWFwIHdoaWNoIG1lYW5zIGl0IHdpbGwgbm90IGJlIGZyZWVk
LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQYXZlbCBIcmRpbmEgPHBocmRpbmFAcmVkaGF0LmNv
bT4KICAgIFJldmlld2VkLWJ5OiBKaXJpIERlbmVtYXJrIDxqZGVuZW1hckByZWRoYXQuY29tPgoK
Y29tbWl0IGMyNjQyYzQ4ODkzMWNjMWYxOWY3ZDNhOGI1OWZjZmM4ZjllNDBlZTIKQXV0aG9yOiBB
bmRyZWEgQm9sb2duYW5pIDxhYm9sb2duYUByZWRoYXQuY29tPgpEYXRlOiAgIE1vbiBKYW4gMTMg
MTE6NDc6MDkgMjAyMCArMDEwMAoKICAgIG5ld3M6IFVwZGF0ZSBmb3IgbGlidmlydCA2LjAuMAog
ICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBBbmRyZWEgQm9sb2duYW5pIDxhYm9sb2duYUByZWRoYXQu
Y29tPgogICAgUmV2aWV3ZWQtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5j
b20+Cgpjb21taXQgYTU4YjQ5OGNiY2M0MGQxZjYyYzg0MzEyY2JhMGU3YmI2ODMzOWUzOQpBdXRo
b3I6IEFuZHJlYSBCb2xvZ25hbmkgPGFib2xvZ25hQHJlZGhhdC5jb20+CkRhdGU6ICAgTW9uIEph
biAxMyAxMDozMDowNSAyMDIwICswMTAwCgogICAgbmV3czogUmVhcnJhbmdlIGEgZmV3IGVudHJp
ZXMKICAgIAogICAgU29tZSB3ZXJlIGluIHRoZSB3cm9uZyBzZWN0aW9uLCBzb21lIGluIHRoZSB3
cm9uZyB2ZXJzaW9uLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBBbmRyZWEgQm9sb2duYW5pIDxh
Ym9sb2duYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1w
cml2b3puQHJlZGhhdC5jb20+Cgpjb21taXQgY2E2ZDExNWRlYWNjYzcxNGQ1MzYyNjAwOGJkOWEz
MWE5YTNiNGM2ZApBdXRob3I6IEFuZHJlYSBCb2xvZ25hbmkgPGFib2xvZ25hQHJlZGhhdC5jb20+
CkRhdGU6ICAgTW9uIEphbiAxMyAxMTo0OTo0NyAyMDIwICswMTAwCgogICAgbmV3czogRml4IHR5
cG8gKExpYml2cnQgLT4gTGlidmlydCkKICAgIAogICAgU2lnbmVkLW9mZi1ieTogQW5kcmVhIEJv
bG9nbmFuaSA8YWJvbG9nbmFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBNaWNoYWwgUHJp
dm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgoKY29tbWl0IGJmZDVmNjlkNjAzOGRhZWFjMDNk
MjY4NGZjZDk4YWVlZTRlZjFlMjQKQXV0aG9yOiBUaG9tYXMgSHV0aCA8dGh1dGhAcmVkaGF0LmNv
bT4KRGF0ZTogICBNb24gSmFuIDEzIDA5OjA0OjU3IDIwMjAgKzAxMDAKCiAgICBxZW11X2NhcGFi
aWxpdGllczogRG8gbm90IHJlcG9ydCBVU0IgYXMgc3Vic3lzdGVtIHR5cGUgaWYgaXQgaXMgbm90
IGF2YWlsYWJsZQogICAgCiAgICBsaWJ2aXJ0IGN1cnJlbnRseSBhbHdheXMgcmVwb3J0cyB0aGF0
IFVTQiBpcyBhdmFpbGFibGUgYXMgYSBidXMgc3Vic3lzdGVtCiAgICB0eXBlIHdoZW4gcnVubmlu
ZyAidmlyc2ggZG9tY2FwYWJpbGl0aWVzIi4gSG93ZXZlciwgdGhpcyBpcyBub3QgYWx3YXlzCiAg
ICB0cnVlLCBmb3IgZXhhbXBsZSB0aGUgcWVtdS1zeXN0ZW0tczM5MHggYmluYXJ5IG5vcm1hbGx5
IG5ldmVyIGhhcyBzdXBwb3J0CiAgICBmb3IgVVNCLiBUaHVzIHdlIHNob3VsZCBvbmx5IHJlcG9y
dCB0aGF0IFVTQiBpcyBhdmFpbGFibGUgaWYgdGhlcmUgaXMKICAgIGFsc28gYSBVU0IgaG9zdCBj
b250cm9sbGVyIGF2YWlsYWJsZSB3aGVyZSB3ZSBjYW4gYXR0YWNoIFVTQiBkZXZpY2VzLgogICAg
CiAgICBSZXBvcnRlZC1ieTogU2ViYXN0aWFuIE1pdHRlcmxlIDxzbWl0dGVybEByZWRoYXQuY29t
PgogICAgQnVnbGluazogaHR0cHM6Ly9idWd6aWxsYS5yZWRoYXQuY29tL3Nob3dfYnVnLmNnaT9p
ZD0xNzU5ODQ5CiAgICBTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgSHV0aCA8dGh1dGhAcmVkaGF0LmNv
bT4KICAgIFNpZ25lZC1vZmYtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5j
b20+CiAgICBSZXZpZXdlZC1ieTogTWljaGFsIFByaXZvem5payA8bXByaXZvem5AcmVkaGF0LmNv
bT4KCmNvbW1pdCAxNzdmYmNkZmFhMTExMTNlY2U1NTAzNTk1NGVmNzM1MDc3YmQ0NDYxCkF1dGhv
cjogVGhvbWFzIEh1dGggPHRodXRoQHJlZGhhdC5jb20+CkRhdGU6ICAgTW9uIEphbiAxMyAwOToz
MDoxNCAyMDIwICswMTAwCgogICAgZG9tYWluX2NvbmY6IERvIG5vdCB1c2UgVVNCIGJ5IGRlZmF1
bHQgZm9yIDxpbnB1dD4gZGV2aWNlcyBvbiBzMzkweAogICAgCiAgICBXaGVuIHRyeWluZyB0byBz
cGVjaWZ5IGFuIGlucHV0IGRldmljZSBvbiBzMzkweCB3aXRob3V0IGJ1cyBsaWtlIHRoaXM6CiAg
ICAKICAgICA8aW5wdXQgdHlwZT0na2V5Ym9hcmQnLz4KICAgIAogICAgLi4uIHRoZW4gbGlidmly
dCBjdXJyZW50bHkgY29tcGxhaW5zOgogICAgCiAgICAgZXJyb3I6IHVuc3VwcG9ydGVkIGNvbmZp
Z3VyYXRpb246IFVTQiBpcyBkaXNhYmxlZCBmb3IgdGhpcyBkb21haW4sCiAgICAgYnV0IFVTQiBk
ZXZpY2VzIGFyZSBwcmVzZW50IGluIHRoZSBkb21haW4gWE1MCiAgICAKICAgIFRoaXMgaXMgc29t
ZXdoYXQgY29uZnVzaW5nIHNpbmNlIHRoZSB1c2VyIGRpZCBub3Qgc3BlY2lmeSBhbiBVU0IKICAg
IGRldmljZSBoZXJlLiBTaW5jZSBVU0IgaXMgbm90IGF2YWlsYWJsZSBvbiBzMzkweCwgd2Ugc2hv
dWxkIGRlZmF1bHQKICAgIHRvIHRoZSAidmlydGlvIiBidXMgaGVyZSBpbnN0ZWFkLgogICAgCiAg
ICBCdWdsaW5rOiBodHRwczovL2J1Z3ppbGxhLnJlZGhhdC5jb20vc2hvd19idWcuY2dpP2lkPTE3
OTAxODkKICAgIFNpZ25lZC1vZmYtYnk6IFRob21hcyBIdXRoIDx0aHV0aEByZWRoYXQuY29tPgog
ICAgUmV2aWV3ZWQtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5jb20+Cgpj
b21taXQgM2YyZDE2N2Q5YzczM2Y1ODhlNjkzZDQ0ZDdhYTliMjFkY2I0MTVjNwpBdXRob3I6IFBl
dGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgpEYXRlOiAgIEZyaSBKYW4gMTAgMTc6MjU6
MTYgMjAyMCArMDEwMAoKICAgIGNvbmY6IEFsd2F5cyBmb3JtYXQgc3RvcmFnZSBzb3VyY2UgYXV0
aCBhbmQgZW5jcnlwdGlvbiB1bmRlciA8c291cmNlPiBmb3IgYmFja2luZyBmaWxlcwogICAgCiAg
ICBIaXN0b3JpY2FsbHkgdGhlcmUgYXJlIHR3byBwbGFjZXMgd2hlcmUgd2UgZm9ybWF0IGF1dGhl
bnRpY2F0aW9uIGFuZAogICAgZW5jcnlwdGlvbiBmb3IgYSBkaXNrLiBUaGUgbG9naWNoIHdoaWNo
IGZvcm1hdHMgaXQgZm9yIGJhY2tpbmcgZmlsZXMgd2FzCiAgICBmbGF3ZWQgdGhvdWdoIGFuZCBk
aWRuJ3QgZm9ybWF0IGl0IGF0IGFsbC4gVGhpcyB3b3JrZWQgaWYgdGhlIGltYWdlCiAgICBiZWNh
bWUgYSBiYWNraW5nIGZpbGUgdGhyb3VnaCB0aGUgbWVhbnMgb2YgYSBzbmFwc2hvdCBidXQgbm90
IGRpcmVjdGx5LgogICAgCiAgICBGb3JjZSBmb3JtYXR0aW5nIG9mIHRoZSBzb3VyY2UgYW5kIGVu
Y3J5cHRpb24gZm9yIGFueSBub24tZGlzayBjYXNlIHRvCiAgICBmaXggdGhlIGlzc3VlLgogICAg
CiAgICBUaGlzIGNhdXNlZCBwcm9ibGVtcyBpbiBtYW55IHBsYWNlcyBhcyB3ZSB1c2UgdGhlIGZv
cm1hdHRlciB0byBjb3B5IHRoZQogICAgZGVmaW5pdGlvbi4gRWZmZWN0aXZlbHkgYW55IGNvcHkg
bG9zdCB0aGUgc2VjcmV0IGRlZmluaXRpb24uCiAgICAKICAgIGh0dHBzOi8vYnVnemlsbGEucmVk
aGF0LmNvbS9zaG93X2J1Zy5jZ2k/aWQ9MTc4OTMxMAogICAgaHR0cHM6Ly9idWd6aWxsYS5yZWRo
YXQuY29tL3Nob3dfYnVnLmNnaT9pZD0xNzg4ODk4CiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IFBl
dGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IEppcmkgRGVu
ZW1hcmsgPGpkZW5lbWFyQHJlZGhhdC5jb20+Cgpjb21taXQgMjNiNTJkOTQyMDRlMGQwNzBjNDQz
NWRmMmRiMzk1M2U5YzNkZWQ2YwpBdXRob3I6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQu
Y29tPgpEYXRlOiAgIEZyaSBKYW4gMTAgMTc6MzU6MTAgMjAyMCArMDEwMAoKICAgIHRlc3RzOiBx
ZW11eG1sMnhtbDogRW5hYmxlIGx1a3MtZGlza3Mtc291cmNlLXFjb3cyIGNhc2UKICAgIAogICAg
VGhlIHRlc3QgZGF0YSB3YXMgdXNlZCBvbmx5IGluIHhtbC0+YXJndiB0ZXN0aW5nIGJ1dCBpdCB3
aWxsIGhhdmUgc29tZQogICAgaW50ZXJyZXN0aW5nIGZhbGxvdXQgc29vbi4KICAgIAogICAgU2ln
bmVkLW9mZi1ieTogUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+CiAgICBSZXZpZXdl
ZC1ieTogSmlyaSBEZW5lbWFyayA8amRlbmVtYXJAcmVkaGF0LmNvbT4KCmNvbW1pdCBlYmViZjYz
YjljMGFjNGM0MmZhZDdjMjkwZjI4MjE0M2U2OWJlYzZhCkF1dGhvcjogUGV0ZXIgS3JlbXBhIDxw
a3JlbXBhQHJlZGhhdC5jb20+CkRhdGU6ICAgRnJpIEphbiAxMCAxNzo0OTo0MiAyMDIwICswMTAw
CgogICAgdGVzdHM6IHFlbXV4bWwyYXJndjogUnVuIGx1a3MtZGlza3Mtc291cmNlLXFjb3cyIGNh
c2Ugd2l0aCBsYXRlc3QgY2FwcwogICAgCiAgICBUcnkgYWxzbyB0aGUgbW9kZXJuIGluY2FybmF0
aW9uIG9mIHRoZSB0ZXN0LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBQZXRlciBLcmVtcGEgPHBr
cmVtcGFAcmVkaGF0LmNvbT4KICAgIFJldmlld2VkLWJ5OiBKaXJpIERlbmVtYXJrIDxqZGVuZW1h
ckByZWRoYXQuY29tPgoKY29tbWl0IGQwNjM5MWQ2MTFmMzIzNTU2ZjJkNGMyMTlkMjU1OWRmYzQ4
YjViOTYKQXV0aG9yOiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KRGF0ZTogICBG
cmkgSmFuIDEwIDE3OjMyOjMzIDIwMjAgKzAxMDAKCiAgICB0ZXN0czogcWVtdXhtbDJhcmd2OiBB
ZGQgZGlzayBpbWFnZSB3aXRoIGVuY3J5cHRlZCBiYWNraW5nIGZpbGUKICAgIAogICAgQWRkIGFu
b3RoZXIgZGlzayB0byBsdWtzLWRpc2tzLXNvdXJjZS1xY293MiBjYXNlIHRvIGNvdmVyIGEgYmFj
a2luZwogICAgY2hhaW4gd2l0aCBlbmNyeXB0ZWQgbWVtYmVycy4KICAgIAogICAgU2lnbmVkLW9m
Zi1ieTogUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTog
SmlyaSBEZW5lbWFyayA8amRlbmVtYXJAcmVkaGF0LmNvbT4KCmNvbW1pdCAzN2Q1MWRkYTVkMTU0
YmY3MzNhNjAxODNjMDA0M2M4NGFlM2JjZDhhCkF1dGhvcjogSmlyaSBEZW5lbWFyayA8amRlbmVt
YXJAcmVkaGF0LmNvbT4KRGF0ZTogICBNb24gSmFuIDEzIDA5OjM5OjIyIDIwMjAgKzAxMDAKCiAg
ICBxZW11eG1sMip0ZXN0OiBGaXggaHVnZXBhZ2VzLWRlZmF1bHQtc3lzdGVtLXNpemUgdGVzdHMK
ICAgIAogICAgQ29tbWl0IHY1LjEwLjAtMjY5LWc2MjA2NWE2Y2I1IG1vdmVkIE5VTUEgdmFsaWRh
dGlvbiBjb2RlIHRvIGRvbWFpbgogICAgZGVmaW5pdGlvbiB0aW1lIGFuZCBhcHByb3ByaWF0ZWx5
IGFkanVzdGVkIGFmZmVjdGVkIHRlc3QgY2FzZXMgZXhjZXB0CiAgICBmb3IgaHVnZXBhZ2VzLWRl
ZmF1bHQtc3lzdGVtLXNpemUuIEFuZCBzaW5jZSB3ZSBkb24ndCBtb2NrCiAgICB2aXJHZXRTeXN0
ZW1QYWdlU2l6ZUtCIGluIG91ciB0ZXN0cywgaHVnZXBhZ2VzLWRlZmF1bHQtc3lzdGVtLXNpemUg
dGVzdAogICAgd291bGQgZmFpbCBvbiBhcmNoaXRlY3R1cmVzIChwcGM2NGxlKSB3aXRoIGRlZmF1
bHQgcGFnZSBzaXplIG90aGVyIHRoYW4KICAgIDRLaUIuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6
IEppcmkgRGVuZW1hcmsgPGpkZW5lbWFyQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogUGF2
ZWwgSHJkaW5hIDxwaHJkaW5hQHJlZGhhdC5jb20+Cgpjb21taXQgYTJlMTUxNjdmOTFmODQ1ZTE3
YjZhNjhmNjU2NTFlMzlhYTE2ZmFiMwpBdXRob3I6IEFuZHJlYSBCb2xvZ25hbmkgPGFib2xvZ25h
QHJlZGhhdC5jb20+CkRhdGU6ICAgTW9uIEphbiAxMyAxMTo0Nzo0MSAyMDIwICswMTAwCgogICAg
Rml4IHR5cG8gKGNldGlmaWNhdGUgLT4gY2VydGlmaWNhdGUpCiAgICAKICAgIFNpZ25lZC1vZmYt
Ynk6IEFuZHJlYSBCb2xvZ25hbmkgPGFib2xvZ25hQHJlZGhhdC5jb20+CgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0
Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qu
b3JnL21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

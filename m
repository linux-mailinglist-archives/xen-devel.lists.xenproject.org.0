Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id D1AF4E79C9
	for <lists+xen-devel@lfdr.de>; Mon, 28 Oct 2019 21:15:01 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iPBM8-0001a7-6J; Mon, 28 Oct 2019 20:11:12 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=nBLR=YV=ziepe.ca=jgg@srs-us1.protection.inumbo.net>)
 id 1iPBM6-0001Zo-Oc
 for xen-devel@lists.xenproject.org; Mon, 28 Oct 2019 20:11:10 +0000
X-Inumbo-ID: 070fed3e-f9bf-11e9-bbab-bc764e2007e4
Received: from mail-qt1-x842.google.com (unknown [2607:f8b0:4864:20::842])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 070fed3e-f9bf-11e9-bbab-bc764e2007e4;
 Mon, 28 Oct 2019 20:10:46 +0000 (UTC)
Received: by mail-qt1-x842.google.com with SMTP id l3so5993755qtp.2
 for <xen-devel@lists.xenproject.org>; Mon, 28 Oct 2019 13:10:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ziepe.ca; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=nd1aeYImkpXF2bbrObm2jlgTnnBK6THl9IrchVUSDrc=;
 b=QDUnE3MKTwJpRZIuKGLEd1KxvZJlb+1DckHcCHURQ9HSK1t0RgoAy1Is1dYbrkQZ64
 g3Cik5qTLKAK+tJxANfOd6jSJHSfmS2EgZwzw8EAv2+qIZnZ5utqGK1ZH71e5CCb1jJ3
 XsMcS4e6B+Vs9d1PZ+vxftVtfIQ6Bl9/KzbGU1uf7mO8gJSkYiO2QQoAzifV0POM/8ap
 Cf/8XsxF5GYxRHaHPBTyYNzN1Lgf40qxiLNjl+31nIJL+8BLCAieaP73H5kJOEruupO9
 MkbljHmAYlsW7oq0Nf8YesEJ4y9aFQHgNi8duEVefClbdJoJex+URxoETEvIn6cobMxB
 BxyQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=nd1aeYImkpXF2bbrObm2jlgTnnBK6THl9IrchVUSDrc=;
 b=akn91Vsx3dbLJEQn1rP7yzEdB0irCNBusSNe+ByhSECKoa4m+BWwA4+r4SnMgrPpkV
 6iCOFBG3d0GUzIzSgvu/lM6dZqxgVYTv0hzQhTwBxnzESRmyIjLlOEUWmOzWAL0gBLc9
 OvbweoN7lpBxVpWJZlXorJolc2VXGW5segH221W+kglxDLcjs99C9dODWOxXZP/gYgdn
 8KZAQOVeCMUP2+02/dNAAOjBXqNq2eda+Nih62S0phUaoaqoohe9UzwaaymQ5TJXi8e5
 h3XXLXw9PS91SnR7tbC9dZ9xAx/vwMmwzRGf00hXTsDZW1QdGdNKcg3To8fwjKPVDkNe
 eULw==
X-Gm-Message-State: APjAAAVzICTiSI62ZS/TwzYt2BbB8mKro+uYK9jUT8ENQzo69V4F8RgG
 7r3GHxq1ZpSkUfP/NaQWuUmBEg==
X-Google-Smtp-Source: APXvYqz7tV89//SAw/M6qcwng6wHNybOT2RkA1hOycOk7KeHSuGGECfRCjBje19BfyzzB0Z65gEjdA==
X-Received: by 2002:ac8:3142:: with SMTP id h2mr343813qtb.182.1572293445995;
 Mon, 28 Oct 2019 13:10:45 -0700 (PDT)
Received: from ziepe.ca
 (hlfxns017vw-142-162-113-180.dhcp-dynamic.fibreop.ns.bellaliant.net.
 [142.162.113.180])
 by smtp.gmail.com with ESMTPSA id i66sm6141757qkb.105.2019.10.28.13.10.43
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Mon, 28 Oct 2019 13:10:43 -0700 (PDT)
Received: from jgg by mlx.ziepe.ca with local (Exim 4.90_1)
 (envelope-from <jgg@ziepe.ca>)
 id 1iPBLf-0001gY-AK; Mon, 28 Oct 2019 17:10:43 -0300
From: Jason Gunthorpe <jgg@ziepe.ca>
To: linux-mm@kvack.org, Jerome Glisse <jglisse@redhat.com>,
 Ralph Campbell <rcampbell@nvidia.com>, John Hubbard <jhubbard@nvidia.com>,
 Felix.Kuehling@amd.com
Date: Mon, 28 Oct 2019 17:10:23 -0300
Message-Id: <20191028201032.6352-7-jgg@ziepe.ca>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191028201032.6352-1-jgg@ziepe.ca>
References: <20191028201032.6352-1-jgg@ziepe.ca>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v2 06/15] RDMA/hfi1: Use
 mmu_range_notifier_inset for user_exp_rcv
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, David Zhou <David1.Zhou@amd.com>,
 Mike Marciniszyn <mike.marciniszyn@intel.com>,
 Stefano Stabellini <sstabellini@kernel.org>,
 Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>,
 linux-rdma@vger.kernel.org, nouveau@lists.freedesktop.org,
 Dennis Dalessandro <dennis.dalessandro@intel.com>,
 amd-gfx@lists.freedesktop.org, Christoph Hellwig <hch@infradead.org>,
 Jason Gunthorpe <jgg@mellanox.com>, dri-devel@lists.freedesktop.org,
 Alex Deucher <alexander.deucher@amd.com>, xen-devel@lists.xenproject.org,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>, Petr Cvek <petrcvekcz@gmail.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 Ben Skeggs <bskeggs@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

RnJvbTogSmFzb24gR3VudGhvcnBlIDxqZ2dAbWVsbGFub3guY29tPgoKVGhpcyBjb252ZXJ0cyBv
bmUgb2YgdGhlIHR3byB1c2VycyBvZiBtbXVfbm90aWZpZXJzIHRvIHVzZSB0aGUgbmV3IEFQSS4K
VGhlIGNvbnZlcnNpb24gaXMgZmFpcmx5IHN0cmFpZ2h0Zm9yd2FyZCwgaG93ZXZlciB0aGUgZXhp
c3RpbmcgdXNlIG9mCm5vdGlmaWVycyBoZXJlIHNlZW1zIHRvIGJlIHJhY2V5LgoKQ2M6IE1pa2Ug
TWFyY2luaXN6eW4gPG1pa2UubWFyY2luaXN6eW5AaW50ZWwuY29tPgpDYzogRGVubmlzIERhbGVz
c2FuZHJvIDxkZW5uaXMuZGFsZXNzYW5kcm9AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYXNv
biBHdW50aG9ycGUgPGpnZ0BtZWxsYW5veC5jb20+Ci0tLQogZHJpdmVycy9pbmZpbmliYW5kL2h3
L2hmaTEvZmlsZV9vcHMuYyAgICAgfCAgIDIgKy0KIGRyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkx
L2hmaS5oICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL2luZmluaWJhbmQvaHcvaGZpMS91c2Vy
X2V4cF9yY3YuYyB8IDE0NiArKysrKysrKystLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2luZmluaWJh
bmQvaHcvaGZpMS91c2VyX2V4cF9yY3YuaCB8ICAgMyArLQogNCBmaWxlcyBjaGFuZ2VkLCA2MCBp
bnNlcnRpb25zKCspLCA5MyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmlu
aWJhbmQvaHcvaGZpMS9maWxlX29wcy5jIGIvZHJpdmVycy9pbmZpbmliYW5kL2h3L2hmaTEvZmls
ZV9vcHMuYwppbmRleCBmOWE3ZTlkMjljOGJhMi4uN2M1ZTNmYjIyNDEzOWEgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkxL2ZpbGVfb3BzLmMKKysrIGIvZHJpdmVycy9pbmZp
bmliYW5kL2h3L2hmaTEvZmlsZV9vcHMuYwpAQCAtMTEzOCw3ICsxMTM4LDcgQEAgc3RhdGljIGlu
dCBnZXRfY3R4dF9pbmZvKHN0cnVjdCBoZmkxX2ZpbGVkYXRhICpmZCwgdW5zaWduZWQgbG9uZyBh
cmcsIHUzMiBsZW4pCiAJCQlIRkkxX0NBUF9VR0VUX01BU0sodWN0eHQtPmZsYWdzLCBNQVNLKSB8
CiAJCQlIRkkxX0NBUF9LR0VUX01BU0sodWN0eHQtPmZsYWdzLCBLMlUpOwogCS8qIGFkanVzdCBm
bGFnIGlmIHRoaXMgZmQgaXMgbm90IGFibGUgdG8gY2FjaGUgKi8KLQlpZiAoIWZkLT5oYW5kbGVy
KQorCWlmICghZmQtPnVzZV9tbikKIAkJY2luZm8ucnVudGltZV9mbGFncyB8PSBIRkkxX0NBUF9U
SURfVU5NQVA7IC8qIG5vIGNhY2hpbmcgKi8KIAogCWNpbmZvLm51bV9hY3RpdmUgPSBoZmkxX2Nv
dW50X2FjdGl2ZV91bml0cygpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pbmZpbmliYW5kL2h3L2hm
aTEvaGZpLmggYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvaGZpMS9oZmkuaAppbmRleCBmYTQ1MzUw
YTlhMWQzMi4uZmMxMGQ2NWZjM2UxM2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9o
dy9oZmkxL2hmaS5oCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkxL2hmaS5oCkBAIC0x
NDQ0LDcgKzE0NDQsNyBAQCBzdHJ1Y3QgaGZpMV9maWxlZGF0YSB7CiAJLyogZm9yIGNwdSBhZmZp
bml0eTsgLTEgaWYgbm9uZSAqLwogCWludCByZWNfY3B1X251bTsKIAl1MzIgdGlkX25fcGlubmVk
OwotCXN0cnVjdCBtbXVfcmJfaGFuZGxlciAqaGFuZGxlcjsKKwlib29sIHVzZV9tbjsKIAlzdHJ1
Y3QgdGlkX3JiX25vZGUgKiplbnRyeV90b19yYjsKIAlzcGlubG9ja190IHRpZF9sb2NrOyAvKiBw
cm90ZWN0IHRpZF9bbGltaXQsdXNlZF0gY291bnRlcnMgKi8KIAl1MzIgdGlkX2xpbWl0OwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9pbmZpbmliYW5kL2h3L2hmaTEvdXNlcl9leHBfcmN2LmMgYi9kcml2
ZXJzL2luZmluaWJhbmQvaHcvaGZpMS91c2VyX2V4cF9yY3YuYwppbmRleCAzNTkyYTllYzE1NWU4
NS4uYTFhYjNiZDMzNGY4OWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkx
L3VzZXJfZXhwX3Jjdi5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkxL3VzZXJfZXhw
X3Jjdi5jCkBAIC01OSwxMSArNTksMTEgQEAgc3RhdGljIGludCBzZXRfcmN2YXJyYXlfZW50cnko
c3RydWN0IGhmaTFfZmlsZWRhdGEgKmZkLAogCQkJICAgICAgc3RydWN0IHRpZF91c2VyX2J1ZiAq
dGJ1ZiwKIAkJCSAgICAgIHUzMiByY3ZlbnRyeSwgc3RydWN0IHRpZF9ncm91cCAqZ3JwLAogCQkJ
ICAgICAgdTE2IHBhZ2VpZHgsIHVuc2lnbmVkIGludCBucGFnZXMpOwotc3RhdGljIGludCB0aWRf
cmJfaW5zZXJ0KHZvaWQgKmFyZywgc3RydWN0IG1tdV9yYl9ub2RlICpub2RlKTsKIHN0YXRpYyB2
b2lkIGNhY2hlbGVzc190aWRfcmJfcmVtb3ZlKHN0cnVjdCBoZmkxX2ZpbGVkYXRhICpmZGF0YSwK
IAkJCQkgICAgc3RydWN0IHRpZF9yYl9ub2RlICp0bm9kZSk7Ci1zdGF0aWMgdm9pZCB0aWRfcmJf
cmVtb3ZlKHZvaWQgKmFyZywgc3RydWN0IG1tdV9yYl9ub2RlICpub2RlKTsKLXN0YXRpYyBpbnQg
dGlkX3JiX2ludmFsaWRhdGUodm9pZCAqYXJnLCBzdHJ1Y3QgbW11X3JiX25vZGUgKm1ub2RlKTsK
K3N0YXRpYyBib29sIHRpZF9yYl9pbnZhbGlkYXRlKHN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIg
Km1ybiwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdlLAor
CQkJICAgICAgdW5zaWduZWQgbG9uZyBjdXJfc2VxKTsKIHN0YXRpYyBpbnQgcHJvZ3JhbV9yY3Zh
cnJheShzdHJ1Y3QgaGZpMV9maWxlZGF0YSAqZmQsIHN0cnVjdCB0aWRfdXNlcl9idWYgKiwKIAkJ
CSAgICBzdHJ1Y3QgdGlkX2dyb3VwICpncnAsCiAJCQkgICAgdW5zaWduZWQgaW50IHN0YXJ0LCB1
MTYgY291bnQsCkBAIC03MywxMCArNzMsOCBAQCBzdGF0aWMgaW50IHVucHJvZ3JhbV9yY3ZhcnJh
eShzdHJ1Y3QgaGZpMV9maWxlZGF0YSAqZmQsIHUzMiB0aWRpbmZvLAogCQkJICAgICAgc3RydWN0
IHRpZF9ncm91cCAqKmdycCk7CiBzdGF0aWMgdm9pZCBjbGVhcl90aWRfbm9kZShzdHJ1Y3QgaGZp
MV9maWxlZGF0YSAqZmQsIHN0cnVjdCB0aWRfcmJfbm9kZSAqbm9kZSk7CiAKLXN0YXRpYyBzdHJ1
Y3QgbW11X3JiX29wcyB0aWRfcmJfb3BzID0gewotCS5pbnNlcnQgPSB0aWRfcmJfaW5zZXJ0LAot
CS5yZW1vdmUgPSB0aWRfcmJfcmVtb3ZlLAotCS5pbnZhbGlkYXRlID0gdGlkX3JiX2ludmFsaWRh
dGUKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgbW11X3JhbmdlX25vdGlmaWVyX29wcyB0aWRfbW5fb3Bz
ID0geworCS5pbnZhbGlkYXRlID0gdGlkX3JiX2ludmFsaWRhdGUsCiB9OwogCiAvKgpAQCAtODcs
NyArODUsNiBAQCBzdGF0aWMgc3RydWN0IG1tdV9yYl9vcHMgdGlkX3JiX29wcyA9IHsKIGludCBo
ZmkxX3VzZXJfZXhwX3Jjdl9pbml0KHN0cnVjdCBoZmkxX2ZpbGVkYXRhICpmZCwKIAkJCSAgIHN0
cnVjdCBoZmkxX2N0eHRkYXRhICp1Y3R4dCkKIHsKLQlzdHJ1Y3QgaGZpMV9kZXZkYXRhICpkZCA9
IHVjdHh0LT5kZDsKIAlpbnQgcmV0ID0gMDsKIAogCXNwaW5fbG9ja19pbml0KCZmZC0+dGlkX2xv
Y2spOwpAQCAtMTA5LDIwICsxMDYsNyBAQCBpbnQgaGZpMV91c2VyX2V4cF9yY3ZfaW5pdChzdHJ1
Y3QgaGZpMV9maWxlZGF0YSAqZmQsCiAJCQlmZC0+ZW50cnlfdG9fcmIgPSBOVUxMOwogCQkJcmV0
dXJuIC1FTk9NRU07CiAJCX0KLQotCQkvKgotCQkgKiBSZWdpc3RlciBNTVUgbm90aWZpZXIgY2Fs
bGJhY2tzLiBJZiB0aGUgcmVnaXN0cmF0aW9uCi0JCSAqIGZhaWxzLCBjb250aW51ZSB3aXRob3V0
IFRJRCBjYWNoaW5nIGZvciB0aGlzIGNvbnRleHQuCi0JCSAqLwotCQlyZXQgPSBoZmkxX21tdV9y
Yl9yZWdpc3RlcihmZCwgZmQtPm1tLCAmdGlkX3JiX29wcywKLQkJCQkJICAgZGQtPnBwb3J0LT5o
ZmkxX3dxLAotCQkJCQkgICAmZmQtPmhhbmRsZXIpOwotCQlpZiAocmV0KSB7Ci0JCQlkZF9kZXZf
aW5mbyhkZCwKLQkJCQkgICAgIkZhaWxlZCBNTVUgbm90aWZpZXIgcmVnaXN0cmF0aW9uICVkXG4i
LAotCQkJCSAgICByZXQpOwotCQkJcmV0ID0gMDsKLQkJfQorCQlmZC0+dXNlX21uID0gdHJ1ZTsK
IAl9CiAKIAkvKgpAQCAtMTM5LDcgKzEyMyw3IEBAIGludCBoZmkxX3VzZXJfZXhwX3Jjdl9pbml0
KHN0cnVjdCBoZmkxX2ZpbGVkYXRhICpmZCwKIAkgKiBpbml0LgogCSAqLwogCXNwaW5fbG9jaygm
ZmQtPnRpZF9sb2NrKTsKLQlpZiAodWN0eHQtPnN1YmN0eHRfY250ICYmIGZkLT5oYW5kbGVyKSB7
CisJaWYgKHVjdHh0LT5zdWJjdHh0X2NudCAmJiBmZC0+dXNlX21uKSB7CiAJCXUxNiByZW1haW5k
ZXI7CiAKIAkJZmQtPnRpZF9saW1pdCA9IHVjdHh0LT5leHBlY3RlZF9jb3VudCAvIHVjdHh0LT5z
dWJjdHh0X2NudDsKQEAgLTE1OCwxOCArMTQyLDEwIEBAIHZvaWQgaGZpMV91c2VyX2V4cF9yY3Zf
ZnJlZShzdHJ1Y3QgaGZpMV9maWxlZGF0YSAqZmQpCiB7CiAJc3RydWN0IGhmaTFfY3R4dGRhdGEg
KnVjdHh0ID0gZmQtPnVjdHh0OwogCi0JLyoKLQkgKiBUaGUgbm90aWZpZXIgd291bGQgaGF2ZSBi
ZWVuIHJlbW92ZWQgd2hlbiB0aGUgcHJvY2VzcydlcyBtbQotCSAqIHdhcyBmcmVlZC4KLQkgKi8K
LQlpZiAoZmQtPmhhbmRsZXIpIHsKLQkJaGZpMV9tbXVfcmJfdW5yZWdpc3RlcihmZC0+aGFuZGxl
cik7Ci0JfSBlbHNlIHsKLQkJaWYgKCFFWFBfVElEX1NFVF9FTVBUWSh1Y3R4dC0+dGlkX2Z1bGxf
bGlzdCkpCi0JCQl1bmxvY2tfZXhwX3RpZHModWN0eHQsICZ1Y3R4dC0+dGlkX2Z1bGxfbGlzdCwg
ZmQpOwotCQlpZiAoIUVYUF9USURfU0VUX0VNUFRZKHVjdHh0LT50aWRfdXNlZF9saXN0KSkKLQkJ
CXVubG9ja19leHBfdGlkcyh1Y3R4dCwgJnVjdHh0LT50aWRfdXNlZF9saXN0LCBmZCk7Ci0JfQor
CWlmICghRVhQX1RJRF9TRVRfRU1QVFkodWN0eHQtPnRpZF9mdWxsX2xpc3QpKQorCQl1bmxvY2tf
ZXhwX3RpZHModWN0eHQsICZ1Y3R4dC0+dGlkX2Z1bGxfbGlzdCwgZmQpOworCWlmICghRVhQX1RJ
RF9TRVRfRU1QVFkodWN0eHQtPnRpZF91c2VkX2xpc3QpKQorCQl1bmxvY2tfZXhwX3RpZHModWN0
eHQsICZ1Y3R4dC0+dGlkX3VzZWRfbGlzdCwgZmQpOwogCiAJa2ZyZWUoZmQtPmludmFsaWRfdGlk
cyk7CiAJZmQtPmludmFsaWRfdGlkcyA9IE5VTEw7CkBAIC0yMDEsNyArMTc3LDcgQEAgc3RhdGlj
IHZvaWQgdW5waW5fcmN2X3BhZ2VzKHN0cnVjdCBoZmkxX2ZpbGVkYXRhICpmZCwKIAogCWlmICht
YXBwZWQpIHsKIAkJcGNpX3VubWFwX3NpbmdsZShkZC0+cGNpZGV2LCBub2RlLT5kbWFfYWRkciwK
LQkJCQkgbm9kZS0+bW11LmxlbiwgUENJX0RNQV9GUk9NREVWSUNFKTsKKwkJCQkgbm9kZS0+bnBh
Z2VzICogUEFHRV9TSVpFLCBQQ0lfRE1BX0ZST01ERVZJQ0UpOwogCQlwYWdlcyA9ICZub2RlLT5w
YWdlc1tpZHhdOwogCX0gZWxzZSB7CiAJCXBhZ2VzID0gJnRpZGJ1Zi0+cGFnZXNbaWR4XTsKQEAg
LTc3Nyw4ICs3NTMsOCBAQCBzdGF0aWMgaW50IHNldF9yY3ZhcnJheV9lbnRyeShzdHJ1Y3QgaGZp
MV9maWxlZGF0YSAqZmQsCiAJCXJldHVybiAtRUZBVUxUOwogCX0KIAotCW5vZGUtPm1tdS5hZGRy
ID0gdGJ1Zi0+dmFkZHIgKyAocGFnZWlkeCAqIFBBR0VfU0laRSk7Ci0Jbm9kZS0+bW11LmxlbiA9
IG5wYWdlcyAqIFBBR0VfU0laRTsKKwlub2RlLT5ub3RpZmllci5vcHMgPSAmdGlkX21uX29wczsK
Kwlub2RlLT5mZGF0YSA9IGZkOwogCW5vZGUtPnBoeXMgPSBwYWdlX3RvX3BoeXMocGFnZXNbMF0p
OwogCW5vZGUtPm5wYWdlcyA9IG5wYWdlczsKIAlub2RlLT5yY3ZlbnRyeSA9IHJjdmVudHJ5OwpA
QCAtNzg3LDIzICs3NjMsMzQgQEAgc3RhdGljIGludCBzZXRfcmN2YXJyYXlfZW50cnkoc3RydWN0
IGhmaTFfZmlsZWRhdGEgKmZkLAogCW5vZGUtPmZyZWVkID0gZmFsc2U7CiAJbWVtY3B5KG5vZGUt
PnBhZ2VzLCBwYWdlcywgc2l6ZW9mKHN0cnVjdCBwYWdlICopICogbnBhZ2VzKTsKIAotCWlmICgh
ZmQtPmhhbmRsZXIpCi0JCXJldCA9IHRpZF9yYl9pbnNlcnQoZmQsICZub2RlLT5tbXUpOwotCWVs
c2UKLQkJcmV0ID0gaGZpMV9tbXVfcmJfaW5zZXJ0KGZkLT5oYW5kbGVyLCAmbm9kZS0+bW11KTsK
LQotCWlmIChyZXQpIHsKLQkJaGZpMV9jZGJnKFRJRCwgIkZhaWxlZCB0byBpbnNlcnQgUkIgbm9k
ZSAldSAweCVseCwgMHglbHggJWQiLAotCQkJICBub2RlLT5yY3ZlbnRyeSwgbm9kZS0+bW11LmFk
ZHIsIG5vZGUtPnBoeXMsIHJldCk7Ci0JCXBjaV91bm1hcF9zaW5nbGUoZGQtPnBjaWRldiwgcGh5
cywgbnBhZ2VzICogUEFHRV9TSVpFLAotCQkJCSBQQ0lfRE1BX0ZST01ERVZJQ0UpOwotCQlrZnJl
ZShub2RlKTsKLQkJcmV0dXJuIC1FRkFVTFQ7CisJaWYgKGZkLT51c2VfbW4pIHsKKwkJcmV0ID0g
bW11X3JhbmdlX25vdGlmaWVyX2luc2VydCgKKwkJCSZub2RlLT5ub3RpZmllciwgdGJ1Zi0+dmFk
ZHIgKyAocGFnZWlkeCAqIFBBR0VfU0laRSksCisJCQlucGFnZXMgKiBQQUdFX1NJWkUsIGZkLT5t
bSk7CisJCWlmIChyZXQpCisJCQlnb3RvIG91dF91bm1hcDsKKwkJLyoKKwkJICogRklYTUU6IFRo
aXMgaXMgaW4gdGhlIHdyb25nIG9yZGVyLCB0aGUgbm90aWZpZXIgc2hvdWxkIGJlCisJCSAqIGVz
dGFibGlzaGVkIGJlZm9yZSB0aGUgcGFnZXMgYXJlIHBpbm5lZCBieSBwaW5fcmN2X3BhZ2VzLgor
CQkgKi8KKwkJbW11X3JhbmdlX3JlYWRfYmVnaW4oJm5vZGUtPm5vdGlmaWVyKTsKIAl9CisJZmQt
PmVudHJ5X3RvX3JiW25vZGUtPnJjdmVudHJ5IC0gdWN0eHQtPmV4cGVjdGVkX2Jhc2VdID0gbm9k
ZTsKKwogCWhmaTFfcHV0X3RpZChkZCwgcmN2ZW50cnksIFBUX0VYUEVDVEVELCBwaHlzLCBpbG9n
MihucGFnZXMpICsgMSk7CiAJdHJhY2VfaGZpMV9leHBfdGlkX3JlZyh1Y3R4dC0+Y3R4dCwgZmQt
PnN1YmN0eHQsIHJjdmVudHJ5LCBucGFnZXMsCi0JCQkgICAgICAgbm9kZS0+bW11LmFkZHIsIG5v
ZGUtPnBoeXMsIHBoeXMpOworCQkJICAgICAgIG5vZGUtPm5vdGlmaWVyLmludGVydmFsX3RyZWUu
c3RhcnQsIG5vZGUtPnBoeXMsCisJCQkgICAgICAgcGh5cyk7CiAJcmV0dXJuIDA7CisKK291dF91
bm1hcDoKKwloZmkxX2NkYmcoVElELCAiRmFpbGVkIHRvIGluc2VydCBSQiBub2RlICV1IDB4JWx4
LCAweCVseCAlZCIsCisJCSAgbm9kZS0+cmN2ZW50cnksIG5vZGUtPm5vdGlmaWVyLmludGVydmFs
X3RyZWUuc3RhcnQsCisJCSAgbm9kZS0+cGh5cywgcmV0KTsKKwlwY2lfdW5tYXBfc2luZ2xlKGRk
LT5wY2lkZXYsIHBoeXMsIG5wYWdlcyAqIFBBR0VfU0laRSwKKwkJCSBQQ0lfRE1BX0ZST01ERVZJ
Q0UpOworCWtmcmVlKG5vZGUpOworCXJldHVybiAtRUZBVUxUOwogfQogCiBzdGF0aWMgaW50IHVu
cHJvZ3JhbV9yY3ZhcnJheShzdHJ1Y3QgaGZpMV9maWxlZGF0YSAqZmQsIHUzMiB0aWRpbmZvLApA
QCAtODMzLDEwICs4MjAsOSBAQCBzdGF0aWMgaW50IHVucHJvZ3JhbV9yY3ZhcnJheShzdHJ1Y3Qg
aGZpMV9maWxlZGF0YSAqZmQsIHUzMiB0aWRpbmZvLAogCWlmIChncnApCiAJCSpncnAgPSBub2Rl
LT5ncnA7CiAKLQlpZiAoIWZkLT5oYW5kbGVyKQotCQljYWNoZWxlc3NfdGlkX3JiX3JlbW92ZShm
ZCwgbm9kZSk7Ci0JZWxzZQotCQloZmkxX21tdV9yYl9yZW1vdmUoZmQtPmhhbmRsZXIsICZub2Rl
LT5tbXUpOworCWlmIChmZC0+dXNlX21uKQorCQltbXVfcmFuZ2Vfbm90aWZpZXJfcmVtb3ZlKCZu
b2RlLT5ub3RpZmllcik7CisJY2FjaGVsZXNzX3RpZF9yYl9yZW1vdmUoZmQsIG5vZGUpOwogCiAJ
cmV0dXJuIDA7CiB9CkBAIC04NDcsNyArODMzLDggQEAgc3RhdGljIHZvaWQgY2xlYXJfdGlkX25v
ZGUoc3RydWN0IGhmaTFfZmlsZWRhdGEgKmZkLCBzdHJ1Y3QgdGlkX3JiX25vZGUgKm5vZGUpCiAJ
c3RydWN0IGhmaTFfZGV2ZGF0YSAqZGQgPSB1Y3R4dC0+ZGQ7CiAKIAl0cmFjZV9oZmkxX2V4cF90
aWRfdW5yZWcodWN0eHQtPmN0eHQsIGZkLT5zdWJjdHh0LCBub2RlLT5yY3ZlbnRyeSwKLQkJCQkg
bm9kZS0+bnBhZ2VzLCBub2RlLT5tbXUuYWRkciwgbm9kZS0+cGh5cywKKwkJCQkgbm9kZS0+bnBh
Z2VzLAorCQkJCSBub2RlLT5ub3RpZmllci5pbnRlcnZhbF90cmVlLnN0YXJ0LCBub2RlLT5waHlz
LAogCQkJCSBub2RlLT5kbWFfYWRkcik7CiAKIAkvKgpAQCAtODk0LDMwICs4ODEsMjkgQEAgc3Rh
dGljIHZvaWQgdW5sb2NrX2V4cF90aWRzKHN0cnVjdCBoZmkxX2N0eHRkYXRhICp1Y3R4dCwKIAkJ
CQlpZiAoIW5vZGUgfHwgbm9kZS0+cmN2ZW50cnkgIT0gcmN2ZW50cnkpCiAJCQkJCWNvbnRpbnVl
OwogCisJCQkJaWYgKGZkLT51c2VfbW4pCisJCQkJCW1tdV9yYW5nZV9ub3RpZmllcl9yZW1vdmUo
CisJCQkJCQkmbm9kZS0+bm90aWZpZXIpOwogCQkJCWNhY2hlbGVzc190aWRfcmJfcmVtb3ZlKGZk
LCBub2RlKTsKIAkJCX0KIAkJfQogCX0KIH0KIAotLyoKLSAqIEFsd2F5cyByZXR1cm4gMCBmcm9t
IHRoaXMgZnVuY3Rpb24uICBBIG5vbi16ZXJvIHJldHVybiBpbmRpY2F0ZXMgdGhhdCB0aGUKLSAq
IHJlbW92ZSBvcGVyYXRpb24gd2lsbCBiZSBjYWxsZWQgYW5kIHRoYXQgbWVtb3J5IHNob3VsZCBi
ZSB1bnBpbm5lZC4KLSAqIEhvd2V2ZXIsIHRoZSBkcml2ZXIgY2Fubm90IHVucGluIG91dCBmcm9t
IHVuZGVyIFBTTS4gIEluc3RlYWQsIHJldGFpbiB0aGUKLSAqIG1lbW9yeSAoYnkgcmV0dXJuaW5n
IDApIGFuZCBpbmZvcm0gUFNNIHRoYXQgdGhlIG1lbW9yeSBpcyBnb2luZyBhd2F5LiAgUFNNCi0g
KiB3aWxsIGNhbGwgYmFjayBsYXRlciB3aGVuIGl0IGhhcyByZW1vdmVkIHRoZSBtZW1vcnkgZnJv
bSBpdHMgbGlzdC4KLSAqLwotc3RhdGljIGludCB0aWRfcmJfaW52YWxpZGF0ZSh2b2lkICphcmcs
IHN0cnVjdCBtbXVfcmJfbm9kZSAqbW5vZGUpCitzdGF0aWMgYm9vbCB0aWRfcmJfaW52YWxpZGF0
ZShzdHJ1Y3QgbW11X3JhbmdlX25vdGlmaWVyICptcm4sCisJCQkgICAgICBjb25zdCBzdHJ1Y3Qg
bW11X25vdGlmaWVyX3JhbmdlICpyYW5nZSwKKwkJCSAgICAgIHVuc2lnbmVkIGxvbmcgY3VyX3Nl
cSkKIHsKLQlzdHJ1Y3QgaGZpMV9maWxlZGF0YSAqZmRhdGEgPSBhcmc7Ci0Jc3RydWN0IGhmaTFf
Y3R4dGRhdGEgKnVjdHh0ID0gZmRhdGEtPnVjdHh0OwogCXN0cnVjdCB0aWRfcmJfbm9kZSAqbm9k
ZSA9Ci0JCWNvbnRhaW5lcl9vZihtbm9kZSwgc3RydWN0IHRpZF9yYl9ub2RlLCBtbXUpOworCQlj
b250YWluZXJfb2YobXJuLCBzdHJ1Y3QgdGlkX3JiX25vZGUsIG5vdGlmaWVyKTsKKwlzdHJ1Y3Qg
aGZpMV9maWxlZGF0YSAqZmRhdGEgPSBub2RlLT5mZGF0YTsKKwlzdHJ1Y3QgaGZpMV9jdHh0ZGF0
YSAqdWN0eHQgPSBmZGF0YS0+dWN0eHQ7CiAKIAlpZiAobm9kZS0+ZnJlZWQpCi0JCXJldHVybiAw
OworCQlyZXR1cm4gdHJ1ZTsKIAotCXRyYWNlX2hmaTFfZXhwX3RpZF9pbnZhbCh1Y3R4dC0+Y3R4
dCwgZmRhdGEtPnN1YmN0eHQsIG5vZGUtPm1tdS5hZGRyLAorCXRyYWNlX2hmaTFfZXhwX3RpZF9p
bnZhbCh1Y3R4dC0+Y3R4dCwgZmRhdGEtPnN1YmN0eHQsCisJCQkJIG5vZGUtPm5vdGlmaWVyLmlu
dGVydmFsX3RyZWUuc3RhcnQsCiAJCQkJIG5vZGUtPnJjdmVudHJ5LCBub2RlLT5ucGFnZXMsIG5v
ZGUtPmRtYV9hZGRyKTsKIAlub2RlLT5mcmVlZCA9IHRydWU7CiAKQEAgLTk0NiwxOCArOTMyLDcg
QEAgc3RhdGljIGludCB0aWRfcmJfaW52YWxpZGF0ZSh2b2lkICphcmcsIHN0cnVjdCBtbXVfcmJf
bm9kZSAqbW5vZGUpCiAJCWZkYXRhLT5pbnZhbGlkX3RpZF9pZHgrKzsKIAl9CiAJc3Bpbl91bmxv
Y2soJmZkYXRhLT5pbnZhbGlkX2xvY2spOwotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IHRp
ZF9yYl9pbnNlcnQodm9pZCAqYXJnLCBzdHJ1Y3QgbW11X3JiX25vZGUgKm5vZGUpCi17Ci0Jc3Ry
dWN0IGhmaTFfZmlsZWRhdGEgKmZkYXRhID0gYXJnOwotCXN0cnVjdCB0aWRfcmJfbm9kZSAqdG5v
ZGUgPQotCQljb250YWluZXJfb2Yobm9kZSwgc3RydWN0IHRpZF9yYl9ub2RlLCBtbXUpOwotCXUz
MiBiYXNlID0gZmRhdGEtPnVjdHh0LT5leHBlY3RlZF9iYXNlOwotCi0JZmRhdGEtPmVudHJ5X3Rv
X3JiW3Rub2RlLT5yY3ZlbnRyeSAtIGJhc2VdID0gdG5vZGU7Ci0JcmV0dXJuIDA7CisJcmV0dXJu
IHRydWU7CiB9CiAKIHN0YXRpYyB2b2lkIGNhY2hlbGVzc190aWRfcmJfcmVtb3ZlKHN0cnVjdCBo
ZmkxX2ZpbGVkYXRhICpmZGF0YSwKQEAgLTk2OCwxMiArOTQzLDMgQEAgc3RhdGljIHZvaWQgY2Fj
aGVsZXNzX3RpZF9yYl9yZW1vdmUoc3RydWN0IGhmaTFfZmlsZWRhdGEgKmZkYXRhLAogCWZkYXRh
LT5lbnRyeV90b19yYlt0bm9kZS0+cmN2ZW50cnkgLSBiYXNlXSA9IE5VTEw7CiAJY2xlYXJfdGlk
X25vZGUoZmRhdGEsIHRub2RlKTsKIH0KLQotc3RhdGljIHZvaWQgdGlkX3JiX3JlbW92ZSh2b2lk
ICphcmcsIHN0cnVjdCBtbXVfcmJfbm9kZSAqbm9kZSkKLXsKLQlzdHJ1Y3QgaGZpMV9maWxlZGF0
YSAqZmRhdGEgPSBhcmc7Ci0Jc3RydWN0IHRpZF9yYl9ub2RlICp0bm9kZSA9Ci0JCWNvbnRhaW5l
cl9vZihub2RlLCBzdHJ1Y3QgdGlkX3JiX25vZGUsIG1tdSk7Ci0KLQljYWNoZWxlc3NfdGlkX3Ji
X3JlbW92ZShmZGF0YSwgdG5vZGUpOwotfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pbmZpbmliYW5k
L2h3L2hmaTEvdXNlcl9leHBfcmN2LmggYi9kcml2ZXJzL2luZmluaWJhbmQvaHcvaGZpMS91c2Vy
X2V4cF9yY3YuaAppbmRleCA0M2IxMDVkZTFkNTQyNy4uYjUzMTRkYjA4M2IxMjUgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvaW5maW5pYmFuZC9ody9oZmkxL3VzZXJfZXhwX3Jjdi5oCisrKyBiL2RyaXZl
cnMvaW5maW5pYmFuZC9ody9oZmkxL3VzZXJfZXhwX3Jjdi5oCkBAIC02NSw3ICs2NSw4IEBAIHN0
cnVjdCB0aWRfdXNlcl9idWYgewogfTsKIAogc3RydWN0IHRpZF9yYl9ub2RlIHsKLQlzdHJ1Y3Qg
bW11X3JiX25vZGUgbW11OworCXN0cnVjdCBtbXVfcmFuZ2Vfbm90aWZpZXIgbm90aWZpZXI7CisJ
c3RydWN0IGhmaTFfZmlsZWRhdGEgKmZkYXRhOwogCXVuc2lnbmVkIGxvbmcgcGh5czsKIAlzdHJ1
Y3QgdGlkX2dyb3VwICpncnA7CiAJdTMyIHJjdmVudHJ5OwotLSAKMi4yMy4wCgoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxpbmcg
bGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9q
ZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id AD8F86C4C4
	for <lists+xen-devel@lfdr.de>; Thu, 18 Jul 2019 04:01:47 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hnvfM-0000D6-Q6; Thu, 18 Jul 2019 01:57:04 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=xBYf=VP=xenproject.org=osstest-admin@srs-us1.protection.inumbo.net>)
 id 1hnvfL-0000Co-2H
 for xen-devel@lists.xenproject.org; Thu, 18 Jul 2019 01:57:03 +0000
X-Inumbo-ID: 52c77622-a8ff-11e9-b8bb-033cfbd90af9
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 52c77622-a8ff-11e9-b8bb-033cfbd90af9;
 Thu, 18 Jul 2019 01:56:57 +0000 (UTC)
Received: from host146.205.237.98.conversent.net ([205.237.98.146]
 helo=infra.test-lab.xenproject.org)
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1hnvfE-00051X-KP; Thu, 18 Jul 2019 01:56:56 +0000
Received: from [172.16.144.3] (helo=osstest.test-lab.xenproject.org)
 by infra.test-lab.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1hnvfE-0001lx-8v; Thu, 18 Jul 2019 01:56:56 +0000
Received: from osstest by osstest.test-lab.xenproject.org with local (Exim
 4.89) (envelope-from <osstest-admin@xenproject.org>)
 id 1hnvfE-0004H1-7v; Thu, 18 Jul 2019 01:56:56 +0000
To: xen-devel@lists.xenproject.org,
    osstest-admin@xenproject.org
Message-ID: <osstest-139076-mainreport@xen.org>
MIME-Version: 1.0
X-Osstest-Failures: libvirt:test-arm64-arm64-libvirt-qcow2:guest-start/debian.repeat:fail:regression
 libvirt:test-armhf-armhf-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:saverestore-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-vhd:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:migrate-support-check:fail:nonblocking
X-Osstest-Versions-This: libvirt=898821cce881343faea38f37c789a1e8e54494f6
X-Osstest-Versions-That: libvirt=f58bcb80b2ca1791acd5ec0255297a44aa9d4dbe
From: osstest service owner <osstest-admin@xenproject.org>
Date: Thu, 18 Jul 2019 01:56:56 +0000
Subject: [Xen-devel] [libvirt test] 139076: regressions - FAIL
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

ZmxpZ2h0IDEzOTA3NiBsaWJ2aXJ0IHJlYWwgW3JlYWxdCmh0dHA6Ly9sb2dzLnRlc3QtbGFiLnhl
bnByb2plY3Qub3JnL29zc3Rlc3QvbG9ncy8xMzkwNzYvCgpSZWdyZXNzaW9ucyA6LSgKClRlc3Rz
IHdoaWNoIGRpZCBub3Qgc3VjY2VlZCBhbmQgYXJlIGJsb2NraW5nLAppbmNsdWRpbmcgdGVzdHMg
d2hpY2ggY291bGQgbm90IGJlIHJ1bjoKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293MiAx
NSBndWVzdC1zdGFydC9kZWJpYW4ucmVwZWF0IGZhaWwgUkVHUi4gdnMuIDEzOTAzNwoKVGVzdHMg
d2hpY2ggZGlkIG5vdCBzdWNjZWVkLCBidXQgYXJlIG5vdCBibG9ja2luZzoKIHRlc3QtYXJtaGYt
YXJtaGYtbGlidmlydCAgICAgMTQgc2F2ZXJlc3RvcmUtc3VwcG9ydC1jaGVjayAgICBmYWlsICBs
aWtlIDEzOTAzNwogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0LXJhdyAxMyBzYXZlcmVzdG9yZS1z
dXBwb3J0LWNoZWNrICAgIGZhaWwgIGxpa2UgMTM5MDM3CiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZp
cnQgICAgIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MK
IHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC14c20gMTMgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAg
ICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQgICAgICAxMyBt
aWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFtZDY0
LWkzODYtbGlidmlydC14c20gIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAg
IG5ldmVyIHBhc3MKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2
NC14c20gMTEgbWlncmF0ZS1zdXBwb3J0LWNoZWNrIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2
NC1hbWQ2NC1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gMTEgbWlncmF0ZS1zdXBw
b3J0LWNoZWNrIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0LXhzbSAx
MyBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFy
bTY0LWFybTY0LWxpYnZpcnQteHNtIDE0IHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAgZmFp
bCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydCAgICAgMTMgbWlncmF0ZS1z
dXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1s
aWJ2aXJ0ICAgICAxNCBzYXZlcmVzdG9yZS1zdXBwb3J0LWNoZWNrICAgIGZhaWwgICBuZXZlciBw
YXNzCiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZpcnQtdmhkIDEyIG1pZ3JhdGUtc3VwcG9ydC1jaGVj
ayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293
MiAxMiBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1h
cm02NC1hcm02NC1saWJ2aXJ0LXFjb3cyIDEzIHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAg
ZmFpbCBuZXZlciBwYXNzCiB0ZXN0LWFybWhmLWFybWhmLWxpYnZpcnQgICAgIDEzIG1pZ3JhdGUt
c3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtaGYtYXJtaGYt
bGlidmlydC1yYXcgMTIgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIg
cGFzcwoKdmVyc2lvbiB0YXJnZXRlZCBmb3IgdGVzdGluZzoKIGxpYnZpcnQgICAgICAgICAgICAg
IDg5ODgyMWNjZTg4MTM0M2ZhZWEzOGYzN2M3ODlhMWU4ZTU0NDk0ZjYKYmFzZWxpbmUgdmVyc2lv
bjoKIGxpYnZpcnQgICAgICAgICAgICAgIGY1OGJjYjgwYjJjYTE3OTFhY2Q1ZWMwMjU1Mjk3YTQ0
YWE5ZDRkYmUKCkxhc3QgdGVzdCBvZiBiYXNpcyAgIDEzOTAzNyAgMjAxOS0wNy0xNiAwNDoxODo1
MyBaICAgIDEgZGF5cwpUZXN0aW5nIHNhbWUgc2luY2UgICAxMzkwNzYgIDIwMTktMDctMTcgMDQ6
MTg6NDcgWiAgICAwIGRheXMgICAgMSBhdHRlbXB0cwoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClBlb3BsZSB3aG8gdG91Y2hlZCBy
ZXZpc2lvbnMgdW5kZXIgdGVzdDoKICBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KICBN
aWNoYWwgUHJpdm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgogIFBldGVyIEtyZW1wYSA8cGty
ZW1wYUByZWRoYXQuY29tPgoKam9iczoKIGJ1aWxkLWFtZDY0LXhzbSAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYXJtNjQteHNtICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWls
ZC1pMzg2LXhzbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
cGFzcyAgICAKIGJ1aWxkLWFtZDY0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYXJtNjQgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hcm1oZiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxk
LWkzODYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBw
YXNzICAgIAogYnVpbGQtYW1kNjQtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hcm02NC1saWJ2aXJ0ICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFybWhmLWxpYnZpcnQg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQt
aTM4Ni1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBh
c3MgICAgCiBidWlsZC1hbWQ2NC1wdm9wcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFybTY0LXB2b3BzICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYXJtaGYtcHZvcHMgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1p
Mzg2LXB2b3BzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFz
cyAgICAKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC1xZW11dS1kZWJpYW5odm0tYW1kNjQteHNt
ICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQtcWVtdXUtZGViaWFu
aHZtLWFtZDY0LXhzbSAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZp
cnQteHNtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYXJt
NjQtYXJtNjQtbGlidmlydC14c20gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNz
ICAgIAogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQteHNtICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZpcnQgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmly
dCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hcm1o
Zi1hcm1oZi1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3Mg
ICAgCiB0ZXN0LWFtZDY0LWkzODYtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC1wYWlyICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQt
cGFpciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFybTY0
LWFybTY0LWxpYnZpcnQtcWNvdzIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbCAg
ICAKIHRlc3QtYXJtaGYtYXJtaGYtbGlidmlydC1yYXcgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1hbWQ2NC1saWJ2aXJ0LXZoZCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCgoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCnNnLXJlcG9ydC1mbGlnaHQgb24g
b3NzdGVzdC50ZXN0LWxhYi54ZW5wcm9qZWN0Lm9yZwpsb2dzOiAvaG9tZS9sb2dzL2xvZ3MKaW1h
Z2VzOiAvaG9tZS9sb2dzL2ltYWdlcwoKTG9ncywgY29uZmlnIGZpbGVzLCBldGMuIGFyZSBhdmFp
bGFibGUgYXQKICAgIGh0dHA6Ly9sb2dzLnRlc3QtbGFiLnhlbnByb2plY3Qub3JnL29zc3Rlc3Qv
bG9ncwoKRXhwbGFuYXRpb24gb2YgdGhlc2UgcmVwb3J0cywgYW5kIG9mIG9zc3Rlc3QgaW4gZ2Vu
ZXJhbCwgaXMgYXQKICAgIGh0dHA6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViLz9wPW9zc3Rlc3Qu
Z2l0O2E9YmxvYjtmPVJFQURNRS5lbWFpbDtoYj1tYXN0ZXIKICAgIGh0dHA6Ly94ZW5iaXRzLnhl
bi5vcmcvZ2l0d2ViLz9wPW9zc3Rlc3QuZ2l0O2E9YmxvYjtmPVJFQURNRTtoYj1tYXN0ZXIKClRl
c3QgaGFybmVzcyBjb2RlIGNhbiBiZSBmb3VuZCBhdAogICAgaHR0cDovL3hlbmJpdHMueGVuLm9y
Zy9naXR3ZWI/cD1vc3N0ZXN0LmdpdDthPXN1bW1hcnkKCgpOb3QgcHVzaGluZy4KCi0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpjb21t
aXQgODk4ODIxY2NlODgxMzQzZmFlYTM4ZjM3Yzc4OWExZThlNTQ0OTRmNgpBdXRob3I6IErDoW4g
VG9ta28gPGp0b21rb0ByZWRoYXQuY29tPgpEYXRlOiAgIFR1ZSBKdWwgMTYgMTI6MzE6MDMgMjAx
OSArMDIwMAoKICAgIHFlbXU6IGNvbW1hbmQ6IHJlbW92ZSBxZW11RG9tYWluRlNEcml2ZXIKICAg
IAogICAgSGF2aW5nIGEgdHJhbnNsYXRpb24gZW51bSBmdWxsIG9mIGVtcHR5IHN0cmluZ3Mgc2Vl
bXMgZXhjZXNzaXZlLgogICAgTm93IHRoYXQgdGhlIHZhbGlkaWF0aW9uIGlzIHBlcmZvcm1lZCBp
biBxZW11RG9tYWluRGV2aWNlRGVmVmFsaWRhdGVGUywKICAgIHJlbW92ZSBpdCBjb21wbGV0ZWx5
IGFuZCBvcGVuLWNvZGUgdGhlIHR3byBhbGxvd2VkIGNhc2VzLgogICAgCiAgICBTaWduZWQtb2Zm
LWJ5OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KICAgIEFja2VkLWJ5OiBQZXRlciBL
cmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KCmNvbW1pdCBlNmU3YzQxZjg0NTE3ODA5NzZiNmQy
MzJlNTgxYmY5MTBkMWMxZTJhCkF1dGhvcjogSsOhbiBUb21rbyA8anRvbWtvQHJlZGhhdC5jb20+
CkRhdGU6ICAgVHVlIEp1bCAxNiAxMjoyNTozMSAyMDE5ICswMjAwCgogICAgcWVtdTogY29tbWFu
ZDogdXNlIFZJUl9BVVRPQ0xFQU4gaW4gcWVtdUJ1aWxkRlMqCiAgICAKICAgIFNpZ25lZC1vZmYt
Ynk6IErDoW4gVG9ta28gPGp0b21rb0ByZWRoYXQuY29tPgogICAgQWNrZWQtYnk6IFBldGVyIEty
ZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgoKY29tbWl0IGFjZWYzNTAwODA5MTJlMWEwZDE2ZTJl
ZGZjYzJmYzEyNzhhZDM1NmYKQXV0aG9yOiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4K
RGF0ZTogICBUdWUgSnVsIDE2IDEyOjA1OjE5IDIwMTkgKzAyMDAKCiAgICBxZW11OiBpbnRyb2R1
Y2UgcWVtdURvbWFpbkRldmljZURlZlZhbGlkYXRlRlMKICAgIAogICAgTW92ZSB2YWxpZGF0aW9u
IG9mIHRoZSBmaWxlc3lzdGVtIGRldmljZSBvdXQgb2YgcWVtdV9jb21tYW5kLgogICAgCiAgICBT
aWduZWQtb2ZmLWJ5OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KICAgIEFja2VkLWJ5
OiBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KCmNvbW1pdCA3NzU3MGUyNjAwZDJm
NGFjNjJiOWRjMGFmMTkwYmYwNWMwZjljNmI0CkF1dGhvcjogSsOhbiBUb21rbyA8anRvbWtvQHJl
ZGhhdC5jb20+CkRhdGU6ICAgVHVlIEp1bCAxNiAxMDozNzowMyAyMDE5ICswMjAwCgogICAgcWVt
dTogY29tbWFuZDogdXNlIFZJUl9BVVRPRlJFRSBpbiBxZW11QnVpbGRGU0RldkNvbW1hbmRMaW5l
CiAgICAKICAgIEludHJvZHVjZSB0d28gc2VwYXJhdGUgdmFyaWFibGVzIGluc3RlYWQgb2YgcmV1
c2luZyB0aGUgc2FtZSBvbmUKICAgIGZvciBjbGFyaXR5LgogICAgCiAgICBTaWduZWQtb2ZmLWJ5
OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KICAgIEFja2VkLWJ5OiBQZXRlciBLcmVt
cGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KCmNvbW1pdCBkYTBmNWFhYjNlZTIzOTU1OTY0NjdhNGYx
ZDhhMjdjMDM5OGY5MDk4CkF1dGhvcjogSsOhbiBUb21rbyA8anRvbWtvQHJlZGhhdC5jb20+CkRh
dGU6ICAgVHVlIEp1bCAxNiAxMDozNTo0NCAyMDE5ICswMjAwCgogICAgcWVtdTogY29tbWFuZDog
cmUtaW50cm9kdWNlIHFlbXVCdWlsZEZTRGV2Q29tbWFuZExpbmUKICAgIAogICAgVGhpcyB0aW1l
IGl0IG9ubHkgYnVpbGRzIG9uZSBkZXZpY2UuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IErDoW4g
VG9ta28gPGp0b21rb0ByZWRoYXQuY29tPgogICAgQWNrZWQtYnk6IFBldGVyIEtyZW1wYSA8cGty
ZW1wYUByZWRoYXQuY29tPgoKY29tbWl0IGQ4ZjhmMWQxNzI0YzU0MjlhYTEzMWEzNjVmNGNkNjE2
NTFmOGEzYWEKQXV0aG9yOiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KRGF0ZTogICBU
dWUgSnVsIDE2IDEwOjMwOjUxIDIwMTkgKzAyMDAKCiAgICBxZW11OiBjb21tYW5kOiByZW5hbWUg
cWVtdUJ1aWxkRlNEZXZDb21tYW5kTGluZQogICAgCiAgICBUaGlzIGZ1bmN0aW9uIGl0ZXJhdGVz
IG92ZXIgYWxsIGZpbGVzeXN0ZW1zLCBub3QganVzdCAtZnNkZXZzLgogICAgCiAgICBSZW5hbWUg
aXQgdG8gZnJlZSB0aGUgbmFtZSBmb3IgYSBmdW5jdGlvbiB0aGF0IGFjdHVhbGx5IGJ1aWxkcyBm
c2RldnMuCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IErDoW4gVG9ta28gPGp0b21rb0ByZWRoYXQu
Y29tPgogICAgQWNrZWQtYnk6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29tPgoKY29t
bWl0IDYyODcwOTI0NWJiOTUxMWM3ZTYzMWVkY2ViYWJkZjZiNzIxOTA5YzAKQXV0aG9yOiBKw6Fu
IFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KRGF0ZTogICBUdWUgSnVsIDE2IDA4OjMwOjMxIDIw
MTkgKzAyMDAKCiAgICBxZW11OiBhZGRyZXNzOiByZW1vdmUgdXNlbGVzcyBjb21tZW50CiAgICAK
ICAgIENvbW1pdCBiMjczNzVhOWI4NmYwMTBhOWE5ZmMwMzIzYmUzZjIwNGI2MjE5NWY0IG9taXR0
ZWQgb25lIHplcm8uCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IErDoW4gVG9ta28gPGp0b21rb0By
ZWRoYXQuY29tPgogICAgQWNrZWQtYnk6IFBldGVyIEtyZW1wYSA8cGtyZW1wYUByZWRoYXQuY29t
PgoKY29tbWl0IDQzY2VhZDg4NTYyOWNhOWMxMTYwOTI3ZWI0MjQxNmMxOGM4NjY2YTcKQXV0aG9y
OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KRGF0ZTogICBUdWUgSnVsIDE2IDEyOjQ5
OjMyIDIwMTkgKzAyMDAKCiAgICBxZW11OiBhZGQgQ0FQU19MQVRFU1QgdGVzdHMgZm9yIDlwZnMK
ICAgIAogICAgVXNlIHRoZSBleGlzdGluZyBmczlwLnhtbCBhbmQgZnM5cC1jY3cueG1sIHRvIHJ1
biB0aGUgdGVzdHMKICAgIHdpdGggbGF0ZXN0IGNhcHMgb24geDg2XzY0IGFuZCBzMzkweC4KICAg
IAogICAgU2lnbmVkLW9mZi1ieTogSsOhbiBUb21rbyA8anRvbWtvQHJlZGhhdC5jb20+CiAgICBB
Y2tlZC1ieTogUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+Cgpjb21taXQgMThlNDFk
NmMwMDUyODg0YWRlNzQ1N2NjODYxZTNmMWM3NDJiYjM0OApBdXRob3I6IErDoW4gVG9ta28gPGp0
b21rb0ByZWRoYXQuY29tPgpEYXRlOiAgIFR1ZSBKdWwgMTYgMTI6NTA6NDQgMjAxOSArMDIwMAoK
ICAgIHRlc3RzOiBxZW11OiBtaW5pbWl6ZSBmczlwLnhtbAogICAgCiAgICBSZW1vdmUgdGhlIGhh
cmQgZHJpdmUsIFVTQiBjb250cm9sbGVyIGFuZCBtZW1iYWxsb29uLgogICAgCiAgICBTaWduZWQt
b2ZmLWJ5OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KICAgIEFja2VkLWJ5OiBQZXRl
ciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KCmNvbW1pdCA0MzJmYWYyNTliNjk2MDQzZWU1
ZDdlOGY2NTdkODU1NDE5YTlhM2ZhCkF1dGhvcjogTWljaGFsIFByaXZvem5payA8bXByaXZvem5A
cmVkaGF0LmNvbT4KRGF0ZTogICBUdWUgSnVsIDIgMTk6NDk6NTEgMjAxOSArMDIwMAoKICAgIHZp
ckNvbW1hbmQ6IHVzZSBwcm9jZnMgdG8gbGVhcm4gb3BlbmVkIEZEcwogICAgCiAgICBXaGVuIHNw
YXduaW5nIGEgY2hpbGQgcHJvY2VzcywgYmV0d2VlbiBmb3JrKCkgYW5kIGV4ZWMoKSB3ZSBjbG9z
ZQogICAgYWxsIGZpbGUgZGVzY3JpcHRvcnMgYW5kIGtlZXAgb25seSB0aG9zZSB0aGUgY2FsbGVy
IHdhbnRzIHVzIHRvCiAgICBwYXNzIG9udG8gdGhlIGNoaWxkLiBUaGUgcHJvYmxlbSBpcyBob3cg
d2UgZG8gdGhhdC4gQ3VycmVudGx5LCB3ZQogICAgZ2V0IHRoZSBsaW1pdCBvZiBvcGVuZWQgZmls
ZXMgYW5kIHRoZW4gaXRlcmF0ZSB0aHJvdWdoIGVhY2ggb25lCiAgICBvZiB0aGVtIGFuZCBlaXRo
ZXIgY2xvc2UoKSBpdCBvciBtYWtlIGl0IHN1cnZpdmUgZXhlYygpLiBUaGlzCiAgICBhcHByb2Fj
aCBpcyBzdWJvcHRpbWFsIChhbHRob3VnaCwgbm90IHRoYXQgbXVjaCBpbiBkZWZhdWx0CiAgICBj
b25maWd1cmF0aW9ucyB3aGVyZSB0aGUgbGltaXQgaXMgcHJldHR5IGxvdyAtIDEwMjQpLiBXZSBo
YXZlCiAgICAvcHJvYyB3aGVyZSB3ZSBjYW4gbGVhcm4gd2hhdCBGRHMgd2UgaG9sZCBvcGVuIGFu
ZCB0aHVzIHdlIGNhbgogICAgc2VsZWN0aXZlbHkgY2xvc2Ugb25seSB0aG9zZS4KICAgIAogICAg
U2lnbmVkLW9mZi1ieTogTWljaGFsIFByaXZvem5payA8bXByaXZvem5AcmVkaGF0LmNvbT4KICAg
IFJldmlld2VkLWJ5OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KCmNvbW1pdCBjMWE5
YmZiYmJhNDhmZWE0NGZkZmJlNTMyZTA4NGM1MzIzYzljOWIzCkF1dGhvcjogTWljaGFsIFByaXZv
em5payA8bXByaXZvem5AcmVkaGF0LmNvbT4KRGF0ZTogICBUdWUgSnVsIDIgMDg6Mjc6MjUgMjAx
OSArMDIwMAoKICAgIHZpcmNvbW1hbmQ6IFNlcGFyYXRlIG1hc3MgRkQgY2xvc2luZyBpbnRvIGEg
ZnVuY3Rpb24KICAgIAogICAgSSB3aWxsIG9wdGltaXplIHRoaXMgY29kZSBhIGJpdCBpbiB0aGUg
bmV4dCBjb21taXQuIEJ1dCBmb3IgdGhhdAogICAgaXQgaXMgYmV0dGVyIGlmIHRoZSBjb2RlIGxp
dmVzIGluIGEgc2VwYXJhdGUgZnVuY3Rpb24uCiAgICAKICAgIFNpZ25lZC1vZmYtYnk6IE1pY2hh
bCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogSsOhbiBU
b21rbyA8anRvbWtvQHJlZGhhdC5jb20+Cgpjb21taXQgY2MzNDI2MGY1YTg3MTVkMjA4ZWU0NWE2
ZWJhYTc5ZTUyNjRjYmU2OApBdXRob3I6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhh
dC5jb20+CkRhdGU6ICAgVHVlIEp1bCAxNiAwOTozMzozOCAyMDE5ICswMjAwCgogICAgdGVzdDog
SW50cm9kdWNlIHZpcm5ldGRldm9wZW52c3dpdGNodGVzdAogICAgCiAgICBUZXN0IGlmIG91ciBw
YXJzaW5nIG9mIGludGVyZmFjZSBzdGF0cyBhcyByZXR1cm5lZCBieSBvdnMtdnNjdGwKICAgIHdv
cmtzIGFzIGV4cGVjdGVkLiBUbyBhY2hpZXZlIHRoaXMgd2l0aG91dCBoYXZpbmcgdG8gbW9jawog
ICAgdmlyQ29tbWFuZCogSSdtIHNlcGFyYXRpbmcgcGFyc2luZyBvZiBzdGF0cyBpbnRvIGEgc2Vw
YXJhdGUKICAgIGZ1bmN0aW9uLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBNaWNoYWwgUHJpdm96
bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IErDoW4gVG9ta28gPGp0
b21rb0ByZWRoYXQuY29tPgoKY29tbWl0IGMyOTdlYWI1MjU5OWM5MWE0Y2IyNmI2NmRiZGZlOWQw
N2MzMTQyZDMKQXV0aG9yOiBNaWNoYWwgUHJpdm96bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgpE
YXRlOiAgIEZyaSBKdW4gMjggMTA6MzM6MDkgMjAxOSArMDIwMAoKICAgIHZpck5ldERldk9wZW52
c3dpdGNoSW50ZXJmYWNlU3RhdHM6IE9wdGltaXplIGZvciBzcGVlZAogICAgCiAgICBXZSBydW4g
J292cy12c2N0bCcgbmluZSB0aW1lcyAoZmlyc3QgdG8gZmluZCBpZiBpbnRlcmZhY2UgaXMKICAg
IHRoZXJlIGFuZCB0aGVuIGVpZ2h0IHRpbWVzID0gZm9yIGVhY2ggc3RhdHMgbWVtYmVyIHNlcGFy
YXRlbHkpLgogICAgVGhpcyBpcyB2ZXJ5IGluZWZmaWNpZW50LiBJJ3ZlIGZvdW5kIGEgd2F5IHRv
IHJ1biBpdCBvbmNlIGFuZAogICAgd2l0aCBhIGJpdCBvZiBoZWxwIGZyb20gdmlySlNPTiBtb2R1
bGUgd2UgY2FuIHBhcnNlIG91dCBzdGF0cwogICAgd2UgbmVlZC4KICAgIAogICAgU2lnbmVkLW9m
Zi1ieTogTWljaGFsIFByaXZvem5payA8bXByaXZvem5AcmVkaGF0LmNvbT4KICAgIFJldmlld2Vk
LWJ5OiBKw6FuIFRvbWtvIDxqdG9ta29AcmVkaGF0LmNvbT4KCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRl
dmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFp
bG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

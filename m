Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 5951E17BCF6
	for <lists+xen-devel@lfdr.de>; Fri,  6 Mar 2020 13:40:57 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jACEk-0005k5-78; Fri, 06 Mar 2020 12:37:54 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=FbB0=4X=redhat.com=eblake@srs-us1.protection.inumbo.net>)
 id 1jACEi-0005jp-G8
 for xen-devel@lists.xenproject.org; Fri, 06 Mar 2020 12:37:52 +0000
X-Inumbo-ID: 4ad86a8e-5fa7-11ea-a7c0-12813bfff9fa
Received: from us-smtp-delivery-1.mimecast.com (unknown [207.211.31.81])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTP
 id 4ad86a8e-5fa7-11ea-a7c0-12813bfff9fa;
 Fri, 06 Mar 2020 12:37:50 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1583498270;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=HRc3/wEVrnsWDXDZIirGQ2jp4V7h8oBZ/PL8yoD87go=;
 b=BEc/0y5sCc0UdNeqK6livH/Am0oZoS8jrA/Y8ERSFdnxM9rRTjZG3mXxiav07yDfR3NpWx
 eb+nNrS1pa3KqPYPuSr/RumBj8AfootxgaywQT/a8C8/h58NdhIgwq9W/g3FF1mHilng6R
 VV4DOCWZ4JwuB/5mZHN5nym2PtMP/p4=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-367-_7d95CvdPGucnJ9ZXcs6sA-1; Fri, 06 Mar 2020 07:37:46 -0500
X-MC-Unique: _7d95CvdPGucnJ9ZXcs6sA-1
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
 [10.5.11.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 0471C800D50;
 Fri,  6 Mar 2020 12:37:45 +0000 (UTC)
Received: from [10.3.117.177] (ovpn-117-177.phx2.redhat.com [10.3.117.177])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id 8BAC760BEC;
 Fri,  6 Mar 2020 12:37:38 +0000 (UTC)
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
 qemu-devel@nongnu.org
References: <20200306051536.27803-1-vsementsov@virtuozzo.com>
 <20200306051536.27803-2-vsementsov@virtuozzo.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <41229b66-eedb-1c30-4849-a8076080117e@redhat.com>
Date: Fri, 6 Mar 2020 06:37:37 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.5.0
MIME-Version: 1.0
In-Reply-To: <20200306051536.27803-2-vsementsov@virtuozzo.com>
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Subject: Re: [Xen-devel] [PATCH v8 01/10] error: auto propagated local_err
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Stefano Stabellini <sstabellini@kernel.org>,
 Michael Roth <mdroth@linux.vnet.ibm.com>, qemu-block@nongnu.org,
 Paul Durrant <paul@xen.org>, Laszlo Ersek <lersek@redhat.com>,
 Christian Schoenebeck <qemu_oss@crudebyte.com>, Greg Kurz <groug@kaod.org>,
 armbru@redhat.com, Gerd Hoffmann <kraxel@redhat.com>,
 Stefan Hajnoczi <stefanha@redhat.com>,
 Anthony Perard <anthony.perard@citrix.com>, xen-devel@lists.xenproject.org,
 Max Reitz <mreitz@redhat.com>,
 =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>,
 Stefan Berger <stefanb@linux.ibm.com>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

T24gMy81LzIwIDExOjE1IFBNLCBWbGFkaW1pciBTZW1lbnRzb3YtT2dpZXZza2l5IHdyb3RlOgo+
IEhlcmUgaXMgaW50cm9kdWNlZCBFUlJQX0FVVE9fUFJPUEFHQVRFIG1hY3JvLCB0byBiZSB1c2Vk
IGF0IHN0YXJ0IG9mCj4gZnVuY3Rpb25zIHdpdGggYW4gZXJycCBPVVQgcGFyYW1ldGVyLgoKQXMg
YW4gYWlkIHRvIHdyaXRpbmcgaW1wZXJhdGl2ZS1zdHlsZSBjb21taXQgbWVzc2FnZXMsIEkgbGlr
ZSB0byBwcmVwZW5kIAphbiBpbXBsaWNpdCAiQXBwbHkgdGhpcyBwYXRjaCB0by4uLiIgYmVmb3Jl
IHRoZSB1c2VyJ3MgdGV4dCwgdG8gc2VlIGlmIAp0aGluZ3Mgc3RpbGwgbWFrZSBzZW5zZS4gIEJ5
IHRoYXQgY29uc3RydWN0LCB0aGlzIHBhcmFncmFwaCBtaWdodCByZWFkIApiZXR0ZXIgYXM6CgpJ
bnRyb2R1Y2UgYSBuZXcgRVJSUF9BVVRPX1BST1BBR0FURSBtYWNybywgLi4uCgo+IAo+IEl0IGhh
cyB0aHJlZSBnb2FsczoKPiAKPiAxLiBGaXggaXNzdWUgd2l0aCBlcnJvcl9mYXRhbCBhbmQgZXJy
b3JfcHJlcGVuZC9lcnJvcl9hcHBlbmRfaGludDogdXNlcgo+IGNhbid0IHNlZSB0aGlzIGFkZGl0
aW9uYWwgaW5mb3JtYXRpb24sIGJlY2F1c2UgZXhpdCgpIGhhcHBlbnMgaW4KPiBlcnJvcl9zZXRn
IGVhcmxpZXIgdGhhbiBpbmZvcm1hdGlvbiBpcyBhZGRlZC4gW1JlcG9ydGVkIGJ5IEdyZWcgS3Vy
el0KPiAKPiAyLiBGaXggaXNzdWUgd2l0aCBlcnJvcl9hYm9ydCBhbmQgZXJyb3JfcHJvcGFnYXRl
OiB3aGVuIHdlIHdyYXAKPiBlcnJvcl9hYm9ydCBieSBsb2NhbF9lcnIrZXJyb3JfcHJvcGFnYXRl
LCB0aGUgcmVzdWx0aW5nIGNvcmVkdW1wIHdpbGwKPiByZWZlciB0byBlcnJvcl9wcm9wYWdhdGUg
YW5kIG5vdCB0byB0aGUgcGxhY2Ugd2hlcmUgZXJyb3IgaGFwcGVuZWQuCj4gKHRoZSBtYWNybyBp
dHNlbGYgZG9lc24ndCBmaXggdGhlIGlzc3VlLCBidXQgaXQgYWxsb3dzIHVzIHRvIFszLl0gZHJv
cAo+IHRoZSBsb2NhbF9lcnIrZXJyb3JfcHJvcGFnYXRlIHBhdHRlcm4sIHdoaWNoIHdpbGwgZGVm
aW5pdGVseSBmaXggdGhlCj4gaXNzdWUpIFtSZXBvcnRlZCBieSBLZXZpbiBXb2xmXQo+IAo+IDMu
IERyb3AgbG9jYWxfZXJyK2Vycm9yX3Byb3BhZ2F0ZSBwYXR0ZXJuLCB3aGljaCBpcyB1c2VkIHRv
IHdvcmthcm91bmQKPiB2b2lkIGZ1bmN0aW9ucyB3aXRoIGVycnAgcGFyYW1ldGVyLCB3aGVuIGNh
bGxlciB3YW50cyB0byBrbm93IHJlc3VsdGluZwo+IHN0YXR1cy4gKE5vdGU6IGFjdHVhbGx5IHRo
ZXNlIGZ1bmN0aW9ucyBjb3VsZCBiZSBtZXJlbHkgdXBkYXRlZCB0bwo+IHJldHVybiBpbnQgZXJy
b3IgY29kZSkuCj4gCj4gVG8gYWNoaWV2ZSB0aGVzZSBnb2FscywgbGF0ZXIgcGF0Y2hlcyB3aWxs
IGFkZCBpbnZvY2F0aW9ucwo+IG9mIHRoaXMgbWFjcm8gYXQgdGhlIHN0YXJ0IG9mIGZ1bmN0aW9u
cyB3aXRoIGVpdGhlciB1c2UKPiBlcnJvcl9wcmVwZW5kL2Vycm9yX2FwcGVuZF9oaW50IChzb2x2
aW5nIDEpIG9yIHdoaWNoIHVzZQo+IGxvY2FsX2VycitlcnJvcl9wcm9wYWdhdGUgdG8gY2hlY2sg
ZXJyb3JzLCBzd2l0Y2hpbmcgdGhvc2UKPiBmdW5jdGlvbnMgdG8gdXNlICplcnJwIGluc3RlYWQg
KHNvbHZpbmcgMiBhbmQgMykuCj4gCj4gU2lnbmVkLW9mZi1ieTogVmxhZGltaXIgU2VtZW50c292
LU9naWV2c2tpeSA8dnNlbWVudHNvdkB2aXJ0dW96em8uY29tPgo+IC0tLQoKSSBoYXZlIGxvdHMg
b2YgZ3JhbW1hciBzdWdnZXN0aW9ucyBmb3IgdGhlIGNvbW1lbnRzIChhbmQgSSBrbm93IE1hcmt1
cyAKaXMgZ2VuZXJhbGx5IG9rYXkgZG9pbmcgd29yZGluZyB0d2Vha3MsIHNvIGl0IG1heSBzdGls
bCBlbmQgdXAgZGlmZmVyZW50IAp0aGFuIG15IHN1Z2dlc3Rpb25zKToKCj4gKysrIGIvaW5jbHVk
ZS9xYXBpL2Vycm9yLmgKPiBAQCAtMTUsNiArMTUsOCBAQAo+ICAgLyoKPiAgICAqIEVycm9yIHJl
cG9ydGluZyBzeXN0ZW0gbG9vc2VseSBwYXR0ZXJuZWQgYWZ0ZXIgR2xpYidzIEdFcnJvci4KPiAg
ICAqCj4gKyAqID0gRGVhbCB3aXRoIEVycm9yIG9iamVjdCA9Cj4gKyAqCj4gICAgKiBDcmVhdGUg
YW4gZXJyb3I6Cj4gICAgKiAgICAgZXJyb3Jfc2V0ZygmZXJyLCAic2l0dWF0aW9uIG5vcm1hbCwg
YWxsIGZvdWxlZCB1cCIpOwo+ICAgICoKPiBAQCAtNDcsMjggKzQ5LDg4IEBACj4gICAgKiByZXBv
cnRpbmcgaXQgKHByaW1hcmlseSB1c2VmdWwgaW4gdGVzdHN1aXRlcyk6Cj4gICAgKiAgICAgZXJy
b3JfZnJlZV9vcl9hYm9ydCgmZXJyKTsKPiAgICAqCj4gLSAqIFBhc3MgYW4gZXhpc3RpbmcgZXJy
b3IgdG8gdGhlIGNhbGxlcjoKPiAtICogICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBlcnIpOwo+
IC0gKiB3aGVyZSBFcnJvciAqKmVycnAgaXMgYSBwYXJhbWV0ZXIsIGJ5IGNvbnZlbnRpb24gdGhl
IGxhc3Qgb25lLgo+ICsgKiA9IERlYWwgd2l0aCBFcnJvciAqKiBmdW5jdGlvbiBwYXJhbWV0ZXIg
PQo+ICAgICoKPiAtICogUGFzcyBhbiBleGlzdGluZyBlcnJvciB0byB0aGUgY2FsbGVyIHdpdGgg
dGhlIG1lc3NhZ2UgbW9kaWZpZWQ6Cj4gLSAqICAgICBlcnJvcl9wcm9wYWdhdGVfcHJlcGVuZChl
cnJwLCBlcnIpOwo+ICsgKiBGdW5jdGlvbiBtYXkgdXNlIGVycm9yIHN5c3RlbSB0byByZXR1cm4g
ZXJyb3JzLiBJbiB0aGlzIGNhc2UgZnVuY3Rpb24KPiArICogZGVmaW5lcyBFcnJvciAqKmVycnAg
cGFyYW1ldGVyLCB3aGljaCBzaG91bGQgYmUgdGhlIGxhc3Qgb25lIChleGNlcHQgZm9yCj4gKyAq
IGZ1bmN0aW9ucyB3aGljaCB2YXJpZGljIGFyZ3VtZW50IGxpc3QpLCB3aGljaCBoYXMgdGhlIGZv
bGxvd2luZyBBUEk6CgpBIGZ1bmN0aW9uIG1heSB1c2UgdGhlIGVycm9yIHN5c3RlbSB0byByZXR1
cm4gZXJyb3JzLiAgSW4gdGhpcyBjYXNlLCB0aGUgCmZ1bmN0aW9uIGRlZmluZXMgYW4gRXJyb3Ig
KiplcnJwIHBhcmFtZXRlciwgYnkgY29udmVudGlvbiB0aGUgbGFzdCBvbmUgCih3aXRoIGV4Y2Vw
dGlvbnMgZm9yIGZ1bmN0aW9ucyB1c2luZyAuLi4gb3IgdmFfbGlzdCkuCgo+ICAgICoKPiAtICog
QXZvaWQKPiAtICogICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBlcnIpOwo+IC0gKiAgICAgZXJy
b3JfcHJlcGVuZChlcnJwLCAiQ291bGQgbm90IGZyb2JuaWNhdGUgJyVzJzogIiwgbmFtZSk7Cj4g
LSAqIGJlY2F1c2UgdGhpcyBmYWlscyB0byBwcmVwZW5kIHdoZW4gQGVycnAgaXMgJmVycm9yX2Zh
dGFsLgo+ICsgKiBDYWxsZXIgbWF5IHBhc3MgYXMgZXJycDoKClRoZSBjYWxsZXIgbWF5IHRoZW4g
cGFzcyBpbiB0aGUgZm9sbG93aW5nIGVycnAgdmFsdWVzOgoKPiArICogMS4gJmVycm9yX2Fib3J0
Cj4gKyAqICAgIFRoaXMgbWVhbnMgYWJvcnQgb24gYW55IGVycm9yCgpBbnkgZXJyb3Igd2lsbCBy
ZXN1bHQgaW4gYWJvcnQoKQoKPiArICogMi4gJmVycm9yX2ZhdGFsCj4gKyAqICAgIEV4aXQgd2l0
aCBub24temVybyByZXR1cm4gY29kZSBvbiBlcnJvcgoKQW55IGVycm9yIHdpbGwgcmVzdWx0IGlu
IGV4aXQoKSB3aXRoIGEgbm9uLXplcm8gc3RhdHVzCgo+ICsgKiAzLiBOVUxMCj4gKyAqICAgIEln
bm9yZSBlcnJvcnMKCkFueSBlcnJvciB3aWxsIGJlIGlnbm9yZWQKCj4gKyAqIDQuIEFub3RoZXIg
dmFsdWUKCjQuIFRoZSBhZGRyZXNzIG9mIGEgTlVMTC1pbml0aWFsaXplZCBFcnJvciAqZXJyCgo+
ICsgKiAgICBPbiBlcnJvciBhbGxvY2F0ZSBlcnJvciBvYmplY3QgYW5kIHNldCBlcnJwCgpBbnkg
ZXJyb3Igd2lsbCBwb3B1bGF0ZSBlcnJwIHdpdGggYW4gZXJyb3Igb2JqZWN0Cgo+ICAgICoKPiAt
ICogQ3JlYXRlIGEgbmV3IGVycm9yIGFuZCBwYXNzIGl0IHRvIHRoZSBjYWxsZXI6Cj4gLSAqICAg
ICBlcnJvcl9zZXRnKGVycnAsICJzaXR1YXRpb24gbm9ybWFsLCBhbGwgZm91bGVkIHVwIik7Cj4g
KyAqIEVycm9yIEFQSSBmdW5jdGlvbnMgd2l0aCBFcnJvciAqKiAobGlrZSBlcnJvcl9zZXRnKSBh
cmd1bWVudCBzdXBwb3J0cyB0aGVzZQo+ICsgKiBydWxlcywgc28gdXNlciBmdW5jdGlvbnMganVz
dCBuZWVkIHRvIHVzZSB0aGVtIGFwcHJvcHJpYXRlbHkgKHJlYWQgYmVsb3cpLgoKVGhlIGZvbGxv
d2luZyBydWxlcyB0aGVuIGltcGxlbWVudCB0aGUgY29ycmVjdCBzZW1hbnRpY3MgZGVzaXJlZCBi
eSB0aGUgCmNhbGxlci4KCj4gICAgKgo+IC0gKiBDYWxsIGEgZnVuY3Rpb24gYW5kIHJlY2VpdmUg
YW4gZXJyb3IgZnJvbSBpdDoKPiArICogU2ltcGxlIHBhc3MgZXJyb3IgdG8gdGhlIGNhbGxlcjoK
CkNyZWF0ZSBhIG5ldyBlcnJvciB0byBwYXNzIHRvIHRoZSBjYWxsZXI6Cgo+ICsgKiAgICAgZXJy
b3Jfc2V0ZyhlcnJwLCAiU29tZSBlcnJvciIpOwoKWW91IGxvc3QgdGhlIGZ1biB3b3JkaW5nIGlu
IE1hcmt1cycgZWFybGllciBleGFtcGxlICgic2l0dWF0aW9uIG5vcm1hbCwgCmFsbCBmb3VsZWQg
dXAiKS4KCj4gKyAqCj4gKyAqIFN1YmNhbGwgb2YgYW5vdGhlciBlcnJwLWJhc2VkIGZ1bmN0aW9u
LCBwYXNzaW5nIHRoZSBlcnJvciB0byB0aGUgY2FsbGVyCj4gKyAqICAgICBmKC4uLiwgZXJycCk7
CgpDYWxsaW5nIGFub3RoZXIgZXJycC1iYXNlZCBmdW5jdGlvbjoKCj4gKyAqCj4gKyAqID09IENo
ZWNraW5nIHN1Y2Nlc3Mgb2Ygc3ViY2FsbCA9PQo+ICsgKgo+ICsgKiBJZiBmdW5jdGlvbiByZXR1
cm5zIGVycm9yIGNvZGUgaW4gYWRkaXRpb24gdG8gZXJycCAod2hpY2ggaXMgcmVjb21tZW5kZWQp
LAoKSWYgYSBmdW5jdGlvbiByZXR1cm5zIGEgdmFsdWUgaW5kaWNhdGluZyBhbiBlcnJvciBpbiBh
ZGRpdGlvbiB0byBzZXR0aW5nIAplcnJwICh3aGljaCBpcyByZWNvbW1lbmRlZCksIHRoZW4KCj4g
KyAqIHlvdSBkb24ndCBuZWVkIGFueSBhZGRpdGlvbmFsIGNvZGUsIGp1c3QgZG86Cj4gKyAqICAg
ICBpbnQgcmV0ID0gZiguLi4sIGVycnApOwo+ICsgKiAgICAgaWYgKHJldCA8IDApIHsKPiArICog
ICAgICAgICAuLi4gaGFuZGxlIGVycm9yIC4uLgo+ICsgKiAgICAgICAgIHJldHVybiByZXQ7Cj4g
KyAqICAgICB9Cj4gKyAqCj4gKyAqIElmIGZ1bmN0aW9uIHJldHVybnMgbm90aGluZyAod2hpY2gg
aXMgbm90IHJlY29tbWVuZGVkIEFQSSkgYW5kIHRoZSBvbmx5IHdheQo+ICsgKiB0byBjaGVjayBz
dWNjZXNzIGlzIGNoZWNraW5nIGVycnAsIHdlIG11c3QgY2FyZSBhYm91dCBjYXNlcyBbMS0zXSBh
Ym92ZS4gV2UKPiArICogbmVlZCB0byB1c2UgbWFjcm8gRVJSUF9BVVRPX1BST1BBR0FURSAoc2Vl
IGJlbG93IGZvciBkZXRhaWxzKSBsaWtlIHRoaXM6CgpJZiBhIGZ1bmN0aW9uIHJldHVybnMgbm90
aGluZyAobm90IHJlY29tbWVuZGVkIGZvciBuZXcgY29kZSksIHRoZSBvbmx5IAp3YXkgdG8gY2hl
Y2sgc3VjY2VzcyBpcyBieSBjb25zdWx0aW5nIGVycnA7IGRvaW5nIHRoaXMgc2FmZWx5IHJlcXVp
cmVzIAp0aGUgdXNlIG9mIHRoZSBFUlJQX0FVVE9fUFJPUEFHQVRFIG1hY3JvLCBsaWtlIHRoaXM6
CgoKPiArICoKPiArICogICAgIGludCBvdXJfZnVuYyguLi4sIEVycm9yICoqZXJycCkgewo+ICsg
KiAgICAgICAgIEVSUlBfQVVUT19QUk9QQUdBVEUoKTsKPiArICogICAgICAgICAuLi4KPiArICog
ICAgICAgICBzdWJjYWxsKC4uLiwgZXJycCk7Cj4gKyAqICAgICAgICAgaWYgKCplcnJwKSB7Cj4g
KyAqICAgICAgICAgICAgIC4uLgo+ICsgKiAgICAgICAgICAgICByZXR1cm4gLUVSUk5POwoKZG8g
d2Ugd2FudCBFUlJOTyBjYXBpdGFsaXplZCBoZXJlPwoKPiArICogICAgICAgICB9Cj4gKyAqICAg
ICAgICAgLi4uCj4gKyAqICAgICB9Cj4gKyAqCj4gKyAqIEVSUlBfQVVUT19QUk9QQUdBVEUgY2Fy
ZXMgYWJvdXQgRXJyb3IgKiogQVBJLCB3cmFwcyBvcmlnaW5hbCBlcnJwIGlmIG5lZWRlZCwKPiAr
ICogc28gdGhhdCBpdCBjYW4gYmUgc2FmZWx5IHVzZWQgKGluY2x1ZGluZyBkZXJlZmVyZW5jaW5n
KSwgYW5kIGF1dG8tcHJvcGFnYXRlcwo+ICsgKiBlcnJvciB0byBvcmlnaW5hbCBlcnJwIG9uIGZ1
bmN0aW9uIGVuZC4KCkVSUlBfQVVUT19QUk9QQUdBVEUgdGFrZXMgY2FyZSBvZiB3cmFwcGluZyB0
aGUgb3JpZ2luYWwgZXJycCBhcyBuZWVkZWQsIApzbyB0aGF0IHRoZSByZXN0IG9mIHRoZSBmdW5j
dGlvbiBjYW4gZGlyZWN0bHkgdXNlIGVycnAgKGluY2x1ZGluZyAKZGVyZWZlcmVuY2luZyksIHdo
ZXJlIGFueSBlcnJvcnMgd2lsbCB0aGVuIGJlIHByb3BhZ2F0ZWQgb24gdG8gdGhlIApvcmlnaW5h
bCBlcnJwIHdoZW4gbGVhdmluZyB0aGUgZnVuY3Rpb24uCgo+ICsgKgo+ICsgKiBJbiBzb21lIGNh
c2VzLCB3ZSBuZWVkIHRvIGNoZWNrIHJlc3VsdCBvZiBzdWJjYWxsLCBidXQgZG8gbm90IHdhbnQg
dG8KPiArICogcHJvcGFnYXRlIHRoZSBFcnJvciBvYmplY3QgdG8gb3VyIGNhbGxlci4gSW4gc3Vj
aCBjYXNlcyB3ZSBkb24ndCBuZWVkCj4gKyAqIEVSUlBfQVVUT19QUk9QQUdBVEUsIGJ1dCBqdXN0
IGEgbG9jYWwgRXJyb3Igb2JqZWN0Ogo+ICsgKgo+ICsgKiBSZWNlaXZlIGFuIGVycm9yIGFuZCBu
b3QgcGFzcyBpdDoKPiAgICAqICAgICBFcnJvciAqZXJyID0gTlVMTDsKPiAtICogICAgIGZvbyhh
cmcsICZlcnIpOwo+ICsgKiAgICAgc3ViY2FsbChhcmcsICZlcnIpOwo+ICAgICogICAgIGlmIChl
cnIpIHsKPiAgICAqICAgICAgICAgaGFuZGxlIHRoZSBlcnJvci4uLgo+ICsgKiAgICAgICAgIGVy
cm9yX2ZyZWUoZXJyKTsKPiAgICAqICAgICB9Cj4gICAgKgo+ICsgKiBOb3RlLCB0aGF0IGJlZm9y
ZSBFUlJQX0FVVE9fUFJPUEFHQVRFIGludHJvZHVjdGlvbiB0aGUgcGF0dGVybiBhYm92ZSAod2l0
aAo+ICsgKiBlcnJvcl9wcm9wYWdhdGUoKSBpbnN0ZWFkIG9mIGVycm9yX2ZyZWUoKSkgd2FzIHVz
ZWQgdG8gY2hlY2sgYW5kIHBhc3MgZXJyb3IKPiArICogdG8gdGhlIGNhbGxlci4gTm93IHRoaXMg
aXMgREVQUkVDQVRFRCogKHNlZSBiZWxvdykuCgpIbW0gLSBpZiB3ZSBidWxrLWNvbnZlcnQgdGhl
IGVudGlyZSB0cmVlLCB0aGVuIHRoZXJlIHdvbid0IGJlIGFueSAKZGVwcmVjYXRlZCB1c2VzIHRv
IGJlIHdvcnRoIGRvY3VtZW50aW5nLiAgQnV0IGlmIHdlIGRvIGtlZXAgdGhpcyBwYXJhZ3JhcGg6
CgpOb3RlIHRoYXQgb2xkZXIgY29kZSB0aGF0IGRpZCBub3QgdXNlIEVSUlBfQVVUT19QUk9QQUdB
VEUgd291bGQgaW5zdGVhZCAKbmVlZCBhIGxvY2FsIEVyciB2YXJpYWJsZSBhbmQgdGhlIHVzZSBv
ZiBlcnJvcl9wcm9wYWdhdGUoKSB0byBwcm9wZXJseSAKaGFuZGxlIGFsbCBwb3NzaWJsZSBjYWxs
ZXIgdmFsdWVzIG9mIGVycnAuCgo+ICsgKgo+ICsgKiBOb3RlIGFsc28sIHRoYXQgaWYgeW91IHdh
bnQgdG8gdXNlIGVycm9yX2FwcGVuZF9oaW50L2Vycm9yX3ByZXBlbmQgb3IgdGhlaXIKPiArICog
dmFyaWFudHMsIHlvdSBtdXN0IHVzZSBFUlJQX0FVVE9fUFJPUEFHQVRFIHRvby4gT3RoZXJ3aXNl
LCBpbiBjYXNlIG9mCj4gKyAqIGVycm9yX2ZhdGFsLCB5b3UnbGwgbWlzcyB0aGUgY2hhbmNlIHRv
IGluc2VydCB5b3VyIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KPiArICogaW50byBFcnJvciBvYmpl
Y3QuCgpOb3RlIHRoYXQgYW55IGZ1bmN0aW9uIHRoYXQgd2FudHMgdG8gbW9kaWZ5IGFuIGVycm9y
IG9iamVjdCwgc3VjaCBhcyBieSAKY2FsbGluZyBlcnJvcl9hcHBlbmRfaGludCBvciBlcnJvcl9w
cmVwZW5kLCBtdXN0IHVzZSAKRVJSUF9BVVRPX1BST1BBR0FURSwgaW4gb3JkZXIgZm9yIGEgY2Fs
bGVyJ3MgdXNlIG9mICZlcnJvcl9mYXRhbCB0byBzZWUgCnRoZSBhZGRpdGlvbmFsIGluZm9ybWF0
aW9uLgoKPiArICoKPiArICogSW4gcmFyZSBjYXNlcywgd2UgbmVlZCB0byBwYXNzIGV4aXN0aW5n
IEVycm9yIG9iamVjdCB0byB0aGUgY2FsbGVyIGJ5IGhhbmQ6Cj4gKyAqICAgICBlcnJvcl9wcm9w
YWdhdGUoZXJycCwgZXJyKTsKPiArICoKPiArICogUGFzcyBhbiBleGlzdGluZyBlcnJvciB0byB0
aGUgY2FsbGVyIHdpdGggdGhlIG1lc3NhZ2UgbW9kaWZpZWQ6Cj4gKyAqICAgICBlcnJvcl9wcm9w
YWdhdGVfcHJlcGVuZChlcnJwLCBlcnIpOwo+ICsgKgo+ICsgKgo+ICAgICogQ2FsbCBhIGZ1bmN0
aW9uIGlnbm9yaW5nIGVycm9yczoKPiAgICAqICAgICBmb28oYXJnLCBOVUxMKTsKPiAgICAqCj4g
QEAgLTc4LDI2ICsxNDAsNiBAQAo+ICAgICogQ2FsbCBhIGZ1bmN0aW9uIHRyZWF0aW5nIGVycm9y
cyBhcyBmYXRhbDoKPiAgICAqICAgICBmb28oYXJnLCAmZXJyb3JfZmF0YWwpOwo+ICAgICoKPiAt
ICogUmVjZWl2ZSBhbiBlcnJvciBhbmQgcGFzcyBpdCBvbiB0byB0aGUgY2FsbGVyOgo+IC0gKiAg
ICAgRXJyb3IgKmVyciA9IE5VTEw7Cj4gLSAqICAgICBmb28oYXJnLCAmZXJyKTsKPiAtICogICAg
IGlmIChlcnIpIHsKPiAtICogICAgICAgICBoYW5kbGUgdGhlIGVycm9yLi4uCj4gLSAqICAgICAg
ICAgZXJyb3JfcHJvcGFnYXRlKGVycnAsIGVycik7Cj4gLSAqICAgICB9Cj4gLSAqIHdoZXJlIEVy
cm9yICoqZXJycCBpcyBhIHBhcmFtZXRlciwgYnkgY29udmVudGlvbiB0aGUgbGFzdCBvbmUuCj4g
LSAqCj4gLSAqIERvICpub3QqICJvcHRpbWl6ZSIgdGhpcyB0bwo+IC0gKiAgICAgZm9vKGFyZywg
ZXJycCk7Cj4gLSAqICAgICBpZiAoKmVycnApIHsgLy8gV1JPTkchCj4gLSAqICAgICAgICAgaGFu
ZGxlIHRoZSBlcnJvci4uLgo+IC0gKiAgICAgfQo+IC0gKiBiZWNhdXNlIGVycnAgbWF5IGJlIE5V
TEwhCj4gLSAqCj4gLSAqIEJ1dCB3aGVuIGFsbCB5b3UgZG8gd2l0aCB0aGUgZXJyb3IgaXMgcGFz
cyBpdCBvbiwgcGxlYXNlIHVzZQo+IC0gKiAgICAgZm9vKGFyZywgZXJycCk7Cj4gLSAqIGZvciBy
ZWFkYWJpbGl0eS4KPiAtICoKPiAgICAqIFJlY2VpdmUgYW5kIGFjY3VtdWxhdGUgbXVsdGlwbGUg
ZXJyb3JzIChmaXJzdCBvbmUgd2lucyk6Cj4gICAgKiAgICAgRXJyb3IgKmVyciA9IE5VTEwsICps
b2NhbF9lcnIgPSBOVUxMOwo+ICAgICogICAgIGZvbyhhcmcsICZlcnIpOwo+IEBAIC0xMTQsNiAr
MTU2LDYxIEBACj4gICAgKiAgICAgICAgIGhhbmRsZSB0aGUgZXJyb3IuLi4KPiAgICAqICAgICB9
Cj4gICAgKiBiZWNhdXNlIHRoaXMgbWF5IHBhc3MgYSBub24tbnVsbCBlcnIgdG8gYmFyKCkuCj4g
KyAqCj4gKyAqIERFUFJFQ0FURUQqCj4gKyAqCgpBZ2FpbiwgSSdtIG5vdCBzdXJlIHdlIG5lZWQg
dGhpcyBzZWN0aW9uIGluIHRoZSBjb2RlYmFzZSBpZiB3ZSBkbyBhIGJ1bGsgCmNvbnZlcnNpb24u
ICBCdXQgbW92aW5nIGl0IHRvIHRoZSBjb21taXQgbWVzc2FnZSBpcyBzdGlsbCB1c2VmdWwuCgo+
ICsgKiBUaGUgZm9sbG93aW5nIHBhdHRlcm4gb2YgcmVjZWl2aW5nIGNoZWNraW5nIGFuZCBwYXNz
aW5nIHRoZSBjYWxsZXIgb2YgdGhlCj4gKyAqIGVycm9yIGJ5IGhhbmQgaXMgZGVwcmVjYXRlZCBu
b3c6CgpUaGUgZm9sbG93aW5nIHBhdHRlcm4gb2YgcmVjZWl2aW5nLCBjaGVja2luZywgYW5kIHRo
ZW4gZm9yd2FyZGluZyBhbiAKZXJyb3IgdG8gdGhlIGNhbGxlciBieSBoYW5kIGlzIG5vdyBkZXBy
ZWNhdGVkOgoKPiArICoKPiArICogICAgIEVycm9yICplcnIgPSBOVUxMOwo+ICsgKiAgICAgZm9v
KGFyZywgJmVycik7Cj4gKyAqICAgICBpZiAoZXJyKSB7Cj4gKyAqICAgICAgICAgaGFuZGxlIHRo
ZSBlcnJvci4uLgo+ICsgKiAgICAgICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBlcnIpOwo+ICsg
KiAgICAgfQo+ICsgKgo+ICsgKiBJbnN0ZWFkLCB1c2UgRVJSUF9BVVRPX1BST1BBR0FURSBtYWNy
byAoZGVmaW5lZCBiZWxvdykuCgpEcm9wICIoZGVmaW5lZCBiZWxvdykiLgoKPiArICoKPiArICog
VGhlIG9sZCBwYXR0ZXJuIGlzIGRlcHJlY2F0ZWQgYmVjYXVzZSBvZiB0d28gdGhpbmdzOgo+ICsg
Kgo+ICsgKiAxLiBJc3N1ZSB3aXRoIGVycm9yX2Fib3J0IGFuZCBlcnJvcl9wcm9wYWdhdGU6IHdo
ZW4gd2Ugd3JhcCBlcnJvcl9hYm9ydCBieQo+ICsgKiBsb2NhbF9lcnIrZXJyb3JfcHJvcGFnYXRl
LCB0aGUgcmVzdWx0aW5nIGNvcmVkdW1wIHdpbGwgcmVmZXIgdG8KPiArICogZXJyb3JfcHJvcGFn
YXRlIGFuZCBub3QgdG8gdGhlIHBsYWNlIHdoZXJlIGVycm9yIGhhcHBlbmVkLgo+ICsgKgo+ICsg
KiAyLiBBIGxvdCBvZiBleHRyYSBjb2RlIG9mIHRoZSBzYW1lIHBhdHRlcm4KPiArICoKPiArICog
SG93IHRvIHVwZGF0ZSBvbGQgY29kZSB0byB1c2UgRVJSUF9BVVRPX1BST1BBR0FURT8KPiArICoK
PiArICogQWxsIHlvdSBuZWVkIGlzIHRvIGFkZCBFUlJQX0FVVE9fUFJPUEFHQVRFKCkgaW52b2Nh
dGlvbiBhdCBmdW5jdGlvbiBzdGFydCwKPiArICogdGhhbiB5b3UgbWF5IHNhZmVseSBkZXJlZmVy
ZW5jZSBlcnJwIHRvIGNoZWNrIGVycm9ycyBhbmQgZG8gbm90IG5lZWQgYW55Cj4gKyAqIGFkZGl0
aW9uYWwgbG9jYWwgRXJyb3IgdmFyaWFibGVzIG9yIGNhbGxzIHRvIGVycm9yX3Byb3BhZ2F0ZSgp
Lgo+ICsgKgo+ICsgKiBFeGFtcGxlOgo+ICsgKgo+ICsgKiBvbGQgY29kZQo+ICsgKgo+ICsgKiAg
ICAgdm9pZCBmbiguLi4sIEVycm9yICoqZXJycCkgewo+ICsgKiAgICAgICAgIEVycm9yICplcnIg
PSBOVUxMOwo+ICsgKiAgICAgICAgIGZvbyhhcmcsICZlcnIpOwo+ICsgKiAgICAgICAgIGlmIChl
cnIpIHsKPiArICogICAgICAgICAgICAgaGFuZGxlIHRoZSBlcnJvci4uLgo+ICsgKiAgICAgICAg
ICAgICBlcnJvcl9wcm9wYWdhdGUoZXJycCwgZXJyKTsKPiArICogICAgICAgICAgICAgcmV0dXJu
Owo+ICsgKiAgICAgICAgIH0KPiArICogICAgICAgICAuLi4KPiArICogICAgIH0KPiArICoKPiAr
ICogdXBkYXRlZCBjb2RlCj4gKyAqCj4gKyAqICAgICB2b2lkIGZuKC4uLiwgRXJyb3IgKiplcnJw
KSB7Cj4gKyAqICAgICAgICAgRVJSUF9BVVRPX1BST1BBR0FURSgpOwo+ICsgKiAgICAgICAgIGZv
byhhcmcsIGVycnApOwo+ICsgKiAgICAgICAgIGlmICgqZXJycCkgewo+ICsgKiAgICAgICAgICAg
ICBoYW5kbGUgdGhlIGVycm9yLi4uCj4gKyAqICAgICAgICAgICAgIHJldHVybjsKPiArICogICAg
ICAgICB9Cj4gKyAqICAgICAgICAgLi4uCj4gKyAqICAgICB9CgpBZ2FpbiwgSSdtIHRoaW5raW5n
IHRoZSBhYm92ZSBleGFtcGxlIGlzIG1vcmUgdXNlZnVsIGluIHRoZSBjb21taXQgCm1lc3NhZ2Ug
aW5zdGVhZCBvZiBwZXJtYW5lbnRseSBpbiB0aGUgLmggZmlsZS4KCj4gICAgKi8KPiAgIAo+ICAg
I2lmbmRlZiBFUlJPUl9ICj4gQEAgLTMyMiw2ICs0MTksNDYgQEAgdm9pZCBlcnJvcl9zZXRfaW50
ZXJuYWwoRXJyb3IgKiplcnJwLAo+ICAgICAgICAgICAgICAgICAgICAgICAgICAgRXJyb3JDbGFz
cyBlcnJfY2xhc3MsIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQo+ICAgICAgIEdDQ19GTVRfQVRUUig2
LCA3KTsKPiAgIAo+ICt0eXBlZGVmIHN0cnVjdCBFcnJvclByb3BhZ2F0b3Igewo+ICsgICAgRXJy
b3IgKmxvY2FsX2VycjsKPiArICAgIEVycm9yICoqZXJycDsKPiArfSBFcnJvclByb3BhZ2F0b3I7
Cj4gKwo+ICtzdGF0aWMgaW5saW5lIHZvaWQgZXJyb3JfcHJvcGFnYXRvcl9jbGVhbnVwKEVycm9y
UHJvcGFnYXRvciAqcHJvcCkKPiArewo+ICsgICAgZXJyb3JfcHJvcGFnYXRlKHByb3AtPmVycnAs
IHByb3AtPmxvY2FsX2Vycik7Cj4gK30KPiArCj4gK0dfREVGSU5FX0FVVE9fQ0xFQU5VUF9DTEVB
Ul9GVU5DKEVycm9yUHJvcGFnYXRvciwgZXJyb3JfcHJvcGFnYXRvcl9jbGVhbnVwKTsKPiArCj4g
Ky8qCj4gKyAqIEVSUlBfQVVUT19QUk9QQUdBVEUKPiArICoKPiArICogVGhpcyBtYWNybyBpcyBj
cmVhdGVkIHRvIGJlIHRoZSBmaXJzdCBsaW5lIG9mIGEgZnVuY3Rpb24gd2hpY2ggdXNlCj4gKyAq
IEVycm9yICoqZXJycCBwYXJhbWV0ZXIgdG8gcmVwb3J0IGVycm9yLiBJdCdzIG5lZWRlZCBvbmx5
IGluIGNhc2VzIHdoZXJlIHdlCj4gKyAqIHdhbnQgdG8gdXNlIGVycm9yX3ByZXBlbmQsIGVycm9y
X2FwcGVuZF9oaW50IG9yIGRlcmVmZXJlbmNlICplcnJwLiBJdCdzCj4gKyAqIHN0aWxsIHNhZmUg
KGJ1dCB1c2VsZXNzKSBpbiBvdGhlciBjYXNlcy4KClRoaXMgbWFjcm8gZXhpc3RzIHRvIGFzc2lz
dCB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZyBpbiBhIGZ1bmN0aW9uIAp3aGljaCB1c2VzIGFu
IEVycm9yICoqZXJycCBwYXJhbWV0ZXIuICBJdCBtdXN0IGJlIHVzZWQgYXMgdGhlIGZpcnN0IGxp
bmUgCm9mIGEgZnVuY3Rpb24gd2hpY2ggbW9kaWZpZXMgYW4gZXJyb3IgKHdpdGggZXJyb3JfcHJl
cGVuZCwgCmVycm9yX2FwcGVuZF9oaW50LCBvciBzaW1pbGFyKSBvciB3aGljaCB3YW50cyB0byBk
ZXJlZmVyZW5jZSAqZXJycC4gIEl0IAppcyBzdGlsbCBzYWZlIChidXQgdXNlbGVzcykgdG8gdXNl
IGluIG90aGVyIGZ1bmN0aW9ucy4KCj4gKyAqCj4gKyAqIElmIGVycnAgaXMgTlVMTCBvciBwb2lu
dHMgdG8gZXJyb3JfZmF0YWwsIGl0IGlzIHJld3JpdHRlbiB0byBwb2ludCB0byBhCj4gKyAqIGxv
Y2FsIEVycm9yIG9iamVjdCwgd2hpY2ggd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHByb3BhZ2F0ZWQg
dG8gdGhlIG9yaWdpbmFsCj4gKyAqIGVycnAgb24gZnVuY3Rpb24gZXhpdCAoc2VlIGVycm9yX3By
b3BhZ2F0b3JfY2xlYW51cCkuCj4gKyAqCj4gKyAqIEFmdGVyIGludm9jYXRpb24gb2YgdGhpcyBt
YWNybyBpdCBpcyBhbHdheXMgc2FmZSB0byBkZXJlZmVyZW5jZSBlcnJwCj4gKyAqIChhcyBpdCdz
IG5vdCBOVUxMIGFueW1vcmUpIGFuZCB0byBhZGQgaW5mb3JtYXRpb24gYnkgZXJyb3JfcHJlcGVu
ZCBvcgo+ICsgKiBlcnJvcl9hcHBlbmRfaGludCAoYXMsIGlmIGl0IHdhcyBlcnJvcl9mYXRhbCwg
d2Ugc3dhcHBlZCBpdCB3aXRoIGEKPiArICogbG9jYWxfZXJyb3IgdG8gYmUgcHJvcGFnYXRlZCBv
biBjbGVhbnVwKS4KPiArICoKPiArICogTm90ZTogd2UgZG9uJ3Qgd3JhcCB0aGUgZXJyb3JfYWJv
cnQgY2FzZSwgYXMgd2Ugd2FudCByZXN1bHRpbmcgY29yZWR1bXAKPiArICogdG8gcG9pbnQgdG8g
dGhlIHBsYWNlIHdoZXJlIHRoZSBlcnJvciBoYXBwZW5lZCwgbm90IHRvIGVycm9yX3Byb3BhZ2F0
ZS4KPiArICovCj4gKyNkZWZpbmUgRVJSUF9BVVRPX1BST1BBR0FURSgpIFwKPiArICAgIGdfYXV0
byhFcnJvclByb3BhZ2F0b3IpIF9hdXRvX2VycnBfcHJvcCA9IHsuZXJycCA9IGVycnB9OyBcCj4g
KyAgICBkbyB7IFwKPiArICAgICAgICBpZiAoIWVycnAgfHwgZXJycCA9PSAmZXJyb3JfZmF0YWwp
IHsgXAo+ICsgICAgICAgICAgICBlcnJwID0gJl9hdXRvX2VycnBfcHJvcC5sb2NhbF9lcnI7IFwK
PiArICAgICAgICB9IFwKPiArICAgIH0gd2hpbGUgKDApCj4gKwo+ICAgLyoKPiAgICAqIFNwZWNp
YWwgZXJyb3IgZGVzdGluYXRpb24gdG8gYWJvcnQgb24gZXJyb3IuCj4gICAgKiBTZWUgZXJyb3Jf
c2V0ZygpIGFuZCBlcnJvcl9wcm9wYWdhdGUoKSBmb3IgZGV0YWlscy4KPiAKClRoZSBtYWNybyBp
dHNlbGYgbG9va3MgY29ycmVjdC4gSSdsbCBsZWF2ZSBpdCB1cCB0byBNYXJrdXMgaG93IHRvIGhh
bmRsZSAKdGhlIGNvbW1lbnQgdGV4dCwgYnV0IHlvdSBjYW4gYWRkOgoKUmV2aWV3ZWQtYnk6IEVy
aWMgQmxha2UgPGVibGFrZUByZWRoYXQuY29tPgoKCi0tIApFcmljIEJsYWtlLCBQcmluY2lwYWwg
U29mdHdhcmUgRW5naW5lZXIKUmVkIEhhdCwgSW5jLiAgICAgICAgICAgKzEtOTE5LTMwMS0zMjI2
ClZpcnR1YWxpemF0aW9uOiAgcWVtdS5vcmcgfCBsaWJ2aXJ0Lm9yZwoKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QK
WGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5v
cmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

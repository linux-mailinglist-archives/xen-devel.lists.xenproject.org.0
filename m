Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 88DDE11E3FF
	for <lists+xen-devel@lfdr.de>; Fri, 13 Dec 2019 13:57:15 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1ifkRV-0002Pk-41; Fri, 13 Dec 2019 12:53:13 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=D6vH=2D=suse.com=jbeulich@srs-us1.protection.inumbo.net>)
 id 1ifkRT-0002Pf-JR
 for xen-devel@lists.xenproject.org; Fri, 13 Dec 2019 12:53:11 +0000
X-Inumbo-ID: 83181724-1da7-11ea-8ef7-12813bfff9fa
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 83181724-1da7-11ea-8ef7-12813bfff9fa;
 Fri, 13 Dec 2019 12:53:08 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id E7682AF43;
 Fri, 13 Dec 2019 12:53:07 +0000 (UTC)
From: Jan Beulich <jbeulich@suse.com>
To: "xen-devel@lists.xenproject.org" <xen-devel@lists.xenproject.org>
Message-ID: <be16ddaa-ae99-f696-53c0-6a680ffa8504@suse.com>
Date: Fri, 13 Dec 2019 13:53:29 +0100
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.9.1
MIME-Version: 1.0
Content-Language: en-US
Subject: [Xen-devel] [PATCH v2] IOMMU: make DMA containment of quarantined
 devices optional
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, Kevin Tian <kevin.tian@intel.com>,
 Stefano Stabellini <sstabellini@kernel.org>, Julien Grall <julien@xen.org>,
 Wei Liu <wl@xen.org>, Konrad Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>, Paul Durrant <paul@xen.org>,
 Ian Jackson <ian.jackson@citrix.com>,
 =?UTF-8?Q?Roger_Pau_Monn=c3=a9?= <roger.pau@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

Q29udGFpbmluZyBzdGlsbCBpbiBmbGlnaHQgRE1BIHdhcyBpbnRyb2R1Y2VkIHRvIHdvcmsgYXJv
dW5kIGNlcnRhaW4KZGV2aWNlcyAvIHN5c3RlbXMgaGFuZ2luZyBoYXJkIHVwb24gaGl0dGluZyBh
biBJT01NVSBmYXVsdC4gUGFzc2luZwp0aHJvdWdoIChzdWNoKSBkZXZpY2VzIChvbiBzdWNoIHN5
c3RlbXMpIGlzIGluaGVyZW50bHkgaW5zZWN1cmUgKGFzCmd1ZXN0cyBjb3VsZCBlYXNpbHkgYXJy
YW5nZSBmb3IgSU9NTVUgZmF1bHRzIHRvIG9jY3VyKS4gRGVmYXVsdGluZyB0bwphIG1vZGUgd2hl
cmUgYWRtaW5zIG1heSBub3QgZXZlbiBiZWNvbWUgYXdhcmUgb2YgaXNzdWVzIHdpdGggZGV2aWNl
cyBjYW4KYmUgY29uc2lkZXJlZCB1bmRlc2lyYWJsZS4gVGhlcmVmb3JlIGNvbnZlcnQgdGhpcyBt
b2RlIG9mIG9wZXJhdGlvbiB0bwphbiBvcHRpb25hbCBvbmUsIG5vdCBvbmUgZW5hYmxlZCBieSBk
ZWZhdWx0LgoKVGhpcyBpbnZvbHZlcyByZXN1cnJlY3RpbmcgY29kZSBjb21taXQgZWEzODg2Nzgz
MWRhICgieDg2IC8gaW9tbXU6IHNldAp1cCBhIHNjcmF0Y2ggcGFnZSBpbiB0aGUgcXVhcmFudGlu
ZSBkb21haW4iKSBkaWQgcmVtb3ZlLCBpbiBhIHNsaWdodGx5CmV4dGVuZGVkIGFuZCBhYnN0cmFj
dGVkIGZhc2hpb24uIEhlcmUsIGluc3RlYWQgb2YgcmVpbnRyb2R1Y2luZyBhIHByZXR0eQpwb2lu
dGxlc3MgdXNlIG9mICJnb3RvIiBpbiBkb21haW5fY29udGV4dF91bm1hcCgpLCBhbmQgaW5zdGVh
ZCBvZiBtYWtpbmcKdGhlIGZ1bmN0aW9uIChhdCBsZWFzdCB0ZW1wb3JhcmlseSkgaW5jb25zaXN0
ZW50LCB0YWtlIHRoZSBvcHBvcnR1bml0eQphbmQgcmVwbGFjZSB0aGUgb3RoZXIgc2ltaWxhcmx5
IHBvaW50bGVzcyAiZ290byIgYXMgd2VsbC4KCkluIG9yZGVyIHRvIGtleSB0aGUgcmUtaW5zdGF0
ZWQgYnlwYXNzZXMgb2ZmIG9mIHRoZXJlIChub3QpIGJlaW5nIGEgcm9vdApwYWdlIHRhYmxlIHRo
aXMgZnVydGhlciByZXF1aXJlcyBtb3ZpbmcgdGhlIGFsbG9jYXRlX2RvbWFpbl9yZXNvdXJjZXMo
KQppbnZvY2F0aW9uIGZyb20gcmVhc3NpZ25fZGV2aWNlKCkgdG8gYW1kX2lvbW11X3NldHVwX2Rv
bWFpbl9kZXZpY2UoKSAob3IKZWxzZSByZWFzc2lnbl9kZXZpY2UoKSB3b3VsZCBhbGxvY2F0ZSBh
IHJvb3QgcGFnZSB0YWJsZSBhbnl3YXkpOyB0aGlzIGlzCmJlbmlnbiB0byB0aGUgc2Vjb25kIGNh
bGxlciBvZiB0aGUgbGF0dGVyIGZ1bmN0aW9uLgoKU2lnbmVkLW9mZi1ieTogSmFuIEJldWxpY2gg
PGpiZXVsaWNoQHN1c2UuY29tPgotLS0KQXMgZmFyIGFzIDQuMTMgaXMgY29uY2VybmVkLCBJIGd1
ZXNzIGlmIHdlIGNhbid0IGNvbWUgdG8gYW4gYWdyZWVtZW50CmhlcmUsIHRoZSBvbmx5IG90aGVy
IG9wdGlvbiBpcyB0byByZXZlcnQgZWEzODg2NzgzMWRhIGZyb20gdGhlIGJyYW5jaCwKZm9yIGhh
dmluZyBiZWVuIGNvbW1pdHRlZCBwcmVtYXR1cmVseSAoSSdtIG5vdCBzbyBtdWNoIHdvcnJpZWQg
YWJvdXQgdGhlCm1hc3RlciBicmFuY2gsIHdoZXJlIHdlIGhhdmUgYW1wbGUgdGltZSB1bnRpbCA0
LjE0KS4gV2hhdCBJIHN1cmVseSB3YW50CnRvIHNlZSB1cyBhdm9pZCBpcyBhIGJhY2sgYW5kIGZv
cnRoIGluIGJlaGF2aW9yIG9mIHJlbGVhc2VkIHZlcnNpb25zLgooTm90ZSB0aGF0IDQuMTIuMiBp
cyBzaW1pbGFybHkgYmxvY2tlZCBvbiBhIGRlY2lzaW9uIGVpdGhlciB3YXkgaGVyZS4pCgpJJ20g
aGFwcHkgdG8gdGFrZSBiZXR0ZXIgc3VnZ2VzdGlvbnMgdG8gcmVwbGFjZSAiZnVsbCIuCi0tLQp2
MjogRG9uJ3QgdXNlIHRydWUvZmFsc2UuIEludHJvZHVjZSBRVUFSQU5USU5FX1NLSVAoKSAoYWxi
ZWl0IEknbSBub3QKICAgIHJlYWxseSBjb252aW5jZWQgdGhpcyBpcyBhbiBpbXByb3ZlbWVudCku
IEFkZCBjb21tZW50LgoKLS0tIGEvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUucGFuZG9jCisr
KyBiL2RvY3MvbWlzYy94ZW4tY29tbWFuZC1saW5lLnBhbmRvYwpAQCAtMTIzMiw3ICsxMjMyLDcg
QEAgZGV0ZWN0aW9uIG9mIHN5c3RlbXMga25vd24gdG8gbWlzYmVoYXZlCiA+IERlZmF1bHQ6IGBu
ZXdgIHVubGVzcyBkaXJlY3RlZC1FT0kgaXMgc3VwcG9ydGVkCiAKICMjIyBpb21tdQotICAgID0g
TGlzdCBvZiBbIDxib29sPiwgdmVyYm9zZSwgZGVidWcsIGZvcmNlLCByZXF1aXJlZCwgcXVhcmFu
dGluZSwKKyAgICA9IExpc3Qgb2YgWyA8Ym9vbD4sIHZlcmJvc2UsIGRlYnVnLCBmb3JjZSwgcmVx
dWlyZWQsIHF1YXJhbnRpbmVbPWZ1bGxdLAogICAgICAgICAgICAgICAgIHNoYXJlcHQsIGludHJl
bWFwLCBpbnRwb3N0LCBjcmFzaC1kaXNhYmxlLAogICAgICAgICAgICAgICAgIHNub29wLCBxaW52
YWwsIGlnZngsIGFtZC1pb21tdS1wZXJkZXYtaW50cmVtYXAsCiAgICAgICAgICAgICAgICAgZG9t
MC17cGFzc3Rocm91Z2gsc3RyaWN0fSBdCkBAIC0xMjcwLDExICsxMjcwLDEzIEBAIGJvb2xlYW4g
KGUuZy4gYGlvbW11PW5vYCkgY2FuIG92ZXJyaWRlIHQKICAgICB3aWxsIHByZXZlbnQgWGVuIGZy
b20gYm9vdGluZyBpZiBJT01NVXMgYXJlbid0IGRpc2NvdmVyZWQgYW5kIGVuYWJsZWQKICAgICBz
dWNjZXNzZnVsbHkuCiAKLSogICBUaGUgYHF1YXJhbnRpbmVgIGJvb2xlYW4gY2FuIGJlIHVzZWQg
dG8gY29udHJvbCBYZW4ncyBiZWhhdmlvciB3aGVuCi0gICAgZGUtYXNzaWduaW5nIGRldmljZXMg
ZnJvbSBndWVzdHMuICBJZiBlbmFibGVkICh0aGUgZGVmYXVsdCksIFhlbiBhbHdheXMKLSAgICBx
dWFyYW50aW5lcyBzdWNoIGRldmljZXM7IHRoZXkgbXVzdCBiZSBleHBsaWNpdGx5IGFzc2lnbmVk
IGJhY2sgdG8gRG9tMAotICAgIGJlZm9yZSB0aGV5IGNhbiBiZSB1c2VkIHRoZXJlIGFnYWluLiAg
SWYgZGlzYWJsZWQsIFhlbiB3aWxsIG9ubHkKLSAgICBxdWFyYW50aW5lIGRldmljZXMgdGhlIHRv
b2xzdGFjayBoYXNzIGFycmFuZ2VkIGZvciBnZXR0aW5nIHF1YXJhbnRpbmVkLgorKiAgIFRoZSBg
cXVhcmFudGluZWAgb3B0aW9uIGNhbiBiZSB1c2VkIHRvIGNvbnRyb2wgWGVuJ3MgYmVoYXZpb3Ig
d2hlbgorICAgIGRlLWFzc2lnbmluZyBkZXZpY2VzIGZyb20gZ3Vlc3RzLiAgSWYgc2V0IHRvIHRy
dWUgKHRoZSBkZWZhdWx0KSwgWGVuCisgICAgYWx3YXlzIHF1YXJhbnRpbmVzIHN1Y2ggZGV2aWNl
czsgdGhleSBtdXN0IGJlIGV4cGxpY2l0bHkgYXNzaWduZWQgYmFjaworICAgIHRvIERvbTAgYmVm
b3JlIHRoZXkgY2FuIGJlIHVzZWQgdGhlcmUgYWdhaW4uICBJZiBzZXQgdG8gImZ1bGwiLCBzdGls
bAorICAgIGFjdGl2ZSBETUEgd2lsbCBhZGRpdGlvbmFsbHkgYmUgZGlyZWN0ZWQgdG8gYSAic2lu
ayIgcGFnZS4gIElmIHNldCB0bworICAgIGZhbHNlLCBYZW4gd2lsbCBvbmx5IHF1YXJhbnRpbmUg
ZGV2aWNlcyB0aGUgdG9vbHN0YWNrIGhhcyBhcnJhbmdlZCBmb3IKKyAgICBnZXR0aW5nIHF1YXJh
bnRpbmVkLgogCiAqICAgVGhlIGBzaGFyZXB0YCBib29sZWFuIGNvbnRyb2xzIHdoZXRoZXIgdGhl
IElPTU1VIHBhZ2V0YWJsZXMgYXJlIHNoYXJlZAogICAgIHdpdGggdGhlIENQVS1zaWRlIEhBUCBw
YWdldGFibGVzLCBvciBhbGxvY2F0ZWQgc2VwYXJhdGVseS4gIFNoYXJpbmcKLS0tIGEveGVuL2Ry
aXZlcnMvcGFzc3Rocm91Z2gvYW1kL3BjaV9hbWRfaW9tbXUuYworKysgYi94ZW4vZHJpdmVycy9w
YXNzdGhyb3VnaC9hbWQvcGNpX2FtZF9pb21tdS5jCkBAIC0yOCw2ICsyOCw5IEBACiAjaW5jbHVk
ZSA8YXNtL2h2bS9zdm0vYW1kLWlvbW11LXByb3RvLmg+CiAjaW5jbHVkZSAiLi4vYXRzLmgiCiAK
Ky8qIGRvbV9pbyBpcyB1c2VkIGFzIGEgc2VudGluZWwgZm9yIHF1YXJhbnRpbmVkIGRldmljZXMg
Ki8KKyNkZWZpbmUgUVVBUkFOVElORV9TS0lQKGQpICgoZCkgPT0gZG9tX2lvICYmICFkb21faW9t
bXUoZCktPmFyY2gucm9vdF90YWJsZSkKKwogc3RhdGljIGJvb2xfdCBfX3JlYWRfbW9zdGx5IGlu
aXRfZG9uZTsKIAogc3RhdGljIGNvbnN0IHN0cnVjdCBpb21tdV9pbml0X29wcyBfaW9tbXVfaW5p
dF9vcHM7CkBAIC04NSwxOCArODgsMzUgQEAgaW50IGdldF9kbWFfcmVxdWVzdG9yX2lkKHVpbnQx
Nl90IHNlZywgdQogICAgIHJldHVybiByZXFfaWQ7CiB9CiAKLXN0YXRpYyB2b2lkIGFtZF9pb21t
dV9zZXR1cF9kb21haW5fZGV2aWNlKAorc3RhdGljIGludCBfX211c3RfY2hlY2sgYWxsb2NhdGVf
ZG9tYWluX3Jlc291cmNlcyhzdHJ1Y3QgZG9tYWluX2lvbW11ICpoZCkKK3sKKyAgICBpbnQgcmM7
CisKKyAgICBzcGluX2xvY2soJmhkLT5hcmNoLm1hcHBpbmdfbG9jayk7CisgICAgcmMgPSBhbWRf
aW9tbXVfYWxsb2Nfcm9vdChoZCk7CisgICAgc3Bpbl91bmxvY2soJmhkLT5hcmNoLm1hcHBpbmdf
bG9jayk7CisKKyAgICByZXR1cm4gcmM7Cit9CisKK3N0YXRpYyBpbnQgX19tdXN0X2NoZWNrIGFt
ZF9pb21tdV9zZXR1cF9kb21haW5fZGV2aWNlKAogICAgIHN0cnVjdCBkb21haW4gKmRvbWFpbiwg
c3RydWN0IGFtZF9pb21tdSAqaW9tbXUsCiAgICAgdWludDhfdCBkZXZmbiwgc3RydWN0IHBjaV9k
ZXYgKnBkZXYpCiB7CiAgICAgc3RydWN0IGFtZF9pb21tdV9kdGUgKnRhYmxlLCAqZHRlOwogICAg
IHVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0gICAgaW50IHJlcV9pZCwgdmFsaWQgPSAxOworICAgIGlu
dCByZXFfaWQsIHZhbGlkID0gMSwgcmM7CiAgICAgdTggYnVzID0gcGRldi0+YnVzOwotICAgIGNv
bnN0IHN0cnVjdCBkb21haW5faW9tbXUgKmhkID0gZG9tX2lvbW11KGRvbWFpbik7CisgICAgc3Ry
dWN0IGRvbWFpbl9pb21tdSAqaGQgPSBkb21faW9tbXUoZG9tYWluKTsKKworICAgIGlmICggUVVB
UkFOVElORV9TS0lQKGRvbWFpbikgKQorICAgICAgICByZXR1cm4gMDsKKworICAgIEJVR19PTigh
aGQtPmFyY2gucGFnaW5nX21vZGUgfHwgIWlvbW11LT5kZXZfdGFibGUuYnVmZmVyKTsKIAotICAg
IEJVR19PTiggIWhkLT5hcmNoLnJvb3RfdGFibGUgfHwgIWhkLT5hcmNoLnBhZ2luZ19tb2RlIHx8
Ci0gICAgICAgICAgICAhaW9tbXUtPmRldl90YWJsZS5idWZmZXIgKTsKKyAgICByYyA9IGFsbG9j
YXRlX2RvbWFpbl9yZXNvdXJjZXMoaGQpOworICAgIGlmICggcmMgKQorICAgICAgICByZXR1cm4g
cmM7CiAKICAgICBpZiAoIGlvbW11X2h3ZG9tX3Bhc3N0aHJvdWdoICYmIGlzX2hhcmR3YXJlX2Rv
bWFpbihkb21haW4pICkKICAgICAgICAgdmFsaWQgPSAwOwpAQCAtMTUxLDYgKzE3MSw4IEBAIHN0
YXRpYyB2b2lkIGFtZF9pb21tdV9zZXR1cF9kb21haW5fZGV2aWMKIAogICAgICAgICBhbWRfaW9t
bXVfZmx1c2hfaW90bGIoZGV2Zm4sIHBkZXYsIElOVl9JT01NVV9BTExfUEFHRVNfQUREUkVTUywg
MCk7CiAgICAgfQorCisgICAgcmV0dXJuIDA7CiB9CiAKIGludCBfX2luaXQgYWNwaV9pdnJzX2lu
aXQodm9pZCkKQEAgLTIyMCwxNyArMjQyLDYgQEAgaW50IGFtZF9pb21tdV9hbGxvY19yb290KHN0
cnVjdCBkb21haW5faQogICAgIHJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IF9fbXVzdF9jaGVj
ayBhbGxvY2F0ZV9kb21haW5fcmVzb3VyY2VzKHN0cnVjdCBkb21haW5faW9tbXUgKmhkKQotewot
ICAgIGludCByYzsKLQotICAgIHNwaW5fbG9jaygmaGQtPmFyY2gubWFwcGluZ19sb2NrKTsKLSAg
ICByYyA9IGFtZF9pb21tdV9hbGxvY19yb290KGhkKTsKLSAgICBzcGluX3VubG9jaygmaGQtPmFy
Y2gubWFwcGluZ19sb2NrKTsKLQotICAgIHJldHVybiByYzsKLX0KLQogaW50IGFtZF9pb21tdV9n
ZXRfcGFnaW5nX21vZGUodW5zaWduZWQgbG9uZyBlbnRyaWVzKQogewogICAgIGludCBsZXZlbCA9
IDE7CkBAIC0yOTQsNiArMzA1LDkgQEAgc3RhdGljIHZvaWQgYW1kX2lvbW11X2Rpc2FibGVfZG9t
YWluX2RldgogICAgIGludCByZXFfaWQ7CiAgICAgdTggYnVzID0gcGRldi0+YnVzOwogCisgICAg
aWYgKCBRVUFSQU5USU5FX1NLSVAoZG9tYWluKSApCisgICAgICAgIHJldHVybjsKKwogICAgIEJV
R19PTiAoIGlvbW11LT5kZXZfdGFibGUuYnVmZmVyID09IE5VTEwgKTsKICAgICByZXFfaWQgPSBn
ZXRfZG1hX3JlcXVlc3Rvcl9pZChpb21tdS0+c2VnLCBQQ0lfQkRGMihidXMsIGRldmZuKSk7CiAg
ICAgdGFibGUgPSBpb21tdS0+ZGV2X3RhYmxlLmJ1ZmZlcjsKQEAgLTM0MCw3ICszNTQsNiBAQCBz
dGF0aWMgaW50IHJlYXNzaWduX2RldmljZShzdHJ1Y3QgZG9tYWluCiB7CiAgICAgc3RydWN0IGFt
ZF9pb21tdSAqaW9tbXU7CiAgICAgaW50IGJkZiwgcmM7Ci0gICAgc3RydWN0IGRvbWFpbl9pb21t
dSAqdCA9IGRvbV9pb21tdSh0YXJnZXQpOwogCiAgICAgYmRmID0gUENJX0JERjIocGRldi0+YnVz
LCBwZGV2LT5kZXZmbik7CiAgICAgaW9tbXUgPSBmaW5kX2lvbW11X2Zvcl9kZXZpY2UocGRldi0+
c2VnLCBiZGYpOwpAQCAtMzYxLDExICszNzQsMTAgQEAgc3RhdGljIGludCByZWFzc2lnbl9kZXZp
Y2Uoc3RydWN0IGRvbWFpbgogICAgICAgICBwZGV2LT5kb21haW4gPSB0YXJnZXQ7CiAgICAgfQog
Ci0gICAgcmMgPSBhbGxvY2F0ZV9kb21haW5fcmVzb3VyY2VzKHQpOworICAgIHJjID0gYW1kX2lv
bW11X3NldHVwX2RvbWFpbl9kZXZpY2UodGFyZ2V0LCBpb21tdSwgZGV2Zm4sIHBkZXYpOwogICAg
IGlmICggcmMgKQogICAgICAgICByZXR1cm4gcmM7CiAKLSAgICBhbWRfaW9tbXVfc2V0dXBfZG9t
YWluX2RldmljZSh0YXJnZXQsIGlvbW11LCBkZXZmbiwgcGRldik7CiAgICAgQU1EX0lPTU1VX0RF
QlVHKCJSZS1hc3NpZ24gJTA0eDolMDJ4OiUwMnguJXUgZnJvbSBkb20lZCB0byBkb20lZFxuIiwK
ICAgICAgICAgICAgICAgICAgICAgcGRldi0+c2VnLCBwZGV2LT5idXMsIFBDSV9TTE9UKGRldmZu
KSwgUENJX0ZVTkMoZGV2Zm4pLAogICAgICAgICAgICAgICAgICAgICBzb3VyY2UtPmRvbWFpbl9p
ZCwgdGFyZ2V0LT5kb21haW5faWQpOwpAQCAtNTIyLDggKzUzNCw3IEBAIHN0YXRpYyBpbnQgYW1k
X2lvbW11X2FkZF9kZXZpY2UodTggZGV2Zm4KICAgICAgICAgc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmaW9tbXUtPmxvY2ssIGZsYWdzKTsKICAgICB9CiAKLSAgICBhbWRfaW9tbXVfc2V0dXBfZG9t
YWluX2RldmljZShwZGV2LT5kb21haW4sIGlvbW11LCBkZXZmbiwgcGRldik7Ci0gICAgcmV0dXJu
IDA7CisgICAgcmV0dXJuIGFtZF9pb21tdV9zZXR1cF9kb21haW5fZGV2aWNlKHBkZXYtPmRvbWFp
biwgaW9tbXUsIGRldmZuLCBwZGV2KTsKIH0KIAogc3RhdGljIGludCBhbWRfaW9tbXVfcmVtb3Zl
X2RldmljZSh1OCBkZXZmbiwgc3RydWN0IHBjaV9kZXYgKnBkZXYpCi0tLSBhL3hlbi9kcml2ZXJz
L3Bhc3N0aHJvdWdoL2lvbW11LmMKKysrIGIveGVuL2RyaXZlcnMvcGFzc3Rocm91Z2gvaW9tbXUu
YwpAQCAtMzAsMTMgKzMwLDE3IEBAIGJvb2xfdCBfX2luaXRkYXRhIGlvbW11X2VuYWJsZSA9IDE7
CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV9lbmFibGVkOwogYm9vbF90IF9fcmVhZF9tb3N0
bHkgZm9yY2VfaW9tbXU7CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV92ZXJib3NlOwotYm9v
bCBfX3JlYWRfbW9zdGx5IGlvbW11X3F1YXJhbnRpbmUgPSB0cnVlOwogYm9vbF90IF9fcmVhZF9t
b3N0bHkgaW9tbXVfaWdmeCA9IDE7CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV9zbm9vcCA9
IDE7CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV9xaW52YWwgPSAxOwogYm9vbF90IF9fcmVh
ZF9tb3N0bHkgaW9tbXVfaW50cmVtYXAgPSAxOwogYm9vbF90IF9fcmVhZF9tb3N0bHkgaW9tbXVf
Y3Jhc2hfZGlzYWJsZTsKIAorI2RlZmluZSBJT01NVV9xdWFyYW50aW5lX25vbmUgIDAKKyNkZWZp
bmUgSU9NTVVfcXVhcmFudGluZV9iYXNpYyAxCisjZGVmaW5lIElPTU1VX3F1YXJhbnRpbmVfZnVs
bCAgMgordWludDhfdCBfX3JlYWRfbW9zdGx5IGlvbW11X3F1YXJhbnRpbmUgPSBJT01NVV9xdWFy
YW50aW5lX2Jhc2ljOworCiBzdGF0aWMgYm9vbCBfX2h3ZG9tX2luaXRkYXRhIGlvbW11X2h3ZG9t
X25vbmU7CiBib29sIF9faHdkb21faW5pdGRhdGEgaW9tbXVfaHdkb21fc3RyaWN0OwogYm9vbCBf
X3JlYWRfbW9zdGx5IGlvbW11X2h3ZG9tX3Bhc3N0aHJvdWdoOwpAQCAtODEsNiArODUsOCBAQCBz
dGF0aWMgaW50IF9faW5pdCBwYXJzZV9pb21tdV9wYXJhbShjb25zCiAgICAgICAgICAgICBmb3Jj
ZV9pb21tdSA9IHZhbDsKICAgICAgICAgZWxzZSBpZiAoICh2YWwgPSBwYXJzZV9ib29sZWFuKCJx
dWFyYW50aW5lIiwgcywgc3MpKSA+PSAwICkKICAgICAgICAgICAgIGlvbW11X3F1YXJhbnRpbmUg
PSB2YWw7CisgICAgICAgIGVsc2UgaWYgKCBzcyA9PSBzICsgMTUgJiYgIXN0cm5jbXAocywgInF1
YXJhbnRpbmU9ZnVsbCIsIDE1KSApCisgICAgICAgICAgICBpb21tdV9xdWFyYW50aW5lID0gSU9N
TVVfcXVhcmFudGluZV9mdWxsOwogICAgICAgICBlbHNlIGlmICggKHZhbCA9IHBhcnNlX2Jvb2xl
YW4oImlnZngiLCBzLCBzcykpID49IDAgKQogICAgICAgICAgICAgaW9tbXVfaWdmeCA9IHZhbDsK
ICAgICAgICAgZWxzZSBpZiAoICh2YWwgPSBwYXJzZV9ib29sZWFuKCJ2ZXJib3NlIiwgcywgc3Mp
KSA+PSAwICkKQEAgLTQ1MSw3ICs0NTcsNyBAQCBzdGF0aWMgaW50IF9faW5pdCBpb21tdV9xdWFy
YW50aW5lX2luaXQoCiAgICAgZG9tX2lvLT5vcHRpb25zIHw9IFhFTl9ET01DVExfQ0RGX2lvbW11
OwogCiAgICAgcmMgPSBpb21tdV9kb21haW5faW5pdChkb21faW8sIDApOwotICAgIGlmICggcmMg
KQorICAgIGlmICggcmMgfHwgaW9tbXVfcXVhcmFudGluZSA8IElPTU1VX3F1YXJhbnRpbmVfZnVs
bCApCiAgICAgICAgIHJldHVybiByYzsKIAogICAgIGlmICggIWhkLT5wbGF0Zm9ybV9vcHMtPnF1
YXJhbnRpbmVfaW5pdCApCi0tLSBhL3hlbi9kcml2ZXJzL3Bhc3N0aHJvdWdoL3Z0ZC9pb21tdS5j
CisrKyBiL3hlbi9kcml2ZXJzL3Bhc3N0aHJvdWdoL3Z0ZC9pb21tdS5jCkBAIC00MSw2ICs0MSw5
IEBACiAjaW5jbHVkZSAidnRkLmgiCiAjaW5jbHVkZSAiLi4vYXRzLmgiCiAKKy8qIGRvbV9pbyBp
cyB1c2VkIGFzIGEgc2VudGluZWwgZm9yIHF1YXJhbnRpbmVkIGRldmljZXMgKi8KKyNkZWZpbmUg
UVVBUkFOVElORV9TS0lQKGQpICgoZCkgPT0gZG9tX2lvICYmICFkb21faW9tbXUoZCktPmFyY2gu
cGdkX21hZGRyKQorCiBzdHJ1Y3QgbWFwcGVkX3JtcnIgewogICAgIHN0cnVjdCBsaXN0X2hlYWQg
bGlzdDsKICAgICB1NjQgYmFzZSwgZW5kOwpAQCAtMTI5MSw2ICsxMjk0LDkgQEAgaW50IGRvbWFp
bl9jb250ZXh0X21hcHBpbmdfb25lKAogICAgIGludCBhZ2F3LCByYywgcmV0OwogICAgIGJvb2xf
dCBmbHVzaF9kZXZfaW90bGI7CiAKKyAgICBpZiAoIFFVQVJBTlRJTkVfU0tJUChkb21haW4pICkK
KyAgICAgICAgcmV0dXJuIDA7CisKICAgICBBU1NFUlQocGNpZGV2c19sb2NrZWQoKSk7CiAgICAg
c3Bpbl9sb2NrKCZpb21tdS0+bG9jayk7CiAgICAgbWFkZHIgPSBidXNfdG9fY29udGV4dF9tYWRk
cihpb21tdSwgYnVzKTsKQEAgLTE1MzcsNiArMTU0Myw5IEBAIGludCBkb21haW5fY29udGV4dF91
bm1hcF9vbmUoCiAgICAgaW50IGlvbW11X2RvbWlkLCByYywgcmV0OwogICAgIGJvb2xfdCBmbHVz
aF9kZXZfaW90bGI7CiAKKyAgICBpZiAoIFFVQVJBTlRJTkVfU0tJUChkb21haW4pICkKKyAgICAg
ICAgcmV0dXJuIDA7CisKICAgICBBU1NFUlQocGNpZGV2c19sb2NrZWQoKSk7CiAgICAgc3Bpbl9s
b2NrKCZpb21tdS0+bG9jayk7CiAKQEAgLTE1OTgsNyArMTYwNyw3IEBAIHN0YXRpYyBpbnQgZG9t
YWluX2NvbnRleHRfdW5tYXAoc3RydWN0IGQKIHsKICAgICBzdHJ1Y3QgYWNwaV9kcmhkX3VuaXQg
KmRyaGQ7CiAgICAgc3RydWN0IHZ0ZF9pb21tdSAqaW9tbXU7Ci0gICAgaW50IHJldCA9IDA7Cisg
ICAgaW50IHJldDsKICAgICB1OCBzZWcgPSBwZGV2LT5zZWcsIGJ1cyA9IHBkZXYtPmJ1cywgdG1w
X2J1cywgdG1wX2RldmZuLCBzZWNidXM7CiAgICAgaW50IGZvdW5kID0gMDsKIApAQCAtMTYxNCwx
NCArMTYyMywxMiBAQCBzdGF0aWMgaW50IGRvbWFpbl9jb250ZXh0X3VubWFwKHN0cnVjdCBkCiAg
ICAgICAgICAgICBwcmludGsoVlREUFJFRklYICJkJWQ6SG9zdGJyaWRnZTogc2tpcCAlMDR4OiUw
Mng6JTAyeC4ldSB1bm1hcFxuIiwKICAgICAgICAgICAgICAgICAgICBkb21haW4tPmRvbWFpbl9p
ZCwgc2VnLCBidXMsCiAgICAgICAgICAgICAgICAgICAgUENJX1NMT1QoZGV2Zm4pLCBQQ0lfRlVO
QyhkZXZmbikpOwotICAgICAgICBpZiAoICFpc19oYXJkd2FyZV9kb21haW4oZG9tYWluKSApCi0g
ICAgICAgICAgICByZXR1cm4gLUVQRVJNOwotICAgICAgICBnb3RvIG91dDsKKyAgICAgICAgcmV0
dXJuIGlzX2hhcmR3YXJlX2RvbWFpbihkb21haW4pID8gMCA6IC1FUEVSTTsKIAogICAgIGNhc2Ug
REVWX1RZUEVfUENJZV9CUklER0U6CiAgICAgY2FzZSBERVZfVFlQRV9QQ0llMlBDSV9CUklER0U6
CiAgICAgY2FzZSBERVZfVFlQRV9MRUdBQ1lfUENJX0JSSURHRToKLSAgICAgICAgZ290byBvdXQ7
CisgICAgICAgIHJldHVybiAwOwogCiAgICAgY2FzZSBERVZfVFlQRV9QQ0llX0VORFBPSU5UOgog
ICAgICAgICBpZiAoIGlvbW11X2RlYnVnICkKQEAgLTE2NjUsMTAgKzE2NzIsMTIgQEAgc3RhdGlj
IGludCBkb21haW5fY29udGV4dF91bm1hcChzdHJ1Y3QgZAogICAgICAgICBkcHJpbnRrKFhFTkxP
R19FUlIgVlREUFJFRklYLCAiZCVkOnVua25vd24oJXUpOiAlMDR4OiUwMng6JTAyeC4ldVxuIiwK
ICAgICAgICAgICAgICAgICBkb21haW4tPmRvbWFpbl9pZCwgcGRldi0+dHlwZSwKICAgICAgICAg
ICAgICAgICBzZWcsIGJ1cywgUENJX1NMT1QoZGV2Zm4pLCBQQ0lfRlVOQyhkZXZmbikpOwotICAg
ICAgICByZXQgPSAtRUlOVkFMOwotICAgICAgICBnb3RvIG91dDsKKyAgICAgICAgcmV0dXJuIC1F
SU5WQUw7CiAgICAgfQogCisgICAgaWYgKCBRVUFSQU5USU5FX1NLSVAoZG9tYWluKSApCisgICAg
ICAgIHJldHVybiByZXQ7CisKICAgICAvKgogICAgICAqIGlmIG5vIG90aGVyIGRldmljZXMgdW5k
ZXIgdGhlIHNhbWUgaW9tbXUgb3duZWQgYnkgdGhpcyBkb21haW4sCiAgICAgICogY2xlYXIgaW9t
bXUgaW4gaW9tbXVfYml0bWFwIGFuZCBjbGVhciBkb21haW5faWQgaW4gZG9taWRfYml0bXAKQEAg
LTE2OTQsMTYgKzE3MDMsMTIgQEAgc3RhdGljIGludCBkb21haW5fY29udGV4dF91bm1hcChzdHJ1
Y3QgZAogCiAgICAgICAgIGlvbW11X2RvbWlkID0gZG9tYWluX2lvbW11X2RvbWlkKGRvbWFpbiwg
aW9tbXUpOwogICAgICAgICBpZiAoIGlvbW11X2RvbWlkID09IC0xICkKLSAgICAgICAgewotICAg
ICAgICAgICAgcmV0ID0gLUVJTlZBTDsKLSAgICAgICAgICAgIGdvdG8gb3V0OwotICAgICAgICB9
CisgICAgICAgICAgICByZXR1cm4gLUVJTlZBTDsKIAogICAgICAgICBjbGVhcl9iaXQoaW9tbXVf
ZG9taWQsIGlvbW11LT5kb21pZF9iaXRtYXApOwogICAgICAgICBpb21tdS0+ZG9taWRfbWFwW2lv
bW11X2RvbWlkXSA9IDA7CiAgICAgfQogCi1vdXQ6CiAgICAgcmV0dXJuIHJldDsKIH0KIAotLS0g
YS94ZW4vaW5jbHVkZS94ZW4vaW9tbXUuaAorKysgYi94ZW4vaW5jbHVkZS94ZW4vaW9tbXUuaApA
QCAtNTMsOCArNTMsMTAgQEAgc3RhdGljIGlubGluZSBib29sX3QgZGZuX2VxKGRmbl90IHgsIGRm
bgogfQogCiBleHRlcm4gYm9vbF90IGlvbW11X2VuYWJsZSwgaW9tbXVfZW5hYmxlZDsKLWV4dGVy
biBib29sIGZvcmNlX2lvbW11LCBpb21tdV9xdWFyYW50aW5lLCBpb21tdV92ZXJib3NlLCBpb21t
dV9pZ2Z4OworZXh0ZXJuIGJvb2wgZm9yY2VfaW9tbXUsIGlvbW11X3ZlcmJvc2UsIGlvbW11X2ln
Zng7CiBleHRlcm4gYm9vbF90IGlvbW11X3Nub29wLCBpb21tdV9xaW52YWwsIGlvbW11X2ludHJl
bWFwLCBpb21tdV9pbnRwb3N0OworLyogQm9vbGVhbiBleGNlcHQgZm9yIHRoZSBzcGVjaWZpYyBw
dXJwb3NlcyBvZiBkcml2ZXJzL3Bhc3N0aHJvdWdoL2lvbW11LmMuICovCitleHRlcm4gdWludDhf
dCBpb21tdV9xdWFyYW50aW5lOwogCiAjaWYgZGVmaW5lZChDT05GSUdfSU9NTVVfRk9SQ0VfUFRf
U0hBUkUpCiAjZGVmaW5lIGlvbW11X2hhcF9wdF9zaGFyZSB0cnVlCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhl
bi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3Jn
L21haWxtYW4vbGlzdGluZm8veGVuLWRldmVs

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id D018343301
	for <lists+xen-devel@lfdr.de>; Thu, 13 Jun 2019 08:54:00 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hbJYE-0001ok-B5; Thu, 13 Jun 2019 06:49:34 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=vdFK=UM=gmail.com=nadav.amit@srs-us1.protection.inumbo.net>)
 id 1hbJYD-0001of-De
 for xen-devel@lists.xenproject.org; Thu, 13 Jun 2019 06:49:33 +0000
X-Inumbo-ID: 63829e74-8da7-11e9-b23c-5b3821526fa9
Received: from mail-pg1-f195.google.com (unknown [209.85.215.195])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 63829e74-8da7-11e9-b23c-5b3821526fa9;
 Thu, 13 Jun 2019 06:49:28 +0000 (UTC)
Received: by mail-pg1-f195.google.com with SMTP id p10so4507559pgn.1
 for <xen-devel@lists.xenproject.org>; Wed, 12 Jun 2019 23:49:28 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=EWV8HqUW5nD4lYeuHZCchPJIr3ycVzu67AOhwAlhylY=;
 b=fEy9huXgDg5t3Rto0e0MQ5IGknBcdadYOE9Td/8RNBnNVLgOvypVX0LLZVh0Nxyzo/
 +cme6XFc/xR9Fx+J5I/dBY55OfQ0R0ByuQpUfhObXyvQqsgi7eCdPyIVQCmtXN2YDbSi
 NGF5V/zKvkyI/r3DLiwQxi4R7V4jkCVGNseHMN7a1WzPNHlxOYcGGa04K1R6+aUw9ZWl
 9tPlwYf3+YWMCAQKx78OjsI6Pc0QiksDDZ1VPunTJPtS7zrL3+5AZ36WUlIQJTOts6LB
 J3ZZ8odcvGlFtZnsIeKz9NcHZYhAYNXUA3HaUMds2cz9RjtBfBKNVF1xXFt0gRA02Y97
 KKTw==
X-Gm-Message-State: APjAAAWdEo4J/5BL7Z31zioqFTeSgGf2NHeUdQspNvCy+KM33dHy7/13
 vrQi+l4elaFhhh7n/2YzXFM=
X-Google-Smtp-Source: APXvYqw+K1atiiGJQgLV9SN1EyEIO2KJbWIsQQ3d5N7HeaIcjGnehk9lu87UMmJtEDHDqZuBy4rhjg==
X-Received: by 2002:a17:90a:8a10:: with SMTP id
 w16mr3546662pjn.133.1560408567383; 
 Wed, 12 Jun 2019 23:49:27 -0700 (PDT)
Received: from htb-2n-eng-dhcp405.eng.vmware.com ([66.170.99.1])
 by smtp.gmail.com with ESMTPSA id i3sm1559973pfa.175.2019.06.12.23.49.19
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Wed, 12 Jun 2019 23:49:26 -0700 (PDT)
From: Nadav Amit <namit@vmware.com>
To: Peter Zijlstra <peterz@infradead.org>,
	Andy Lutomirski <luto@kernel.org>
Date: Wed, 12 Jun 2019 23:48:08 -0700
Message-Id: <20190613064813.8102-5-namit@vmware.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190613064813.8102-1-namit@vmware.com>
References: <20190613064813.8102-1-namit@vmware.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH 4/9] x86/mm/tlb: Flush remote and local TLBs
 concurrently
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sasha Levin <sashal@kernel.org>, Juergen Gross <jgross@suse.com>,
 linux-hyperv@vger.kernel.org, Dave Hansen <dave.hansen@linux.intel.com>,
 Stephen Hemminger <sthemmin@microsoft.com>, xen-devel@lists.xenproject.org,
 kvm@vger.kernel.org, Haiyang Zhang <haiyangz@microsoft.com>, x86@kernel.org,
 linux-kernel@vger.kernel.org, virtualization@lists.linux-foundation.org,
 Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
 Paolo Bonzini <pbonzini@redhat.com>, Nadav Amit <namit@vmware.com>,
 Thomas Gleixner <tglx@linutronix.de>, "K. Y. Srinivasan" <kys@microsoft.com>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VG8gaW1wcm92ZSBUTEIgc2hvb3Rkb3duIHBlcmZvcm1hbmNlLCBmbHVzaCB0aGUgcmVtb3RlIGFu
ZCBsb2NhbCBUTEJzCmNvbmN1cnJlbnRseS4gSW50cm9kdWNlIGZsdXNoX3RsYl9tdWx0aSgpIHRo
YXQgZG9lcyBzby4gVGhlIGN1cnJlbnQKZmx1c2hfdGxiX290aGVycygpIGludGVyZmFjZSBpcyBr
ZXB0LCBzaW5jZSBwYXJhdmlydHVhbCBpbnRlcmZhY2VzIG5lZWQKdG8gYmUgYWRhcHRlZCBmaXJz
dCBiZWZvcmUgaXQgY2FuIGJlIHJlbW92ZWQuIFRoaXMgaXMgbGVmdCBmb3IgZnV0dXJlCndvcmsu
IEluIHN1Y2ggUFYgZW52aXJvbm1lbnRzLCBUTEIgZmx1c2hlcyBhcmUgbm90IHBlcmZvcm1lZCwg
YXQgdGhpcwp0aW1lLCBjb25jdXJyZW50bHkuCgpBZGQgYSBzdGF0aWMga2V5IHRvIHRlbGwgd2hl
dGhlciB0aGlzIG5ldyBpbnRlcmZhY2UgaXMgc3VwcG9ydGVkLgoKQ2M6ICJLLiBZLiBTcmluaXZh
c2FuIiA8a3lzQG1pY3Jvc29mdC5jb20+CkNjOiBIYWl5YW5nIFpoYW5nIDxoYWl5YW5nekBtaWNy
b3NvZnQuY29tPgpDYzogU3RlcGhlbiBIZW1taW5nZXIgPHN0aGVtbWluQG1pY3Jvc29mdC5jb20+
CkNjOiBTYXNoYSBMZXZpbiA8c2FzaGFsQGtlcm5lbC5vcmc+CkNjOiBUaG9tYXMgR2xlaXhuZXIg
PHRnbHhAbGludXRyb25peC5kZT4KQ2M6IEluZ28gTW9sbmFyIDxtaW5nb0ByZWRoYXQuY29tPgpD
YzogQm9yaXNsYXYgUGV0a292IDxicEBhbGllbjguZGU+CkNjOiB4ODZAa2VybmVsLm9yZwpDYzog
SnVlcmdlbiBHcm9zcyA8amdyb3NzQHN1c2UuY29tPgpDYzogUGFvbG8gQm9uemluaSA8cGJvbnpp
bmlAcmVkaGF0LmNvbT4KQ2M6IERhdmUgSGFuc2VuIDxkYXZlLmhhbnNlbkBsaW51eC5pbnRlbC5j
b20+CkNjOiBBbmR5IEx1dG9taXJza2kgPGx1dG9Aa2VybmVsLm9yZz4KQ2M6IFBldGVyIFppamxz
dHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KQ2M6IEJvcmlzIE9zdHJvdnNreSA8Ym9yaXMub3N0
cm92c2t5QG9yYWNsZS5jb20+CkNjOiBsaW51eC1oeXBlcnZAdmdlci5rZXJuZWwub3JnCkNjOiBs
aW51eC1rZXJuZWxAdmdlci5rZXJuZWwub3JnCkNjOiB2aXJ0dWFsaXphdGlvbkBsaXN0cy5saW51
eC1mb3VuZGF0aW9uLm9yZwpDYzoga3ZtQHZnZXIua2VybmVsLm9yZwpDYzogeGVuLWRldmVsQGxp
c3RzLnhlbnByb2plY3Qub3JnClNpZ25lZC1vZmYtYnk6IE5hZGF2IEFtaXQgPG5hbWl0QHZtd2Fy
ZS5jb20+Ci0tLQogYXJjaC94ODYvaHlwZXJ2L21tdS5jICAgICAgICAgICAgICAgICB8ICAyICsK
IGFyY2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0LmggICAgICAgfCAgOCArKysKIGFyY2gveDg2
L2luY2x1ZGUvYXNtL3BhcmF2aXJ0X3R5cGVzLmggfCAgNiArKysKIGFyY2gveDg2L2luY2x1ZGUv
YXNtL3RsYmZsdXNoLmggICAgICAgfCAgNiArKysKIGFyY2gveDg2L2tlcm5lbC9rdm0uYyAgICAg
ICAgICAgICAgICAgfCAgMSArCiBhcmNoL3g4Ni9rZXJuZWwvcGFyYXZpcnQuYyAgICAgICAgICAg
IHwgIDMgKysKIGFyY2gveDg2L21tL3RsYi5jICAgICAgICAgICAgICAgICAgICAgfCA3MSArKysr
KysrKysrKysrKysrKysrKysrLS0tLS0KIGFyY2gveDg2L3hlbi9tbXVfcHYuYyAgICAgICAgICAg
ICAgICAgfCAgMiArCiA4IGZpbGVzIGNoYW5nZWQsIDg3IGluc2VydGlvbnMoKyksIDEyIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2h5cGVydi9tbXUuYyBiL2FyY2gveDg2L2h5
cGVydi9tbXUuYwppbmRleCBlNjVkN2ZlNjQ4OWYuLmNhMjhiNDAwYzg3YyAxMDA2NDQKLS0tIGEv
YXJjaC94ODYvaHlwZXJ2L21tdS5jCisrKyBiL2FyY2gveDg2L2h5cGVydi9tbXUuYwpAQCAtMjMz
LDQgKzIzMyw2IEBAIHZvaWQgaHlwZXJ2X3NldHVwX21tdV9vcHModm9pZCkKIAlwcl9pbmZvKCJV
c2luZyBoeXBlcmNhbGwgZm9yIHJlbW90ZSBUTEIgZmx1c2hcbiIpOwogCXB2X29wcy5tbXUuZmx1
c2hfdGxiX290aGVycyA9IGh5cGVydl9mbHVzaF90bGJfb3RoZXJzOwogCXB2X29wcy5tbXUudGxi
X3JlbW92ZV90YWJsZSA9IHRsYl9yZW1vdmVfdGFibGU7CisKKwlzdGF0aWNfa2V5X2Rpc2FibGUo
JmZsdXNoX3RsYl9tdWx0aV9lbmFibGVkLmtleSk7CiB9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9p
bmNsdWRlL2FzbS9wYXJhdmlydC5oIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnQuaApp
bmRleCBjMjVjMzhhMDVjMWMuLjE5MmJlNzI1NDQ1NyAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5j
bHVkZS9hc20vcGFyYXZpcnQuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydC5o
CkBAIC00Nyw2ICs0Nyw4IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBzbG93X2Rvd25faW8odm9pZCkK
ICNlbmRpZgogfQogCitERUNMQVJFX1NUQVRJQ19LRVlfVFJVRShmbHVzaF90bGJfbXVsdGlfZW5h
YmxlZCk7CisKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2ZsdXNoX3RsYih2b2lkKQogewogCVBWT1Bf
VkNBTEwwKG1tdS5mbHVzaF90bGJfdXNlcik7CkBAIC02Miw2ICs2NCwxMiBAQCBzdGF0aWMgaW5s
aW5lIHZvaWQgX19mbHVzaF90bGJfb25lX3VzZXIodW5zaWduZWQgbG9uZyBhZGRyKQogCVBWT1Bf
VkNBTEwxKG1tdS5mbHVzaF90bGJfb25lX3VzZXIsIGFkZHIpOwogfQogCitzdGF0aWMgaW5saW5l
IHZvaWQgZmx1c2hfdGxiX211bHRpKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNrLAorCQkJ
CSAgIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbykKK3sKKwlQVk9QX1ZDQUxMMiht
bXUuZmx1c2hfdGxiX211bHRpLCBjcHVtYXNrLCBpbmZvKTsKK30KKwogc3RhdGljIGlubGluZSB2
b2lkIGZsdXNoX3RsYl9vdGhlcnMoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdW1hc2ssCiAJCQkJ
ICAgIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbykKIHsKZGlmZiAtLWdpdCBhL2Fy
Y2gveDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0X3R5cGVzLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2Fz
bS9wYXJhdmlydF90eXBlcy5oCmluZGV4IDk0NmY4ZjFmMWVmYy4uYjkzYjNkOTA3MjlhIDEwMDY0
NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydF90eXBlcy5oCisrKyBiL2FyY2gv
eDg2L2luY2x1ZGUvYXNtL3BhcmF2aXJ0X3R5cGVzLmgKQEAgLTIxMSw2ICsyMTEsMTIgQEAgc3Ry
dWN0IHB2X21tdV9vcHMgewogCXZvaWQgKCpmbHVzaF90bGJfdXNlcikodm9pZCk7CiAJdm9pZCAo
KmZsdXNoX3RsYl9rZXJuZWwpKHZvaWQpOwogCXZvaWQgKCpmbHVzaF90bGJfb25lX3VzZXIpKHVu
c2lnbmVkIGxvbmcgYWRkcik7CisJLyoKKwkgKiBmbHVzaF90bGJfbXVsdGkoKSBpcyB0aGUgcHJl
ZmVycmVkIGludGVyZmFjZSwgd2hpY2ggaXMgY2FwYWJsZSB0bworCSAqIGZsdXNoIGJvdGggbG9j
YWwgYW5kIHJlbW90ZSBDUFVzLgorCSAqLworCXZvaWQgKCpmbHVzaF90bGJfbXVsdGkpKGNvbnN0
IHN0cnVjdCBjcHVtYXNrICpjcHVzLAorCQkJCWNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAq
aW5mbyk7CiAJdm9pZCAoKmZsdXNoX3RsYl9vdGhlcnMpKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpj
cHVzLAogCQkJCSBjb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmluZm8pOwogCmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS90bGJmbHVzaC5oIGIvYXJjaC94ODYvaW5jbHVkZS9h
c20vdGxiZmx1c2guaAppbmRleCBkZWUzNzU4MzE5NjIuLjc5MjcyOTM4Y2Y3OSAxMDA2NDQKLS0t
IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRl
L2FzbS90bGJmbHVzaC5oCkBAIC01NjksNiArNTY5LDkgQEAgc3RhdGljIGlubGluZSB2b2lkIGZs
dXNoX3RsYl9wYWdlKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLCB1bnNpZ25lZCBsb25nIGEp
CiAJZmx1c2hfdGxiX21tX3JhbmdlKHZtYS0+dm1fbW0sIGEsIGEgKyBQQUdFX1NJWkUsIFBBR0Vf
U0hJRlQsIGZhbHNlKTsKIH0KIAordm9pZCBuYXRpdmVfZmx1c2hfdGxiX211bHRpKGNvbnN0IHN0
cnVjdCBjcHVtYXNrICpjcHVtYXNrLAorCQkJICAgICBjb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2lu
Zm8gKmluZm8pOworCiB2b2lkIG5hdGl2ZV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBj
cHVtYXNrICpjcHVtYXNrLAogCQkJICAgICBjb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmlu
Zm8pOwogCkBAIC01OTMsNiArNTk2LDkgQEAgc3RhdGljIGlubGluZSB2b2lkIGFyY2hfdGxiYmF0
Y2hfYWRkX21tKHN0cnVjdCBhcmNoX3RsYmZsdXNoX3VubWFwX2JhdGNoICpiYXRjaCwKIGV4dGVy
biB2b2lkIGFyY2hfdGxiYmF0Y2hfZmx1c2goc3RydWN0IGFyY2hfdGxiZmx1c2hfdW5tYXBfYmF0
Y2ggKmJhdGNoKTsKIAogI2lmbmRlZiBDT05GSUdfUEFSQVZJUlQKKyNkZWZpbmUgZmx1c2hfdGxi
X211bHRpKG1hc2ssIGluZm8pCVwKKwluYXRpdmVfZmx1c2hfdGxiX211bHRpKG1hc2ssIGluZm8p
CisKICNkZWZpbmUgZmx1c2hfdGxiX290aGVycyhtYXNrLCBpbmZvKQlcCiAJbmF0aXZlX2ZsdXNo
X3RsYl9vdGhlcnMobWFzaywgaW5mbykKIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYva2VybmVsL2t2
bS5jIGIvYXJjaC94ODYva2VybmVsL2t2bS5jCmluZGV4IDUxNjliOGNjMzViYi4uMDBkODFlODk4
NzE3IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rZXJuZWwva3ZtLmMKKysrIGIvYXJjaC94ODYva2Vy
bmVsL2t2bS5jCkBAIC02MzAsNiArNjMwLDcgQEAgc3RhdGljIHZvaWQgX19pbml0IGt2bV9ndWVz
dF9pbml0KHZvaWQpCiAJICAgIGt2bV9wYXJhX2hhc19mZWF0dXJlKEtWTV9GRUFUVVJFX1NURUFM
X1RJTUUpKSB7CiAJCXB2X29wcy5tbXUuZmx1c2hfdGxiX290aGVycyA9IGt2bV9mbHVzaF90bGJf
b3RoZXJzOwogCQlwdl9vcHMubW11LnRsYl9yZW1vdmVfdGFibGUgPSB0bGJfcmVtb3ZlX3RhYmxl
OworCQlzdGF0aWNfa2V5X2Rpc2FibGUoJmZsdXNoX3RsYl9tdWx0aV9lbmFibGVkLmtleSk7CiAJ
fQogCiAJaWYgKGt2bV9wYXJhX2hhc19mZWF0dXJlKEtWTV9GRUFUVVJFX1BWX0VPSSkpCmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9rZXJuZWwvcGFyYXZpcnQuYyBiL2FyY2gveDg2L2tlcm5lbC9wYXJh
dmlydC5jCmluZGV4IDk4MDM5ZDdmYjk5OC4uYWMwMGFmZWQ1NTcwIDEwMDY0NAotLS0gYS9hcmNo
L3g4Ni9rZXJuZWwvcGFyYXZpcnQuYworKysgYi9hcmNoL3g4Ni9rZXJuZWwvcGFyYXZpcnQuYwpA
QCAtMTU5LDYgKzE1OSw4IEBAIHVuc2lnbmVkIHBhcmF2aXJ0X3BhdGNoX2luc25zKHZvaWQgKmlu
c25fYnVmZiwgdW5zaWduZWQgbGVuLAogCXJldHVybiBpbnNuX2xlbjsKIH0KIAorREVGSU5FX1NU
QVRJQ19LRVlfVFJVRShmbHVzaF90bGJfbXVsdGlfZW5hYmxlZCk7CisKIHN0YXRpYyB2b2lkIG5h
dGl2ZV9mbHVzaF90bGIodm9pZCkKIHsKIAlfX25hdGl2ZV9mbHVzaF90bGIoKTsKQEAgLTM2Myw2
ICszNjUsNyBAQCBzdHJ1Y3QgcGFyYXZpcnRfcGF0Y2hfdGVtcGxhdGUgcHZfb3BzID0gewogCS5t
bXUuZmx1c2hfdGxiX3VzZXIJPSBuYXRpdmVfZmx1c2hfdGxiLAogCS5tbXUuZmx1c2hfdGxiX2tl
cm5lbAk9IG5hdGl2ZV9mbHVzaF90bGJfZ2xvYmFsLAogCS5tbXUuZmx1c2hfdGxiX29uZV91c2Vy
CT0gbmF0aXZlX2ZsdXNoX3RsYl9vbmVfdXNlciwKKwkubW11LmZsdXNoX3RsYl9tdWx0aQk9IG5h
dGl2ZV9mbHVzaF90bGJfbXVsdGksCiAJLm1tdS5mbHVzaF90bGJfb3RoZXJzCT0gbmF0aXZlX2Zs
dXNoX3RsYl9vdGhlcnMsCiAJLm1tdS50bGJfcmVtb3ZlX3RhYmxlCT0KIAkJCSh2b2lkICgqKShz
dHJ1Y3QgbW11X2dhdGhlciAqLCB2b2lkICopKXRsYl9yZW1vdmVfcGFnZSwKZGlmZiAtLWdpdCBh
L2FyY2gveDg2L21tL3RsYi5jIGIvYXJjaC94ODYvbW0vdGxiLmMKaW5kZXggYzM0YmNmMDNmMDZm
Li5kYjczZDVmMWRkNDMgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL3RsYi5jCisrKyBiL2FyY2gv
eDg2L21tL3RsYi5jCkBAIC01NTEsNyArNTUxLDcgQEAgc3RhdGljIHZvaWQgZmx1c2hfdGxiX2Z1
bmNfY29tbW9uKGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqZiwKIAkJICogZ2FyYmFnZSBp
bnRvIG91ciBUTEIuICBTaW5jZSBzd2l0Y2hpbmcgdG8gaW5pdF9tbSBpcyBiYXJlbHkKIAkJICog
c2xvd2VyIHRoYW4gYSBtaW5pbWFsIGZsdXNoLCBqdXN0IHN3aXRjaCB0byBpbml0X21tLgogCQkg
KgotCQkgKiBUaGlzIHNob3VsZCBiZSByYXJlLCB3aXRoIG5hdGl2ZV9mbHVzaF90bGJfb3RoZXJz
IHNraXBwaW5nCisJCSAqIFRoaXMgc2hvdWxkIGJlIHJhcmUsIHdpdGggbmF0aXZlX2ZsdXNoX3Rs
Yl9tdWx0aSBza2lwcGluZwogCQkgKiBJUElzIHRvIGxhenkgVExCIG1vZGUgQ1BVcy4KIAkJICov
CiAJCXN3aXRjaF9tbV9pcnFzX29mZihOVUxMLCAmaW5pdF9tbSwgTlVMTCk7CkBAIC02MzUsOSAr
NjM1LDEyIEBAIHN0YXRpYyB2b2lkIGZsdXNoX3RsYl9mdW5jX2NvbW1vbihjb25zdCBzdHJ1Y3Qg
Zmx1c2hfdGxiX2luZm8gKmYsCiAJdGhpc19jcHVfd3JpdGUoY3B1X3RsYnN0YXRlLmN0eHNbbG9h
ZGVkX21tX2FzaWRdLnRsYl9nZW4sIG1tX3RsYl9nZW4pOwogfQogCi1zdGF0aWMgdm9pZCBmbHVz
aF90bGJfZnVuY19sb2NhbChjb25zdCB2b2lkICppbmZvLCBlbnVtIHRsYl9mbHVzaF9yZWFzb24g
cmVhc29uKQorc3RhdGljIHZvaWQgZmx1c2hfdGxiX2Z1bmNfbG9jYWwodm9pZCAqaW5mbykKIHsK
IAljb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmYgPSBpbmZvOworCWVudW0gdGxiX2ZsdXNo
X3JlYXNvbiByZWFzb247CisKKwlyZWFzb24gPSAoZi0+bW0gPT0gTlVMTCkgPyBUTEJfTE9DQUxf
U0hPT1RET1dOIDogVExCX0xPQ0FMX01NX1NIT09URE9XTjsKIAogCWZsdXNoX3RsYl9mdW5jX2Nv
bW1vbihmLCB0cnVlLCByZWFzb24pOwogfQpAQCAtNjU1LDE0ICs2NTgsMjEgQEAgc3RhdGljIHZv
aWQgZmx1c2hfdGxiX2Z1bmNfcmVtb3RlKHZvaWQgKmluZm8pCiAJZmx1c2hfdGxiX2Z1bmNfY29t
bW9uKGYsIGZhbHNlLCBUTEJfUkVNT1RFX1NIT09URE9XTik7CiB9CiAKLXN0YXRpYyBib29sIHRs
Yl9pc19ub3RfbGF6eShpbnQgY3B1LCB2b2lkICpkYXRhKQorc3RhdGljIGlubGluZSBib29sIHRs
Yl9pc19ub3RfbGF6eShpbnQgY3B1KQogewogCXJldHVybiAhcGVyX2NwdShjcHVfdGxic3RhdGUu
aXNfbGF6eSwgY3B1KTsKIH0KIAotdm9pZCBuYXRpdmVfZmx1c2hfdGxiX290aGVycyhjb25zdCBz
dHJ1Y3QgY3B1bWFzayAqY3B1bWFzaywKLQkJCSAgICAgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9p
bmZvICppbmZvKQorc3RhdGljIERFRklORV9QRVJfQ1BVKGNwdW1hc2tfdCwgZmx1c2hfdGxiX21h
c2spOworCit2b2lkIG5hdGl2ZV9mbHVzaF90bGJfbXVsdGkoY29uc3Qgc3RydWN0IGNwdW1hc2sg
KmNwdW1hc2ssCisJCQkgICAgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9pbmZvICppbmZvKQogewor
CS8qCisJICogRG8gYWNjb3VudGluZyBhbmQgdHJhY2luZy4gTm90ZSB0aGF0IHRoZXJlIGFyZSAo
YW5kIGhhdmUgYWx3YXlzIGJlZW4pCisJICogY2FzZXMgaW4gd2hpY2ggYSByZW1vdGUgVExCIGZs
dXNoIHdpbGwgYmUgdHJhY2VkLCBidXQgZXZlbnR1YWxseQorCSAqIHdvdWxkIG5vdCBoYXBwZW4u
CisJICovCiAJY291bnRfdm1fdGxiX2V2ZW50KE5SX1RMQl9SRU1PVEVfRkxVU0gpOwogCWlmIChp
bmZvLT5lbmQgPT0gVExCX0ZMVVNIX0FMTCkKIAkJdHJhY2VfdGxiX2ZsdXNoKFRMQl9SRU1PVEVf
U0VORF9JUEksIFRMQl9GTFVTSF9BTEwpOwpAQCAtNjgyLDEwICs2OTIsMTQgQEAgdm9pZCBuYXRp
dmVfZmx1c2hfdGxiX290aGVycyhjb25zdCBzdHJ1Y3QgY3B1bWFzayAqY3B1bWFzaywKIAkJICog
bWVhbnMgdGhhdCB0aGUgcGVyY3B1IHRsYl9nZW4gdmFyaWFibGVzIHdvbid0IGJlIHVwZGF0ZWQK
IAkJICogYW5kIHdlJ2xsIGRvIHBvaW50bGVzcyBmbHVzaGVzIG9uIGZ1dHVyZSBjb250ZXh0IHN3
aXRjaGVzLgogCQkgKgotCQkgKiBSYXRoZXIgdGhhbiBob29raW5nIG5hdGl2ZV9mbHVzaF90bGJf
b3RoZXJzKCkgaGVyZSwgSSB0aGluaworCQkgKiBSYXRoZXIgdGhhbiBob29raW5nIG5hdGl2ZV9m
bHVzaF90bGJfbXVsdGkoKSBoZXJlLCBJIHRoaW5rCiAJCSAqIHRoYXQgVVYgc2hvdWxkIGJlIHVw
ZGF0ZWQgc28gdGhhdCBzbXBfY2FsbF9mdW5jdGlvbl9tYW55KCksCiAJCSAqIGV0YywgYXJlIG9w
dGltYWwgb24gVVYuCiAJCSAqLworCQlsb2NhbF9pcnFfZGlzYWJsZSgpOworCQlmbHVzaF90bGJf
ZnVuY19sb2NhbCgoX19mb3JjZSB2b2lkICopaW5mbyk7CisJCWxvY2FsX2lycV9lbmFibGUoKTsK
KwogCQljcHVtYXNrID0gdXZfZmx1c2hfdGxiX290aGVycyhjcHVtYXNrLCBpbmZvKTsKIAkJaWYg
KGNwdW1hc2spCiAJCQlzbXBfY2FsbF9mdW5jdGlvbl9tYW55KGNwdW1hc2ssIGZsdXNoX3RsYl9m
dW5jX3JlbW90ZSwKQEAgLTcwNCwxMSArNzE4LDM5IEBAIHZvaWQgbmF0aXZlX2ZsdXNoX3RsYl9v
dGhlcnMoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdW1hc2ssCiAJICogZG9pbmcgYSBzcGVjdWxh
dGl2ZSBtZW1vcnkgYWNjZXNzLgogCSAqLwogCWlmIChpbmZvLT5mcmVlZF90YWJsZXMpCi0JCXNt
cF9jYWxsX2Z1bmN0aW9uX21hbnkoY3B1bWFzaywgZmx1c2hfdGxiX2Z1bmNfcmVtb3RlLAotCQkJ
ICAgICAgICh2b2lkICopaW5mbywgMSk7Ci0JZWxzZQotCQlvbl9lYWNoX2NwdV9jb25kX21hc2so
dGxiX2lzX25vdF9sYXp5LCBmbHVzaF90bGJfZnVuY19yZW1vdGUsCi0JCQkJKHZvaWQgKilpbmZv
LCAxLCBHRlBfQVRPTUlDLCBjcHVtYXNrKTsKKwkJX19zbXBfY2FsbF9mdW5jdGlvbl9tYW55KGNw
dW1hc2ssIGZsdXNoX3RsYl9mdW5jX3JlbW90ZSwKKwkJCQkJIGZsdXNoX3RsYl9mdW5jX2xvY2Fs
LCAodm9pZCAqKWluZm8sIDEpOworCWVsc2UgeworCQkvKgorCQkgKiBBbHRob3VnaCB3ZSBjb3Vs
ZCBoYXZlIHVzZWQgb25fZWFjaF9jcHVfY29uZF9tYXNrKCksCisJCSAqIG9wZW4tY29kaW5nIGl0
IGhhcyBzZXZlcmFsIHBlcmZvcm1hbmNlIGFkdmFudGFnZXM6ICgxKSB3ZSBjYW4KKwkJICogdXNl
IHNwZWNpYWxpemVkIGZ1bmN0aW9ucyBmb3IgcmVtb3RlIGFuZCBsb2NhbCBmbHVzaGVzOyAoMikK
KwkJICogbm8gbmVlZCBmb3IgaW5kaXJlY3QgYnJhbmNoIHRvIHRlc3QgaWYgVExCIGlzIGxhenk7
ICgzKSB3ZQorCQkgKiBjYW4gdXNlIGEgZGVzaWduYXRlZCBjcHVtYXNrIGZvciBldmFsdWF0aW5n
IHRoZSBjb25kaXRpb24KKwkJICogaW5zdGVhZCBvZiBhbGxvY2F0aW5nIGEgbmV3IG9uZS4KKwkJ
ICoKKwkJICogVGhpcyB3b3JrcyB1bmRlciB0aGUgYXNzdW1wdGlvbiB0aGF0IHRoZXJlIGFyZSBu
byBuZXN0ZWQgVExCCisJCSAqIGZsdXNoZXMsIGFuIGFzc3VtcHRpb24gdGhhdCBpcyBhbHJlYWR5
IG1hZGUgaW4KKwkJICogZmx1c2hfdGxiX21tX3JhbmdlKCkuCisJCSAqLworCQlzdHJ1Y3QgY3B1
bWFzayAqY29uZF9jcHVtYXNrID0gdGhpc19jcHVfcHRyKCZmbHVzaF90bGJfbWFzayk7CisJCWlu
dCBjcHU7CisKKwkJY3B1bWFza19jbGVhcihjb25kX2NwdW1hc2spOworCisJCWZvcl9lYWNoX2Nw
dShjcHUsIGNwdW1hc2spIHsKKwkJCWlmICh0bGJfaXNfbm90X2xhenkoY3B1KSkKKwkJCQlfX2Nw
dW1hc2tfc2V0X2NwdShjcHUsIGNvbmRfY3B1bWFzayk7CisJCX0KKwkJX19zbXBfY2FsbF9mdW5j
dGlvbl9tYW55KGNvbmRfY3B1bWFzaywgZmx1c2hfdGxiX2Z1bmNfcmVtb3RlLAorCQkJCQkgZmx1
c2hfdGxiX2Z1bmNfbG9jYWwsICh2b2lkICopaW5mbywgMSk7CisJfQorfQorCit2b2lkIG5hdGl2
ZV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNrLAorCQkJICAg
ICBjb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmluZm8pCit7CisJbmF0aXZlX2ZsdXNoX3Rs
Yl9tdWx0aShjcHVtYXNrLCBpbmZvKTsKIH0KIAogLyoKQEAgLTc3NCwxMCArODE2LDE1IEBAIHN0
YXRpYyB2b2lkIGZsdXNoX3RsYl9vbl9jcHVzKGNvbnN0IGNwdW1hc2tfdCAqY3B1bWFzaywKIHsK
IAlpbnQgdGhpc19jcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CiAKKwlpZiAoc3RhdGljX2JyYW5j
aF9saWtlbHkoJmZsdXNoX3RsYl9tdWx0aV9lbmFibGVkKSkgeworCQlmbHVzaF90bGJfbXVsdGko
Y3B1bWFzaywgaW5mbyk7CisJCXJldHVybjsKKwl9CisKIAlpZiAoY3B1bWFza190ZXN0X2NwdSh0
aGlzX2NwdSwgY3B1bWFzaykpIHsKIAkJbG9ja2RlcF9hc3NlcnRfaXJxc19lbmFibGVkKCk7CiAJ
CWxvY2FsX2lycV9kaXNhYmxlKCk7Ci0JCWZsdXNoX3RsYl9mdW5jX2xvY2FsKGluZm8sIFRMQl9M
T0NBTF9NTV9TSE9PVERPV04pOworCQlmbHVzaF90bGJfZnVuY19sb2NhbCgoX19mb3JjZSB2b2lk
ICopaW5mbyk7CiAJCWxvY2FsX2lycV9lbmFibGUoKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2FyY2gv
eDg2L3hlbi9tbXVfcHYuYyBiL2FyY2gveDg2L3hlbi9tbXVfcHYuYwppbmRleCBiZWI0NGUyMmFm
ZGYuLjBjYjI3Nzg0OGNiNCAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL21tdV9wdi5jCisrKyBi
L2FyY2gveDg2L3hlbi9tbXVfcHYuYwpAQCAtMjQ3NCw2ICsyNDc0LDggQEAgdm9pZCBfX2luaXQg
eGVuX2luaXRfbW11X29wcyh2b2lkKQogCiAJcHZfb3BzLm1tdSA9IHhlbl9tbXVfb3BzOwogCisJ
c3RhdGljX2tleV9kaXNhYmxlKCZmbHVzaF90bGJfbXVsdGlfZW5hYmxlZC5rZXkpOworCiAJbWVt
c2V0KGR1bW15X21hcHBpbmcsIDB4ZmYsIFBBR0VfU0laRSk7CiB9CiAKLS0gCjIuMjAuMQoKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBt
YWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMu
eGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

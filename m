Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 0F3C1174B97
	for <lists+xen-devel@lfdr.de>; Sun,  1 Mar 2020 06:41:31 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1j8HHk-0003NO-5C; Sun, 01 Mar 2020 05:37:04 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=c/WL=4R=gmail.com=yyankovskyi@srs-us1.protection.inumbo.net>)
 id 1j8Ad7-0000XH-O2
 for xen-devel@lists.xenproject.org; Sat, 29 Feb 2020 22:30:41 +0000
X-Inumbo-ID: 1ccfc8f2-5b43-11ea-aea3-bc764e2007e4
Received: from mail-wm1-x344.google.com (unknown [2a00:1450:4864:20::344])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 1ccfc8f2-5b43-11ea-aea3-bc764e2007e4;
 Sat, 29 Feb 2020 22:30:39 +0000 (UTC)
Received: by mail-wm1-x344.google.com with SMTP id u9so1308561wml.3
 for <xen-devel@lists.xenproject.org>; Sat, 29 Feb 2020 14:30:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:mime-version:content-disposition
 :user-agent; bh=+ZCrYsNqKRAIp1fvJ7TMjzlFEYRSD6dPJpjBXOVRGD4=;
 b=WRtP4HmkqKysL0ohaRqjr+Q0UUB0aQEIU0UjHL5KSUOpCwLkEpIdImIOkJATCt5100
 MGRYT21xHwjo1lYc/Gke6sAV9WIUucChyuJz3pIoo0AJJe8mJcTozhJPNOmhzjH4g4Eu
 U7VyQN1D2Z2n7FNOX9ss8zvr4mFkGIcO9w1OOQ66hYo2NTPhV5Gk4ojGx6959k3KF1M7
 J+Casc6vgMC6o40eOHz2oRQpMDxueezmBGUOj7AlU6elj0wea6N0RDtl1htf7z1ou+Vh
 3GBWVaAXpKRpHmOyfTbgpw4dkhadZdLsqbN8d7ftJJ5Npi+j8B7NWUD20uzDuD30KB3u
 +iog==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
 :content-disposition:user-agent;
 bh=+ZCrYsNqKRAIp1fvJ7TMjzlFEYRSD6dPJpjBXOVRGD4=;
 b=bD5o/UuVx1uNVpUMOzS3RBVjrpzZ8ue7tNguF4P62QYn79UK7rOfGh+cenLKetkGBA
 ZCK361c8UyoYj6N9YRuMcb2jHyf7GczpQaKIek2iBNo6J6jhcQnwT6SzyVhxjy9EkOql
 gk2vTbMTC6TLdaefj8XORCwrF+xx2snDu+9N24ytraf4CX4k7uP4x3TQWO5NhB1mvUmT
 w/V3Enp9FwbBUsV6rZ4OEjotDVKgaNn8uLffnRTRzPaMfaWsXaK8LBUjrlrJd3mJA5gZ
 6LsBhqEB84CFHEVpK4L7b7NZ+dkyVJ+MctcpVthGKzFZFNkEyyHO6BTRjx0qrSfhF5EQ
 gFXA==
X-Gm-Message-State: APjAAAWMV+ac+ERdAY+gpE5RJtaxaeyJUeZYW2yFKMhpmjrNQJ3Aokv4
 QosTSiLlSQqtP7+aaaK5DNmGv7LaPCk=
X-Google-Smtp-Source: APXvYqzThlVUPzKaUPbQ1RNyVIkJIZlcYf3QgJiUtf693iU33emVJ8TPsH2ipsvXZMvotoy6GT0PmA==
X-Received: by 2002:a1c:a706:: with SMTP id q6mr10678143wme.23.1583015438403; 
 Sat, 29 Feb 2020 14:30:38 -0800 (PST)
Received: from kbp1-lhp-F74019 (a81-14-236-68.net-htp.de. [81.14.236.68])
 by smtp.gmail.com with ESMTPSA id z14sm19104781wru.31.2020.02.29.14.30.36
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Sat, 29 Feb 2020 14:30:37 -0800 (PST)
Date: Sun, 1 Mar 2020 00:30:35 +0200
From: Yan Yankovskyi <yyankovskyi@gmail.com>
To: Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>
Message-ID: <20200229223035.GA28145@kbp1-lhp-F74019>
MIME-Version: 1.0
Content-Disposition: inline
User-Agent: Mutt/1.9.4 (2018-02-28)
X-Mailman-Approved-At: Sun, 01 Mar 2020 05:37:02 +0000
Subject: [Xen-devel] [PATCH] xen: Use 'unsigned int' instead of 'unsigned'
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

UmVzb2x2ZSB0aGUgZm9sbG93aW5nIHdhcm5pbmcsIHJlcG9ydGVkIGJ5IGNoZWNrcGF0Y2gucGw6
CldBUk5JTkc6IFByZWZlciAndW5zaWduZWQgaW50JyB0byBiYXJlIHVzZSBvZiAndW5zaWduZWQn
CgpObyBmdW5jdGlvbmFsIGNoYW5nZS4KClNpZ25lZC1vZmYtYnk6IFlhbiBZYW5rb3Zza3lpIDx5
eWFua292c2t5aUBnbWFpbC5jb20+Ci0tLQogZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c18ybC5j
ICAgICAgICAgICB8IDE4ICsrLS0tCiBkcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2Jhc2UuYyAg
ICAgICAgIHwgOTIgKysrKysrKysrKysrLS0tLS0tLS0tLS0tCiBkcml2ZXJzL3hlbi9ldmVudHMv
ZXZlbnRzX2ZpZm8uYyAgICAgICAgIHwgNTIgKysrKysrKy0tLS0tLS0KIGRyaXZlcnMveGVuL2V2
ZW50cy9ldmVudHNfaW50ZXJuYWwuaCAgICAgfCA0NiArKysrKystLS0tLS0KIGRyaXZlcnMveGVu
L2V2dGNobi5jICAgICAgICAgICAgICAgICAgICAgfCAgNyArLQogZHJpdmVycy94ZW4vZ3JhbnQt
dGFibGUuYyAgICAgICAgICAgICAgICB8IDEyICsrLS0KIGRyaXZlcnMveGVuL21jZWxvZy5jICAg
ICAgICAgICAgICAgICAgICAgfCAgNiArLQogZHJpdmVycy94ZW4vcHJpdmNtZC5jICAgICAgICAg
ICAgICAgICAgICB8IDEwICstLQogZHJpdmVycy94ZW4veGVuLXNjc2liYWNrLmMgICAgICAgICAg
ICAgICB8ICA4ICstLQogZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19kZXZfZnJvbnRlbmQuYyB8
ICA5ICstLQogZHJpdmVycy94ZW4veGxhdGVfbW11LmMgICAgICAgICAgICAgICAgICB8ICA0ICst
CiAxMSBmaWxlcyBjaGFuZ2VkLCAxMzMgaW5zZXJ0aW9ucygrKSwgMTMxIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfMmwuYyBiL2RyaXZlcnMveGVu
L2V2ZW50cy9ldmVudHNfMmwuYwppbmRleCA4ZWRlZjUxYzkyZTUuLjM4ZmE3NzFmZTNkZSAxMDA2
NDQKLS0tIGEvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c18ybC5jCisrKyBiL2RyaXZlcnMveGVu
L2V2ZW50cy9ldmVudHNfMmwuYwpAQCAtNDIsNDggKzQyLDQ4IEBACiAKIHN0YXRpYyBERUZJTkVf
UEVSX0NQVSh4ZW5fdWxvbmdfdCBbRVZUQ0hOX01BU0tfU0laRV0sIGNwdV9ldnRjaG5fbWFzayk7
CiAKLXN0YXRpYyB1bnNpZ25lZCBldnRjaG5fMmxfbWF4X2NoYW5uZWxzKHZvaWQpCitzdGF0aWMg
dW5zaWduZWQgaW50IGV2dGNobl8ybF9tYXhfY2hhbm5lbHModm9pZCkKIHsKIAlyZXR1cm4gRVZU
Q0hOXzJMX05SX0NIQU5ORUxTOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfYmluZF90b19j
cHUoc3RydWN0IGlycV9pbmZvICppbmZvLCB1bnNpZ25lZCBjcHUpCitzdGF0aWMgdm9pZCBldnRj
aG5fMmxfYmluZF90b19jcHUoc3RydWN0IGlycV9pbmZvICppbmZvLCB1bnNpZ25lZCBpbnQgY3B1
KQogewogCWNsZWFyX2JpdChpbmZvLT5ldnRjaG4sIEJNKHBlcl9jcHUoY3B1X2V2dGNobl9tYXNr
LCBpbmZvLT5jcHUpKSk7CiAJc2V0X2JpdChpbmZvLT5ldnRjaG4sIEJNKHBlcl9jcHUoY3B1X2V2
dGNobl9tYXNrLCBjcHUpKSk7CiB9CiAKLXN0YXRpYyB2b2lkIGV2dGNobl8ybF9jbGVhcl9wZW5k
aW5nKHVuc2lnbmVkIHBvcnQpCitzdGF0aWMgdm9pZCBldnRjaG5fMmxfY2xlYXJfcGVuZGluZyh1
bnNpZ25lZCBpbnQgcG9ydCkKIHsKIAlzdHJ1Y3Qgc2hhcmVkX2luZm8gKnMgPSBIWVBFUlZJU09S
X3NoYXJlZF9pbmZvOwogCXN5bmNfY2xlYXJfYml0KHBvcnQsIEJNKCZzLT5ldnRjaG5fcGVuZGlu
Z1swXSkpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfc2V0X3BlbmRpbmcodW5zaWduZWQg
cG9ydCkKK3N0YXRpYyB2b2lkIGV2dGNobl8ybF9zZXRfcGVuZGluZyh1bnNpZ25lZCBpbnQgcG9y
dCkKIHsKIAlzdHJ1Y3Qgc2hhcmVkX2luZm8gKnMgPSBIWVBFUlZJU09SX3NoYXJlZF9pbmZvOwog
CXN5bmNfc2V0X2JpdChwb3J0LCBCTSgmcy0+ZXZ0Y2huX3BlbmRpbmdbMF0pKTsKIH0KIAotc3Rh
dGljIGJvb2wgZXZ0Y2huXzJsX2lzX3BlbmRpbmcodW5zaWduZWQgcG9ydCkKK3N0YXRpYyBib29s
IGV2dGNobl8ybF9pc19wZW5kaW5nKHVuc2lnbmVkIGludCBwb3J0KQogewogCXN0cnVjdCBzaGFy
ZWRfaW5mbyAqcyA9IEhZUEVSVklTT1Jfc2hhcmVkX2luZm87CiAJcmV0dXJuIHN5bmNfdGVzdF9i
aXQocG9ydCwgQk0oJnMtPmV2dGNobl9wZW5kaW5nWzBdKSk7CiB9CiAKLXN0YXRpYyBib29sIGV2
dGNobl8ybF90ZXN0X2FuZF9zZXRfbWFzayh1bnNpZ25lZCBwb3J0KQorc3RhdGljIGJvb2wgZXZ0
Y2huXzJsX3Rlc3RfYW5kX3NldF9tYXNrKHVuc2lnbmVkIGludCBwb3J0KQogewogCXN0cnVjdCBz
aGFyZWRfaW5mbyAqcyA9IEhZUEVSVklTT1Jfc2hhcmVkX2luZm87CiAJcmV0dXJuIHN5bmNfdGVz
dF9hbmRfc2V0X2JpdChwb3J0LCBCTSgmcy0+ZXZ0Y2huX21hc2tbMF0pKTsKIH0KIAotc3RhdGlj
IHZvaWQgZXZ0Y2huXzJsX21hc2sodW5zaWduZWQgcG9ydCkKK3N0YXRpYyB2b2lkIGV2dGNobl8y
bF9tYXNrKHVuc2lnbmVkIGludCBwb3J0KQogewogCXN0cnVjdCBzaGFyZWRfaW5mbyAqcyA9IEhZ
UEVSVklTT1Jfc2hhcmVkX2luZm87CiAJc3luY19zZXRfYml0KHBvcnQsIEJNKCZzLT5ldnRjaG5f
bWFza1swXSkpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfdW5tYXNrKHVuc2lnbmVkIHBv
cnQpCitzdGF0aWMgdm9pZCBldnRjaG5fMmxfdW5tYXNrKHVuc2lnbmVkIGludCBwb3J0KQogewog
CXN0cnVjdCBzaGFyZWRfaW5mbyAqcyA9IEhZUEVSVklTT1Jfc2hhcmVkX2luZm87CiAJdW5zaWdu
ZWQgaW50IGNwdSA9IGdldF9jcHUoKTsKQEAgLTE1OSw3ICsxNTksNyBAQCBzdGF0aWMgaW5saW5l
IHhlbl91bG9uZ190IGFjdGl2ZV9ldnRjaG5zKHVuc2lnbmVkIGludCBjcHUsCiAgKiBhIGJpdHNl
dCBvZiB3b3JkcyB3aGljaCBjb250YWluIHBlbmRpbmcgZXZlbnQgYml0cy4gIFRoZSBzZWNvbmQK
ICAqIGxldmVsIGlzIGEgYml0c2V0IG9mIHBlbmRpbmcgZXZlbnRzIHRoZW1zZWx2ZXMuCiAgKi8K
LXN0YXRpYyB2b2lkIGV2dGNobl8ybF9oYW5kbGVfZXZlbnRzKHVuc2lnbmVkIGNwdSkKK3N0YXRp
YyB2b2lkIGV2dGNobl8ybF9oYW5kbGVfZXZlbnRzKHVuc2lnbmVkIGludCBjcHUpCiB7CiAJaW50
IGlycTsKIAl4ZW5fdWxvbmdfdCBwZW5kaW5nX3dvcmRzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy94
ZW4vZXZlbnRzL2V2ZW50c19iYXNlLmMgYi9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2Jhc2Uu
YwppbmRleCA0OTllZmY3ZDNmNjUuLjYzODhkMDcxNjFlYSAxMDA2NDQKLS0tIGEvZHJpdmVycy94
ZW4vZXZlbnRzL2V2ZW50c19iYXNlLmMKKysrIGIvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c19i
YXNlLmMKQEAgLTgyLDcgKzgyLDcgQEAgaW50ICoqZXZ0Y2huX3RvX2lycTsKICNpZmRlZiBDT05G
SUdfWDg2CiBzdGF0aWMgdW5zaWduZWQgbG9uZyAqcGlycV9lb2lfbWFwOwogI2VuZGlmCi1zdGF0
aWMgYm9vbCAoKnBpcnFfbmVlZHNfZW9pKSh1bnNpZ25lZCBpcnEpOworc3RhdGljIGJvb2wgKCpw
aXJxX25lZWRzX2VvaSkodW5zaWduZWQgaW50IGlycSk7CiAKICNkZWZpbmUgRVZUQ0hOX1JPVyhl
KSAgKGUgLyAoUEFHRV9TSVpFL3NpemVvZigqKmV2dGNobl90b19pcnEpKSkKICNkZWZpbmUgRVZU
Q0hOX0NPTChlKSAgKGUgJSAoUEFHRV9TSVpFL3NpemVvZigqKmV2dGNobl90b19pcnEpKSkKQEAg
LTk3LDkgKzk3LDkgQEAgc3RhdGljIHN0cnVjdCBpcnFfY2hpcCB4ZW5fcGlycV9jaGlwOwogc3Rh
dGljIHZvaWQgZW5hYmxlX2R5bmlycShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEpOwogc3RhdGljIHZv
aWQgZGlzYWJsZV9keW5pcnEoc3RydWN0IGlycV9kYXRhICpkYXRhKTsKIAotc3RhdGljIHZvaWQg
Y2xlYXJfZXZ0Y2huX3RvX2lycV9yb3codW5zaWduZWQgcm93KQorc3RhdGljIHZvaWQgY2xlYXJf
ZXZ0Y2huX3RvX2lycV9yb3codW5zaWduZWQgaW50IHJvdykKIHsKLQl1bnNpZ25lZCBjb2w7CisJ
dW5zaWduZWQgaW50IGNvbDsKIAogCWZvciAoY29sID0gMDsgY29sIDwgRVZUQ0hOX1BFUl9ST1c7
IGNvbCsrKQogCQlldnRjaG5fdG9faXJxW3Jvd11bY29sXSA9IC0xOwpAQCAtMTA3LDcgKzEwNyw3
IEBAIHN0YXRpYyB2b2lkIGNsZWFyX2V2dGNobl90b19pcnFfcm93KHVuc2lnbmVkIHJvdykKIAog
c3RhdGljIHZvaWQgY2xlYXJfZXZ0Y2huX3RvX2lycV9hbGwodm9pZCkKIHsKLQl1bnNpZ25lZCBy
b3c7CisJdW5zaWduZWQgaW50IHJvdzsKIAogCWZvciAocm93ID0gMDsgcm93IDwgRVZUQ0hOX1JP
Vyh4ZW5fZXZ0Y2huX21heF9jaGFubmVscygpKTsgcm93KyspIHsKIAkJaWYgKGV2dGNobl90b19p
cnFbcm93XSA9PSBOVUxMKQpAQCAtMTE2LDEwICsxMTYsMTAgQEAgc3RhdGljIHZvaWQgY2xlYXJf
ZXZ0Y2huX3RvX2lycV9hbGwodm9pZCkKIAl9CiB9CiAKLXN0YXRpYyBpbnQgc2V0X2V2dGNobl90
b19pcnEodW5zaWduZWQgZXZ0Y2huLCB1bnNpZ25lZCBpcnEpCitzdGF0aWMgaW50IHNldF9ldnRj
aG5fdG9faXJxKHVuc2lnbmVkIGludCBldnRjaG4sIHVuc2lnbmVkIGludCBpcnEpCiB7Ci0JdW5z
aWduZWQgcm93OwotCXVuc2lnbmVkIGNvbDsKKwl1bnNpZ25lZCBpbnQgcm93OworCXVuc2lnbmVk
IGludCBjb2w7CiAKIAlpZiAoZXZ0Y2huID49IHhlbl9ldnRjaG5fbWF4X2NoYW5uZWxzKCkpCiAJ
CXJldHVybiAtRUlOVkFMOwpAQCAtMTQzLDcgKzE0Myw3IEBAIHN0YXRpYyBpbnQgc2V0X2V2dGNo
bl90b19pcnEodW5zaWduZWQgZXZ0Y2huLCB1bnNpZ25lZCBpcnEpCiAJcmV0dXJuIDA7CiB9CiAK
LWludCBnZXRfZXZ0Y2huX3RvX2lycSh1bnNpZ25lZCBldnRjaG4pCitpbnQgZ2V0X2V2dGNobl90
b19pcnEodW5zaWduZWQgaW50IGV2dGNobikKIHsKIAlpZiAoZXZ0Y2huID49IHhlbl9ldnRjaG5f
bWF4X2NoYW5uZWxzKCkpCiAJCXJldHVybiAtMTsKQEAgLTE1MywxNiArMTUzLDE2IEBAIGludCBn
ZXRfZXZ0Y2huX3RvX2lycSh1bnNpZ25lZCBldnRjaG4pCiB9CiAKIC8qIEdldCBpbmZvIGZvciBJ
UlEgKi8KLXN0cnVjdCBpcnFfaW5mbyAqaW5mb19mb3JfaXJxKHVuc2lnbmVkIGlycSkKK3N0cnVj
dCBpcnFfaW5mbyAqaW5mb19mb3JfaXJxKHVuc2lnbmVkIGludCBpcnEpCiB7CiAJcmV0dXJuIGly
cV9nZXRfaGFuZGxlcl9kYXRhKGlycSk7CiB9CiAKIC8qIENvbnN0cnVjdG9ycyBmb3IgcGFja2Vk
IElSUSBpbmZvcm1hdGlvbi4gKi8KIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2NvbW1vbl9zZXR1
cChzdHJ1Y3QgaXJxX2luZm8gKmluZm8sCi0JCQkJICAgICB1bnNpZ25lZCBpcnEsCisJCQkJICAg
ICB1bnNpZ25lZCBpbnQgaXJxLAogCQkJCSAgICAgZW51bSB4ZW5faXJxX3R5cGUgdHlwZSwKLQkJ
CQkgICAgIHVuc2lnbmVkIGV2dGNobiwKKwkJCQkgICAgIHVuc2lnbmVkIGludCBldnRjaG4sCiAJ
CQkJICAgICB1bnNpZ25lZCBzaG9ydCBjcHUpCiB7CiAJaW50IHJldDsKQEAgLTE4MywxNyArMTgz
LDE3IEBAIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2NvbW1vbl9zZXR1cChzdHJ1Y3QgaXJxX2lu
Zm8gKmluZm8sCiAJcmV0dXJuIHhlbl9ldnRjaG5fcG9ydF9zZXR1cChpbmZvKTsKIH0KIAotc3Rh
dGljIGludCB4ZW5faXJxX2luZm9fZXZ0Y2huX3NldHVwKHVuc2lnbmVkIGlycSwKLQkJCQkgICAg
IHVuc2lnbmVkIGV2dGNobikKK3N0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2V2dGNobl9zZXR1cCh1
bnNpZ25lZCBpbnQgaXJxLAorCQkJCSAgICAgdW5zaWduZWQgaW50IGV2dGNobikKIHsKIAlzdHJ1
Y3QgaXJxX2luZm8gKmluZm8gPSBpbmZvX2Zvcl9pcnEoaXJxKTsKIAogCXJldHVybiB4ZW5faXJx
X2luZm9fY29tbW9uX3NldHVwKGluZm8sIGlycSwgSVJRVF9FVlRDSE4sIGV2dGNobiwgMCk7CiB9
CiAKLXN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2lwaV9zZXR1cCh1bnNpZ25lZCBjcHUsCi0JCQkJ
ICB1bnNpZ25lZCBpcnEsCi0JCQkJICB1bnNpZ25lZCBldnRjaG4sCitzdGF0aWMgaW50IHhlbl9p
cnFfaW5mb19pcGlfc2V0dXAodW5zaWduZWQgaW50IGNwdSwKKwkJCQkgIHVuc2lnbmVkIGludCBp
cnEsCisJCQkJICB1bnNpZ25lZCBpbnQgZXZ0Y2huLAogCQkJCSAgZW51bSBpcGlfdmVjdG9yIGlw
aSkKIHsKIAlzdHJ1Y3QgaXJxX2luZm8gKmluZm8gPSBpbmZvX2Zvcl9pcnEoaXJxKTsKQEAgLTIw
NSwxMCArMjA1LDEwIEBAIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2lwaV9zZXR1cCh1bnNpZ25l
ZCBjcHUsCiAJcmV0dXJuIHhlbl9pcnFfaW5mb19jb21tb25fc2V0dXAoaW5mbywgaXJxLCBJUlFU
X0lQSSwgZXZ0Y2huLCAwKTsKIH0KIAotc3RhdGljIGludCB4ZW5faXJxX2luZm9fdmlycV9zZXR1
cCh1bnNpZ25lZCBjcHUsCi0JCQkJICAgdW5zaWduZWQgaXJxLAotCQkJCSAgIHVuc2lnbmVkIGV2
dGNobiwKLQkJCQkgICB1bnNpZ25lZCB2aXJxKQorc3RhdGljIGludCB4ZW5faXJxX2luZm9fdmly
cV9zZXR1cCh1bnNpZ25lZCBpbnQgY3B1LAorCQkJCSAgIHVuc2lnbmVkIGludCBpcnEsCisJCQkJ
ICAgdW5zaWduZWQgaW50IGV2dGNobiwKKwkJCQkgICB1bnNpZ25lZCBpbnQgdmlycSkKIHsKIAlz
dHJ1Y3QgaXJxX2luZm8gKmluZm8gPSBpbmZvX2Zvcl9pcnEoaXJxKTsKIApAQCAtMjE5LDEwICsy
MTksMTAgQEAgc3RhdGljIGludCB4ZW5faXJxX2luZm9fdmlycV9zZXR1cCh1bnNpZ25lZCBjcHUs
CiAJcmV0dXJuIHhlbl9pcnFfaW5mb19jb21tb25fc2V0dXAoaW5mbywgaXJxLCBJUlFUX1ZJUlEs
IGV2dGNobiwgMCk7CiB9CiAKLXN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX3BpcnFfc2V0dXAodW5z
aWduZWQgaXJxLAotCQkJCSAgIHVuc2lnbmVkIGV2dGNobiwKLQkJCQkgICB1bnNpZ25lZCBwaXJx
LAotCQkJCSAgIHVuc2lnbmVkIGdzaSwKK3N0YXRpYyBpbnQgeGVuX2lycV9pbmZvX3BpcnFfc2V0
dXAodW5zaWduZWQgaW50IGlycSwKKwkJCQkgICB1bnNpZ25lZCBpbnQgZXZ0Y2huLAorCQkJCSAg
IHVuc2lnbmVkIGludCBwaXJxLAorCQkJCSAgIHVuc2lnbmVkIGludCBnc2ksCiAJCQkJICAgdWlu
dDE2X3QgZG9taWQsCiAJCQkJICAgdW5zaWduZWQgY2hhciBmbGFncykKIHsKQEAgLTI0NSw3ICsy
NDUsNyBAQCBzdGF0aWMgdm9pZCB4ZW5faXJxX2luZm9fY2xlYW51cChzdHJ1Y3QgaXJxX2luZm8g
KmluZm8pCiAvKgogICogQWNjZXNzb3JzIGZvciBwYWNrZWQgSVJRIGluZm9ybWF0aW9uLgogICov
Ci11bnNpZ25lZCBpbnQgZXZ0Y2huX2Zyb21faXJxKHVuc2lnbmVkIGlycSkKK3Vuc2lnbmVkIGlu
dCBldnRjaG5fZnJvbV9pcnEodW5zaWduZWQgaW50IGlycSkKIHsKIAlpZiAoV0FSTihpcnEgPj0g
bnJfaXJxcywgIkludmFsaWQgaXJxICVkIVxuIiwgaXJxKSkKIAkJcmV0dXJuIDA7CkBAIC0yNTMs
NyArMjUzLDcgQEAgdW5zaWduZWQgaW50IGV2dGNobl9mcm9tX2lycSh1bnNpZ25lZCBpcnEpCiAJ
cmV0dXJuIGluZm9fZm9yX2lycShpcnEpLT5ldnRjaG47CiB9CiAKLXVuc2lnbmVkIGlycV9mcm9t
X2V2dGNobih1bnNpZ25lZCBpbnQgZXZ0Y2huKQordW5zaWduZWQgaW50IGlycV9mcm9tX2V2dGNo
bih1bnNpZ25lZCBpbnQgZXZ0Y2huKQogewogCXJldHVybiBnZXRfZXZ0Y2huX3RvX2lycShldnRj
aG4pOwogfQpAQCAtMjY0LDcgKzI2NCw3IEBAIGludCBpcnFfZnJvbV92aXJxKHVuc2lnbmVkIGlu
dCBjcHUsIHVuc2lnbmVkIGludCB2aXJxKQogCXJldHVybiBwZXJfY3B1KHZpcnFfdG9faXJxLCBj
cHUpW3ZpcnFdOwogfQogCi1zdGF0aWMgZW51bSBpcGlfdmVjdG9yIGlwaV9mcm9tX2lycSh1bnNp
Z25lZCBpcnEpCitzdGF0aWMgZW51bSBpcGlfdmVjdG9yIGlwaV9mcm9tX2lycSh1bnNpZ25lZCBp
bnQgaXJxKQogewogCXN0cnVjdCBpcnFfaW5mbyAqaW5mbyA9IGluZm9fZm9yX2lycShpcnEpOwog
CkBAIC0yNzQsNyArMjc0LDcgQEAgc3RhdGljIGVudW0gaXBpX3ZlY3RvciBpcGlfZnJvbV9pcnEo
dW5zaWduZWQgaXJxKQogCXJldHVybiBpbmZvLT51LmlwaTsKIH0KIAotc3RhdGljIHVuc2lnbmVk
IHZpcnFfZnJvbV9pcnEodW5zaWduZWQgaXJxKQorc3RhdGljIHVuc2lnbmVkIGludCB2aXJxX2Zy
b21faXJxKHVuc2lnbmVkIGludCBpcnEpCiB7CiAJc3RydWN0IGlycV9pbmZvICppbmZvID0gaW5m
b19mb3JfaXJxKGlycSk7CiAKQEAgLTI4NCw3ICsyODQsNyBAQCBzdGF0aWMgdW5zaWduZWQgdmly
cV9mcm9tX2lycSh1bnNpZ25lZCBpcnEpCiAJcmV0dXJuIGluZm8tPnUudmlycTsKIH0KIAotc3Rh
dGljIHVuc2lnbmVkIHBpcnFfZnJvbV9pcnEodW5zaWduZWQgaXJxKQorc3RhdGljIHVuc2lnbmVk
IGludCBwaXJxX2Zyb21faXJxKHVuc2lnbmVkIGludCBpcnEpCiB7CiAJc3RydWN0IGlycV9pbmZv
ICppbmZvID0gaW5mb19mb3JfaXJxKGlycSk7CiAKQEAgLTI5NCwxMiArMjk0LDEyIEBAIHN0YXRp
YyB1bnNpZ25lZCBwaXJxX2Zyb21faXJxKHVuc2lnbmVkIGlycSkKIAlyZXR1cm4gaW5mby0+dS5w
aXJxLnBpcnE7CiB9CiAKLXN0YXRpYyBlbnVtIHhlbl9pcnFfdHlwZSB0eXBlX2Zyb21faXJxKHVu
c2lnbmVkIGlycSkKK3N0YXRpYyBlbnVtIHhlbl9pcnFfdHlwZSB0eXBlX2Zyb21faXJxKHVuc2ln
bmVkIGludCBpcnEpCiB7CiAJcmV0dXJuIGluZm9fZm9yX2lycShpcnEpLT50eXBlOwogfQogCi11
bnNpZ25lZCBjcHVfZnJvbV9pcnEodW5zaWduZWQgaXJxKQordW5zaWduZWQgaW50IGNwdV9mcm9t
X2lycSh1bnNpZ25lZCBpbnQgaXJxKQogewogCXJldHVybiBpbmZvX2Zvcl9pcnEoaXJxKS0+Y3B1
OwogfQpAQCAtMzA3LDcgKzMwNyw3IEBAIHVuc2lnbmVkIGNwdV9mcm9tX2lycSh1bnNpZ25lZCBp
cnEpCiB1bnNpZ25lZCBpbnQgY3B1X2Zyb21fZXZ0Y2huKHVuc2lnbmVkIGludCBldnRjaG4pCiB7
CiAJaW50IGlycSA9IGdldF9ldnRjaG5fdG9faXJxKGV2dGNobik7Ci0JdW5zaWduZWQgcmV0ID0g
MDsKKwl1bnNpZ25lZCBpbnQgcmV0ID0gMDsKIAogCWlmIChpcnEgIT0gLTEpCiAJCXJldCA9IGNw
dV9mcm9tX2lycShpcnEpOwpAQCAtMzE2LDEzICszMTYsMTMgQEAgdW5zaWduZWQgaW50IGNwdV9m
cm9tX2V2dGNobih1bnNpZ25lZCBpbnQgZXZ0Y2huKQogfQogCiAjaWZkZWYgQ09ORklHX1g4Ngot
c3RhdGljIGJvb2wgcGlycV9jaGVja19lb2lfbWFwKHVuc2lnbmVkIGlycSkKK3N0YXRpYyBib29s
IHBpcnFfY2hlY2tfZW9pX21hcCh1bnNpZ25lZCBpbnQgaXJxKQogewogCXJldHVybiB0ZXN0X2Jp
dChwaXJxX2Zyb21faXJxKGlycSksIHBpcnFfZW9pX21hcCk7CiB9CiAjZW5kaWYKIAotc3RhdGlj
IGJvb2wgcGlycV9uZWVkc19lb2lfZmxhZyh1bnNpZ25lZCBpcnEpCitzdGF0aWMgYm9vbCBwaXJx
X25lZWRzX2VvaV9mbGFnKHVuc2lnbmVkIGludCBpcnEpCiB7CiAJc3RydWN0IGlycV9pbmZvICpp
bmZvID0gaW5mb19mb3JfaXJxKGlycSk7CiAJQlVHX09OKGluZm8tPnR5cGUgIT0gSVJRVF9QSVJR
KTsKQEAgLTM2MSw3ICszNjEsNyBAQCB2b2lkIG5vdGlmeV9yZW1vdGVfdmlhX2lycShpbnQgaXJx
KQogfQogRVhQT1JUX1NZTUJPTF9HUEwobm90aWZ5X3JlbW90ZV92aWFfaXJxKTsKIAotc3RhdGlj
IHZvaWQgeGVuX2lycV9pbml0KHVuc2lnbmVkIGlycSkKK3N0YXRpYyB2b2lkIHhlbl9pcnFfaW5p
dCh1bnNpZ25lZCBpbnQgaXJxKQogewogCXN0cnVjdCBpcnFfaW5mbyAqaW5mbzsKICNpZmRlZiBD
T05GSUdfU01QCkBAIC0zOTksNyArMzk5LDcgQEAgc3RhdGljIGlubGluZSBpbnQgX19tdXN0X2No
ZWNrIHhlbl9hbGxvY2F0ZV9pcnFfZHluYW1pYyh2b2lkKQogCXJldHVybiB4ZW5fYWxsb2NhdGVf
aXJxc19keW5hbWljKDEpOwogfQogCi1zdGF0aWMgaW50IF9fbXVzdF9jaGVjayB4ZW5fYWxsb2Nh
dGVfaXJxX2dzaSh1bnNpZ25lZCBnc2kpCitzdGF0aWMgaW50IF9fbXVzdF9jaGVjayB4ZW5fYWxs
b2NhdGVfaXJxX2dzaSh1bnNpZ25lZCBpbnQgZ3NpKQogewogCWludCBpcnE7CiAKQEAgLTQyMyw3
ICs0MjMsNyBAQCBzdGF0aWMgaW50IF9fbXVzdF9jaGVjayB4ZW5fYWxsb2NhdGVfaXJxX2dzaSh1
bnNpZ25lZCBnc2kpCiAJcmV0dXJuIGlycTsKIH0KIAotc3RhdGljIHZvaWQgeGVuX2ZyZWVfaXJx
KHVuc2lnbmVkIGlycSkKK3N0YXRpYyB2b2lkIHhlbl9mcmVlX2lycSh1bnNpZ25lZCBpbnQgaXJx
KQogewogCXN0cnVjdCBpcnFfaW5mbyAqaW5mbyA9IGlycV9nZXRfaGFuZGxlcl9kYXRhKGlycSk7
CiAKQEAgLTU2MSw3ICs1NjEsNyBAQCBzdGF0aWMgdm9pZCBzaHV0ZG93bl9waXJxKHN0cnVjdCBp
cnFfZGF0YSAqZGF0YSkKIHsKIAl1bnNpZ25lZCBpbnQgaXJxID0gZGF0YS0+aXJxOwogCXN0cnVj
dCBpcnFfaW5mbyAqaW5mbyA9IGluZm9fZm9yX2lycShpcnEpOwotCXVuc2lnbmVkIGV2dGNobiA9
IGV2dGNobl9mcm9tX2lycShpcnEpOworCXVuc2lnbmVkIGludCBldnRjaG4gPSBldnRjaG5fZnJv
bV9pcnEoaXJxKTsKIAogCUJVR19PTihpbmZvLT50eXBlICE9IElSUVRfUElSUSk7CiAKQEAgLTU4
Myw3ICs1ODMsNyBAQCBzdGF0aWMgdm9pZCBkaXNhYmxlX3BpcnEoc3RydWN0IGlycV9kYXRhICpk
YXRhKQogCWRpc2FibGVfZHluaXJxKGRhdGEpOwogfQogCi1pbnQgeGVuX2lycV9mcm9tX2dzaSh1
bnNpZ25lZCBnc2kpCitpbnQgeGVuX2lycV9mcm9tX2dzaSh1bnNpZ25lZCBpbnQgZ3NpKQogewog
CXN0cnVjdCBpcnFfaW5mbyAqaW5mbzsKIApAQCAtNjQyLDggKzY0Miw4IEBAIHN0YXRpYyB2b2lk
IF9fdW5iaW5kX2Zyb21faXJxKHVuc2lnbmVkIGludCBpcnEpCiAgKiBTaGFyZWFibGUgaW1wbGll
cyBsZXZlbCB0cmlnZ2VyZWQsIG5vdCBzaGFyZWFibGUgaW1wbGllcyBlZGdlCiAgKiB0cmlnZ2Vy
ZWQgaGVyZS4KICAqLwotaW50IHhlbl9iaW5kX3BpcnFfZ3NpX3RvX2lycSh1bnNpZ25lZCBnc2ks
Ci0JCQkgICAgIHVuc2lnbmVkIHBpcnEsIGludCBzaGFyZWFibGUsIGNoYXIgKm5hbWUpCitpbnQg
eGVuX2JpbmRfcGlycV9nc2lfdG9faXJxKHVuc2lnbmVkIGludCBnc2ksCisJCQkgICAgIHVuc2ln
bmVkIGludCBwaXJxLCBpbnQgc2hhcmVhYmxlLCBjaGFyICpuYW1lKQogewogCWludCBpcnEgPSAt
MTsKIAlzdHJ1Y3QgcGh5c2Rldl9pcnEgaXJxX29wOwpAQCAtNzk4LDcgKzc5OCw3IEBAIGludCB4
ZW5fZGVzdHJveV9pcnEoaW50IGlycSkKIAlyZXR1cm4gcmM7CiB9CiAKLWludCB4ZW5faXJxX2Zy
b21fcGlycSh1bnNpZ25lZCBwaXJxKQoraW50IHhlbl9pcnFfZnJvbV9waXJxKHVuc2lnbmVkIGlu
dCBwaXJxKQogewogCWludCBpcnE7CiAKQEAgLTgyMSw3ICs4MjEsNyBAQCBpbnQgeGVuX2lycV9m
cm9tX3BpcnEodW5zaWduZWQgcGlycSkKIH0KIAogCi1pbnQgeGVuX3BpcnFfZnJvbV9pcnEodW5z
aWduZWQgaXJxKQoraW50IHhlbl9waXJxX2Zyb21faXJxKHVuc2lnbmVkIGludCBpcnEpCiB7CiAJ
cmV0dXJuIHBpcnFfZnJvbV9pcnEoaXJxKTsKIH0KQEAgLTk1Myw3ICs5NTMsNyBAQCBzdGF0aWMg
aW50IGZpbmRfdmlycSh1bnNpZ25lZCBpbnQgdmlycSwgdW5zaWduZWQgaW50IGNwdSkKICAqIGh5
cGVydmlzb3IgQUJJLiBVc2UgeGVuX2V2dGNobl9tYXhfY2hhbm5lbHMoKSBmb3IgdGhlIG1heGlt
dW0KICAqIHN1cHBvcnRlZC4KICAqLwotdW5zaWduZWQgeGVuX2V2dGNobl9ucl9jaGFubmVscyh2
b2lkKQordW5zaWduZWQgaW50IHhlbl9ldnRjaG5fbnJfY2hhbm5lbHModm9pZCkKIHsKICAgICAg
ICAgcmV0dXJuIGV2dGNobl9vcHMtPm5yX2NoYW5uZWxzKCk7CiB9CkBAIC0xMTIwLDcgKzExMjAs
NyBAQCBFWFBPUlRfU1lNQk9MX0dQTCh1bmJpbmRfZnJvbV9pcnFoYW5kbGVyKTsKICAqIEBpcnE6
aXJxIGJvdW5kIHRvIGFuIGV2ZW50IGNoYW5uZWwuCiAgKiBAcHJpb3JpdHk6IHByaW9yaXR5IGJl
dHdlZW4gWEVOX0lSUV9QUklPUklUWV9NQVggYW5kIFhFTl9JUlFfUFJJT1JJVFlfTUlOLgogICov
Ci1pbnQgeGVuX3NldF9pcnFfcHJpb3JpdHkodW5zaWduZWQgaXJxLCB1bnNpZ25lZCBwcmlvcml0
eSkKK2ludCB4ZW5fc2V0X2lycV9wcmlvcml0eSh1bnNpZ25lZCBpbnQgaXJxLCB1bnNpZ25lZCBp
bnQgcHJpb3JpdHkpCiB7CiAJc3RydWN0IGV2dGNobl9zZXRfcHJpb3JpdHkgc2V0X3ByaW9yaXR5
OwogCkBAIC0xMzIyLDcgKzEzMjIsNyBAQCBzdGF0aWMgaW50IHhlbl9yZWJpbmRfZXZ0Y2huX3Rv
X2NwdShpbnQgZXZ0Y2huLCB1bnNpZ25lZCBpbnQgdGNwdSkKIHN0YXRpYyBpbnQgc2V0X2FmZmlu
aXR5X2lycShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEsIGNvbnN0IHN0cnVjdCBjcHVtYXNrICpkZXN0
LAogCQkJICAgIGJvb2wgZm9yY2UpCiB7Ci0JdW5zaWduZWQgdGNwdSA9IGNwdW1hc2tfZmlyc3Rf
YW5kKGRlc3QsIGNwdV9vbmxpbmVfbWFzayk7CisJdW5zaWduZWQgaW50IHRjcHUgPSBjcHVtYXNr
X2ZpcnN0X2FuZChkZXN0LCBjcHVfb25saW5lX21hc2spOwogCWludCByZXQgPSB4ZW5fcmViaW5k
X2V2dGNobl90b19jcHUoZXZ0Y2huX2Zyb21faXJxKGRhdGEtPmlycSksIHRjcHUpOwogCiAJaWYg
KCFyZXQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ZpZm8uYyBiL2Ry
aXZlcnMveGVuL2V2ZW50cy9ldmVudHNfZmlmby5jCmluZGV4IDc2YjMxOGU4ODM4Mi4uZTcyNGY2
NjJhY2QzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ZpZm8uYworKysg
Yi9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ZpZm8uYwpAQCAtNjQsNyArNjQsNyBAQCBzdHJ1
Y3QgZXZ0Y2huX2ZpZm9fcXVldWUgewogc3RhdGljIERFRklORV9QRVJfQ1BVKHN0cnVjdCBldnRj
aG5fZmlmb19jb250cm9sX2Jsb2NrICosIGNwdV9jb250cm9sX2Jsb2NrKTsKIHN0YXRpYyBERUZJ
TkVfUEVSX0NQVShzdHJ1Y3QgZXZ0Y2huX2ZpZm9fcXVldWUsIGNwdV9xdWV1ZSk7CiBzdGF0aWMg
ZXZlbnRfd29yZF90ICpldmVudF9hcnJheVtNQVhfRVZFTlRfQVJSQVlfUEFHRVNdIF9fcmVhZF9t
b3N0bHk7Ci1zdGF0aWMgdW5zaWduZWQgZXZlbnRfYXJyYXlfcGFnZXMgX19yZWFkX21vc3RseTsK
K3N0YXRpYyB1bnNpZ25lZCBpbnQgZXZlbnRfYXJyYXlfcGFnZXMgX19yZWFkX21vc3RseTsKIAog
LyoKICAqIHN5bmNfc2V0X2JpdCgpIGFuZCBmcmllbmRzIG11c3QgYmUgdW5zaWduZWQgbG9uZyBh
bGlnbmVkLgpAQCAtODIsMTkgKzgyLDE5IEBAIHN0YXRpYyB1bnNpZ25lZCBldmVudF9hcnJheV9w
YWdlcyBfX3JlYWRfbW9zdGx5OwogCiAjZW5kaWYKIAotc3RhdGljIGlubGluZSBldmVudF93b3Jk
X3QgKmV2ZW50X3dvcmRfZnJvbV9wb3J0KHVuc2lnbmVkIHBvcnQpCitzdGF0aWMgaW5saW5lIGV2
ZW50X3dvcmRfdCAqZXZlbnRfd29yZF9mcm9tX3BvcnQodW5zaWduZWQgaW50IHBvcnQpCiB7Ci0J
dW5zaWduZWQgaSA9IHBvcnQgLyBFVkVOVF9XT1JEU19QRVJfUEFHRTsKKwl1bnNpZ25lZCBpbnQg
aSA9IHBvcnQgLyBFVkVOVF9XT1JEU19QRVJfUEFHRTsKIAogCXJldHVybiBldmVudF9hcnJheVtp
XSArIHBvcnQgJSBFVkVOVF9XT1JEU19QRVJfUEFHRTsKIH0KIAotc3RhdGljIHVuc2lnbmVkIGV2
dGNobl9maWZvX21heF9jaGFubmVscyh2b2lkKQorc3RhdGljIHVuc2lnbmVkIGludCBldnRjaG5f
Zmlmb19tYXhfY2hhbm5lbHModm9pZCkKIHsKIAlyZXR1cm4gRVZUQ0hOX0ZJRk9fTlJfQ0hBTk5F
TFM7CiB9CiAKLXN0YXRpYyB1bnNpZ25lZCBldnRjaG5fZmlmb19ucl9jaGFubmVscyh2b2lkKQor
c3RhdGljIHVuc2lnbmVkIGludCBldnRjaG5fZmlmb19ucl9jaGFubmVscyh2b2lkKQogewogCXJl
dHVybiBldmVudF9hcnJheV9wYWdlcyAqIEVWRU5UX1dPUkRTX1BFUl9QQUdFOwogfQpAQCAtMTIw
LDcgKzEyMCw3IEBAIHN0YXRpYyBpbnQgaW5pdF9jb250cm9sX2Jsb2NrKGludCBjcHUsCiAKIHN0
YXRpYyB2b2lkIGZyZWVfdW51c2VkX2FycmF5X3BhZ2VzKHZvaWQpCiB7Ci0JdW5zaWduZWQgaTsK
Kwl1bnNpZ25lZCBpbnQgaTsKIAogCWZvciAoaSA9IGV2ZW50X2FycmF5X3BhZ2VzOyBpIDwgTUFY
X0VWRU5UX0FSUkFZX1BBR0VTOyBpKyspIHsKIAkJaWYgKCFldmVudF9hcnJheVtpXSkKQEAgLTEz
Miw3ICsxMzIsNyBAQCBzdGF0aWMgdm9pZCBmcmVlX3VudXNlZF9hcnJheV9wYWdlcyh2b2lkKQog
CiBzdGF0aWMgdm9pZCBpbml0X2FycmF5X3BhZ2UoZXZlbnRfd29yZF90ICphcnJheV9wYWdlKQog
ewotCXVuc2lnbmVkIGk7CisJdW5zaWduZWQgaW50IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgRVZF
TlRfV09SRFNfUEVSX1BBR0U7IGkrKykKIAkJYXJyYXlfcGFnZVtpXSA9IDEgPDwgRVZUQ0hOX0ZJ
Rk9fTUFTS0VEOwpAQCAtMTQwLDggKzE0MCw4IEBAIHN0YXRpYyB2b2lkIGluaXRfYXJyYXlfcGFn
ZShldmVudF93b3JkX3QgKmFycmF5X3BhZ2UpCiAKIHN0YXRpYyBpbnQgZXZ0Y2huX2ZpZm9fc2V0
dXAoc3RydWN0IGlycV9pbmZvICppbmZvKQogewotCXVuc2lnbmVkIHBvcnQgPSBpbmZvLT5ldnRj
aG47Ci0JdW5zaWduZWQgbmV3X2FycmF5X3BhZ2VzOworCXVuc2lnbmVkIGludCBwb3J0ID0gaW5m
by0+ZXZ0Y2huOworCXVuc2lnbmVkIGludCBuZXdfYXJyYXlfcGFnZXM7CiAJaW50IHJldDsKIAog
CW5ld19hcnJheV9wYWdlcyA9IHBvcnQgLyBFVkVOVF9XT1JEU19QRVJfUEFHRSArIDE7CkBAIC0x
ODYsNDIgKzE4Niw0MiBAQCBzdGF0aWMgaW50IGV2dGNobl9maWZvX3NldHVwKHN0cnVjdCBpcnFf
aW5mbyAqaW5mbykKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlmb19i
aW5kX3RvX2NwdShzdHJ1Y3QgaXJxX2luZm8gKmluZm8sIHVuc2lnbmVkIGNwdSkKK3N0YXRpYyB2
b2lkIGV2dGNobl9maWZvX2JpbmRfdG9fY3B1KHN0cnVjdCBpcnFfaW5mbyAqaW5mbywgdW5zaWdu
ZWQgaW50IGNwdSkKIHsKIAkvKiBuby1vcCAqLwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlm
b19jbGVhcl9wZW5kaW5nKHVuc2lnbmVkIHBvcnQpCitzdGF0aWMgdm9pZCBldnRjaG5fZmlmb19j
bGVhcl9wZW5kaW5nKHVuc2lnbmVkIGludCBwb3J0KQogewogCWV2ZW50X3dvcmRfdCAqd29yZCA9
IGV2ZW50X3dvcmRfZnJvbV9wb3J0KHBvcnQpOwogCXN5bmNfY2xlYXJfYml0KEVWVENITl9GSUZP
X0JJVChQRU5ESU5HLCB3b3JkKSwgQk0od29yZCkpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5f
Zmlmb19zZXRfcGVuZGluZyh1bnNpZ25lZCBwb3J0KQorc3RhdGljIHZvaWQgZXZ0Y2huX2ZpZm9f
c2V0X3BlbmRpbmcodW5zaWduZWQgaW50IHBvcnQpCiB7CiAJZXZlbnRfd29yZF90ICp3b3JkID0g
ZXZlbnRfd29yZF9mcm9tX3BvcnQocG9ydCk7CiAJc3luY19zZXRfYml0KEVWVENITl9GSUZPX0JJ
VChQRU5ESU5HLCB3b3JkKSwgQk0od29yZCkpOwogfQogCi1zdGF0aWMgYm9vbCBldnRjaG5fZmlm
b19pc19wZW5kaW5nKHVuc2lnbmVkIHBvcnQpCitzdGF0aWMgYm9vbCBldnRjaG5fZmlmb19pc19w
ZW5kaW5nKHVuc2lnbmVkIGludCBwb3J0KQogewogCWV2ZW50X3dvcmRfdCAqd29yZCA9IGV2ZW50
X3dvcmRfZnJvbV9wb3J0KHBvcnQpOwogCXJldHVybiBzeW5jX3Rlc3RfYml0KEVWVENITl9GSUZP
X0JJVChQRU5ESU5HLCB3b3JkKSwgQk0od29yZCkpOwogfQogCi1zdGF0aWMgYm9vbCBldnRjaG5f
Zmlmb190ZXN0X2FuZF9zZXRfbWFzayh1bnNpZ25lZCBwb3J0KQorc3RhdGljIGJvb2wgZXZ0Y2hu
X2ZpZm9fdGVzdF9hbmRfc2V0X21hc2sodW5zaWduZWQgaW50IHBvcnQpCiB7CiAJZXZlbnRfd29y
ZF90ICp3b3JkID0gZXZlbnRfd29yZF9mcm9tX3BvcnQocG9ydCk7CiAJcmV0dXJuIHN5bmNfdGVz
dF9hbmRfc2V0X2JpdChFVlRDSE5fRklGT19CSVQoTUFTS0VELCB3b3JkKSwgQk0od29yZCkpOwog
fQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlmb19tYXNrKHVuc2lnbmVkIHBvcnQpCitzdGF0aWMg
dm9pZCBldnRjaG5fZmlmb19tYXNrKHVuc2lnbmVkIGludCBwb3J0KQogewogCWV2ZW50X3dvcmRf
dCAqd29yZCA9IGV2ZW50X3dvcmRfZnJvbV9wb3J0KHBvcnQpOwogCXN5bmNfc2V0X2JpdChFVlRD
SE5fRklGT19CSVQoTUFTS0VELCB3b3JkKSwgQk0od29yZCkpOwogfQogCi1zdGF0aWMgYm9vbCBl
dnRjaG5fZmlmb19pc19tYXNrZWQodW5zaWduZWQgcG9ydCkKK3N0YXRpYyBib29sIGV2dGNobl9m
aWZvX2lzX21hc2tlZCh1bnNpZ25lZCBpbnQgcG9ydCkKIHsKIAlldmVudF93b3JkX3QgKndvcmQg
PSBldmVudF93b3JkX2Zyb21fcG9ydChwb3J0KTsKIAlyZXR1cm4gc3luY190ZXN0X2JpdChFVlRD
SE5fRklGT19CSVQoTUFTS0VELCB3b3JkKSwgQk0od29yZCkpOwpAQCAtMjQyLDcgKzI0Miw3IEBA
IHN0YXRpYyB2b2lkIGNsZWFyX21hc2tlZCh2b2xhdGlsZSBldmVudF93b3JkX3QgKndvcmQpCiAJ
fSB3aGlsZSAodyAhPSBvbGQpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlmb191bm1hc2so
dW5zaWduZWQgcG9ydCkKK3N0YXRpYyB2b2lkIGV2dGNobl9maWZvX3VubWFzayh1bnNpZ25lZCBp
bnQgcG9ydCkKIHsKIAlldmVudF93b3JkX3QgKndvcmQgPSBldmVudF93b3JkX2Zyb21fcG9ydChw
b3J0KTsKIApAQCAtMjcwLDcgKzI3MCw3IEBAIHN0YXRpYyB1aW50MzJfdCBjbGVhcl9saW5rZWQo
dm9sYXRpbGUgZXZlbnRfd29yZF90ICp3b3JkKQogCXJldHVybiB3ICYgRVZUQ0hOX0ZJRk9fTElO
S19NQVNLOwogfQogCi1zdGF0aWMgdm9pZCBoYW5kbGVfaXJxX2Zvcl9wb3J0KHVuc2lnbmVkIHBv
cnQpCitzdGF0aWMgdm9pZCBoYW5kbGVfaXJxX2Zvcl9wb3J0KHVuc2lnbmVkIGludCBwb3J0KQog
ewogCWludCBpcnE7CiAKQEAgLTI3OSwxNCArMjc5LDE0IEBAIHN0YXRpYyB2b2lkIGhhbmRsZV9p
cnFfZm9yX3BvcnQodW5zaWduZWQgcG9ydCkKIAkJZ2VuZXJpY19oYW5kbGVfaXJxKGlycSk7CiB9
CiAKLXN0YXRpYyB2b2lkIGNvbnN1bWVfb25lX2V2ZW50KHVuc2lnbmVkIGNwdSwKK3N0YXRpYyB2
b2lkIGNvbnN1bWVfb25lX2V2ZW50KHVuc2lnbmVkIGludCBjcHUsCiAJCQkgICAgICBzdHJ1Y3Qg
ZXZ0Y2huX2ZpZm9fY29udHJvbF9ibG9jayAqY29udHJvbF9ibG9jaywKLQkJCSAgICAgIHVuc2ln
bmVkIHByaW9yaXR5LCB1bnNpZ25lZCBsb25nICpyZWFkeSwKKwkJCSAgICAgIHVuc2lnbmVkIGlu
dCBwcmlvcml0eSwgdW5zaWduZWQgbG9uZyAqcmVhZHksCiAJCQkgICAgICBib29sIGRyb3ApCiB7
CiAJc3RydWN0IGV2dGNobl9maWZvX3F1ZXVlICpxID0gJnBlcl9jcHUoY3B1X3F1ZXVlLCBjcHUp
OwogCXVpbnQzMl90IGhlYWQ7Ci0JdW5zaWduZWQgcG9ydDsKKwl1bnNpZ25lZCBpbnQgcG9ydDsK
IAlldmVudF93b3JkX3QgKndvcmQ7CiAKIAloZWFkID0gcS0+aGVhZFtwcmlvcml0eV07CkBAIC0z
MjQsMTEgKzMyNCwxMSBAQCBzdGF0aWMgdm9pZCBjb25zdW1lX29uZV9ldmVudCh1bnNpZ25lZCBj
cHUsCiAJcS0+aGVhZFtwcmlvcml0eV0gPSBoZWFkOwogfQogCi1zdGF0aWMgdm9pZCBfX2V2dGNo
bl9maWZvX2hhbmRsZV9ldmVudHModW5zaWduZWQgY3B1LCBib29sIGRyb3ApCitzdGF0aWMgdm9p
ZCBfX2V2dGNobl9maWZvX2hhbmRsZV9ldmVudHModW5zaWduZWQgaW50IGNwdSwgYm9vbCBkcm9w
KQogewogCXN0cnVjdCBldnRjaG5fZmlmb19jb250cm9sX2Jsb2NrICpjb250cm9sX2Jsb2NrOwog
CXVuc2lnbmVkIGxvbmcgcmVhZHk7Ci0JdW5zaWduZWQgcTsKKwl1bnNpZ25lZCBpbnQgcTsKIAog
CWNvbnRyb2xfYmxvY2sgPSBwZXJfY3B1KGNwdV9jb250cm9sX2Jsb2NrLCBjcHUpOwogCkBAIC0z
NDEsMTQgKzM0MSwxNCBAQCBzdGF0aWMgdm9pZCBfX2V2dGNobl9maWZvX2hhbmRsZV9ldmVudHMo
dW5zaWduZWQgY3B1LCBib29sIGRyb3ApCiAJfQogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlm
b19oYW5kbGVfZXZlbnRzKHVuc2lnbmVkIGNwdSkKK3N0YXRpYyB2b2lkIGV2dGNobl9maWZvX2hh
bmRsZV9ldmVudHModW5zaWduZWQgaW50IGNwdSkKIHsKIAlfX2V2dGNobl9maWZvX2hhbmRsZV9l
dmVudHMoY3B1LCBmYWxzZSk7CiB9CiAKIHN0YXRpYyB2b2lkIGV2dGNobl9maWZvX3Jlc3VtZSh2
b2lkKQogewotCXVuc2lnbmVkIGNwdTsKKwl1bnNpZ25lZCBpbnQgY3B1OwogCiAJZm9yX2VhY2hf
cG9zc2libGVfY3B1KGNwdSkgewogCQl2b2lkICpjb250cm9sX2Jsb2NrID0gcGVyX2NwdShjcHVf
Y29udHJvbF9ibG9jaywgY3B1KTsKQEAgLTM5NSw3ICszOTUsNyBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IGV2dGNobl9vcHMgZXZ0Y2huX29wc19maWZvID0gewogCS5yZXN1bWUgICAgICAgICAgICA9
IGV2dGNobl9maWZvX3Jlc3VtZSwKIH07CiAKLXN0YXRpYyBpbnQgZXZ0Y2huX2ZpZm9fYWxsb2Nf
Y29udHJvbF9ibG9jayh1bnNpZ25lZCBjcHUpCitzdGF0aWMgaW50IGV2dGNobl9maWZvX2FsbG9j
X2NvbnRyb2xfYmxvY2sodW5zaWduZWQgaW50IGNwdSkKIHsKIAl2b2lkICpjb250cm9sX2Jsb2Nr
ID0gTlVMTDsKIAlpbnQgcmV0ID0gLUVOT01FTTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL2V2
ZW50cy9ldmVudHNfaW50ZXJuYWwuaCBiL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfaW50ZXJu
YWwuaAppbmRleCA4MjkzOGNmZjZjN2EuLmIyYWU1MTdhMTcxZSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy94ZW4vZXZlbnRzL2V2ZW50c19pbnRlcm5hbC5oCisrKyBiL2RyaXZlcnMveGVuL2V2ZW50cy9l
dmVudHNfaW50ZXJuYWwuaApAQCAtMzIsNyArMzIsNyBAQCBzdHJ1Y3QgaXJxX2luZm8gewogCXN0
cnVjdCBsaXN0X2hlYWQgbGlzdDsKIAlpbnQgcmVmY250OwogCWVudW0geGVuX2lycV90eXBlIHR5
cGU7CS8qIHR5cGUgKi8KLQl1bnNpZ25lZCBpcnE7CisJdW5zaWduZWQgaW50IGlycTsKIAl1bnNp
Z25lZCBpbnQgZXZ0Y2huOwkvKiBldmVudCBjaGFubmVsICovCiAJdW5zaWduZWQgc2hvcnQgY3B1
OwkvKiBjcHUgYm91bmQgKi8KIApAQCAtNTQsMjAgKzU0LDIwIEBAIHN0cnVjdCBpcnFfaW5mbyB7
CiAjZGVmaW5lIFBJUlFfTVNJX0dST1VQCSgxIDw8IDIpCiAKIHN0cnVjdCBldnRjaG5fb3BzIHsK
LQl1bnNpZ25lZCAoKm1heF9jaGFubmVscykodm9pZCk7Ci0JdW5zaWduZWQgKCpucl9jaGFubmVs
cykodm9pZCk7CisJdW5zaWduZWQgaW50ICgqbWF4X2NoYW5uZWxzKSh2b2lkKTsKKwl1bnNpZ25l
ZCBpbnQgKCpucl9jaGFubmVscykodm9pZCk7CiAKIAlpbnQgKCpzZXR1cCkoc3RydWN0IGlycV9p
bmZvICppbmZvKTsKLQl2b2lkICgqYmluZF90b19jcHUpKHN0cnVjdCBpcnFfaW5mbyAqaW5mbywg
dW5zaWduZWQgY3B1KTsKKwl2b2lkICgqYmluZF90b19jcHUpKHN0cnVjdCBpcnFfaW5mbyAqaW5m
bywgdW5zaWduZWQgaW50IGNwdSk7CiAKLQl2b2lkICgqY2xlYXJfcGVuZGluZykodW5zaWduZWQg
cG9ydCk7Ci0Jdm9pZCAoKnNldF9wZW5kaW5nKSh1bnNpZ25lZCBwb3J0KTsKLQlib29sICgqaXNf
cGVuZGluZykodW5zaWduZWQgcG9ydCk7Ci0JYm9vbCAoKnRlc3RfYW5kX3NldF9tYXNrKSh1bnNp
Z25lZCBwb3J0KTsKLQl2b2lkICgqbWFzaykodW5zaWduZWQgcG9ydCk7Ci0Jdm9pZCAoKnVubWFz
aykodW5zaWduZWQgcG9ydCk7CisJdm9pZCAoKmNsZWFyX3BlbmRpbmcpKHVuc2lnbmVkIGludCBw
b3J0KTsKKwl2b2lkICgqc2V0X3BlbmRpbmcpKHVuc2lnbmVkIGludCBwb3J0KTsKKwlib29sICgq
aXNfcGVuZGluZykodW5zaWduZWQgaW50IHBvcnQpOworCWJvb2wgKCp0ZXN0X2FuZF9zZXRfbWFz
aykodW5zaWduZWQgaW50IHBvcnQpOworCXZvaWQgKCptYXNrKSh1bnNpZ25lZCBpbnQgcG9ydCk7
CisJdm9pZCAoKnVubWFzaykodW5zaWduZWQgaW50IHBvcnQpOwogCi0Jdm9pZCAoKmhhbmRsZV9l
dmVudHMpKHVuc2lnbmVkIGNwdSk7CisJdm9pZCAoKmhhbmRsZV9ldmVudHMpKHVuc2lnbmVkIGlu
dCBjcHUpOwogCXZvaWQgKCpyZXN1bWUpKHZvaWQpOwogfTsKIApAQCAtNzYsMTEgKzc2LDExIEBA
IGV4dGVybiBjb25zdCBzdHJ1Y3QgZXZ0Y2huX29wcyAqZXZ0Y2huX29wczsKIGV4dGVybiBpbnQg
KipldnRjaG5fdG9faXJxOwogaW50IGdldF9ldnRjaG5fdG9faXJxKHVuc2lnbmVkIGludCBldnRj
aG4pOwogCi1zdHJ1Y3QgaXJxX2luZm8gKmluZm9fZm9yX2lycSh1bnNpZ25lZCBpcnEpOwotdW5z
aWduZWQgY3B1X2Zyb21faXJxKHVuc2lnbmVkIGlycSk7Ci11bnNpZ25lZCBjcHVfZnJvbV9ldnRj
aG4odW5zaWduZWQgaW50IGV2dGNobik7CitzdHJ1Y3QgaXJxX2luZm8gKmluZm9fZm9yX2lycSh1
bnNpZ25lZCBpbnQgaXJxKTsKK3Vuc2lnbmVkIGludCBjcHVfZnJvbV9pcnEodW5zaWduZWQgaW50
IGlycSk7Cit1bnNpZ25lZCBpbnQgY3B1X2Zyb21fZXZ0Y2huKHVuc2lnbmVkIGludCBldnRjaG4p
OwogCi1zdGF0aWMgaW5saW5lIHVuc2lnbmVkIHhlbl9ldnRjaG5fbWF4X2NoYW5uZWxzKHZvaWQp
CitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCB4ZW5fZXZ0Y2huX21heF9jaGFubmVscyh2b2lk
KQogewogCXJldHVybiBldnRjaG5fb3BzLT5tYXhfY2hhbm5lbHMoKTsKIH0KQEAgLTk3LDQyICs5
Nyw0MiBAQCBzdGF0aWMgaW5saW5lIGludCB4ZW5fZXZ0Y2huX3BvcnRfc2V0dXAoc3RydWN0IGly
cV9pbmZvICppbmZvKQogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQgeGVuX2V2dGNobl9wb3J0X2Jp
bmRfdG9fY3B1KHN0cnVjdCBpcnFfaW5mbyAqaW5mbywKLQkJCQkJICAgICAgIHVuc2lnbmVkIGNw
dSkKKwkJCQkJICAgICAgIHVuc2lnbmVkIGludCBjcHUpCiB7CiAJZXZ0Y2huX29wcy0+YmluZF90
b19jcHUoaW5mbywgY3B1KTsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIGNsZWFyX2V2dGNobih1
bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSB2b2lkIGNsZWFyX2V2dGNobih1bnNpZ25lZCBp
bnQgcG9ydCkKIHsKIAlldnRjaG5fb3BzLT5jbGVhcl9wZW5kaW5nKHBvcnQpOwogfQogCi1zdGF0
aWMgaW5saW5lIHZvaWQgc2V0X2V2dGNobih1bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSB2
b2lkIHNldF9ldnRjaG4odW5zaWduZWQgaW50IHBvcnQpCiB7CiAJZXZ0Y2huX29wcy0+c2V0X3Bl
bmRpbmcocG9ydCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgYm9vbCB0ZXN0X2V2dGNobih1bnNpZ25l
ZCBwb3J0KQorc3RhdGljIGlubGluZSBib29sIHRlc3RfZXZ0Y2huKHVuc2lnbmVkIGludCBwb3J0
KQogewogCXJldHVybiBldnRjaG5fb3BzLT5pc19wZW5kaW5nKHBvcnQpOwogfQogCi1zdGF0aWMg
aW5saW5lIGJvb2wgdGVzdF9hbmRfc2V0X21hc2sodW5zaWduZWQgcG9ydCkKK3N0YXRpYyBpbmxp
bmUgYm9vbCB0ZXN0X2FuZF9zZXRfbWFzayh1bnNpZ25lZCBpbnQgcG9ydCkKIHsKIAlyZXR1cm4g
ZXZ0Y2huX29wcy0+dGVzdF9hbmRfc2V0X21hc2socG9ydCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUg
dm9pZCBtYXNrX2V2dGNobih1bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSB2b2lkIG1hc2tf
ZXZ0Y2huKHVuc2lnbmVkIGludCBwb3J0KQogewogCXJldHVybiBldnRjaG5fb3BzLT5tYXNrKHBv
cnQpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgdW5tYXNrX2V2dGNobih1bnNpZ25lZCBwb3J0
KQorc3RhdGljIGlubGluZSB2b2lkIHVubWFza19ldnRjaG4odW5zaWduZWQgaW50IHBvcnQpCiB7
CiAJcmV0dXJuIGV2dGNobl9vcHMtPnVubWFzayhwb3J0KTsKIH0KIAotc3RhdGljIGlubGluZSB2
b2lkIHhlbl9ldnRjaG5faGFuZGxlX2V2ZW50cyh1bnNpZ25lZCBjcHUpCitzdGF0aWMgaW5saW5l
IHZvaWQgeGVuX2V2dGNobl9oYW5kbGVfZXZlbnRzKHVuc2lnbmVkIGludCBjcHUpCiB7CiAJcmV0
dXJuIGV2dGNobl9vcHMtPmhhbmRsZV9ldmVudHMoY3B1KTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZl
cnMveGVuL2V2dGNobi5jIGIvZHJpdmVycy94ZW4vZXZ0Y2huLmMKaW5kZXggMDUyYjU1YTE0ZWJj
Li40Y2Q3YTM2MDMxZWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL2V2dGNobi5jCisrKyBiL2Ry
aXZlcnMveGVuL2V2dGNobi5jCkBAIC04Myw3ICs4Myw3IEBAIHN0cnVjdCBwZXJfdXNlcl9kYXRh
IHsKIHN0cnVjdCB1c2VyX2V2dGNobiB7CiAJc3RydWN0IHJiX25vZGUgbm9kZTsKIAlzdHJ1Y3Qg
cGVyX3VzZXJfZGF0YSAqdXNlcjsKLQl1bnNpZ25lZCBwb3J0OworCXVuc2lnbmVkIGludCBwb3J0
OwogCWJvb2wgZW5hYmxlZDsKIH07CiAKQEAgLTEzOCw3ICsxMzgsOCBAQCBzdGF0aWMgdm9pZCBk
ZWxfZXZ0Y2huKHN0cnVjdCBwZXJfdXNlcl9kYXRhICp1LCBzdHJ1Y3QgdXNlcl9ldnRjaG4gKmV2
dGNobikKIAlrZnJlZShldnRjaG4pOwogfQogCi1zdGF0aWMgc3RydWN0IHVzZXJfZXZ0Y2huICpm
aW5kX2V2dGNobihzdHJ1Y3QgcGVyX3VzZXJfZGF0YSAqdSwgdW5zaWduZWQgcG9ydCkKK3N0YXRp
YyBzdHJ1Y3QgdXNlcl9ldnRjaG4gKmZpbmRfZXZ0Y2huKHN0cnVjdCBwZXJfdXNlcl9kYXRhICp1
LAorCQkJCSAgICAgICB1bnNpZ25lZCBpbnQgcG9ydCkKIHsKIAlzdHJ1Y3QgcmJfbm9kZSAqbm9k
ZSA9IHUtPmV2dGNobnMucmJfbm9kZTsKIApAQCAtMjg2LDcgKzI4Nyw3IEBAIHN0YXRpYyBzc2l6
ZV90IGV2dGNobl93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hhciBfX3VzZXIgKmJ1
ZiwKIAltdXRleF9sb2NrKCZ1LT5iaW5kX211dGV4KTsKIAogCWZvciAoaSA9IDA7IGkgPCAoY291
bnQvc2l6ZW9mKGV2dGNobl9wb3J0X3QpKTsgaSsrKSB7Ci0JCXVuc2lnbmVkIHBvcnQgPSBrYnVm
W2ldOworCQl1bnNpZ25lZCBpbnQgcG9ydCA9IGtidWZbaV07CiAJCXN0cnVjdCB1c2VyX2V2dGNo
biAqZXZ0Y2huOwogCiAJCWV2dGNobiA9IGZpbmRfZXZ0Y2huKHUsIHBvcnQpOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy94ZW4vZ3JhbnQtdGFibGUuYyBiL2RyaXZlcnMveGVuL2dyYW50LXRhYmxlLmMK
aW5kZXggN2IzNmI1MWNkYjlmLi43ZDllOGQ5MGUxMzkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVu
L2dyYW50LXRhYmxlLmMKKysrIGIvZHJpdmVycy94ZW4vZ3JhbnQtdGFibGUuYwpAQCAtMTE2LDcg
KzExNiw3IEBAIHN0cnVjdCBnbnR0YWJfb3BzIHsKIAkgKiBzdGF0dXMgb2YgdGhlIGdyYW50IGVu
dHJ5IHRvIGJlIHVwZGF0ZWQuCiAJICovCiAJdm9pZCAoKnVwZGF0ZV9lbnRyeSkoZ3JhbnRfcmVm
X3QgcmVmLCBkb21pZF90IGRvbWlkLAotCQkJICAgICB1bnNpZ25lZCBsb25nIGZyYW1lLCB1bnNp
Z25lZCBmbGFncyk7CisJCQkgICAgIHVuc2lnbmVkIGxvbmcgZnJhbWUsIHVuc2lnbmVkIGludCBm
bGFncyk7CiAJLyoKIAkgKiBTdG9wIGdyYW50aW5nIGEgZ3JhbnQgZW50cnkgdG8gZG9tYWluIGZv
ciBhY2Nlc3NpbmcuIFJlZiBwYXJhbWV0ZXIgaXMKIAkgKiByZWZlcmVuY2Ugb2YgYSBncmFudCBl
bnRyeSB3aG9zZSBncmFudCBhY2Nlc3Mgd2lsbCBiZSBzdG9wcGVkLApAQCAtMTY3LDcgKzE2Nyw3
IEBAIHN0YXRpYyBpbmxpbmUgZ3JhbnRfcmVmX3QgKl9fZ250dGFiX2VudHJ5KGdyYW50X3JlZl90
IGVudHJ5KQogLyogVGhpcyBjYW4gYmUgdXNlZCBhcyBhbiBsLXZhbHVlICovCiAjZGVmaW5lIGdu
dHRhYl9lbnRyeShlbnRyeSkgKCpfX2dudHRhYl9lbnRyeShlbnRyeSkpCiAKLXN0YXRpYyBpbnQg
Z2V0X2ZyZWVfZW50cmllcyh1bnNpZ25lZCBjb3VudCkKK3N0YXRpYyBpbnQgZ2V0X2ZyZWVfZW50
cmllcyh1bnNpZ25lZCBpbnQgY291bnQpCiB7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAlpbnQg
cmVmLCByYyA9IDA7CkBAIC0yNDIsNyArMjQyLDcgQEAgc3RhdGljIHZvaWQgcHV0X2ZyZWVfZW50
cnkoZ3JhbnRfcmVmX3QgcmVmKQogICogIDQuIFdyaXRlIGVudC0+ZmxhZ3MsIGluYy4gdmFsaWQg
dHlwZS4KICAqLwogc3RhdGljIHZvaWQgZ250dGFiX3VwZGF0ZV9lbnRyeV92MShncmFudF9yZWZf
dCByZWYsIGRvbWlkX3QgZG9taWQsCi0JCQkJICAgdW5zaWduZWQgbG9uZyBmcmFtZSwgdW5zaWdu
ZWQgZmxhZ3MpCisJCQkJICAgdW5zaWduZWQgbG9uZyBmcmFtZSwgdW5zaWduZWQgaW50IGZsYWdz
KQogewogCWdudHRhYl9zaGFyZWQudjFbcmVmXS5kb21pZCA9IGRvbWlkOwogCWdudHRhYl9zaGFy
ZWQudjFbcmVmXS5mcmFtZSA9IGZyYW1lOwpAQCAtOTQwLDcgKzk0MCw3IEBAIHN0YXRpYyBpbmxp
bmUgdm9pZAogZ250dGFiX3JldHJ5X2VhZ2Fpbl9nb3AodW5zaWduZWQgaW50IGNtZCwgdm9pZCAq
Z29wLCBpbnQxNl90ICpzdGF0dXMsCiAJCQkJCQljb25zdCBjaGFyICpmdW5jKQogewotCXVuc2ln
bmVkIGRlbGF5ID0gMTsKKwl1bnNpZ25lZCBpbnQgZGVsYXkgPSAxOwogCiAJZG8gewogCQlCVUdf
T04oSFlQRVJWSVNPUl9ncmFudF90YWJsZV9vcChjbWQsIGdvcCwgMSkpOwpAQCAtOTU0LDcgKzk1
NCw3IEBAIGdudHRhYl9yZXRyeV9lYWdhaW5fZ29wKHVuc2lnbmVkIGludCBjbWQsIHZvaWQgKmdv
cCwgaW50MTZfdCAqc3RhdHVzLAogCX0KIH0KIAotdm9pZCBnbnR0YWJfYmF0Y2hfbWFwKHN0cnVj
dCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqYmF0Y2gsIHVuc2lnbmVkIGNvdW50KQordm9pZCBnbnR0
YWJfYmF0Y2hfbWFwKHN0cnVjdCBnbnR0YWJfbWFwX2dyYW50X3JlZiAqYmF0Y2gsIHVuc2lnbmVk
IGludCBjb3VudCkKIHsKIAlzdHJ1Y3QgZ250dGFiX21hcF9ncmFudF9yZWYgKm9wOwogCkBAIC05
NjcsNyArOTY3LDcgQEAgdm9pZCBnbnR0YWJfYmF0Y2hfbWFwKHN0cnVjdCBnbnR0YWJfbWFwX2dy
YW50X3JlZiAqYmF0Y2gsIHVuc2lnbmVkIGNvdW50KQogfQogRVhQT1JUX1NZTUJPTF9HUEwoZ250
dGFiX2JhdGNoX21hcCk7CiAKLXZvaWQgZ250dGFiX2JhdGNoX2NvcHkoc3RydWN0IGdudHRhYl9j
b3B5ICpiYXRjaCwgdW5zaWduZWQgY291bnQpCit2b2lkIGdudHRhYl9iYXRjaF9jb3B5KHN0cnVj
dCBnbnR0YWJfY29weSAqYmF0Y2gsIHVuc2lnbmVkIGludCBjb3VudCkKIHsKIAlzdHJ1Y3QgZ250
dGFiX2NvcHkgKm9wOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9tY2Vsb2cuYyBiL2RyaXZl
cnMveGVuL21jZWxvZy5jCmluZGV4IGU5YWMzYjhjNDE2Ny4uYzBiMzUwNzA1NGM3IDEwMDY0NAot
LS0gYS9kcml2ZXJzL3hlbi9tY2Vsb2cuYworKysgYi9kcml2ZXJzL3hlbi9tY2Vsb2cuYwpAQCAt
MTA3LDcgKzEwNyw3IEBAIHN0YXRpYyBzc2l6ZV90IHhlbl9tY2VfY2hyZGV2X3JlYWQoc3RydWN0
IGZpbGUgKmZpbHAsIGNoYXIgX191c2VyICp1YnVmLAogCQkJCXNpemVfdCB1c2l6ZSwgbG9mZl90
ICpvZmYpCiB7CiAJY2hhciBfX3VzZXIgKmJ1ZiA9IHVidWY7Ci0JdW5zaWduZWQgbnVtOworCXVu
c2lnbmVkIGludCBudW07CiAJaW50IGksIGVycjsKIAogCW11dGV4X2xvY2soJm1jZWxvZ19sb2Nr
KTsKQEAgLTE2Myw3ICsxNjMsNyBAQCBzdGF0aWMgbG9uZyB4ZW5fbWNlX2NocmRldl9pb2N0bChz
dHJ1Y3QgZmlsZSAqZiwgdW5zaWduZWQgaW50IGNtZCwKIAljYXNlIE1DRV9HRVRfTE9HX0xFTjoK
IAkJcmV0dXJuIHB1dF91c2VyKFhFTl9NQ0VfTE9HX0xFTiwgcCk7CiAJY2FzZSBNQ0VfR0VUQ0xF
QVJfRkxBR1M6IHsKLQkJdW5zaWduZWQgZmxhZ3M7CisJCXVuc2lnbmVkIGludCBmbGFnczsKIAog
CQlkbyB7CiAJCQlmbGFncyA9IHhlbl9tY2Vsb2cuZmxhZ3M7CkBAIC0xOTYsNyArMTk2LDcgQEAg
c3RhdGljIHN0cnVjdCBtaXNjZGV2aWNlIHhlbl9tY2VfY2hyZGV2X2RldmljZSA9IHsKICAqLwog
c3RhdGljIHZvaWQgeGVuX21jZV9sb2coc3RydWN0IHhlbl9tY2UgKm1jZSkKIHsKLQl1bnNpZ25l
ZCBlbnRyeTsKKwl1bnNpZ25lZCBpbnQgZW50cnk7CiAKIAllbnRyeSA9IHhlbl9tY2Vsb2cubmV4
dDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy94ZW4vcHJpdmNtZC5jIGIvZHJpdmVycy94ZW4vcHJp
dmNtZC5jCmluZGV4IGM2MDcwZTcwZGQ3My4uNTI0NDdhYjcwZTZiIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3hlbi9wcml2Y21kLmMKKysrIGIvZHJpdmVycy94ZW4vcHJpdmNtZC5jCkBAIC0xMDcsMTAg
KzEwNywxMCBAQCBzdGF0aWMgdm9pZCBmcmVlX3BhZ2VfbGlzdChzdHJ1Y3QgbGlzdF9oZWFkICpw
YWdlcykKICAqIGVycm9yIGNvZGU7IGl0cyB1cCB0byB0aGUgY2FsbGVyIHRvIGRpc3Bvc2Ugb2Yg
YW55IHBhcnRpYWwgbGlzdC4KICAqLwogc3RhdGljIGludCBnYXRoZXJfYXJyYXkoc3RydWN0IGxp
c3RfaGVhZCAqcGFnZWxpc3QsCi0JCQl1bnNpZ25lZCBuZWxlbSwgc2l6ZV90IHNpemUsCisJCQl1
bnNpZ25lZCBpbnQgbmVsZW0sIHNpemVfdCBzaXplLAogCQkJY29uc3Qgdm9pZCBfX3VzZXIgKmRh
dGEpCiB7Ci0JdW5zaWduZWQgcGFnZWlkeDsKKwl1bnNpZ25lZCBpbnQgcGFnZWlkeDsKIAl2b2lk
ICpwYWdlZGF0YTsKIAlpbnQgcmV0OwogCkBAIC0xNTEsMTMgKzE1MSwxMyBAQCBzdGF0aWMgaW50
IGdhdGhlcl9hcnJheShzdHJ1Y3QgbGlzdF9oZWFkICpwYWdlbGlzdCwKICAqIENhbGwgZnVuY3Rp
b24gImZuIiBvbiBlYWNoIGVsZW1lbnQgb2YgdGhlIGFycmF5IGZyYWdtZW50ZWQKICAqIG92ZXIg
YSBsaXN0IG9mIHBhZ2VzLgogICovCi1zdGF0aWMgaW50IHRyYXZlcnNlX3BhZ2VzKHVuc2lnbmVk
IG5lbGVtLCBzaXplX3Qgc2l6ZSwKK3N0YXRpYyBpbnQgdHJhdmVyc2VfcGFnZXModW5zaWduZWQg
aW50IG5lbGVtLCBzaXplX3Qgc2l6ZSwKIAkJCSAgc3RydWN0IGxpc3RfaGVhZCAqcG9zLAogCQkJ
ICBpbnQgKCpmbikodm9pZCAqZGF0YSwgdm9pZCAqc3RhdGUpLAogCQkJICB2b2lkICpzdGF0ZSkK
IHsKIAl2b2lkICpwYWdlZGF0YTsKLQl1bnNpZ25lZCBwYWdlaWR4OworCXVuc2lnbmVkIGludCBw
YWdlaWR4OwogCWludCByZXQgPSAwOwogCiAJQlVHX09OKHNpemUgPiBQQUdFX1NJWkUpOwpAQCAt
MTg3LDcgKzE4Nyw3IEBAIHN0YXRpYyBpbnQgdHJhdmVyc2VfcGFnZXModW5zaWduZWQgbmVsZW0s
IHNpemVfdCBzaXplLAogICogU2ltaWxhciB0byB0cmF2ZXJzZV9wYWdlcywgYnV0IHVzZSBlYWNo
IHBhZ2UgYXMgYSAiYmxvY2siIG9mCiAgKiBkYXRhIHRvIGJlIHByb2Nlc3NlZCBhcyBvbmUgdW5p
dC4KICAqLwotc3RhdGljIGludCB0cmF2ZXJzZV9wYWdlc19ibG9jayh1bnNpZ25lZCBuZWxlbSwg
c2l6ZV90IHNpemUsCitzdGF0aWMgaW50IHRyYXZlcnNlX3BhZ2VzX2Jsb2NrKHVuc2lnbmVkIGlu
dCBuZWxlbSwgc2l6ZV90IHNpemUsCiAJCQkJc3RydWN0IGxpc3RfaGVhZCAqcG9zLAogCQkJCWlu
dCAoKmZuKSh2b2lkICpkYXRhLCBpbnQgbnIsIHZvaWQgKnN0YXRlKSwKIAkJCQl2b2lkICpzdGF0
ZSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL3hlbi1zY3NpYmFjay5jIGIvZHJpdmVycy94ZW4v
eGVuLXNjc2liYWNrLmMKaW5kZXggYmEwOTQyZTQ4MWJjLi40NWMzNDEwNjNiYTUgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMveGVuL3hlbi1zY3NpYmFjay5jCisrKyBiL2RyaXZlcnMveGVuL3hlbi1zY3Np
YmFjay5jCkBAIC0zMjcsNyArMzI3LDcgQEAgc3RhdGljIHZvaWQgc2NzaWJhY2tfc2VuZF9yZXNw
b25zZShzdHJ1Y3QgdnNjc2lia19pbmZvICppbmZvLAogCWludCBub3RpZnk7CiAJc3RydWN0IHNj
c2lfc2Vuc2VfaGRyIHNzaGRyOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JdW5zaWduZWQgbGVu
OworCXVuc2lnbmVkIGludCBsZW47CiAKIAlzcGluX2xvY2tfaXJxc2F2ZSgmaW5mby0+cmluZ19s
b2NrLCBmbGFncyk7CiAKQEAgLTM0MCw3ICszNDAsNyBAQCBzdGF0aWMgdm9pZCBzY3NpYmFja19z
ZW5kX3Jlc3BvbnNlKHN0cnVjdCB2c2NzaWJrX2luZm8gKmluZm8sCiAJaWYgKHNlbnNlX2J1ZmZl
ciAhPSBOVUxMICYmCiAJICAgIHNjc2lfbm9ybWFsaXplX3NlbnNlKHNlbnNlX2J1ZmZlciwgVlND
U0lJRl9TRU5TRV9CVUZGRVJTSVpFLAogCQkJCSAmc3NoZHIpKSB7Ci0JCWxlbiA9IG1pbl90KHVu
c2lnbmVkLCA4ICsgc2Vuc2VfYnVmZmVyWzddLAorCQlsZW4gPSBtaW5fdCh1bnNpZ25lZCBpbnQs
IDggKyBzZW5zZV9idWZmZXJbN10sCiAJCQkgICAgVlNDU0lJRl9TRU5TRV9CVUZGRVJTSVpFKTsK
IAkJbWVtY3B5KHJpbmdfcmVzLT5zZW5zZV9idWZmZXIsIHNlbnNlX2J1ZmZlciwgbGVuKTsKIAkJ
cmluZ19yZXMtPnNlbnNlX2xlbiA9IGxlbjsKQEAgLTUwNyw4ICs1MDcsOCBAQCBzdGF0aWMgaW50
IHNjc2liYWNrX2dudHRhYl9kYXRhX21hcChzdHJ1Y3QgdnNjc2lpZl9yZXF1ZXN0ICpyaW5nX3Jl
cSwKIAkJZm9yIChpID0gMDsgaSA8IG5yX3NnbDsgaSsrKSB7CiAJCQluX3NlZ3MgPSByaW5nX3Jl
cS0+c2VnW2ldLmxlbmd0aCAvCiAJCQkJIHNpemVvZihzdHJ1Y3Qgc2NzaWlmX3JlcXVlc3Rfc2Vn
bWVudCk7Ci0JCQlpZiAoKHVuc2lnbmVkKXJpbmdfcmVxLT5zZWdbaV0ub2Zmc2V0ICsKLQkJCSAg
ICAodW5zaWduZWQpcmluZ19yZXEtPnNlZ1tpXS5sZW5ndGggPiBQQUdFX1NJWkUgfHwKKwkJCWlm
ICgodW5zaWduZWQgaW50KXJpbmdfcmVxLT5zZWdbaV0ub2Zmc2V0ICsKKwkJCSAgICAodW5zaWdu
ZWQgaW50KXJpbmdfcmVxLT5zZWdbaV0ubGVuZ3RoID4gUEFHRV9TSVpFIHx8CiAJCQkgICAgbl9z
ZWdzICogc2l6ZW9mKHN0cnVjdCBzY3NpaWZfcmVxdWVzdF9zZWdtZW50KSAhPQogCQkJICAgIHJp
bmdfcmVxLT5zZWdbaV0ubGVuZ3RoKQogCQkJCXJldHVybiAtRUlOVkFMOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19kZXZfZnJvbnRlbmQuYyBiL2RyaXZlcnMveGVuL3hl
bmJ1cy94ZW5idXNfZGV2X2Zyb250ZW5kLmMKaW5kZXggNTk3YWY0NTVhNTIyLi4zMDQwMmYwMmE5
MGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL3hlbmJ1cy94ZW5idXNfZGV2X2Zyb250ZW5kLmMK
KysrIGIvZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19kZXZfZnJvbnRlbmQuYwpAQCAtMTI4LDcg
KzEyOCw3IEBAIHN0YXRpYyBzc2l6ZV90IHhlbmJ1c19maWxlX3JlYWQoc3RydWN0IGZpbGUgKmZp
bHAsCiB7CiAJc3RydWN0IHhlbmJ1c19maWxlX3ByaXYgKnUgPSBmaWxwLT5wcml2YXRlX2RhdGE7
CiAJc3RydWN0IHJlYWRfYnVmZmVyICpyYjsKLQl1bnNpZ25lZCBpOworCXVuc2lnbmVkIGludCBp
OwogCWludCByZXQ7CiAKIAltdXRleF9sb2NrKCZ1LT5yZXBseV9tdXRleCk7CkBAIC0xNDgsNyAr
MTQ4LDggQEAgc3RhdGljIHNzaXplX3QgeGVuYnVzX2ZpbGVfcmVhZChzdHJ1Y3QgZmlsZSAqZmls
cCwKIAlyYiA9IGxpc3RfZW50cnkodS0+cmVhZF9idWZmZXJzLm5leHQsIHN0cnVjdCByZWFkX2J1
ZmZlciwgbGlzdCk7CiAJaSA9IDA7CiAJd2hpbGUgKGkgPCBsZW4pIHsKLQkJdW5zaWduZWQgc3og
PSBtaW4oKHVuc2lnbmVkKWxlbiAtIGksIHJiLT5sZW4gLSByYi0+Y29ucyk7CisJCXVuc2lnbmVk
IGludCBzeiA9IG1pbigodW5zaWduZWQgaW50KWxlbiAtIGksCisJCQkJICAgICAgcmItPmxlbiAt
IHJiLT5jb25zKTsKIAogCQlyZXQgPSBjb3B5X3RvX3VzZXIodWJ1ZiArIGksICZyYi0+bXNnW3Ji
LT5jb25zXSwgc3opOwogCkBAIC00NDMsNyArNDQ0LDcgQEAgc3RhdGljIGludCB4ZW5idXNfY29t
bWFuZF9yZXBseShzdHJ1Y3QgeGVuYnVzX2ZpbGVfcHJpdiAqdSwKIAlyZXR1cm4gcmM7CiB9CiAK
LXN0YXRpYyBpbnQgeGVuYnVzX3dyaXRlX3RyYW5zYWN0aW9uKHVuc2lnbmVkIG1zZ190eXBlLAor
c3RhdGljIGludCB4ZW5idXNfd3JpdGVfdHJhbnNhY3Rpb24odW5zaWduZWQgaW50IG1zZ190eXBl
LAogCQkJCSAgICBzdHJ1Y3QgeGVuYnVzX2ZpbGVfcHJpdiAqdSkKIHsKIAlpbnQgcmM7CkBAIC00
OTMsNyArNDk0LDcgQEAgc3RhdGljIGludCB4ZW5idXNfd3JpdGVfdHJhbnNhY3Rpb24odW5zaWdu
ZWQgbXNnX3R5cGUsCiAJcmV0dXJuIHJjOwogfQogCi1zdGF0aWMgaW50IHhlbmJ1c193cml0ZV93
YXRjaCh1bnNpZ25lZCBtc2dfdHlwZSwgc3RydWN0IHhlbmJ1c19maWxlX3ByaXYgKnUpCitzdGF0
aWMgaW50IHhlbmJ1c193cml0ZV93YXRjaCh1bnNpZ25lZCBpbnQgbXNnX3R5cGUsIHN0cnVjdCB4
ZW5idXNfZmlsZV9wcml2ICp1KQogewogCXN0cnVjdCB3YXRjaF9hZGFwdGVyICp3YXRjaDsKIAlj
aGFyICpwYXRoLCAqdG9rZW47CmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi94bGF0ZV9tbXUuYyBi
L2RyaXZlcnMveGVuL3hsYXRlX21tdS5jCmluZGV4IDdiMTA3N2YwYWJjYi4uZTZiNWNkNGUyNmFh
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi94bGF0ZV9tbXUuYworKysgYi9kcml2ZXJzL3hlbi94
bGF0ZV9tbXUuYwpAQCAtNDUsNyArNDUsNyBAQAogdHlwZWRlZiB2b2lkICgqeGVuX2dmbl9mbl90
KSh1bnNpZ25lZCBsb25nIGdmbiwgdm9pZCAqZGF0YSk7CiAKIC8qIEJyZWFrIGRvd24gdGhlIHBh
Z2VzIGluIDRLQiBjaHVuayBhbmQgY2FsbCBmbiBmb3IgZWFjaCBnZm4gKi8KLXN0YXRpYyB2b2lk
IHhlbl9mb3JfZWFjaF9nZm4oc3RydWN0IHBhZ2UgKipwYWdlcywgdW5zaWduZWQgbnJfZ2ZuLAor
c3RhdGljIHZvaWQgeGVuX2Zvcl9lYWNoX2dmbihzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCB1bnNpZ25l
ZCBpbnQgbnJfZ2ZuLAogCQkJICAgICB4ZW5fZ2ZuX2ZuX3QgZm4sIHZvaWQgKmRhdGEpCiB7CiAJ
dW5zaWduZWQgbG9uZyB4ZW5fcGZuID0gMDsKQEAgLTE0NCw3ICsxNDQsNyBAQCBpbnQgeGVuX3hs
YXRlX3JlbWFwX2dmbl9hcnJheShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKIAkJCSAgICAg
IHVuc2lnbmVkIGxvbmcgYWRkciwKIAkJCSAgICAgIHhlbl9wZm5fdCAqZ2ZuLCBpbnQgbnIsCiAJ
CQkgICAgICBpbnQgKmVycl9wdHIsIHBncHJvdF90IHByb3QsCi0JCQkgICAgICB1bnNpZ25lZCBk
b21pZCwKKwkJCSAgICAgIHVuc2lnbmVkIGludCBkb21pZCwKIAkJCSAgICAgIHN0cnVjdCBwYWdl
ICoqcGFnZXMpCiB7CiAJaW50IGVycjsKLS0gCjIuMTcuMQoKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRl
dmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFp
bG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

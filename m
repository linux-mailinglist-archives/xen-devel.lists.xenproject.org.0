Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id B014818EF7A
	for <lists+xen-devel@lfdr.de>; Mon, 23 Mar 2020 06:36:20 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jGFiQ-0007pt-Rs; Mon, 23 Mar 2020 05:33:34 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=zDPB=5I=gmail.com=yyankovskyi@srs-us1.protection.inumbo.net>)
 id 1jGFiP-0007pn-GM
 for xen-devel@lists.xenproject.org; Mon, 23 Mar 2020 05:33:33 +0000
X-Inumbo-ID: d4744b3c-6cc7-11ea-bec1-bc764e2007e4
Received: from mail-wm1-x341.google.com (unknown [2a00:1450:4864:20::341])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id d4744b3c-6cc7-11ea-bec1-bc764e2007e4;
 Mon, 23 Mar 2020 05:33:31 +0000 (UTC)
Received: by mail-wm1-x341.google.com with SMTP id c187so13208596wme.1
 for <xen-devel@lists.xenproject.org>; Sun, 22 Mar 2020 22:33:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:mime-version:content-disposition
 :user-agent; bh=Y6DLystsq/7Y8TnUjMwq4arqWPWvU4/lJTRg2tlrfzQ=;
 b=M1qtPChLzWipspQJZFUh4HCUP8MHdxgf+I7ccEIWSk/dWCCNILTNGsL3nqUVHfhXs2
 3tLzKBTnxbsyKKf3EnuH6exEO63gpWbZhm5N1kmm+4JjYbUWh+eSN3ztWO+3liv4/sEo
 Dks2x8+n1gznYS1/ngnSNFC9VLF9RRl/zfTPQln3uQ0shHxJH+Lniw7CpI0OiH24atxZ
 6CLPpZxLxh8PJWUyJQLccvO+AMXESIqcTrjeOOWwsf/SnFp6+Go9Cs549n2wuaThOpD5
 Ot5kbiIuFyvirUjeGCOW+5cGQrwMXzRnRibkydfTD0wYbkbbCAZxlzWkoDo5DUF7ixFI
 71Zw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
 :content-disposition:user-agent;
 bh=Y6DLystsq/7Y8TnUjMwq4arqWPWvU4/lJTRg2tlrfzQ=;
 b=UCNEBi4/4G058+DnujOswvpwP/QFPHHL4yhY+3Emwx+F3nAe6cFx73Kp8TPAc7ElYj
 7VyMbWJ0tspYLJsNlLMlpzLyop6TdBwcyHO8VZFcs9AIhwFAXDlA/4NeVm1pFcmQ20xX
 q4Pu/YXf61V+GOUPrxcd6XxBlgHIwtITILKTSbl/mKAgSVVHaQv5yknad4Xu0PiBVvao
 6ivH/VeUpoFZkNooDtKZsDHsLV6gXy9VykxHFp3ggto2/TXAQSsuR+OhyZ58wn0yoPsC
 V8iAPyy8+45eqhdDcd59wTWfvvOy9YJb5hHhRjP5fa9z+2yTRuy+lzcdGJQhfWZoVw3u
 2H5g==
X-Gm-Message-State: ANhLgQ2Ggm28BuaTvllruJG0LoAm1SX4grGM+uze7H1iwE2REcMPDwwK
 BjM6ISRZbjjPZv+Qoa6bQVg=
X-Google-Smtp-Source: ADFU+vsGz8mT/AWojqJ4vvoc1y6dpYAn6UIIHbfzcqohrlqqOELskkPYw/EDbLtsElsiPiJUJZRKHw==
X-Received: by 2002:a1c:e913:: with SMTP id q19mr26070407wmc.31.1584941608635; 
 Sun, 22 Mar 2020 22:33:28 -0700 (PDT)
Received: from kbp1-lhp-F74019 (a81-14-236-68.net-htp.de. [81.14.236.68])
 by smtp.gmail.com with ESMTPSA id c23sm22120750wrb.79.2020.03.22.22.33.26
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Sun, 22 Mar 2020 22:33:28 -0700 (PDT)
Date: Mon, 23 Mar 2020 07:33:25 +0200
From: Yan Yankovskyi <yyankovskyi@gmail.com>
To: Boris Ostrovsky <boris.ostrovsky@oracle.com>,
 Jan Beulich <jbeulich@suse.com>
Message-ID: <20200323053325.GA15004@kbp1-lhp-F74019>
MIME-Version: 1.0
Content-Disposition: inline
User-Agent: Mutt/1.9.4 (2018-02-28)
Subject: [Xen-devel] [PATCH v3 1/2] xen: Use evtchn_type_t as a type for
 event channels
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>, xen-devel@lists.xenproject.org,
 Stefano Stabellini <sstabellini@kernel.org>, linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

TWFrZSBldmVudCBjaGFubmVsIGZ1bmN0aW9ucyBwYXNzIGV2ZW50IGNoYW5uZWwgcG9ydCB1c2lu
ZwpldnRjaG5fcG9ydF90IHR5cGUuIEl0IGVsaW1pbmF0ZXMgc2lnbmVkIDwtPiB1bnNpZ25lZCBj
b252ZXJzaW9uLgoKU2lnbmVkLW9mZi1ieTogWWFuIFlhbmtvdnNreWkgPHl5YW5rb3Zza3lpQGdt
YWlsLmNvbT4KLS0tCiBkcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzXzJsLmMgICAgICAgIHwgMTYg
KystLS0KIGRyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfYmFzZS5jICAgICAgfCA5NSArKysrKysr
KysrKysrKy0tLS0tLS0tLS0tLS0KIGRyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfZmlmby5jICAg
ICAgfCAyMiArKystLS0tCiBkcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ludGVybmFsLmggIHwg
MzAgKysrKy0tLS0tCiBkcml2ZXJzL3hlbi9ldnRjaG4uYyAgICAgICAgICAgICAgICAgIHwgMTMg
KystLQogZHJpdmVycy94ZW4vZ250ZGV2LWNvbW1vbi5oICAgICAgICAgICB8ICAyICstCiBkcml2
ZXJzL3hlbi9nbnRkZXYuYyAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMveGVuL3B2
Y2FsbHMtYmFjay5jICAgICAgICAgICAgfCAgNSArLQogZHJpdmVycy94ZW4vcHZjYWxscy1mcm9u
dC5jICAgICAgICAgICB8IDE1ICsrKy0tCiBkcml2ZXJzL3hlbi94ZW4tcGNpYmFjay94ZW5idXMu
YyAgICAgIHwgIDcgKy0KIGRyaXZlcnMveGVuL3hlbi1zY3NpYmFjay5jICAgICAgICAgICAgfCAg
MyArLQogZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19jbGllbnQuYyAgICB8ICA2ICstCiBpbmNs
dWRlL3hlbi9ldmVudHMuaCAgICAgICAgICAgICAgICAgIHwgMjIgKysrLS0tLQogaW5jbHVkZS94
ZW4vaW50ZXJmYWNlL2V2ZW50X2NoYW5uZWwuaCB8ICAyICstCiBpbmNsdWRlL3hlbi94ZW5idXMu
aCAgICAgICAgICAgICAgICAgIHwgIDUgKy0KIDE1IGZpbGVzIGNoYW5nZWQsIDEyOCBpbnNlcnRp
b25zKCspLCAxMTcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy94ZW4vZXZlbnRz
L2V2ZW50c18ybC5jIGIvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c18ybC5jCmluZGV4IDhlZGVm
NTFjOTJlNS4uNjRkZjkxOWEyMTExIDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9ldmVudHMvZXZl
bnRzXzJsLmMKKysrIGIvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c18ybC5jCkBAIC01MywzNyAr
NTMsMzcgQEAgc3RhdGljIHZvaWQgZXZ0Y2huXzJsX2JpbmRfdG9fY3B1KHN0cnVjdCBpcnFfaW5m
byAqaW5mbywgdW5zaWduZWQgY3B1KQogCXNldF9iaXQoaW5mby0+ZXZ0Y2huLCBCTShwZXJfY3B1
KGNwdV9ldnRjaG5fbWFzaywgY3B1KSkpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfY2xl
YXJfcGVuZGluZyh1bnNpZ25lZCBwb3J0KQorc3RhdGljIHZvaWQgZXZ0Y2huXzJsX2NsZWFyX3Bl
bmRpbmcoZXZ0Y2huX3BvcnRfdCBwb3J0KQogewogCXN0cnVjdCBzaGFyZWRfaW5mbyAqcyA9IEhZ
UEVSVklTT1Jfc2hhcmVkX2luZm87CiAJc3luY19jbGVhcl9iaXQocG9ydCwgQk0oJnMtPmV2dGNo
bl9wZW5kaW5nWzBdKSk7CiB9CiAKLXN0YXRpYyB2b2lkIGV2dGNobl8ybF9zZXRfcGVuZGluZyh1
bnNpZ25lZCBwb3J0KQorc3RhdGljIHZvaWQgZXZ0Y2huXzJsX3NldF9wZW5kaW5nKGV2dGNobl9w
b3J0X3QgcG9ydCkKIHsKIAlzdHJ1Y3Qgc2hhcmVkX2luZm8gKnMgPSBIWVBFUlZJU09SX3NoYXJl
ZF9pbmZvOwogCXN5bmNfc2V0X2JpdChwb3J0LCBCTSgmcy0+ZXZ0Y2huX3BlbmRpbmdbMF0pKTsK
IH0KIAotc3RhdGljIGJvb2wgZXZ0Y2huXzJsX2lzX3BlbmRpbmcodW5zaWduZWQgcG9ydCkKK3N0
YXRpYyBib29sIGV2dGNobl8ybF9pc19wZW5kaW5nKGV2dGNobl9wb3J0X3QgcG9ydCkKIHsKIAlz
dHJ1Y3Qgc2hhcmVkX2luZm8gKnMgPSBIWVBFUlZJU09SX3NoYXJlZF9pbmZvOwogCXJldHVybiBz
eW5jX3Rlc3RfYml0KHBvcnQsIEJNKCZzLT5ldnRjaG5fcGVuZGluZ1swXSkpOwogfQogCi1zdGF0
aWMgYm9vbCBldnRjaG5fMmxfdGVzdF9hbmRfc2V0X21hc2sodW5zaWduZWQgcG9ydCkKK3N0YXRp
YyBib29sIGV2dGNobl8ybF90ZXN0X2FuZF9zZXRfbWFzayhldnRjaG5fcG9ydF90IHBvcnQpCiB7
CiAJc3RydWN0IHNoYXJlZF9pbmZvICpzID0gSFlQRVJWSVNPUl9zaGFyZWRfaW5mbzsKIAlyZXR1
cm4gc3luY190ZXN0X2FuZF9zZXRfYml0KHBvcnQsIEJNKCZzLT5ldnRjaG5fbWFza1swXSkpOwog
fQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfbWFzayh1bnNpZ25lZCBwb3J0KQorc3RhdGljIHZv
aWQgZXZ0Y2huXzJsX21hc2soZXZ0Y2huX3BvcnRfdCBwb3J0KQogewogCXN0cnVjdCBzaGFyZWRf
aW5mbyAqcyA9IEhZUEVSVklTT1Jfc2hhcmVkX2luZm87CiAJc3luY19zZXRfYml0KHBvcnQsIEJN
KCZzLT5ldnRjaG5fbWFza1swXSkpOwogfQogCi1zdGF0aWMgdm9pZCBldnRjaG5fMmxfdW5tYXNr
KHVuc2lnbmVkIHBvcnQpCitzdGF0aWMgdm9pZCBldnRjaG5fMmxfdW5tYXNrKGV2dGNobl9wb3J0
X3QgcG9ydCkKIHsKIAlzdHJ1Y3Qgc2hhcmVkX2luZm8gKnMgPSBIWVBFUlZJU09SX3NoYXJlZF9p
bmZvOwogCXVuc2lnbmVkIGludCBjcHUgPSBnZXRfY3B1KCk7CkBAIC0xNzMsNyArMTczLDcgQEAg
c3RhdGljIHZvaWQgZXZ0Y2huXzJsX2hhbmRsZV9ldmVudHModW5zaWduZWQgY3B1KQogCS8qIFRp
bWVyIGludGVycnVwdCBoYXMgaGlnaGVzdCBwcmlvcml0eS4gKi8KIAlpcnEgPSBpcnFfZnJvbV92
aXJxKGNwdSwgVklSUV9USU1FUik7CiAJaWYgKGlycSAhPSAtMSkgewotCQl1bnNpZ25lZCBpbnQg
ZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGlycSk7CisJCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0g
ZXZ0Y2huX2Zyb21faXJxKGlycSk7CiAJCXdvcmRfaWR4ID0gZXZ0Y2huIC8gQklUU19QRVJfTE9O
RzsKIAkJYml0X2lkeCA9IGV2dGNobiAlIEJJVFNfUEVSX0xPTkc7CiAJCWlmIChhY3RpdmVfZXZ0
Y2hucyhjcHUsIHMsIHdvcmRfaWR4KSAmICgxVUxMIDw8IGJpdF9pZHgpKQpAQCAtMjI4LDcgKzIy
OCw3IEBAIHN0YXRpYyB2b2lkIGV2dGNobl8ybF9oYW5kbGVfZXZlbnRzKHVuc2lnbmVkIGNwdSkK
IAogCQlkbyB7CiAJCQl4ZW5fdWxvbmdfdCBiaXRzOwotCQkJaW50IHBvcnQ7CisJCQlldnRjaG5f
cG9ydF90IHBvcnQ7CiAKIAkJCWJpdHMgPSBNQVNLX0xTQlMocGVuZGluZ19iaXRzLCBiaXRfaWR4
KTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c19iYXNlLmMgYi9kcml2
ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2Jhc2UuYwppbmRleCA0OTllZmY3ZDNmNjUuLjAzNjdmYmFl
YWQ1ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c19iYXNlLmMKKysrIGIv
ZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50c19iYXNlLmMKQEAgLTExNiw3ICsxMTYsNyBAQCBzdGF0
aWMgdm9pZCBjbGVhcl9ldnRjaG5fdG9faXJxX2FsbCh2b2lkKQogCX0KIH0KIAotc3RhdGljIGlu
dCBzZXRfZXZ0Y2huX3RvX2lycSh1bnNpZ25lZCBldnRjaG4sIHVuc2lnbmVkIGlycSkKK3N0YXRp
YyBpbnQgc2V0X2V2dGNobl90b19pcnEoZXZ0Y2huX3BvcnRfdCBldnRjaG4sIHVuc2lnbmVkIGlu
dCBpcnEpCiB7CiAJdW5zaWduZWQgcm93OwogCXVuc2lnbmVkIGNvbDsKQEAgLTE0Myw3ICsxNDMs
NyBAQCBzdGF0aWMgaW50IHNldF9ldnRjaG5fdG9faXJxKHVuc2lnbmVkIGV2dGNobiwgdW5zaWdu
ZWQgaXJxKQogCXJldHVybiAwOwogfQogCi1pbnQgZ2V0X2V2dGNobl90b19pcnEodW5zaWduZWQg
ZXZ0Y2huKQoraW50IGdldF9ldnRjaG5fdG9faXJxKGV2dGNobl9wb3J0X3QgZXZ0Y2huKQogewog
CWlmIChldnRjaG4gPj0geGVuX2V2dGNobl9tYXhfY2hhbm5lbHMoKSkKIAkJcmV0dXJuIC0xOwpA
QCAtMTYyLDcgKzE2Miw3IEBAIHN0cnVjdCBpcnFfaW5mbyAqaW5mb19mb3JfaXJxKHVuc2lnbmVk
IGlycSkKIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2NvbW1vbl9zZXR1cChzdHJ1Y3QgaXJxX2lu
Zm8gKmluZm8sCiAJCQkJICAgICB1bnNpZ25lZCBpcnEsCiAJCQkJICAgICBlbnVtIHhlbl9pcnFf
dHlwZSB0eXBlLAotCQkJCSAgICAgdW5zaWduZWQgZXZ0Y2huLAorCQkJCSAgICAgZXZ0Y2huX3Bv
cnRfdCBldnRjaG4sCiAJCQkJICAgICB1bnNpZ25lZCBzaG9ydCBjcHUpCiB7CiAJaW50IHJldDsK
QEAgLTE4NCw3ICsxODQsNyBAQCBzdGF0aWMgaW50IHhlbl9pcnFfaW5mb19jb21tb25fc2V0dXAo
c3RydWN0IGlycV9pbmZvICppbmZvLAogfQogCiBzdGF0aWMgaW50IHhlbl9pcnFfaW5mb19ldnRj
aG5fc2V0dXAodW5zaWduZWQgaXJxLAotCQkJCSAgICAgdW5zaWduZWQgZXZ0Y2huKQorCQkJCSAg
ICAgZXZ0Y2huX3BvcnRfdCBldnRjaG4pCiB7CiAJc3RydWN0IGlycV9pbmZvICppbmZvID0gaW5m
b19mb3JfaXJxKGlycSk7CiAKQEAgLTE5Myw3ICsxOTMsNyBAQCBzdGF0aWMgaW50IHhlbl9pcnFf
aW5mb19ldnRjaG5fc2V0dXAodW5zaWduZWQgaXJxLAogCiBzdGF0aWMgaW50IHhlbl9pcnFfaW5m
b19pcGlfc2V0dXAodW5zaWduZWQgY3B1LAogCQkJCSAgdW5zaWduZWQgaXJxLAotCQkJCSAgdW5z
aWduZWQgZXZ0Y2huLAorCQkJCSAgZXZ0Y2huX3BvcnRfdCBldnRjaG4sCiAJCQkJICBlbnVtIGlw
aV92ZWN0b3IgaXBpKQogewogCXN0cnVjdCBpcnFfaW5mbyAqaW5mbyA9IGluZm9fZm9yX2lycShp
cnEpOwpAQCAtMjA3LDcgKzIwNyw3IEBAIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX2lwaV9zZXR1
cCh1bnNpZ25lZCBjcHUsCiAKIHN0YXRpYyBpbnQgeGVuX2lycV9pbmZvX3ZpcnFfc2V0dXAodW5z
aWduZWQgY3B1LAogCQkJCSAgIHVuc2lnbmVkIGlycSwKLQkJCQkgICB1bnNpZ25lZCBldnRjaG4s
CisJCQkJICAgZXZ0Y2huX3BvcnRfdCBldnRjaG4sCiAJCQkJICAgdW5zaWduZWQgdmlycSkKIHsK
IAlzdHJ1Y3QgaXJxX2luZm8gKmluZm8gPSBpbmZvX2Zvcl9pcnEoaXJxKTsKQEAgLTIyMCw3ICsy
MjAsNyBAQCBzdGF0aWMgaW50IHhlbl9pcnFfaW5mb192aXJxX3NldHVwKHVuc2lnbmVkIGNwdSwK
IH0KIAogc3RhdGljIGludCB4ZW5faXJxX2luZm9fcGlycV9zZXR1cCh1bnNpZ25lZCBpcnEsCi0J
CQkJICAgdW5zaWduZWQgZXZ0Y2huLAorCQkJCSAgIGV2dGNobl9wb3J0X3QgZXZ0Y2huLAogCQkJ
CSAgIHVuc2lnbmVkIHBpcnEsCiAJCQkJICAgdW5zaWduZWQgZ3NpLAogCQkJCSAgIHVpbnQxNl90
IGRvbWlkLApAQCAtMjQ1LDcgKzI0NSw3IEBAIHN0YXRpYyB2b2lkIHhlbl9pcnFfaW5mb19jbGVh
bnVwKHN0cnVjdCBpcnFfaW5mbyAqaW5mbykKIC8qCiAgKiBBY2Nlc3NvcnMgZm9yIHBhY2tlZCBJ
UlEgaW5mb3JtYXRpb24uCiAgKi8KLXVuc2lnbmVkIGludCBldnRjaG5fZnJvbV9pcnEodW5zaWdu
ZWQgaXJxKQorZXZ0Y2huX3BvcnRfdCBldnRjaG5fZnJvbV9pcnEodW5zaWduZWQgaXJxKQogewog
CWlmIChXQVJOKGlycSA+PSBucl9pcnFzLCAiSW52YWxpZCBpcnEgJWQhXG4iLCBpcnEpKQogCQly
ZXR1cm4gMDsKQEAgLTI1Myw3ICsyNTMsNyBAQCB1bnNpZ25lZCBpbnQgZXZ0Y2huX2Zyb21faXJx
KHVuc2lnbmVkIGlycSkKIAlyZXR1cm4gaW5mb19mb3JfaXJxKGlycSktPmV2dGNobjsKIH0KIAot
dW5zaWduZWQgaXJxX2Zyb21fZXZ0Y2huKHVuc2lnbmVkIGludCBldnRjaG4pCit1bnNpZ25lZCBp
bnQgaXJxX2Zyb21fZXZ0Y2huKGV2dGNobl9wb3J0X3QgZXZ0Y2huKQogewogCXJldHVybiBnZXRf
ZXZ0Y2huX3RvX2lycShldnRjaG4pOwogfQpAQCAtMzA0LDcgKzMwNCw3IEBAIHVuc2lnbmVkIGNw
dV9mcm9tX2lycSh1bnNpZ25lZCBpcnEpCiAJcmV0dXJuIGluZm9fZm9yX2lycShpcnEpLT5jcHU7
CiB9CiAKLXVuc2lnbmVkIGludCBjcHVfZnJvbV9ldnRjaG4odW5zaWduZWQgaW50IGV2dGNobikK
K3Vuc2lnbmVkIGludCBjcHVfZnJvbV9ldnRjaG4oZXZ0Y2huX3BvcnRfdCBldnRjaG4pCiB7CiAJ
aW50IGlycSA9IGdldF9ldnRjaG5fdG9faXJxKGV2dGNobik7CiAJdW5zaWduZWQgcmV0ID0gMDsK
QEAgLTMzMCw5ICszMzAsOSBAQCBzdGF0aWMgYm9vbCBwaXJxX25lZWRzX2VvaV9mbGFnKHVuc2ln
bmVkIGlycSkKIAlyZXR1cm4gaW5mby0+dS5waXJxLmZsYWdzICYgUElSUV9ORUVEU19FT0k7CiB9
CiAKLXN0YXRpYyB2b2lkIGJpbmRfZXZ0Y2huX3RvX2NwdSh1bnNpZ25lZCBpbnQgY2huLCB1bnNp
Z25lZCBpbnQgY3B1KQorc3RhdGljIHZvaWQgYmluZF9ldnRjaG5fdG9fY3B1KGV2dGNobl9wb3J0
X3QgZXZ0Y2huLCB1bnNpZ25lZCBpbnQgY3B1KQogewotCWludCBpcnEgPSBnZXRfZXZ0Y2huX3Rv
X2lycShjaG4pOworCWludCBpcnEgPSBnZXRfZXZ0Y2huX3RvX2lycShldnRjaG4pOwogCXN0cnVj
dCBpcnFfaW5mbyAqaW5mbyA9IGluZm9fZm9yX2lycShpcnEpOwogCiAJQlVHX09OKGlycSA9PSAt
MSk7CkBAIC0zNTQsNyArMzU0LDcgQEAgc3RhdGljIHZvaWQgYmluZF9ldnRjaG5fdG9fY3B1KHVu
c2lnbmVkIGludCBjaG4sIHVuc2lnbmVkIGludCBjcHUpCiAgKi8KIHZvaWQgbm90aWZ5X3JlbW90
ZV92aWFfaXJxKGludCBpcnEpCiB7Ci0JaW50IGV2dGNobiA9IGV2dGNobl9mcm9tX2lycShpcnEp
OworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGlycSk7CiAKIAlpZiAo
VkFMSURfRVZUQ0hOKGV2dGNobikpCiAJCW5vdGlmeV9yZW1vdGVfdmlhX2V2dGNobihldnRjaG4p
OwpAQCAtNDQ1LDcgKzQ0NSw3IEBAIHN0YXRpYyB2b2lkIHhlbl9mcmVlX2lycSh1bnNpZ25lZCBp
cnEpCiAJaXJxX2ZyZWVfZGVzYyhpcnEpOwogfQogCi1zdGF0aWMgdm9pZCB4ZW5fZXZ0Y2huX2Ns
b3NlKHVuc2lnbmVkIGludCBwb3J0KQorc3RhdGljIHZvaWQgeGVuX2V2dGNobl9jbG9zZShldnRj
aG5fcG9ydF90IHBvcnQpCiB7CiAJc3RydWN0IGV2dGNobl9jbG9zZSBjbG9zZTsKIApAQCAtNDcy
LDcgKzQ3Miw3IEBAIHN0YXRpYyB2b2lkIHBpcnFfcXVlcnlfdW5tYXNrKGludCBpcnEpCiAKIHN0
YXRpYyB2b2lkIGVvaV9waXJxKHN0cnVjdCBpcnFfZGF0YSAqZGF0YSkKIHsKLQlpbnQgZXZ0Y2hu
ID0gZXZ0Y2huX2Zyb21faXJxKGRhdGEtPmlycSk7CisJZXZ0Y2huX3BvcnRfdCBldnRjaG4gPSBl
dnRjaG5fZnJvbV9pcnEoZGF0YS0+aXJxKTsKIAlzdHJ1Y3QgcGh5c2Rldl9lb2kgZW9pID0geyAu
aXJxID0gcGlycV9mcm9tX2lycShkYXRhLT5pcnEpIH07CiAJaW50IHJjID0gMDsKIApAQCAtNTA4
LDcgKzUwOCw3IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgX19zdGFydHVwX3BpcnEodW5zaWduZWQg
aW50IGlycSkKIHsKIAlzdHJ1Y3QgZXZ0Y2huX2JpbmRfcGlycSBiaW5kX3BpcnE7CiAJc3RydWN0
IGlycV9pbmZvICppbmZvID0gaW5mb19mb3JfaXJxKGlycSk7Ci0JaW50IGV2dGNobiA9IGV2dGNo
bl9mcm9tX2lycShpcnEpOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJx
KGlycSk7CiAJaW50IHJjOwogCiAJQlVHX09OKGluZm8tPnR5cGUgIT0gSVJRVF9QSVJRKTsKQEAg
LTU2MSw3ICs1NjEsNyBAQCBzdGF0aWMgdm9pZCBzaHV0ZG93bl9waXJxKHN0cnVjdCBpcnFfZGF0
YSAqZGF0YSkKIHsKIAl1bnNpZ25lZCBpbnQgaXJxID0gZGF0YS0+aXJxOwogCXN0cnVjdCBpcnFf
aW5mbyAqaW5mbyA9IGluZm9fZm9yX2lycShpcnEpOwotCXVuc2lnbmVkIGV2dGNobiA9IGV2dGNo
bl9mcm9tX2lycShpcnEpOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJx
KGlycSk7CiAKIAlCVUdfT04oaW5mby0+dHlwZSAhPSBJUlFUX1BJUlEpOwogCkBAIC02MDEsNyAr
NjAxLDcgQEAgRVhQT1JUX1NZTUJPTF9HUEwoeGVuX2lycV9mcm9tX2dzaSk7CiAKIHN0YXRpYyB2
b2lkIF9fdW5iaW5kX2Zyb21faXJxKHVuc2lnbmVkIGludCBpcnEpCiB7Ci0JaW50IGV2dGNobiA9
IGV2dGNobl9mcm9tX2lycShpcnEpOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zy
b21faXJxKGlycSk7CiAJc3RydWN0IGlycV9pbmZvICppbmZvID0gaXJxX2dldF9oYW5kbGVyX2Rh
dGEoaXJxKTsKIAogCWlmIChpbmZvLT5yZWZjbnQgPiAwKSB7CkBAIC04MjcsNyArODI3LDcgQEAg
aW50IHhlbl9waXJxX2Zyb21faXJxKHVuc2lnbmVkIGlycSkKIH0KIEVYUE9SVF9TWU1CT0xfR1BM
KHhlbl9waXJxX2Zyb21faXJxKTsKIAotaW50IGJpbmRfZXZ0Y2huX3RvX2lycSh1bnNpZ25lZCBp
bnQgZXZ0Y2huKQoraW50IGJpbmRfZXZ0Y2huX3RvX2lycShldnRjaG5fcG9ydF90IGV2dGNobikK
IHsKIAlpbnQgaXJxOwogCWludCByZXQ7CkBAIC04NzAsOCArODcwLDggQEAgRVhQT1JUX1NZTUJP
TF9HUEwoYmluZF9ldnRjaG5fdG9faXJxKTsKIHN0YXRpYyBpbnQgYmluZF9pcGlfdG9faXJxKHVu
c2lnbmVkIGludCBpcGksIHVuc2lnbmVkIGludCBjcHUpCiB7CiAJc3RydWN0IGV2dGNobl9iaW5k
X2lwaSBiaW5kX2lwaTsKLQlpbnQgZXZ0Y2huLCBpcnE7Ci0JaW50IHJldDsKKwlldnRjaG5fcG9y
dF90IGV2dGNobjsKKwlpbnQgcmV0LCBpcnE7CiAKIAltdXRleF9sb2NrKCZpcnFfbWFwcGluZ191
cGRhdGVfbG9jayk7CiAKQEAgLTkwOSw3ICs5MDksNyBAQCBzdGF0aWMgaW50IGJpbmRfaXBpX3Rv
X2lycSh1bnNpZ25lZCBpbnQgaXBpLCB1bnNpZ25lZCBpbnQgY3B1KQogfQogCiBpbnQgYmluZF9p
bnRlcmRvbWFpbl9ldnRjaG5fdG9faXJxKHVuc2lnbmVkIGludCByZW1vdGVfZG9tYWluLAotCQkJ
CSAgIHVuc2lnbmVkIGludCByZW1vdGVfcG9ydCkKKwkJCQkgICBldnRjaG5fcG9ydF90IHJlbW90
ZV9wb3J0KQogewogCXN0cnVjdCBldnRjaG5fYmluZF9pbnRlcmRvbWFpbiBiaW5kX2ludGVyZG9t
YWluOwogCWludCBlcnI7CkBAIC05MjQsMTAgKzkyNCwxMSBAQCBpbnQgYmluZF9pbnRlcmRvbWFp
bl9ldnRjaG5fdG9faXJxKHVuc2lnbmVkIGludCByZW1vdGVfZG9tYWluLAogfQogRVhQT1JUX1NZ
TUJPTF9HUEwoYmluZF9pbnRlcmRvbWFpbl9ldnRjaG5fdG9faXJxKTsKIAotc3RhdGljIGludCBm
aW5kX3ZpcnEodW5zaWduZWQgaW50IHZpcnEsIHVuc2lnbmVkIGludCBjcHUpCitzdGF0aWMgaW50
IGZpbmRfdmlycSh1bnNpZ25lZCBpbnQgdmlycSwgdW5zaWduZWQgaW50IGNwdSwgZXZ0Y2huX3Bv
cnRfdCAqZXZ0Y2huKQogewogCXN0cnVjdCBldnRjaG5fc3RhdHVzIHN0YXR1czsKLQlpbnQgcG9y
dCwgcmMgPSAtRU5PRU5UOworCWV2dGNobl9wb3J0X3QgcG9ydDsKKwlpbnQgcmMgPSAtRU5PRU5U
OwogCiAJbWVtc2V0KCZzdGF0dXMsIDAsIHNpemVvZihzdGF0dXMpKTsKIAlmb3IgKHBvcnQgPSAw
OyBwb3J0IDwgeGVuX2V2dGNobl9tYXhfY2hhbm5lbHMoKTsgcG9ydCsrKSB7CkBAIC05MzksNyAr
OTQwLDcgQEAgc3RhdGljIGludCBmaW5kX3ZpcnEodW5zaWduZWQgaW50IHZpcnEsIHVuc2lnbmVk
IGludCBjcHUpCiAJCWlmIChzdGF0dXMuc3RhdHVzICE9IEVWVENITlNUQVRfdmlycSkKIAkJCWNv
bnRpbnVlOwogCQlpZiAoc3RhdHVzLnUudmlycSA9PSB2aXJxICYmIHN0YXR1cy52Y3B1ID09IHhl
bl92Y3B1X25yKGNwdSkpIHsKLQkJCXJjID0gcG9ydDsKKwkJCSpldnRjaG4gPSBwb3J0OwogCQkJ
YnJlYWs7CiAJCX0KIAl9CkBAIC05NjIsNyArOTYzLDggQEAgRVhQT1JUX1NZTUJPTF9HUEwoeGVu
X2V2dGNobl9ucl9jaGFubmVscyk7CiBpbnQgYmluZF92aXJxX3RvX2lycSh1bnNpZ25lZCBpbnQg
dmlycSwgdW5zaWduZWQgaW50IGNwdSwgYm9vbCBwZXJjcHUpCiB7CiAJc3RydWN0IGV2dGNobl9i
aW5kX3ZpcnEgYmluZF92aXJxOwotCWludCBldnRjaG4sIGlycSwgcmV0OworCWV2dGNobl9wb3J0
X3QgZXZ0Y2huOworCWludCBpcnEsIHJldDsKIAogCW11dGV4X2xvY2soJmlycV9tYXBwaW5nX3Vw
ZGF0ZV9sb2NrKTsKIApAQCAtOTg4LDkgKzk5MCw4IEBAIGludCBiaW5kX3ZpcnFfdG9faXJxKHVu
c2lnbmVkIGludCB2aXJxLCB1bnNpZ25lZCBpbnQgY3B1LCBib29sIHBlcmNwdSkKIAkJCWV2dGNo
biA9IGJpbmRfdmlycS5wb3J0OwogCQllbHNlIHsKIAkJCWlmIChyZXQgPT0gLUVFWElTVCkKLQkJ
CQlyZXQgPSBmaW5kX3ZpcnEodmlycSwgY3B1KTsKKwkJCQlyZXQgPSBmaW5kX3ZpcnEodmlycSwg
Y3B1LCAmZXZ0Y2huKTsKIAkJCUJVR19PTihyZXQgPCAwKTsKLQkJCWV2dGNobiA9IHJldDsKIAkJ
fQogCiAJCXJldCA9IHhlbl9pcnFfaW5mb192aXJxX3NldHVwKGNwdSwgaXJxLCBldnRjaG4sIHZp
cnEpOwpAQCAtMTAxOSw3ICsxMDIwLDcgQEAgc3RhdGljIHZvaWQgdW5iaW5kX2Zyb21faXJxKHVu
c2lnbmVkIGludCBpcnEpCiAJbXV0ZXhfdW5sb2NrKCZpcnFfbWFwcGluZ191cGRhdGVfbG9jayk7
CiB9CiAKLWludCBiaW5kX2V2dGNobl90b19pcnFoYW5kbGVyKHVuc2lnbmVkIGludCBldnRjaG4s
CitpbnQgYmluZF9ldnRjaG5fdG9faXJxaGFuZGxlcihldnRjaG5fcG9ydF90IGV2dGNobiwKIAkJ
CSAgICAgIGlycV9oYW5kbGVyX3QgaGFuZGxlciwKIAkJCSAgICAgIHVuc2lnbmVkIGxvbmcgaXJx
ZmxhZ3MsCiAJCQkgICAgICBjb25zdCBjaGFyICpkZXZuYW1lLCB2b2lkICpkZXZfaWQpCkBAIC0x
MDQwLDcgKzEwNDEsNyBAQCBpbnQgYmluZF9ldnRjaG5fdG9faXJxaGFuZGxlcih1bnNpZ25lZCBp
bnQgZXZ0Y2huLAogRVhQT1JUX1NZTUJPTF9HUEwoYmluZF9ldnRjaG5fdG9faXJxaGFuZGxlcik7
CiAKIGludCBiaW5kX2ludGVyZG9tYWluX2V2dGNobl90b19pcnFoYW5kbGVyKHVuc2lnbmVkIGlu
dCByZW1vdGVfZG9tYWluLAotCQkJCQkgIHVuc2lnbmVkIGludCByZW1vdGVfcG9ydCwKKwkJCQkJ
ICBldnRjaG5fcG9ydF90IHJlbW90ZV9wb3J0LAogCQkJCQkgIGlycV9oYW5kbGVyX3QgaGFuZGxl
ciwKIAkJCQkJICB1bnNpZ25lZCBsb25nIGlycWZsYWdzLAogCQkJCQkgIGNvbnN0IGNoYXIgKmRl
dm5hbWUsCkBAIC0xMTMyLDcgKzExMzMsNyBAQCBpbnQgeGVuX3NldF9pcnFfcHJpb3JpdHkodW5z
aWduZWQgaXJxLCB1bnNpZ25lZCBwcmlvcml0eSkKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKHhlbl9z
ZXRfaXJxX3ByaW9yaXR5KTsKIAotaW50IGV2dGNobl9tYWtlX3JlZmNvdW50ZWQodW5zaWduZWQg
aW50IGV2dGNobikKK2ludCBldnRjaG5fbWFrZV9yZWZjb3VudGVkKGV2dGNobl9wb3J0X3QgZXZ0
Y2huKQogewogCWludCBpcnEgPSBnZXRfZXZ0Y2huX3RvX2lycShldnRjaG4pOwogCXN0cnVjdCBp
cnFfaW5mbyAqaW5mbzsKQEAgLTExNTMsNyArMTE1NCw3IEBAIGludCBldnRjaG5fbWFrZV9yZWZj
b3VudGVkKHVuc2lnbmVkIGludCBldnRjaG4pCiB9CiBFWFBPUlRfU1lNQk9MX0dQTChldnRjaG5f
bWFrZV9yZWZjb3VudGVkKTsKIAotaW50IGV2dGNobl9nZXQodW5zaWduZWQgaW50IGV2dGNobikK
K2ludCBldnRjaG5fZ2V0KGV2dGNobl9wb3J0X3QgZXZ0Y2huKQogewogCWludCBpcnE7CiAJc3Ry
dWN0IGlycV9pbmZvICppbmZvOwpAQCAtMTE4Niw3ICsxMTg3LDcgQEAgaW50IGV2dGNobl9nZXQo
dW5zaWduZWQgaW50IGV2dGNobikKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGV2dGNobl9nZXQpOwog
Ci12b2lkIGV2dGNobl9wdXQodW5zaWduZWQgaW50IGV2dGNobikKK3ZvaWQgZXZ0Y2huX3B1dChl
dnRjaG5fcG9ydF90IGV2dGNobikKIHsKIAlpbnQgaXJxID0gZ2V0X2V2dGNobl90b19pcnEoZXZ0
Y2huKTsKIAlpZiAoV0FSTl9PTihpcnEgPT0gLTEpKQpAQCAtMTI1Miw3ICsxMjUzLDcgQEAgdm9p
ZCB4ZW5faHZtX2V2dGNobl9kb191cGNhbGwodm9pZCkKIEVYUE9SVF9TWU1CT0xfR1BMKHhlbl9o
dm1fZXZ0Y2huX2RvX3VwY2FsbCk7CiAKIC8qIFJlYmluZCBhIG5ldyBldmVudCBjaGFubmVsIHRv
IGFuIGV4aXN0aW5nIGlycS4gKi8KLXZvaWQgcmViaW5kX2V2dGNobl9pcnEoaW50IGV2dGNobiwg
aW50IGlycSkKK3ZvaWQgcmViaW5kX2V2dGNobl9pcnEoZXZ0Y2huX3BvcnRfdCBldnRjaG4sIGlu
dCBpcnEpCiB7CiAJc3RydWN0IGlycV9pbmZvICppbmZvID0gaW5mb19mb3JfaXJxKGlycSk7CiAK
QEAgLTEyNzUsNyArMTI3Niw3IEBAIHZvaWQgcmViaW5kX2V2dGNobl9pcnEoaW50IGV2dGNobiwg
aW50IGlycSkKIAogCW11dGV4X3VubG9jaygmaXJxX21hcHBpbmdfdXBkYXRlX2xvY2spOwogCi0g
ICAgICAgIGJpbmRfZXZ0Y2huX3RvX2NwdShldnRjaG4sIGluZm8tPmNwdSk7CisJYmluZF9ldnRj
aG5fdG9fY3B1KGV2dGNobiwgaW5mby0+Y3B1KTsKIAkvKiBUaGlzIHdpbGwgYmUgZGVmZXJyZWQg
dW50aWwgaW50ZXJydXB0IGlzIHByb2Nlc3NlZCAqLwogCWlycV9zZXRfYWZmaW5pdHkoaXJxLCBj
cHVtYXNrX29mKGluZm8tPmNwdSkpOwogCkBAIC0xMjg0LDcgKzEyODUsNyBAQCB2b2lkIHJlYmlu
ZF9ldnRjaG5faXJxKGludCBldnRjaG4sIGludCBpcnEpCiB9CiAKIC8qIFJlYmluZCBhbiBldnRj
aG4gc28gdGhhdCBpdCBnZXRzIGRlbGl2ZXJlZCB0byBhIHNwZWNpZmljIGNwdSAqLwotc3RhdGlj
IGludCB4ZW5fcmViaW5kX2V2dGNobl90b19jcHUoaW50IGV2dGNobiwgdW5zaWduZWQgaW50IHRj
cHUpCitzdGF0aWMgaW50IHhlbl9yZWJpbmRfZXZ0Y2huX3RvX2NwdShldnRjaG5fcG9ydF90IGV2
dGNobiwgdW5zaWduZWQgaW50IHRjcHUpCiB7CiAJc3RydWN0IGV2dGNobl9iaW5kX3ZjcHUgYmlu
ZF92Y3B1OwogCWludCBtYXNrZWQ7CkBAIC0xMzQyLDcgKzEzNDMsNyBAQCBFWFBPUlRfU1lNQk9M
X0dQTCh4ZW5fc2V0X2FmZmluaXR5X2V2dGNobik7CiAKIHN0YXRpYyB2b2lkIGVuYWJsZV9keW5p
cnEoc3RydWN0IGlycV9kYXRhICpkYXRhKQogewotCWludCBldnRjaG4gPSBldnRjaG5fZnJvbV9p
cnEoZGF0YS0+aXJxKTsKKwlldnRjaG5fcG9ydF90IGV2dGNobiA9IGV2dGNobl9mcm9tX2lycShk
YXRhLT5pcnEpOwogCiAJaWYgKFZBTElEX0VWVENITihldnRjaG4pKQogCQl1bm1hc2tfZXZ0Y2hu
KGV2dGNobik7CkBAIC0xMzUwLDcgKzEzNTEsNyBAQCBzdGF0aWMgdm9pZCBlbmFibGVfZHluaXJx
KHN0cnVjdCBpcnFfZGF0YSAqZGF0YSkKIAogc3RhdGljIHZvaWQgZGlzYWJsZV9keW5pcnEoc3Ry
dWN0IGlycV9kYXRhICpkYXRhKQogewotCWludCBldnRjaG4gPSBldnRjaG5fZnJvbV9pcnEoZGF0
YS0+aXJxKTsKKwlldnRjaG5fcG9ydF90IGV2dGNobiA9IGV2dGNobl9mcm9tX2lycShkYXRhLT5p
cnEpOwogCiAJaWYgKFZBTElEX0VWVENITihldnRjaG4pKQogCQltYXNrX2V2dGNobihldnRjaG4p
OwpAQCAtMTM1OCw3ICsxMzU5LDcgQEAgc3RhdGljIHZvaWQgZGlzYWJsZV9keW5pcnEoc3RydWN0
IGlycV9kYXRhICpkYXRhKQogCiBzdGF0aWMgdm9pZCBhY2tfZHluaXJxKHN0cnVjdCBpcnFfZGF0
YSAqZGF0YSkKIHsKLQlpbnQgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGRhdGEtPmlycSk7CisJ
ZXZ0Y2huX3BvcnRfdCBldnRjaG4gPSBldnRjaG5fZnJvbV9pcnEoZGF0YS0+aXJxKTsKIAogCWlm
ICghVkFMSURfRVZUQ0hOKGV2dGNobikpCiAJCXJldHVybjsKQEAgLTEzODUsNyArMTM4Niw3IEBA
IHN0YXRpYyB2b2lkIG1hc2tfYWNrX2R5bmlycShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEpCiAKIHN0
YXRpYyBpbnQgcmV0cmlnZ2VyX2R5bmlycShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEpCiB7Ci0JdW5z
aWduZWQgaW50IGV2dGNobiA9IGV2dGNobl9mcm9tX2lycShkYXRhLT5pcnEpOworCWV2dGNobl9w
b3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGRhdGEtPmlycSk7CiAJaW50IG1hc2tlZDsK
IAogCWlmICghVkFMSURfRVZUQ0hOKGV2dGNobikpCkBAIC0xNDQwLDcgKzE0NDEsOCBAQCBzdGF0
aWMgdm9pZCByZXN0b3JlX3BpcnFzKHZvaWQpCiBzdGF0aWMgdm9pZCByZXN0b3JlX2NwdV92aXJx
cyh1bnNpZ25lZCBpbnQgY3B1KQogewogCXN0cnVjdCBldnRjaG5fYmluZF92aXJxIGJpbmRfdmly
cTsKLQlpbnQgdmlycSwgaXJxLCBldnRjaG47CisJZXZ0Y2huX3BvcnRfdCBldnRjaG47CisJaW50
IHZpcnEsIGlycTsKIAogCWZvciAodmlycSA9IDA7IHZpcnEgPCBOUl9WSVJRUzsgdmlycSsrKSB7
CiAJCWlmICgoaXJxID0gcGVyX2NwdSh2aXJxX3RvX2lycSwgY3B1KVt2aXJxXSkgPT0gLTEpCkBA
IC0xNDY1LDcgKzE0NjcsOCBAQCBzdGF0aWMgdm9pZCByZXN0b3JlX2NwdV92aXJxcyh1bnNpZ25l
ZCBpbnQgY3B1KQogc3RhdGljIHZvaWQgcmVzdG9yZV9jcHVfaXBpcyh1bnNpZ25lZCBpbnQgY3B1
KQogewogCXN0cnVjdCBldnRjaG5fYmluZF9pcGkgYmluZF9pcGk7Ci0JaW50IGlwaSwgaXJxLCBl
dnRjaG47CisJZXZ0Y2huX3BvcnRfdCBldnRjaG47CisJaW50IGlwaSwgaXJxOwogCiAJZm9yIChp
cGkgPSAwOyBpcGkgPCBYRU5fTlJfSVBJUzsgaXBpKyspIHsKIAkJaWYgKChpcnEgPSBwZXJfY3B1
KGlwaV90b19pcnEsIGNwdSlbaXBpXSkgPT0gLTEpCkBAIC0xNDg5LDcgKzE0OTIsNyBAQCBzdGF0
aWMgdm9pZCByZXN0b3JlX2NwdV9pcGlzKHVuc2lnbmVkIGludCBjcHUpCiAvKiBDbGVhciBhbiBp
cnEncyBwZW5kaW5nIHN0YXRlLCBpbiBwcmVwYXJhdGlvbiBmb3IgcG9sbGluZyBvbiBpdCAqLwog
dm9pZCB4ZW5fY2xlYXJfaXJxX3BlbmRpbmcoaW50IGlycSkKIHsKLQlpbnQgZXZ0Y2huID0gZXZ0
Y2huX2Zyb21faXJxKGlycSk7CisJZXZ0Y2huX3BvcnRfdCBldnRjaG4gPSBldnRjaG5fZnJvbV9p
cnEoaXJxKTsKIAogCWlmIChWQUxJRF9FVlRDSE4oZXZ0Y2huKSkKIAkJY2xlYXJfZXZ0Y2huKGV2
dGNobik7CkBAIC0xNDk3LDcgKzE1MDAsNyBAQCB2b2lkIHhlbl9jbGVhcl9pcnFfcGVuZGluZyhp
bnQgaXJxKQogRVhQT1JUX1NZTUJPTCh4ZW5fY2xlYXJfaXJxX3BlbmRpbmcpOwogdm9pZCB4ZW5f
c2V0X2lycV9wZW5kaW5nKGludCBpcnEpCiB7Ci0JaW50IGV2dGNobiA9IGV2dGNobl9mcm9tX2ly
cShpcnEpOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGlycSk7CiAK
IAlpZiAoVkFMSURfRVZUQ0hOKGV2dGNobikpCiAJCXNldF9ldnRjaG4oZXZ0Y2huKTsKQEAgLTE1
MDUsNyArMTUwOCw3IEBAIHZvaWQgeGVuX3NldF9pcnFfcGVuZGluZyhpbnQgaXJxKQogCiBib29s
IHhlbl90ZXN0X2lycV9wZW5kaW5nKGludCBpcnEpCiB7Ci0JaW50IGV2dGNobiA9IGV2dGNobl9m
cm9tX2lycShpcnEpOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huID0gZXZ0Y2huX2Zyb21faXJxKGly
cSk7CiAJYm9vbCByZXQgPSBmYWxzZTsKIAogCWlmIChWQUxJRF9FVlRDSE4oZXZ0Y2huKSkKQEAg
LTE2NjcsNyArMTY3MCw3IEBAIG1vZHVsZV9wYXJhbShmaWZvX2V2ZW50cywgYm9vbCwgMCk7CiB2
b2lkIF9faW5pdCB4ZW5faW5pdF9JUlEodm9pZCkKIHsKIAlpbnQgcmV0ID0gLUVJTlZBTDsKLQl1
bnNpZ25lZCBpbnQgZXZ0Y2huOworCWV2dGNobl9wb3J0X3QgZXZ0Y2huOwogCiAJaWYgKGZpZm9f
ZXZlbnRzKQogCQlyZXQgPSB4ZW5fZXZ0Y2huX2ZpZm9faW5pdCgpOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy94ZW4vZXZlbnRzL2V2ZW50c19maWZvLmMgYi9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRz
X2ZpZm8uYwppbmRleCA3NmIzMThlODgzODIuLmM2MGVlMDQ1MDE3MyAxMDA2NDQKLS0tIGEvZHJp
dmVycy94ZW4vZXZlbnRzL2V2ZW50c19maWZvLmMKKysrIGIvZHJpdmVycy94ZW4vZXZlbnRzL2V2
ZW50c19maWZvLmMKQEAgLTgyLDcgKzgyLDcgQEAgc3RhdGljIHVuc2lnbmVkIGV2ZW50X2FycmF5
X3BhZ2VzIF9fcmVhZF9tb3N0bHk7CiAKICNlbmRpZgogCi1zdGF0aWMgaW5saW5lIGV2ZW50X3dv
cmRfdCAqZXZlbnRfd29yZF9mcm9tX3BvcnQodW5zaWduZWQgcG9ydCkKK3N0YXRpYyBpbmxpbmUg
ZXZlbnRfd29yZF90ICpldmVudF93b3JkX2Zyb21fcG9ydChldnRjaG5fcG9ydF90IHBvcnQpCiB7
CiAJdW5zaWduZWQgaSA9IHBvcnQgLyBFVkVOVF9XT1JEU19QRVJfUEFHRTsKIApAQCAtMTQwLDcg
KzE0MCw3IEBAIHN0YXRpYyB2b2lkIGluaXRfYXJyYXlfcGFnZShldmVudF93b3JkX3QgKmFycmF5
X3BhZ2UpCiAKIHN0YXRpYyBpbnQgZXZ0Y2huX2ZpZm9fc2V0dXAoc3RydWN0IGlycV9pbmZvICpp
bmZvKQogewotCXVuc2lnbmVkIHBvcnQgPSBpbmZvLT5ldnRjaG47CisJZXZ0Y2huX3BvcnRfdCBw
b3J0ID0gaW5mby0+ZXZ0Y2huOwogCXVuc2lnbmVkIG5ld19hcnJheV9wYWdlczsKIAlpbnQgcmV0
OwogCkBAIC0xOTEsMzcgKzE5MSwzNyBAQCBzdGF0aWMgdm9pZCBldnRjaG5fZmlmb19iaW5kX3Rv
X2NwdShzdHJ1Y3QgaXJxX2luZm8gKmluZm8sIHVuc2lnbmVkIGNwdSkKIAkvKiBuby1vcCAqLwog
fQogCi1zdGF0aWMgdm9pZCBldnRjaG5fZmlmb19jbGVhcl9wZW5kaW5nKHVuc2lnbmVkIHBvcnQp
CitzdGF0aWMgdm9pZCBldnRjaG5fZmlmb19jbGVhcl9wZW5kaW5nKGV2dGNobl9wb3J0X3QgcG9y
dCkKIHsKIAlldmVudF93b3JkX3QgKndvcmQgPSBldmVudF93b3JkX2Zyb21fcG9ydChwb3J0KTsK
IAlzeW5jX2NsZWFyX2JpdChFVlRDSE5fRklGT19CSVQoUEVORElORywgd29yZCksIEJNKHdvcmQp
KTsKIH0KIAotc3RhdGljIHZvaWQgZXZ0Y2huX2ZpZm9fc2V0X3BlbmRpbmcodW5zaWduZWQgcG9y
dCkKK3N0YXRpYyB2b2lkIGV2dGNobl9maWZvX3NldF9wZW5kaW5nKGV2dGNobl9wb3J0X3QgcG9y
dCkKIHsKIAlldmVudF93b3JkX3QgKndvcmQgPSBldmVudF93b3JkX2Zyb21fcG9ydChwb3J0KTsK
IAlzeW5jX3NldF9iaXQoRVZUQ0hOX0ZJRk9fQklUKFBFTkRJTkcsIHdvcmQpLCBCTSh3b3JkKSk7
CiB9CiAKLXN0YXRpYyBib29sIGV2dGNobl9maWZvX2lzX3BlbmRpbmcodW5zaWduZWQgcG9ydCkK
K3N0YXRpYyBib29sIGV2dGNobl9maWZvX2lzX3BlbmRpbmcoZXZ0Y2huX3BvcnRfdCBwb3J0KQog
ewogCWV2ZW50X3dvcmRfdCAqd29yZCA9IGV2ZW50X3dvcmRfZnJvbV9wb3J0KHBvcnQpOwogCXJl
dHVybiBzeW5jX3Rlc3RfYml0KEVWVENITl9GSUZPX0JJVChQRU5ESU5HLCB3b3JkKSwgQk0od29y
ZCkpOwogfQogCi1zdGF0aWMgYm9vbCBldnRjaG5fZmlmb190ZXN0X2FuZF9zZXRfbWFzayh1bnNp
Z25lZCBwb3J0KQorc3RhdGljIGJvb2wgZXZ0Y2huX2ZpZm9fdGVzdF9hbmRfc2V0X21hc2soZXZ0
Y2huX3BvcnRfdCBwb3J0KQogewogCWV2ZW50X3dvcmRfdCAqd29yZCA9IGV2ZW50X3dvcmRfZnJv
bV9wb3J0KHBvcnQpOwogCXJldHVybiBzeW5jX3Rlc3RfYW5kX3NldF9iaXQoRVZUQ0hOX0ZJRk9f
QklUKE1BU0tFRCwgd29yZCksIEJNKHdvcmQpKTsKIH0KIAotc3RhdGljIHZvaWQgZXZ0Y2huX2Zp
Zm9fbWFzayh1bnNpZ25lZCBwb3J0KQorc3RhdGljIHZvaWQgZXZ0Y2huX2ZpZm9fbWFzayhldnRj
aG5fcG9ydF90IHBvcnQpCiB7CiAJZXZlbnRfd29yZF90ICp3b3JkID0gZXZlbnRfd29yZF9mcm9t
X3BvcnQocG9ydCk7CiAJc3luY19zZXRfYml0KEVWVENITl9GSUZPX0JJVChNQVNLRUQsIHdvcmQp
LCBCTSh3b3JkKSk7CiB9CiAKLXN0YXRpYyBib29sIGV2dGNobl9maWZvX2lzX21hc2tlZCh1bnNp
Z25lZCBwb3J0KQorc3RhdGljIGJvb2wgZXZ0Y2huX2ZpZm9faXNfbWFza2VkKGV2dGNobl9wb3J0
X3QgcG9ydCkKIHsKIAlldmVudF93b3JkX3QgKndvcmQgPSBldmVudF93b3JkX2Zyb21fcG9ydChw
b3J0KTsKIAlyZXR1cm4gc3luY190ZXN0X2JpdChFVlRDSE5fRklGT19CSVQoTUFTS0VELCB3b3Jk
KSwgQk0od29yZCkpOwpAQCAtMjQyLDcgKzI0Miw3IEBAIHN0YXRpYyB2b2lkIGNsZWFyX21hc2tl
ZCh2b2xhdGlsZSBldmVudF93b3JkX3QgKndvcmQpCiAJfSB3aGlsZSAodyAhPSBvbGQpOwogfQog
Ci1zdGF0aWMgdm9pZCBldnRjaG5fZmlmb191bm1hc2sodW5zaWduZWQgcG9ydCkKK3N0YXRpYyB2
b2lkIGV2dGNobl9maWZvX3VubWFzayhldnRjaG5fcG9ydF90IHBvcnQpCiB7CiAJZXZlbnRfd29y
ZF90ICp3b3JkID0gZXZlbnRfd29yZF9mcm9tX3BvcnQocG9ydCk7CiAKQEAgLTI3MCw3ICsyNzAs
NyBAQCBzdGF0aWMgdWludDMyX3QgY2xlYXJfbGlua2VkKHZvbGF0aWxlIGV2ZW50X3dvcmRfdCAq
d29yZCkKIAlyZXR1cm4gdyAmIEVWVENITl9GSUZPX0xJTktfTUFTSzsKIH0KIAotc3RhdGljIHZv
aWQgaGFuZGxlX2lycV9mb3JfcG9ydCh1bnNpZ25lZCBwb3J0KQorc3RhdGljIHZvaWQgaGFuZGxl
X2lycV9mb3JfcG9ydChldnRjaG5fcG9ydF90IHBvcnQpCiB7CiAJaW50IGlycTsKIApAQCAtMjg2
LDcgKzI4Niw3IEBAIHN0YXRpYyB2b2lkIGNvbnN1bWVfb25lX2V2ZW50KHVuc2lnbmVkIGNwdSwK
IHsKIAlzdHJ1Y3QgZXZ0Y2huX2ZpZm9fcXVldWUgKnEgPSAmcGVyX2NwdShjcHVfcXVldWUsIGNw
dSk7CiAJdWludDMyX3QgaGVhZDsKLQl1bnNpZ25lZCBwb3J0OworCWV2dGNobl9wb3J0X3QgcG9y
dDsKIAlldmVudF93b3JkX3QgKndvcmQ7CiAKIAloZWFkID0gcS0+aGVhZFtwcmlvcml0eV07CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ludGVybmFsLmggYi9kcml2ZXJz
L3hlbi9ldmVudHMvZXZlbnRzX2ludGVybmFsLmgKaW5kZXggODI5MzhjZmY2YzdhLi4xMDY4NGZl
YjA5NGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfaW50ZXJuYWwuaAor
KysgYi9kcml2ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2ludGVybmFsLmgKQEAgLTMzLDcgKzMzLDcg
QEAgc3RydWN0IGlycV9pbmZvIHsKIAlpbnQgcmVmY250OwogCWVudW0geGVuX2lycV90eXBlIHR5
cGU7CS8qIHR5cGUgKi8KIAl1bnNpZ25lZCBpcnE7Ci0JdW5zaWduZWQgaW50IGV2dGNobjsJLyog
ZXZlbnQgY2hhbm5lbCAqLworCWV2dGNobl9wb3J0X3QgZXZ0Y2huOwkvKiBldmVudCBjaGFubmVs
ICovCiAJdW5zaWduZWQgc2hvcnQgY3B1OwkvKiBjcHUgYm91bmQgKi8KIAogCXVuaW9uIHsKQEAg
LTYwLDEyICs2MCwxMiBAQCBzdHJ1Y3QgZXZ0Y2huX29wcyB7CiAJaW50ICgqc2V0dXApKHN0cnVj
dCBpcnFfaW5mbyAqaW5mbyk7CiAJdm9pZCAoKmJpbmRfdG9fY3B1KShzdHJ1Y3QgaXJxX2luZm8g
KmluZm8sIHVuc2lnbmVkIGNwdSk7CiAKLQl2b2lkICgqY2xlYXJfcGVuZGluZykodW5zaWduZWQg
cG9ydCk7Ci0Jdm9pZCAoKnNldF9wZW5kaW5nKSh1bnNpZ25lZCBwb3J0KTsKLQlib29sICgqaXNf
cGVuZGluZykodW5zaWduZWQgcG9ydCk7Ci0JYm9vbCAoKnRlc3RfYW5kX3NldF9tYXNrKSh1bnNp
Z25lZCBwb3J0KTsKLQl2b2lkICgqbWFzaykodW5zaWduZWQgcG9ydCk7Ci0Jdm9pZCAoKnVubWFz
aykodW5zaWduZWQgcG9ydCk7CisJdm9pZCAoKmNsZWFyX3BlbmRpbmcpKGV2dGNobl9wb3J0X3Qg
cG9ydCk7CisJdm9pZCAoKnNldF9wZW5kaW5nKShldnRjaG5fcG9ydF90IHBvcnQpOworCWJvb2wg
KCppc19wZW5kaW5nKShldnRjaG5fcG9ydF90IHBvcnQpOworCWJvb2wgKCp0ZXN0X2FuZF9zZXRf
bWFzaykoZXZ0Y2huX3BvcnRfdCBwb3J0KTsKKwl2b2lkICgqbWFzaykoZXZ0Y2huX3BvcnRfdCBw
b3J0KTsKKwl2b2lkICgqdW5tYXNrKShldnRjaG5fcG9ydF90IHBvcnQpOwogCiAJdm9pZCAoKmhh
bmRsZV9ldmVudHMpKHVuc2lnbmVkIGNwdSk7CiAJdm9pZCAoKnJlc3VtZSkodm9pZCk7CkBAIC03
NCwxMSArNzQsMTEgQEAgc3RydWN0IGV2dGNobl9vcHMgewogZXh0ZXJuIGNvbnN0IHN0cnVjdCBl
dnRjaG5fb3BzICpldnRjaG5fb3BzOwogCiBleHRlcm4gaW50ICoqZXZ0Y2huX3RvX2lycTsKLWlu
dCBnZXRfZXZ0Y2huX3RvX2lycSh1bnNpZ25lZCBpbnQgZXZ0Y2huKTsKK2ludCBnZXRfZXZ0Y2hu
X3RvX2lycShldnRjaG5fcG9ydF90IGV2dGNobik7CiAKIHN0cnVjdCBpcnFfaW5mbyAqaW5mb19m
b3JfaXJxKHVuc2lnbmVkIGlycSk7CiB1bnNpZ25lZCBjcHVfZnJvbV9pcnEodW5zaWduZWQgaXJx
KTsKLXVuc2lnbmVkIGNwdV9mcm9tX2V2dGNobih1bnNpZ25lZCBpbnQgZXZ0Y2huKTsKK3Vuc2ln
bmVkIGludCBjcHVfZnJvbV9ldnRjaG4oZXZ0Y2huX3BvcnRfdCBldnRjaG4pOwogCiBzdGF0aWMg
aW5saW5lIHVuc2lnbmVkIHhlbl9ldnRjaG5fbWF4X2NoYW5uZWxzKHZvaWQpCiB7CkBAIC0xMDIs
MzIgKzEwMiwzMiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgeGVuX2V2dGNobl9wb3J0X2JpbmRfdG9f
Y3B1KHN0cnVjdCBpcnFfaW5mbyAqaW5mbywKIAlldnRjaG5fb3BzLT5iaW5kX3RvX2NwdShpbmZv
LCBjcHUpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgY2xlYXJfZXZ0Y2huKHVuc2lnbmVkIHBv
cnQpCitzdGF0aWMgaW5saW5lIHZvaWQgY2xlYXJfZXZ0Y2huKGV2dGNobl9wb3J0X3QgcG9ydCkK
IHsKIAlldnRjaG5fb3BzLT5jbGVhcl9wZW5kaW5nKHBvcnQpOwogfQogCi1zdGF0aWMgaW5saW5l
IHZvaWQgc2V0X2V2dGNobih1bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSB2b2lkIHNldF9l
dnRjaG4oZXZ0Y2huX3BvcnRfdCBwb3J0KQogewogCWV2dGNobl9vcHMtPnNldF9wZW5kaW5nKHBv
cnQpOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgdGVzdF9ldnRjaG4odW5zaWduZWQgcG9ydCkK
K3N0YXRpYyBpbmxpbmUgYm9vbCB0ZXN0X2V2dGNobihldnRjaG5fcG9ydF90IHBvcnQpCiB7CiAJ
cmV0dXJuIGV2dGNobl9vcHMtPmlzX3BlbmRpbmcocG9ydCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUg
Ym9vbCB0ZXN0X2FuZF9zZXRfbWFzayh1bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSBib29s
IHRlc3RfYW5kX3NldF9tYXNrKGV2dGNobl9wb3J0X3QgcG9ydCkKIHsKIAlyZXR1cm4gZXZ0Y2hu
X29wcy0+dGVzdF9hbmRfc2V0X21hc2socG9ydCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBt
YXNrX2V2dGNobih1bnNpZ25lZCBwb3J0KQorc3RhdGljIGlubGluZSB2b2lkIG1hc2tfZXZ0Y2hu
KGV2dGNobl9wb3J0X3QgcG9ydCkKIHsKIAlyZXR1cm4gZXZ0Y2huX29wcy0+bWFzayhwb3J0KTsK
IH0KIAotc3RhdGljIGlubGluZSB2b2lkIHVubWFza19ldnRjaG4odW5zaWduZWQgcG9ydCkKK3N0
YXRpYyBpbmxpbmUgdm9pZCB1bm1hc2tfZXZ0Y2huKGV2dGNobl9wb3J0X3QgcG9ydCkKIHsKIAly
ZXR1cm4gZXZ0Y2huX29wcy0+dW5tYXNrKHBvcnQpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy94
ZW4vZXZ0Y2huLmMgYi9kcml2ZXJzL3hlbi9ldnRjaG4uYwppbmRleCAwNTJiNTVhMTRlYmMuLjZl
MGIxZGQ1NTczYyAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vZXZ0Y2huLmMKKysrIGIvZHJpdmVy
cy94ZW4vZXZ0Y2huLmMKQEAgLTgzLDcgKzgzLDcgQEAgc3RydWN0IHBlcl91c2VyX2RhdGEgewog
c3RydWN0IHVzZXJfZXZ0Y2huIHsKIAlzdHJ1Y3QgcmJfbm9kZSBub2RlOwogCXN0cnVjdCBwZXJf
dXNlcl9kYXRhICp1c2VyOwotCXVuc2lnbmVkIHBvcnQ7CisJZXZ0Y2huX3BvcnRfdCBwb3J0Owog
CWJvb2wgZW5hYmxlZDsKIH07CiAKQEAgLTEzOCw3ICsxMzgsOCBAQCBzdGF0aWMgdm9pZCBkZWxf
ZXZ0Y2huKHN0cnVjdCBwZXJfdXNlcl9kYXRhICp1LCBzdHJ1Y3QgdXNlcl9ldnRjaG4gKmV2dGNo
bikKIAlrZnJlZShldnRjaG4pOwogfQogCi1zdGF0aWMgc3RydWN0IHVzZXJfZXZ0Y2huICpmaW5k
X2V2dGNobihzdHJ1Y3QgcGVyX3VzZXJfZGF0YSAqdSwgdW5zaWduZWQgcG9ydCkKK3N0YXRpYyBz
dHJ1Y3QgdXNlcl9ldnRjaG4gKmZpbmRfZXZ0Y2huKHN0cnVjdCBwZXJfdXNlcl9kYXRhICp1LAor
CQkJCSAgICAgICBldnRjaG5fcG9ydF90IHBvcnQpCiB7CiAJc3RydWN0IHJiX25vZGUgKm5vZGUg
PSB1LT5ldnRjaG5zLnJiX25vZGU7CiAKQEAgLTE2Myw3ICsxNjQsNyBAQCBzdGF0aWMgaXJxcmV0
dXJuX3QgZXZ0Y2huX2ludGVycnVwdChpbnQgaXJxLCB2b2lkICpkYXRhKQogCXN0cnVjdCBwZXJf
dXNlcl9kYXRhICp1ID0gZXZ0Y2huLT51c2VyOwogCiAJV0FSTighZXZ0Y2huLT5lbmFibGVkLAot
CSAgICAgIkludGVycnVwdCBmb3IgcG9ydCAlZCwgYnV0IGFwcGFyZW50bHkgbm90IGVuYWJsZWQ7
IHBlci11c2VyICVwXG4iLAorCSAgICAgIkludGVycnVwdCBmb3IgcG9ydCAldSwgYnV0IGFwcGFy
ZW50bHkgbm90IGVuYWJsZWQ7IHBlci11c2VyICVwXG4iLAogCSAgICAgZXZ0Y2huLT5wb3J0LCB1
KTsKIAogCWRpc2FibGVfaXJxX25vc3luYyhpcnEpOwpAQCAtMjg2LDcgKzI4Nyw3IEBAIHN0YXRp
YyBzc2l6ZV90IGV2dGNobl93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hhciBfX3Vz
ZXIgKmJ1ZiwKIAltdXRleF9sb2NrKCZ1LT5iaW5kX211dGV4KTsKIAogCWZvciAoaSA9IDA7IGkg
PCAoY291bnQvc2l6ZW9mKGV2dGNobl9wb3J0X3QpKTsgaSsrKSB7Ci0JCXVuc2lnbmVkIHBvcnQg
PSBrYnVmW2ldOworCQlldnRjaG5fcG9ydF90IHBvcnQgPSBrYnVmW2ldOwogCQlzdHJ1Y3QgdXNl
cl9ldnRjaG4gKmV2dGNobjsKIAogCQlldnRjaG4gPSBmaW5kX2V2dGNobih1LCBwb3J0KTsKQEAg
LTM2MSw3ICszNjIsNyBAQCBzdGF0aWMgaW50IGV2dGNobl9yZXNpemVfcmluZyhzdHJ1Y3QgcGVy
X3VzZXJfZGF0YSAqdSkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBldnRjaG5fYmluZF90
b191c2VyKHN0cnVjdCBwZXJfdXNlcl9kYXRhICp1LCBpbnQgcG9ydCkKK3N0YXRpYyBpbnQgZXZ0
Y2huX2JpbmRfdG9fdXNlcihzdHJ1Y3QgcGVyX3VzZXJfZGF0YSAqdSwgZXZ0Y2huX3BvcnRfdCBw
b3J0KQogewogCXN0cnVjdCB1c2VyX2V2dGNobiAqZXZ0Y2huOwogCXN0cnVjdCBldnRjaG5fY2xv
c2UgY2xvc2U7CkBAIC00MjMsNyArNDI0LDcgQEAgc3RhdGljIHZvaWQgZXZ0Y2huX3VuYmluZF9m
cm9tX3VzZXIoc3RydWN0IHBlcl91c2VyX2RhdGEgKnUsCiAKIHN0YXRpYyBERUZJTkVfUEVSX0NQ
VShpbnQsIGJpbmRfbGFzdF9zZWxlY3RlZF9jcHUpOwogCi1zdGF0aWMgdm9pZCBldnRjaG5fYmlu
ZF9pbnRlcmRvbV9uZXh0X3ZjcHUoaW50IGV2dGNobikKK3N0YXRpYyB2b2lkIGV2dGNobl9iaW5k
X2ludGVyZG9tX25leHRfdmNwdShldnRjaG5fcG9ydF90IGV2dGNobikKIHsKIAl1bnNpZ25lZCBp
bnQgc2VsZWN0ZWRfY3B1LCBpcnE7CiAJc3RydWN0IGlycV9kZXNjICpkZXNjOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy94ZW4vZ250ZGV2LWNvbW1vbi5oIGIvZHJpdmVycy94ZW4vZ250ZGV2LWNvbW1v
bi5oCmluZGV4IDlhMzk2MGVjZmY2Yy4uZWY1MjY0Nzc3OWYxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L3hlbi9nbnRkZXYtY29tbW9uLmgKKysrIGIvZHJpdmVycy94ZW4vZ250ZGV2LWNvbW1vbi5oCkBA
IC0zOCw3ICszOCw3IEBAIHN0cnVjdCBnbnRkZXZfdW5tYXBfbm90aWZ5IHsKIAlpbnQgZmxhZ3M7
CiAJLyogQWRkcmVzcyByZWxhdGl2ZSB0byB0aGUgc3RhcnQgb2YgdGhlIGdudGRldl9ncmFudF9t
YXAuICovCiAJaW50IGFkZHI7Ci0JaW50IGV2ZW50OworCWV2dGNobl9wb3J0X3QgZXZlbnQ7CiB9
OwogCiBzdHJ1Y3QgZ250ZGV2X2dyYW50X21hcCB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9n
bnRkZXYuYyBiL2RyaXZlcnMveGVuL2dudGRldi5jCmluZGV4IDAyNTg0MTVjYTBiMi4uNTA2NTFl
NTY2NTY0IDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi9nbnRkZXYuYworKysgYi9kcml2ZXJzL3hl
bi9nbnRkZXYuYwpAQCAtNjUyLDcgKzY1Miw3IEBAIHN0YXRpYyBsb25nIGdudGRldl9pb2N0bF9u
b3RpZnkoc3RydWN0IGdudGRldl9wcml2ICpwcml2LCB2b2lkIF9fdXNlciAqdSkKIAlzdHJ1Y3Qg
Z250ZGV2X2dyYW50X21hcCAqbWFwOwogCWludCByYzsKIAlpbnQgb3V0X2ZsYWdzOwotCXVuc2ln
bmVkIGludCBvdXRfZXZlbnQ7CisJZXZ0Y2huX3BvcnRfdCBvdXRfZXZlbnQ7CiAKIAlpZiAoY29w
eV9mcm9tX3VzZXIoJm9wLCB1LCBzaXplb2Yob3ApKSkKIAkJcmV0dXJuIC1FRkFVTFQ7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL3hlbi9wdmNhbGxzLWJhY2suYyBiL2RyaXZlcnMveGVuL3B2Y2FsbHMt
YmFjay5jCmluZGV4IGM1N2M3MWI3ZDUzZC4uY2Y0Y2UzZTkzNThkIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3hlbi9wdmNhbGxzLWJhY2suYworKysgYi9kcml2ZXJzL3hlbi9wdmNhbGxzLWJhY2suYwpA
QCAtMzAwLDcgKzMwMCw3IEBAIHN0YXRpYyBzdHJ1Y3Qgc29ja19tYXBwaW5nICpwdmNhbGxzX25l
d19hY3RpdmVfc29ja2V0KAogCQlzdHJ1Y3QgcHZjYWxsc19mZWRhdGEgKmZlZGF0YSwKIAkJdWlu
dDY0X3QgaWQsCiAJCWdyYW50X3JlZl90IHJlZiwKLQkJdWludDMyX3QgZXZ0Y2huLAorCQlldnRj
aG5fcG9ydF90IGV2dGNobiwKIAkJc3RydWN0IHNvY2tldCAqc29jaykKIHsKIAlpbnQgcmV0OwpA
QCAtOTA1LDcgKzkwNSw4IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBwdmNhbGxzX2JhY2tfY29ubl9l
dmVudChpbnQgaXJxLCB2b2lkICpzb2NrX21hcCkKIAogc3RhdGljIGludCBiYWNrZW5kX2Nvbm5l
Y3Qoc3RydWN0IHhlbmJ1c19kZXZpY2UgKmRldikKIHsKLQlpbnQgZXJyLCBldnRjaG47CisJaW50
IGVycjsKKwlldnRjaG5fcG9ydF90IGV2dGNobjsKIAlncmFudF9yZWZfdCByaW5nX3JlZjsKIAlz
dHJ1Y3QgcHZjYWxsc19mZWRhdGEgKmZlZGF0YSA9IE5VTEw7CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMveGVuL3B2Y2FsbHMtZnJvbnQuYyBiL2RyaXZlcnMveGVuL3B2Y2FsbHMtZnJvbnQuYwppbmRl
eCA1NzU5MmE2YjVjOWUuLmI0M2I1NTk1ZTk4OCAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vcHZj
YWxscy1mcm9udC5jCisrKyBiL2RyaXZlcnMveGVuL3B2Y2FsbHMtZnJvbnQuYwpAQCAtMzY4LDEy
ICszNjgsMTIgQEAgc3RhdGljIGludCBhbGxvY19hY3RpdmVfcmluZyhzdHJ1Y3Qgc29ja19tYXBw
aW5nICptYXApCiAJcmV0dXJuIC1FTk9NRU07CiB9CiAKLXN0YXRpYyBpbnQgY3JlYXRlX2FjdGl2
ZShzdHJ1Y3Qgc29ja19tYXBwaW5nICptYXAsIGludCAqZXZ0Y2huKQorc3RhdGljIGludCBjcmVh
dGVfYWN0aXZlKHN0cnVjdCBzb2NrX21hcHBpbmcgKm1hcCwgZXZ0Y2huX3BvcnRfdCAqZXZ0Y2hu
KQogewogCXZvaWQgKmJ5dGVzOwogCWludCByZXQgPSAtRU5PTUVNLCBpcnEgPSAtMSwgaTsKIAot
CSpldnRjaG4gPSAtMTsKKwkqZXZ0Y2huID0gMDsKIAlpbml0X3dhaXRxdWV1ZV9oZWFkKCZtYXAt
PmFjdGl2ZS5pbmZsaWdodF9jb25uX3JlcSk7CiAKIAlieXRlcyA9IG1hcC0+YWN0aXZlLmRhdGEu
aW47CkBAIC00MDQsNyArNDA0LDcgQEAgc3RhdGljIGludCBjcmVhdGVfYWN0aXZlKHN0cnVjdCBz
b2NrX21hcHBpbmcgKm1hcCwgaW50ICpldnRjaG4pCiAJcmV0dXJuIDA7CiAKIG91dF9lcnJvcjoK
LQlpZiAoKmV2dGNobiA+PSAwKQorCWlmICgqZXZ0Y2huID4gMCkKIAkJeGVuYnVzX2ZyZWVfZXZ0
Y2huKHB2Y2FsbHNfZnJvbnRfZGV2LCAqZXZ0Y2huKTsKIAlyZXR1cm4gcmV0OwogfQpAQCAtNDE1
LDcgKzQxNSw4IEBAIGludCBwdmNhbGxzX2Zyb250X2Nvbm5lY3Qoc3RydWN0IHNvY2tldCAqc29j
aywgc3RydWN0IHNvY2thZGRyICphZGRyLAogCXN0cnVjdCBwdmNhbGxzX2JlZGF0YSAqYmVkYXRh
OwogCXN0cnVjdCBzb2NrX21hcHBpbmcgKm1hcCA9IE5VTEw7CiAJc3RydWN0IHhlbl9wdmNhbGxz
X3JlcXVlc3QgKnJlcTsKLQlpbnQgbm90aWZ5LCByZXFfaWQsIHJldCwgZXZ0Y2huOworCWludCBu
b3RpZnksIHJlcV9pZCwgcmV0OworCWV2dGNobl9wb3J0X3QgZXZ0Y2huOwogCiAJaWYgKGFkZHIt
PnNhX2ZhbWlseSAhPSBBRl9JTkVUIHx8IHNvY2stPnR5cGUgIT0gU09DS19TVFJFQU0pCiAJCXJl
dHVybiAtRU9QTk9UU1VQUDsKQEAgLTc2NSw3ICs3NjYsOCBAQCBpbnQgcHZjYWxsc19mcm9udF9h
Y2NlcHQoc3RydWN0IHNvY2tldCAqc29jaywgc3RydWN0IHNvY2tldCAqbmV3c29jaywgaW50IGZs
YWdzKQogCXN0cnVjdCBzb2NrX21hcHBpbmcgKm1hcDsKIAlzdHJ1Y3Qgc29ja19tYXBwaW5nICpt
YXAyID0gTlVMTDsKIAlzdHJ1Y3QgeGVuX3B2Y2FsbHNfcmVxdWVzdCAqcmVxOwotCWludCBub3Rp
ZnksIHJlcV9pZCwgcmV0LCBldnRjaG4sIG5vbmJsb2NrOworCWludCBub3RpZnksIHJlcV9pZCwg
cmV0LCBub25ibG9jazsKKwlldnRjaG5fcG9ydF90IGV2dGNobjsKIAogCW1hcCA9IHB2Y2FsbHNf
ZW50ZXJfc29jayhzb2NrKTsKIAlpZiAoSVNfRVJSKG1hcCkpCkBAIC0xMTI1LDcgKzExMjcsOCBA
QCBzdGF0aWMgaW50IHB2Y2FsbHNfZnJvbnRfcmVtb3ZlKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpk
ZXYpCiBzdGF0aWMgaW50IHB2Y2FsbHNfZnJvbnRfcHJvYmUoc3RydWN0IHhlbmJ1c19kZXZpY2Ug
KmRldiwKIAkJCSAgY29uc3Qgc3RydWN0IHhlbmJ1c19kZXZpY2VfaWQgKmlkKQogewotCWludCBy
ZXQgPSAtRU5PTUVNLCBldnRjaG4sIGk7CisJaW50IHJldCA9IC1FTk9NRU0sIGk7CisJZXZ0Y2hu
X3BvcnRfdCBldnRjaG47CiAJdW5zaWduZWQgaW50IG1heF9wYWdlX29yZGVyLCBmdW5jdGlvbl9j
YWxscywgbGVuOwogCWNoYXIgKnZlcnNpb25zOwogCWdyYW50X3JlZl90IGdyZWZfaGVhZCA9IDA7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi94ZW4tcGNpYmFjay94ZW5idXMuYyBiL2RyaXZlcnMv
eGVuL3hlbi1wY2liYWNrL3hlbmJ1cy5jCmluZGV4IDgzM2IyZDJjNDMxOC4uZjIxMTU1ODc4NTVm
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3hlbi94ZW4tcGNpYmFjay94ZW5idXMuYworKysgYi9kcml2
ZXJzL3hlbi94ZW4tcGNpYmFjay94ZW5idXMuYwpAQCAtMTA1LDEzICsxMDUsMTMgQEAgc3RhdGlj
IHZvaWQgZnJlZV9wZGV2KHN0cnVjdCB4ZW5fcGNpYmtfZGV2aWNlICpwZGV2KQogfQogCiBzdGF0
aWMgaW50IHhlbl9wY2lia19kb19hdHRhY2goc3RydWN0IHhlbl9wY2lia19kZXZpY2UgKnBkZXYs
IGludCBnbnRfcmVmLAotCQkJICAgICBpbnQgcmVtb3RlX2V2dGNobikKKwkJCSAgICAgZXZ0Y2hu
X3BvcnRfdCByZW1vdGVfZXZ0Y2huKQogewogCWludCBlcnIgPSAwOwogCXZvaWQgKnZhZGRyOwog
CiAJZGV2X2RiZygmcGRldi0+eGRldi0+ZGV2LAotCQkiQXR0YWNoaW5nIHRvIGZyb250ZW5kIHJl
c291cmNlcyAtIGdudF9yZWY9JWQgZXZ0Y2huPSVkXG4iLAorCQkiQXR0YWNoaW5nIHRvIGZyb250
ZW5kIHJlc291cmNlcyAtIGdudF9yZWY9JWQgZXZ0Y2huPSV1XG4iLAogCQlnbnRfcmVmLCByZW1v
dGVfZXZ0Y2huKTsKIAogCWVyciA9IHhlbmJ1c19tYXBfcmluZ192YWxsb2MocGRldi0+eGRldiwg
JmdudF9yZWYsIDEsICZ2YWRkcik7CkBAIC0xNDIsNyArMTQyLDggQEAgc3RhdGljIGludCB4ZW5f
cGNpYmtfZG9fYXR0YWNoKHN0cnVjdCB4ZW5fcGNpYmtfZGV2aWNlICpwZGV2LCBpbnQgZ250X3Jl
ZiwKIHN0YXRpYyBpbnQgeGVuX3BjaWJrX2F0dGFjaChzdHJ1Y3QgeGVuX3BjaWJrX2RldmljZSAq
cGRldikKIHsKIAlpbnQgZXJyID0gMDsKLQlpbnQgZ250X3JlZiwgcmVtb3RlX2V2dGNobjsKKwlp
bnQgZ250X3JlZjsKKwlldnRjaG5fcG9ydF90IHJlbW90ZV9ldnRjaG47CiAJY2hhciAqbWFnaWMg
PSBOVUxMOwogCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL3hlbi1zY3NpYmFjay5jIGIvZHJp
dmVycy94ZW4veGVuLXNjc2liYWNrLmMKaW5kZXggYmEwOTQyZTQ4MWJjLi43NWMwYTJlOWE2ZGIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL3hlbi1zY3NpYmFjay5jCisrKyBiL2RyaXZlcnMveGVu
L3hlbi1zY3NpYmFjay5jCkBAIC04NTQsNyArODU0LDggQEAgc3RhdGljIGludCBzY3NpYmFja19p
bml0X3NyaW5nKHN0cnVjdCB2c2NzaWJrX2luZm8gKmluZm8sIGdyYW50X3JlZl90IHJpbmdfcmVm
LAogc3RhdGljIGludCBzY3NpYmFja19tYXAoc3RydWN0IHZzY3NpYmtfaW5mbyAqaW5mbykKIHsK
IAlzdHJ1Y3QgeGVuYnVzX2RldmljZSAqZGV2ID0gaW5mby0+ZGV2OwotCXVuc2lnbmVkIGludCBy
aW5nX3JlZiwgZXZ0Y2huOworCXVuc2lnbmVkIGludCByaW5nX3JlZjsKKwlldnRjaG5fcG9ydF90
IGV2dGNobjsKIAlpbnQgZXJyOwogCiAJZXJyID0geGVuYnVzX2dhdGhlcihYQlRfTklMLCBkZXYt
Pm90aGVyZW5kLApkaWZmIC0tZ2l0IGEvZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19jbGllbnQu
YyBiL2RyaXZlcnMveGVuL3hlbmJ1cy94ZW5idXNfY2xpZW50LmMKaW5kZXggZTE3Y2E4MTU2MTcx
Li4xZjg3NTE0ZTRlZmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL3hlbmJ1cy94ZW5idXNfY2xp
ZW50LmMKKysrIGIvZHJpdmVycy94ZW4veGVuYnVzL3hlbmJ1c19jbGllbnQuYwpAQCAtMzkxLDcg
KzM5MSw3IEBAIEVYUE9SVF9TWU1CT0xfR1BMKHhlbmJ1c19ncmFudF9yaW5nKTsKICAqIGVycm9y
LCB0aGUgZGV2aWNlIHdpbGwgc3dpdGNoIHRvIFhlbmJ1c1N0YXRlQ2xvc2luZywgYW5kIHRoZSBl
cnJvciB3aWxsIGJlCiAgKiBzYXZlZCBpbiB0aGUgc3RvcmUuCiAgKi8KLWludCB4ZW5idXNfYWxs
b2NfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGludCAqcG9ydCkKK2ludCB4ZW5i
dXNfYWxsb2NfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGV2dGNobl9wb3J0X3Qg
KnBvcnQpCiB7CiAJc3RydWN0IGV2dGNobl9hbGxvY191bmJvdW5kIGFsbG9jX3VuYm91bmQ7CiAJ
aW50IGVycjsKQEAgLTQxNCw3ICs0MTQsNyBAQCBFWFBPUlRfU1lNQk9MX0dQTCh4ZW5idXNfYWxs
b2NfZXZ0Y2huKTsKIC8qKgogICogRnJlZSBhbiBleGlzdGluZyBldmVudCBjaGFubmVsLiBSZXR1
cm5zIDAgb24gc3VjY2VzcyBvciAtZXJybm8gb24gZXJyb3IuCiAgKi8KLWludCB4ZW5idXNfZnJl
ZV9ldnRjaG4oc3RydWN0IHhlbmJ1c19kZXZpY2UgKmRldiwgaW50IHBvcnQpCitpbnQgeGVuYnVz
X2ZyZWVfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGV2dGNobl9wb3J0X3QgcG9y
dCkKIHsKIAlzdHJ1Y3QgZXZ0Y2huX2Nsb3NlIGNsb3NlOwogCWludCBlcnI7CkBAIC00MjMsNyAr
NDIzLDcgQEAgaW50IHhlbmJ1c19mcmVlX2V2dGNobihzdHJ1Y3QgeGVuYnVzX2RldmljZSAqZGV2
LCBpbnQgcG9ydCkKIAogCWVyciA9IEhZUEVSVklTT1JfZXZlbnRfY2hhbm5lbF9vcChFVlRDSE5P
UF9jbG9zZSwgJmNsb3NlKTsKIAlpZiAoZXJyKQotCQl4ZW5idXNfZGV2X2Vycm9yKGRldiwgZXJy
LCAiZnJlZWluZyBldmVudCBjaGFubmVsICVkIiwgcG9ydCk7CisJCXhlbmJ1c19kZXZfZXJyb3Io
ZGV2LCBlcnIsICJmcmVlaW5nIGV2ZW50IGNoYW5uZWwgJXUiLCBwb3J0KTsKIAogCXJldHVybiBl
cnI7CiB9CmRpZmYgLS1naXQgYS9pbmNsdWRlL3hlbi9ldmVudHMuaCBiL2luY2x1ZGUveGVuL2V2
ZW50cy5oCmluZGV4IGMwZTZhMDU5ODM5Ny4uMTJiMGRjYjZhMTIwIDEwMDY0NAotLS0gYS9pbmNs
dWRlL3hlbi9ldmVudHMuaAorKysgYi9pbmNsdWRlL3hlbi9ldmVudHMuaApAQCAtMTQsOCArMTQs
OCBAQAogCiB1bnNpZ25lZCB4ZW5fZXZ0Y2huX25yX2NoYW5uZWxzKHZvaWQpOwogCi1pbnQgYmlu
ZF9ldnRjaG5fdG9faXJxKHVuc2lnbmVkIGludCBldnRjaG4pOwotaW50IGJpbmRfZXZ0Y2huX3Rv
X2lycWhhbmRsZXIodW5zaWduZWQgaW50IGV2dGNobiwKK2ludCBiaW5kX2V2dGNobl90b19pcnEo
ZXZ0Y2huX3BvcnRfdCBldnRjaG4pOworaW50IGJpbmRfZXZ0Y2huX3RvX2lycWhhbmRsZXIoZXZ0
Y2huX3BvcnRfdCBldnRjaG4sCiAJCQkgICAgICBpcnFfaGFuZGxlcl90IGhhbmRsZXIsCiAJCQkg
ICAgICB1bnNpZ25lZCBsb25nIGlycWZsYWdzLCBjb25zdCBjaGFyICpkZXZuYW1lLAogCQkJICAg
ICAgdm9pZCAqZGV2X2lkKTsKQEAgLTMxLDkgKzMxLDkgQEAgaW50IGJpbmRfaXBpX3RvX2lycWhh
bmRsZXIoZW51bSBpcGlfdmVjdG9yIGlwaSwKIAkJCSAgIGNvbnN0IGNoYXIgKmRldm5hbWUsCiAJ
CQkgICB2b2lkICpkZXZfaWQpOwogaW50IGJpbmRfaW50ZXJkb21haW5fZXZ0Y2huX3RvX2lycSh1
bnNpZ25lZCBpbnQgcmVtb3RlX2RvbWFpbiwKLQkJCQkgICB1bnNpZ25lZCBpbnQgcmVtb3RlX3Bv
cnQpOworCQkJCSAgIGV2dGNobl9wb3J0X3QgcmVtb3RlX3BvcnQpOwogaW50IGJpbmRfaW50ZXJk
b21haW5fZXZ0Y2huX3RvX2lycWhhbmRsZXIodW5zaWduZWQgaW50IHJlbW90ZV9kb21haW4sCi0J
CQkJCSAgdW5zaWduZWQgaW50IHJlbW90ZV9wb3J0LAorCQkJCQkgIGV2dGNobl9wb3J0X3QgcmVt
b3RlX3BvcnQsCiAJCQkJCSAgaXJxX2hhbmRsZXJfdCBoYW5kbGVyLAogCQkJCQkgIHVuc2lnbmVk
IGxvbmcgaXJxZmxhZ3MsCiAJCQkJCSAgY29uc3QgY2hhciAqZGV2bmFtZSwKQEAgLTU0LDE1ICs1
NCwxNSBAQCBpbnQgeGVuX3NldF9pcnFfcHJpb3JpdHkodW5zaWduZWQgaXJxLCB1bnNpZ25lZCBw
cmlvcml0eSk7CiAvKgogICogQWxsb3cgZXh0cmEgcmVmZXJlbmNlcyB0byBldmVudCBjaGFubmVs
cyBleHBvc2VkIHRvIHVzZXJzcGFjZSBieSBldnRjaG4KICAqLwotaW50IGV2dGNobl9tYWtlX3Jl
ZmNvdW50ZWQodW5zaWduZWQgaW50IGV2dGNobik7Ci1pbnQgZXZ0Y2huX2dldCh1bnNpZ25lZCBp
bnQgZXZ0Y2huKTsKLXZvaWQgZXZ0Y2huX3B1dCh1bnNpZ25lZCBpbnQgZXZ0Y2huKTsKK2ludCBl
dnRjaG5fbWFrZV9yZWZjb3VudGVkKGV2dGNobl9wb3J0X3QgZXZ0Y2huKTsKK2ludCBldnRjaG5f
Z2V0KGV2dGNobl9wb3J0X3QgZXZ0Y2huKTsKK3ZvaWQgZXZ0Y2huX3B1dChldnRjaG5fcG9ydF90
IGV2dGNobik7CiAKIHZvaWQgeGVuX3NlbmRfSVBJX29uZSh1bnNpZ25lZCBpbnQgY3B1LCBlbnVt
IGlwaV92ZWN0b3IgdmVjdG9yKTsKLXZvaWQgcmViaW5kX2V2dGNobl9pcnEoaW50IGV2dGNobiwg
aW50IGlycSk7Cit2b2lkIHJlYmluZF9ldnRjaG5faXJxKGV2dGNobl9wb3J0X3QgZXZ0Y2huLCBp
bnQgaXJxKTsKIGludCB4ZW5fc2V0X2FmZmluaXR5X2V2dGNobihzdHJ1Y3QgaXJxX2Rlc2MgKmRl
c2MsIHVuc2lnbmVkIGludCB0Y3B1KTsKIAotc3RhdGljIGlubGluZSB2b2lkIG5vdGlmeV9yZW1v
dGVfdmlhX2V2dGNobihpbnQgcG9ydCkKK3N0YXRpYyBpbmxpbmUgdm9pZCBub3RpZnlfcmVtb3Rl
X3ZpYV9ldnRjaG4oZXZ0Y2huX3BvcnRfdCBwb3J0KQogewogCXN0cnVjdCBldnRjaG5fc2VuZCBz
ZW5kID0geyAucG9ydCA9IHBvcnQgfTsKIAkodm9pZClIWVBFUlZJU09SX2V2ZW50X2NoYW5uZWxf
b3AoRVZUQ0hOT1Bfc2VuZCwgJnNlbmQpOwpAQCAtODYsOSArODYsOSBAQCB2b2lkIHhlbl9wb2xs
X2lycShpbnQgaXJxKTsKIHZvaWQgeGVuX3BvbGxfaXJxX3RpbWVvdXQoaW50IGlycSwgdTY0IHRp
bWVvdXQpOwogCiAvKiBEZXRlcm1pbmUgdGhlIElSUSB3aGljaCBpcyBib3VuZCB0byBhbiBldmVu
dCBjaGFubmVsICovCi11bnNpZ25lZCBpcnFfZnJvbV9ldnRjaG4odW5zaWduZWQgaW50IGV2dGNo
bik7Cit1bnNpZ25lZCBpbnQgaXJxX2Zyb21fZXZ0Y2huKGV2dGNobl9wb3J0X3QgZXZ0Y2huKTsK
IGludCBpcnFfZnJvbV92aXJxKHVuc2lnbmVkIGludCBjcHUsIHVuc2lnbmVkIGludCB2aXJxKTsK
LXVuc2lnbmVkIGludCBldnRjaG5fZnJvbV9pcnEodW5zaWduZWQgaXJxKTsKK2V2dGNobl9wb3J0
X3QgZXZ0Y2huX2Zyb21faXJxKHVuc2lnbmVkIGlycSk7CiAKICNpZmRlZiBDT05GSUdfWEVOX1BW
SFZNCiAvKiBYZW4gSFZNIGV2dGNobiB2ZWN0b3IgY2FsbGJhY2sgKi8KZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUveGVuL2ludGVyZmFjZS9ldmVudF9jaGFubmVsLmggYi9pbmNsdWRlL3hlbi9pbnRlcmZh
Y2UvZXZlbnRfY2hhbm5lbC5oCmluZGV4IDQ1NjUwYzlhMDZkNS4uY2Y4MGUzMzhmYmIwIDEwMDY0
NAotLS0gYS9pbmNsdWRlL3hlbi9pbnRlcmZhY2UvZXZlbnRfY2hhbm5lbC5oCisrKyBiL2luY2x1
ZGUveGVuL2ludGVyZmFjZS9ldmVudF9jaGFubmVsLmgKQEAgLTIyMCw3ICsyMjAsNyBAQCBzdHJ1
Y3QgZXZ0Y2huX2V4cGFuZF9hcnJheSB7CiAjZGVmaW5lIEVWVENITk9QX3NldF9wcmlvcml0eSAg
ICAxMwogc3RydWN0IGV2dGNobl9zZXRfcHJpb3JpdHkgewogCS8qIElOIHBhcmFtZXRlcnMuICov
Ci0JdWludDMyX3QgcG9ydDsKKwlldnRjaG5fcG9ydF90IHBvcnQ7CiAJdWludDMyX3QgcHJpb3Jp
dHk7CiB9OwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3hlbi94ZW5idXMuaCBiL2luY2x1ZGUveGVu
L3hlbmJ1cy5oCmluZGV4IDg1MGE0M2JkNjlkMy4uNzI1ZGE4OTY1ZWI5IDEwMDY0NAotLS0gYS9p
bmNsdWRlL3hlbi94ZW5idXMuaAorKysgYi9pbmNsdWRlL3hlbi94ZW5idXMuaApAQCAtNDcsNiAr
NDcsNyBAQAogI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UvZ3JhbnRfdGFibGUuaD4KICNpbmNsdWRl
IDx4ZW4vaW50ZXJmYWNlL2lvL3hlbmJ1cy5oPgogI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UvaW8v
eHNfd2lyZS5oPgorI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UvZXZlbnRfY2hhbm5lbC5oPgogCiAj
ZGVmaW5lIFhFTkJVU19NQVhfUklOR19HUkFOVF9PUkRFUiA0CiAjZGVmaW5lIFhFTkJVU19NQVhf
UklOR19HUkFOVFMgICAgICAoMVUgPDwgWEVOQlVTX01BWF9SSU5HX0dSQU5UX09SREVSKQpAQCAt
MjE5LDggKzIyMCw4IEBAIGludCB4ZW5idXNfdW5tYXBfcmluZyhzdHJ1Y3QgeGVuYnVzX2Rldmlj
ZSAqZGV2LAogCQkgICAgICBncmFudF9oYW5kbGVfdCAqaGFuZGxlcywgdW5zaWduZWQgaW50IG5y
X2hhbmRsZXMsCiAJCSAgICAgIHVuc2lnbmVkIGxvbmcgKnZhZGRycyk7CiAKLWludCB4ZW5idXNf
YWxsb2NfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGludCAqcG9ydCk7Ci1pbnQg
eGVuYnVzX2ZyZWVfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGludCBwb3J0KTsK
K2ludCB4ZW5idXNfYWxsb2NfZXZ0Y2huKHN0cnVjdCB4ZW5idXNfZGV2aWNlICpkZXYsIGV2dGNo
bl9wb3J0X3QgKnBvcnQpOworaW50IHhlbmJ1c19mcmVlX2V2dGNobihzdHJ1Y3QgeGVuYnVzX2Rl
dmljZSAqZGV2LCBldnRjaG5fcG9ydF90IHBvcnQpOwogCiBlbnVtIHhlbmJ1c19zdGF0ZSB4ZW5i
dXNfcmVhZF9kcml2ZXJfc3RhdGUoY29uc3QgY2hhciAqcGF0aCk7CiAKLS0gCjIuMTcuMQoKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBt
YWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMu
eGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

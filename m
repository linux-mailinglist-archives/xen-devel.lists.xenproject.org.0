Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 8187D17BBDA
	for <lists+xen-devel@lfdr.de>; Fri,  6 Mar 2020 12:41:58 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jABKY-0007rT-Am; Fri, 06 Mar 2020 11:39:50 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=dzCu=4X=citrix.com=george.dunlap@srs-us1.protection.inumbo.net>)
 id 1jABKW-0007rN-Vu
 for xen-devel@lists.xenproject.org; Fri, 06 Mar 2020 11:39:49 +0000
X-Inumbo-ID: 2e519186-5f9f-11ea-90c4-bc764e2007e4
Received: from esa4.hc3370-68.iphmx.com (unknown [216.71.155.144])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 2e519186-5f9f-11ea-90c4-bc764e2007e4;
 Fri, 06 Mar 2020 11:39:47 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=citrix.com; s=securemail; t=1583494787;
 h=from:to:cc:subject:date:message-id:mime-version:
 content-transfer-encoding;
 bh=x9T+pHSkxf14iBl8svcNr6XN9ah+8IdGIYGc3TVGohY=;
 b=Zs8dpClIvth59lbnp/q1CLN/sAUONE4m1wDwVXnRFHTJ1SVxx3GkHJLM
 LE9QGVY5AF2t9r+ZjbQ3G3TbaVi2GLbazOWcFHu/Ig+IwEi921NFWjHxZ
 A6gFFib44ieRfrlavy3GeAhVucO29VlXPyiDhJgP9muQku/qp+IX2zzFj 8=;
Authentication-Results: esa4.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none;
 spf=None smtp.pra=george.dunlap@citrix.com;
 spf=Pass smtp.mailfrom=George.Dunlap@citrix.com;
 spf=None smtp.helo=postmaster@mail.citrix.com
Received-SPF: None (esa4.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 george.dunlap@citrix.com) identity=pra;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="George.Dunlap@citrix.com";
 x-sender="george.dunlap@citrix.com";
 x-conformance=sidf_compatible
Received-SPF: Pass (esa4.hc3370-68.iphmx.com: domain of
 George.Dunlap@citrix.com designates 162.221.158.21 as
 permitted sender) identity=mailfrom;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="George.Dunlap@citrix.com";
 x-sender="George.Dunlap@citrix.com";
 x-conformance=sidf_compatible; x-record-type="v=spf1";
 x-record-text="v=spf1 ip4:209.167.231.154 ip4:178.63.86.133
 ip4:195.66.111.40/30 ip4:85.115.9.32/28 ip4:199.102.83.4
 ip4:192.28.146.160 ip4:192.28.146.107 ip4:216.52.6.88
 ip4:216.52.6.188 ip4:162.221.158.21 ip4:162.221.156.83
 ip4:168.245.78.127 ~all"
Received-SPF: None (esa4.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 postmaster@mail.citrix.com) identity=helo;
 client-ip=162.221.158.21; receiver=esa4.hc3370-68.iphmx.com;
 envelope-from="George.Dunlap@citrix.com";
 x-sender="postmaster@mail.citrix.com";
 x-conformance=sidf_compatible
IronPort-SDR: tqbF85dyIDFJEii/ZZg/M/pzfHXssma235czCZBeqK8abpcMZE1Nw3eb/Uplgr9HyXYldkO9p+
 vJgLKP4B6oA0dhQ08v8JVLqvz8VFcu+VEnwDnrD+oTNXm8DZhzLJQqblXT2dG+5s0ivKl7lXsT
 QWVimO/WT3lvgsqZxoMlDfw6JkiL8MLmKPewWhgeHiIDirRzacK243/3iXgdPHshQjopM8np2/
 t7vSFev8EGxwSUK5ncEwtnnrQLcjnUAhmcIda/V864XIAxplDHAM1RrX7smuR+S+LObkaiJrRW
 RgE=
X-SBRS: 2.7
X-MesageID: 14148297
X-Ironport-Server: esa4.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.70,521,1574139600"; d="scan'208";a="14148297"
From: George Dunlap <george.dunlap@citrix.com>
To: <xen-devel@lists.xenproject.org>
Date: Fri, 6 Mar 2020 11:39:39 +0000
Message-ID: <20200306113939.693911-1-george.dunlap@citrix.com>
X-Mailer: git-send-email 2.25.1
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH] golang/xenlight: Fix handling of marshalling of
 empty elements for keyed unions
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Nick Rosbrook <rosbrookn@ainfosec.com>,
 Ian Jackson <ian.jackson@citrix.com>, George Dunlap <george.dunlap@citrix.com>,
 Wei Liu <wl@xen.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

S2V5ZWQgdHlwZXMgaW4gbGlieGxfdHlwZXMuaWRsIGNhbiBoYXZlIGVsZW1lbnRzIG9mIHR5cGUg
J05vbmUnLiAgVGhlCmdvbGFuZyB0eXBlIGdlbmVyYXRvciAoY29ycmVjdGx5KSBkb24ndCBpbXBs
ZW1lbnQgYW55IHVuaW9uIHR5cGVzIGZvcgp0aGVzZSBlbXB0eSBlbGVtZW50cy4gIEhvd2V2ZXIs
IHRoZSB0b0MgYW5kIGZyb21DIGhlbHBlciBnZW5lcmF0b3JzCmluY29ycmVjdGx5IHRyZWF0IHRo
ZXNlIGVsZW1lbnRzIGFzIGludmFsaWQuCgpDb25zaWRlciBmb3IgZXhhbXBsZSwgbGlieGxfY2hh
bm5lbGluZm8uICBUaGUgaWRsIGNvbnRhaW5zIHRoZQpmb2xsb3dpbmcga2V5ZWQgZWxlbWVudDoK
CiAgICAoInUiLCBLZXllZFVuaW9uKE5vbmUsIGxpYnhsX2NoYW5uZWxfY29ubmVjdGlvbiwgImNv
bm5lY3Rpb24iLAogICAgICAgICAgIFsoInVua25vd24iLCBOb25lKSwKICAgICAgICAgICAgKCJw
dHkiLCBTdHJ1Y3QoTm9uZSwgWygicGF0aCIsIHN0cmluZyksXSkpLAogICAgICAgICAgICAoInNv
Y2tldCIsIE5vbmUpLAogICAgICAgICAgIF0pKSwKCkJ1dCB0aGUgdG9DIG1hcnNoYWxsZXIgY3Vy
cmVudGx5IGxvb2tzIGxpa2UgdGhpczoKCglzd2l0Y2ggeC5Db25uZWN0aW9uIHsKCWNhc2UgQ2hh
bm5lbENvbm5lY3Rpb25QdHk6CgkJdG1wLCBvayA6PSB4LkNvbm5lY3Rpb25Vbmlvbi4oQ2hhbm5l
bGluZm9Db25uZWN0aW9uVW5pb25QdHkpCgkJaWYgIW9rIHsKCQkJcmV0dXJuIGVycm9ycy5OZXco
Indyb25nIHR5cGUgZm9yIHVuaW9uIGtleSBjb25uZWN0aW9uIikKCQl9CgkJdmFyIHB0eSBDLmxp
YnhsX2NoYW5uZWxpbmZvX2Nvbm5lY3Rpb25fdW5pb25fcHR5CgkJaWYgdG1wLlBhdGggIT0gIiIg
ewoJCQlwdHkucGF0aCA9IEMuQ1N0cmluZyh0bXAuUGF0aCkKCQl9CgkJcHR5Qnl0ZXMgOj0gQy5H
b0J5dGVzKHVuc2FmZS5Qb2ludGVyKCZwdHkpLCBDLnNpemVvZl9saWJ4bF9jaGFubmVsaW5mb19j
b25uZWN0aW9uX3VuaW9uX3B0eSkKCQljb3B5KHhjLnVbOl0sIHB0eUJ5dGVzKQoJZGVmYXVsdDoK
CQlyZXR1cm4gZm10LkVycm9yZigiaW52YWxpZCB1bmlvbiBrZXkgJyV2JyIsIHguQ29ubmVjdGlv
bikKCX0KCldoaWNoIG1lYW5zIHRvQygpIHdpbGwgZmFpbCBmb3IgQ2hhbm5lbENvbm5lY3Rpb25V
bmtub3duIG9yCkNoYW5uZWxDb25uZWN0aW9uU29ja2V0LgoKTW9kaWZ5IHRoZSBnZW5lcmF0b3Ig
dG8gaGFuZGxlIGtleWVkIHVuaW9uIGVsZW1lbnRzIG9mIHR5cGUgJ05vbmUnLgpGb3IgZnJvbUMs
IHNldCB0aGUgdmFsdWUgdG8gJ25pbCc7IGZvciB0b0MsIGxlYXZlIHRoaW5ncyBhcy1pcy4KClNp
Z25lZC1vZmYtYnk6IEdlb3JnZSBEdW5sYXAgPGdlb3JnZS5kdW5sYXBAY2l0cml4LmNvbT4KLS0t
CkluIHRvQywgaW5zdGVhZCBvZiBsZWF2aW5nIHRoZSB1bmlvbiBhbG9uZSBmb3IgImVtcHR5IiBl
bGVtZW50cywgd2UKY291bGQgemVybyB0aGUgd2hvbGUgdW5pb24gb3V0LiAgVGhhdCdzIHByb2Jh
Ymx5IG5vdCBuZWNlc3NhcnkuCgpDQzogSWFuIEphY2tzb24gPGlhbi5qYWNrc29uQGNpdHJpeC5j
b20+CkNDOiBXZWkgTGl1IDx3bEB4ZW4ub3JnPgpDQzogTmljayBSb3Nicm9vayA8cm9zYnJvb2tu
QGFpbmZvc2VjLmNvbT4KLS0tCiB0b29scy9nb2xhbmcveGVubGlnaHQvZ2VuZ290eXBlcy5weSAg
fCAxOSArKysrKy0tLQogdG9vbHMvZ29sYW5nL3hlbmxpZ2h0L2hlbHBlcnMuZ2VuLmdvIHwgNjYg
KysrKysrKysrKysrKysrKysrKystLS0tLS0tLQogdG9vbHMvZ29sYW5nL3hlbmxpZ2h0L3R5cGVz
Lmdlbi5nbyAgIHwgIDEgKwogMyBmaWxlcyBjaGFuZ2VkLCA2MyBpbnNlcnRpb25zKCspLCAyMyBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS90b29scy9nb2xhbmcveGVubGlnaHQvZ2VuZ290eXBl
cy5weSBiL3Rvb2xzL2dvbGFuZy94ZW5saWdodC9nZW5nb3R5cGVzLnB5CmluZGV4IGY4MTI3MWYz
YzAuLjUwZGFkYTMwOWIgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2dvbGFuZy94ZW5saWdodC9nZW5nb3R5
cGVzLnB5CisrKyBiL3Rvb2xzL2dvbGFuZy94ZW5saWdodC9nZW5nb3R5cGVzLnB5CkBAIC0zMzUs
NiArMzM1LDcgQEAgZGVmIHhlbmxpZ2h0X2dvbGFuZ191bmlvbl9mcm9tX0ModHkgPSBOb25lLCB1
bmlvbl9uYW1lID0gJycsIHN0cnVjdF9uYW1lID0gJycpOgogICAgIGdva2V5bmFtZSA9IHhlbmxp
Z2h0X2dvbGFuZ19mbXRfbmFtZShrZXluYW1lKQogICAgIGtleXR5cGUgICA9IHR5LmtleXZhci50
eXBlLnR5cGVuYW1lCiAgICAgZ29rZXl0eXBlID0geGVubGlnaHRfZ29sYW5nX2ZtdF9uYW1lKGtl
eXR5cGUpCisgICAgZmllbGRfbmFtZSA9IHhlbmxpZ2h0X2dvbGFuZ19mbXRfbmFtZSgne31fdW5p
b24nLmZvcm1hdChrZXluYW1lKSkKIAogICAgIGludGVyZmFjZV9uYW1lID0gJ3t9X3t9X3VuaW9u
Jy5mb3JtYXQoc3RydWN0X25hbWUsIGtleW5hbWUpCiAgICAgaW50ZXJmYWNlX25hbWUgPSB4ZW5s
aWdodF9nb2xhbmdfZm10X25hbWUoaW50ZXJmYWNlX25hbWUsIGV4cG9ydGVkPUZhbHNlKQpAQCAt
MzUxLDExICszNTIsMTEgQEAgZGVmIHhlbmxpZ2h0X2dvbGFuZ191bmlvbl9mcm9tX0ModHkgPSBO
b25lLCB1bmlvbl9uYW1lID0gJycsIHN0cnVjdF9uYW1lID0gJycpOgogCiAgICAgICAgICMgQWRk
IHRvIGxpc3Qgb2YgY2FzZXMgdG8gbWFrZSBmb3IgdGhlIHN3aXRjaAogICAgICAgICAjIHN0YXRl
bWVudCBiZWxvdy4KKyAgICAgICAgY2FzZXNbZi5uYW1lXSA9ICh2YWwsIGYudHlwZSkKKwogICAg
ICAgICBpZiBmLnR5cGUgaXMgTm9uZToKICAgICAgICAgICAgIGNvbnRpbnVlCiAKLSAgICAgICAg
Y2FzZXNbZi5uYW1lXSA9IHZhbAotCiAgICAgICAgICMgRGVmaW5lIGZyb21DIGZ1bmMgZm9yICd1
bmlvbicgc3RydWN0LgogICAgICAgICB0eXBlbmFtZSAgID0gJ3t9X3t9X3VuaW9uX3t9Jy5mb3Jt
YXQoc3RydWN0X25hbWUsa2V5bmFtZSxmLm5hbWUpCiAgICAgICAgIGdvdHlwZW5hbWUgPSB4ZW5s
aWdodF9nb2xhbmdfZm10X25hbWUodHlwZW5hbWUpCkBAIC0zODIsOSArMzgzLDE1IEBAIGRlZiB4
ZW5saWdodF9nb2xhbmdfdW5pb25fZnJvbV9DKHR5ID0gTm9uZSwgdW5pb25fbmFtZSA9ICcnLCBz
dHJ1Y3RfbmFtZSA9ICcnKToKIAogICAgICMgQ3JlYXRlIHN3aXRjaCBzdGF0ZW1lbnQgdG8gZGV0
ZXJtaW5lIHdoaWNoICd1bmlvbiBlbGVtZW50JwogICAgICMgdG8gcG9wdWxhdGUgaW4gdGhlIEdv
IHN0cnVjdC4KLSAgICBmb3IgY2FzZV9uYW1lLCBjYXNlX3ZhbCBpbiBjYXNlcy5pdGVtcygpOgor
ICAgIGZvciBjYXNlX25hbWUsIGNhc2VfdHVwbGUgaW4gY2FzZXMuaXRlbXMoKToKKyAgICAgICAg
KGNhc2VfdmFsLCBjYXNlX3R5cGUpID0gY2FzZV90dXBsZQorCiAgICAgICAgIHMgKz0gJ2Nhc2Ug
e306XG4nLmZvcm1hdChjYXNlX3ZhbCkKIAorICAgICAgICBpZiBjYXNlX3R5cGUgaXMgTm9uZToK
KyAgICAgICAgICAgIHMgKz0gIngue30gPSBuaWxcbiIuZm9ybWF0KGZpZWxkX25hbWUpCisgICAg
ICAgICAgICBjb250aW51ZQorCiAgICAgICAgIGdvdHlwZSA9ICd7fV97fV91bmlvbl97fScuZm9y
bWF0KHN0cnVjdF9uYW1lLGtleW5hbWUsY2FzZV9uYW1lKQogICAgICAgICBnb3R5cGUgPSB4ZW5s
aWdodF9nb2xhbmdfZm10X25hbWUoZ290eXBlKQogICAgICAgICBnb25hbWUgPSAne31fe30nLmZv
cm1hdChrZXluYW1lLGNhc2VfbmFtZSkKQEAgLTM5NCw3ICs0MDEsNiBAQCBkZWYgeGVubGlnaHRf
Z29sYW5nX3VuaW9uX2Zyb21fQyh0eSA9IE5vbmUsIHVuaW9uX25hbWUgPSAnJywgc3RydWN0X25h
bWUgPSAnJyk6CiAgICAgICAgIHMgKz0gJ2lmIGVyciA6PSB7fS5mcm9tQyh4Yyk7Jy5mb3JtYXQo
Z29uYW1lKQogICAgICAgICBzICs9ICdlcnIgIT0gbmlsIHt7XG4gcmV0dXJuIGZtdC5FcnJvcmYo
ImNvbnZlcnRpbmcgZmllbGQge306ICV2IiwgZXJyKSBcbn19XG4nLmZvcm1hdChnb25hbWUpCiAK
LSAgICAgICAgZmllbGRfbmFtZSA9IHhlbmxpZ2h0X2dvbGFuZ19mbXRfbmFtZSgne31fdW5pb24n
LmZvcm1hdChrZXluYW1lKSkKICAgICAgICAgcyArPSAneC57fSA9IHt9XG4nLmZvcm1hdChmaWVs
ZF9uYW1lLCBnb25hbWUpCiAKICAgICAjIEVuZCBzd2l0Y2ggc3RhdGVtZW50CkBAIC01NTEsMTAg
KzU1NywxMyBAQCBkZWYgeGVubGlnaHRfZ29sYW5nX3VuaW9uX3RvX0ModHkgPSBOb25lLCB1bmlv
bl9uYW1lID0gJycsCiAgICAgZm9yIGYgaW4gdHkuZmllbGRzOgogICAgICAgICBrZXlfdmFsID0g
J3t9X3t9Jy5mb3JtYXQoa2V5dHlwZSwgZi5uYW1lKQogICAgICAgICBrZXlfdmFsID0geGVubGln
aHRfZ29sYW5nX2ZtdF9uYW1lKGtleV92YWwpCisKKyAgICAgICAgcyArPSAnY2FzZSB7fTpcbicu
Zm9ybWF0KGtleV92YWwpCisKICAgICAgICAgaWYgZi50eXBlIGlzIE5vbmU6CisgICAgICAgICAg
ICBzICs9ICJicmVha1xuIgogICAgICAgICAgICAgY29udGludWUKIAotICAgICAgICBzICs9ICdj
YXNlIHt9OlxuJy5mb3JtYXQoa2V5X3ZhbCkKICAgICAgICAgY2dvdHlwZSA9ICd7fV97fV91bmlv
bl97fScuZm9ybWF0KHN0cnVjdF9uYW1lLGtleW5hbWUsZi5uYW1lKQogICAgICAgICBnb3R5cGUg
ID0geGVubGlnaHRfZ29sYW5nX2ZtdF9uYW1lKGNnb3R5cGUpCiAKZGlmZiAtLWdpdCBhL3Rvb2xz
L2dvbGFuZy94ZW5saWdodC9oZWxwZXJzLmdlbi5nbyBiL3Rvb2xzL2dvbGFuZy94ZW5saWdodC9o
ZWxwZXJzLmdlbi5nbwppbmRleCBiNGQ3ZGNhMWM2Li4zNDRjZTlhNDYxIDEwMDY0NAotLS0gYS90
b29scy9nb2xhbmcveGVubGlnaHQvaGVscGVycy5nZW4uZ28KKysrIGIvdG9vbHMvZ29sYW5nL3hl
bmxpZ2h0L2hlbHBlcnMuZ2VuLmdvCkBAIC00OTMsMTIgKzQ5MywxNiBAQCBmdW5jICh4ICpDaGFu
bmVsaW5mbykgZnJvbUMoeGMgKkMubGlieGxfY2hhbm5lbGluZm8pIGVycm9yIHsKIAl4LlJyZWYg
PSBpbnQoeGMucnJlZikKIAl4LkNvbm5lY3Rpb24gPSBDaGFubmVsQ29ubmVjdGlvbih4Yy5jb25u
ZWN0aW9uKQogCXN3aXRjaCB4LkNvbm5lY3Rpb24geworCWNhc2UgQ2hhbm5lbENvbm5lY3Rpb25V
bmtub3duOgorCQl4LkNvbm5lY3Rpb25VbmlvbiA9IG5pbAogCWNhc2UgQ2hhbm5lbENvbm5lY3Rp
b25QdHk6CiAJCXZhciBjb25uZWN0aW9uUHR5IENoYW5uZWxpbmZvQ29ubmVjdGlvblVuaW9uUHR5
CiAJCWlmIGVyciA6PSBjb25uZWN0aW9uUHR5LmZyb21DKHhjKTsgZXJyICE9IG5pbCB7CiAJCQly
ZXR1cm4gZm10LkVycm9yZigiY29udmVydGluZyBmaWVsZCBjb25uZWN0aW9uUHR5OiAldiIsIGVy
cikKIAkJfQogCQl4LkNvbm5lY3Rpb25VbmlvbiA9IGNvbm5lY3Rpb25QdHkKKwljYXNlIENoYW5u
ZWxDb25uZWN0aW9uU29ja2V0OgorCQl4LkNvbm5lY3Rpb25VbmlvbiA9IG5pbAogCWRlZmF1bHQ6
CiAJCXJldHVybiBmbXQuRXJyb3JmKCJpbnZhbGlkIHVuaW9uIGtleSAnJXYnIiwgeC5Db25uZWN0
aW9uKQogCX0KQEAgLTUzNyw2ICs1NDEsOCBAQCBmdW5jICh4ICpDaGFubmVsaW5mbykgdG9DKHhj
ICpDLmxpYnhsX2NoYW5uZWxpbmZvKSAoZXJyIGVycm9yKSB7CiAJeGMucnJlZiA9IEMuaW50KHgu
UnJlZikKIAl4Yy5jb25uZWN0aW9uID0gQy5saWJ4bF9jaGFubmVsX2Nvbm5lY3Rpb24oeC5Db25u
ZWN0aW9uKQogCXN3aXRjaCB4LkNvbm5lY3Rpb24geworCWNhc2UgQ2hhbm5lbENvbm5lY3Rpb25V
bmtub3duOgorCQlicmVhawogCWNhc2UgQ2hhbm5lbENvbm5lY3Rpb25QdHk6CiAJCXRtcCwgb2sg
Oj0geC5Db25uZWN0aW9uVW5pb24uKENoYW5uZWxpbmZvQ29ubmVjdGlvblVuaW9uUHR5KQogCQlp
ZiAhb2sgewpAQCAtNTQ4LDYgKzU1NCw4IEBAIGZ1bmMgKHggKkNoYW5uZWxpbmZvKSB0b0MoeGMg
KkMubGlieGxfY2hhbm5lbGluZm8pIChlcnIgZXJyb3IpIHsKIAkJfQogCQlwdHlCeXRlcyA6PSBD
LkdvQnl0ZXModW5zYWZlLlBvaW50ZXIoJnB0eSksIEMuc2l6ZW9mX2xpYnhsX2NoYW5uZWxpbmZv
X2Nvbm5lY3Rpb25fdW5pb25fcHR5KQogCQljb3B5KHhjLnVbOl0sIHB0eUJ5dGVzKQorCWNhc2Ug
Q2hhbm5lbENvbm5lY3Rpb25Tb2NrZXQ6CisJCWJyZWFrCiAJZGVmYXVsdDoKIAkJcmV0dXJuIGZt
dC5FcnJvcmYoImludmFsaWQgdW5pb24ga2V5ICcldiciLCB4LkNvbm5lY3Rpb24pCiAJfQpAQCAt
NzAxLDYgKzcwOSw3IEBAIGZ1bmMgKHggKkRvbWFpbkNyZWF0ZUluZm8pIGZyb21DKHhjICpDLmxp
YnhsX2RvbWFpbl9jcmVhdGVfaW5mbykgZXJyb3IgewogCXguU3NpZHJlZiA9IHVpbnQzMih4Yy5z
c2lkcmVmKQogCXguU3NpZExhYmVsID0gQy5Hb1N0cmluZyh4Yy5zc2lkX2xhYmVsKQogCXguTmFt
ZSA9IEMuR29TdHJpbmcoeGMubmFtZSkKKwl4LkRvbWlkID0gRG9taWQoeGMuZG9taWQpCiAJaWYg
ZXJyIDo9IHguVXVpZC5mcm9tQygmeGMudXVpZCk7IGVyciAhPSBuaWwgewogCQlyZXR1cm4gZm10
LkVycm9yZigiY29udmVydGluZyBmaWVsZCBVdWlkOiAldiIsIGVycikKIAl9CkBAIC03NDQsNiAr
NzUzLDcgQEAgZnVuYyAoeCAqRG9tYWluQ3JlYXRlSW5mbykgdG9DKHhjICpDLmxpYnhsX2RvbWFp
bl9jcmVhdGVfaW5mbykgKGVyciBlcnJvcikgewogCWlmIHguTmFtZSAhPSAiIiB7CiAJCXhjLm5h
bWUgPSBDLkNTdHJpbmcoeC5OYW1lKQogCX0KKwl4Yy5kb21pZCA9IEMubGlieGxfZG9taWQoeC5E
b21pZCkKIAlpZiBlcnIgOj0geC5VdWlkLnRvQygmeGMudXVpZCk7IGVyciAhPSBuaWwgewogCQly
ZXR1cm4gZm10LkVycm9yZigiY29udmVydGluZyBmaWVsZCBVdWlkOiAldiIsIGVycikKIAl9CkBA
IC0xMjAzLDI0ICsxMjEzLDI2IEBAIGZ1bmMgKHggKkRvbWFpbkJ1aWxkSW5mbykgZnJvbUMoeGMg
KkMubGlieGxfZG9tYWluX2J1aWxkX2luZm8pIGVycm9yIHsKIAl4LlRlZSA9IFRlZVR5cGUoeGMu
dGVlKQogCXguVHlwZSA9IERvbWFpblR5cGUoeGMuX3R5cGUpCiAJc3dpdGNoIHguVHlwZSB7Ci0J
Y2FzZSBEb21haW5UeXBlUHY6Ci0JCXZhciB0eXBlUHYgRG9tYWluQnVpbGRJbmZvVHlwZVVuaW9u
UHYKLQkJaWYgZXJyIDo9IHR5cGVQdi5mcm9tQyh4Yyk7IGVyciAhPSBuaWwgewotCQkJcmV0dXJu
IGZtdC5FcnJvcmYoImNvbnZlcnRpbmcgZmllbGQgdHlwZVB2OiAldiIsIGVycikKLQkJfQotCQl4
LlR5cGVVbmlvbiA9IHR5cGVQdgogCWNhc2UgRG9tYWluVHlwZUh2bToKIAkJdmFyIHR5cGVIdm0g
RG9tYWluQnVpbGRJbmZvVHlwZVVuaW9uSHZtCiAJCWlmIGVyciA6PSB0eXBlSHZtLmZyb21DKHhj
KTsgZXJyICE9IG5pbCB7CiAJCQlyZXR1cm4gZm10LkVycm9yZigiY29udmVydGluZyBmaWVsZCB0
eXBlSHZtOiAldiIsIGVycikKIAkJfQogCQl4LlR5cGVVbmlvbiA9IHR5cGVIdm0KKwljYXNlIERv
bWFpblR5cGVQdjoKKwkJdmFyIHR5cGVQdiBEb21haW5CdWlsZEluZm9UeXBlVW5pb25QdgorCQlp
ZiBlcnIgOj0gdHlwZVB2LmZyb21DKHhjKTsgZXJyICE9IG5pbCB7CisJCQlyZXR1cm4gZm10LkVy
cm9yZigiY29udmVydGluZyBmaWVsZCB0eXBlUHY6ICV2IiwgZXJyKQorCQl9CisJCXguVHlwZVVu
aW9uID0gdHlwZVB2CiAJY2FzZSBEb21haW5UeXBlUHZoOgogCQl2YXIgdHlwZVB2aCBEb21haW5C
dWlsZEluZm9UeXBlVW5pb25QdmgKIAkJaWYgZXJyIDo9IHR5cGVQdmguZnJvbUMoeGMpOyBlcnIg
IT0gbmlsIHsKIAkJCXJldHVybiBmbXQuRXJyb3JmKCJjb252ZXJ0aW5nIGZpZWxkIHR5cGVQdmg6
ICV2IiwgZXJyKQogCQl9CiAJCXguVHlwZVVuaW9uID0gdHlwZVB2aAorCWNhc2UgRG9tYWluVHlw
ZUludmFsaWQ6CisJCXguVHlwZVVuaW9uID0gbmlsCiAJZGVmYXVsdDoKIAkJcmV0dXJuIGZtdC5F
cnJvcmYoImludmFsaWQgdW5pb24ga2V5ICcldiciLCB4LlR5cGUpCiAJfQpAQCAtMTcyMSw2ICsx
NzMzLDggQEAgZnVuYyAoeCAqRG9tYWluQnVpbGRJbmZvKSB0b0MoeGMgKkMubGlieGxfZG9tYWlu
X2J1aWxkX2luZm8pIChlcnIgZXJyb3IpIHsKIAkJfQogCQlwdmhCeXRlcyA6PSBDLkdvQnl0ZXMo
dW5zYWZlLlBvaW50ZXIoJnB2aCksIEMuc2l6ZW9mX2xpYnhsX2RvbWFpbl9idWlsZF9pbmZvX3R5
cGVfdW5pb25fcHZoKQogCQljb3B5KHhjLnVbOl0sIHB2aEJ5dGVzKQorCWNhc2UgRG9tYWluVHlw
ZUludmFsaWQ6CisJCWJyZWFrCiAJZGVmYXVsdDoKIAkJcmV0dXJuIGZtdC5FcnJvcmYoImludmFs
aWQgdW5pb24ga2V5ICcldiciLCB4LlR5cGUpCiAJfQpAQCAtMjY0OCw2ICsyNjYyLDEwIEBAIGZ1
bmMgKHggKkRldmljZUNoYW5uZWwpIGZyb21DKHhjICpDLmxpYnhsX2RldmljZV9jaGFubmVsKSBl
cnJvciB7CiAJeC5OYW1lID0gQy5Hb1N0cmluZyh4Yy5uYW1lKQogCXguQ29ubmVjdGlvbiA9IENo
YW5uZWxDb25uZWN0aW9uKHhjLmNvbm5lY3Rpb24pCiAJc3dpdGNoIHguQ29ubmVjdGlvbiB7CisJ
Y2FzZSBDaGFubmVsQ29ubmVjdGlvblVua25vd246CisJCXguQ29ubmVjdGlvblVuaW9uID0gbmls
CisJY2FzZSBDaGFubmVsQ29ubmVjdGlvblB0eToKKwkJeC5Db25uZWN0aW9uVW5pb24gPSBuaWwK
IAljYXNlIENoYW5uZWxDb25uZWN0aW9uU29ja2V0OgogCQl2YXIgY29ubmVjdGlvblNvY2tldCBE
ZXZpY2VDaGFubmVsQ29ubmVjdGlvblVuaW9uU29ja2V0CiAJCWlmIGVyciA6PSBjb25uZWN0aW9u
U29ja2V0LmZyb21DKHhjKTsgZXJyICE9IG5pbCB7CkBAIC0yNjg4LDYgKzI3MDYsMTAgQEAgZnVu
YyAoeCAqRGV2aWNlQ2hhbm5lbCkgdG9DKHhjICpDLmxpYnhsX2RldmljZV9jaGFubmVsKSAoZXJy
IGVycm9yKSB7CiAJfQogCXhjLmNvbm5lY3Rpb24gPSBDLmxpYnhsX2NoYW5uZWxfY29ubmVjdGlv
bih4LkNvbm5lY3Rpb24pCiAJc3dpdGNoIHguQ29ubmVjdGlvbiB7CisJY2FzZSBDaGFubmVsQ29u
bmVjdGlvblVua25vd246CisJCWJyZWFrCisJY2FzZSBDaGFubmVsQ29ubmVjdGlvblB0eToKKwkJ
YnJlYWsKIAljYXNlIENoYW5uZWxDb25uZWN0aW9uU29ja2V0OgogCQl0bXAsIG9rIDo9IHguQ29u
bmVjdGlvblVuaW9uLihEZXZpY2VDaGFubmVsQ29ubmVjdGlvblVuaW9uU29ja2V0KQogCQlpZiAh
b2sgewpAQCAtNDM2OCwyNCArNDM5MCwyOCBAQCBmdW5jICh4ICpFdmVudCkgZnJvbUMoeGMgKkMu
bGlieGxfZXZlbnQpIGVycm9yIHsKIAl4LkZvclVzZXIgPSB1aW50NjQoeGMuZm9yX3VzZXIpCiAJ
eC5UeXBlID0gRXZlbnRUeXBlKHhjLl90eXBlKQogCXN3aXRjaCB4LlR5cGUgewotCWNhc2UgRXZl
bnRUeXBlT3BlcmF0aW9uQ29tcGxldGU6Ci0JCXZhciB0eXBlT3BlcmF0aW9uQ29tcGxldGUgRXZl
bnRUeXBlVW5pb25PcGVyYXRpb25Db21wbGV0ZQotCQlpZiBlcnIgOj0gdHlwZU9wZXJhdGlvbkNv
bXBsZXRlLmZyb21DKHhjKTsgZXJyICE9IG5pbCB7Ci0JCQlyZXR1cm4gZm10LkVycm9yZigiY29u
dmVydGluZyBmaWVsZCB0eXBlT3BlcmF0aW9uQ29tcGxldGU6ICV2IiwgZXJyKQotCQl9Ci0JCXgu
VHlwZVVuaW9uID0gdHlwZU9wZXJhdGlvbkNvbXBsZXRlCiAJY2FzZSBFdmVudFR5cGVEb21haW5T
aHV0ZG93bjoKIAkJdmFyIHR5cGVEb21haW5TaHV0ZG93biBFdmVudFR5cGVVbmlvbkRvbWFpblNo
dXRkb3duCiAJCWlmIGVyciA6PSB0eXBlRG9tYWluU2h1dGRvd24uZnJvbUMoeGMpOyBlcnIgIT0g
bmlsIHsKIAkJCXJldHVybiBmbXQuRXJyb3JmKCJjb252ZXJ0aW5nIGZpZWxkIHR5cGVEb21haW5T
aHV0ZG93bjogJXYiLCBlcnIpCiAJCX0KIAkJeC5UeXBlVW5pb24gPSB0eXBlRG9tYWluU2h1dGRv
d24KKwljYXNlIEV2ZW50VHlwZURvbWFpbkRlYXRoOgorCQl4LlR5cGVVbmlvbiA9IG5pbAogCWNh
c2UgRXZlbnRUeXBlRGlza0VqZWN0OgogCQl2YXIgdHlwZURpc2tFamVjdCBFdmVudFR5cGVVbmlv
bkRpc2tFamVjdAogCQlpZiBlcnIgOj0gdHlwZURpc2tFamVjdC5mcm9tQyh4Yyk7IGVyciAhPSBu
aWwgewogCQkJcmV0dXJuIGZtdC5FcnJvcmYoImNvbnZlcnRpbmcgZmllbGQgdHlwZURpc2tFamVj
dDogJXYiLCBlcnIpCiAJCX0KIAkJeC5UeXBlVW5pb24gPSB0eXBlRGlza0VqZWN0CisJY2FzZSBF
dmVudFR5cGVPcGVyYXRpb25Db21wbGV0ZToKKwkJdmFyIHR5cGVPcGVyYXRpb25Db21wbGV0ZSBF
dmVudFR5cGVVbmlvbk9wZXJhdGlvbkNvbXBsZXRlCisJCWlmIGVyciA6PSB0eXBlT3BlcmF0aW9u
Q29tcGxldGUuZnJvbUMoeGMpOyBlcnIgIT0gbmlsIHsKKwkJCXJldHVybiBmbXQuRXJyb3JmKCJj
b252ZXJ0aW5nIGZpZWxkIHR5cGVPcGVyYXRpb25Db21wbGV0ZTogJXYiLCBlcnIpCisJCX0KKwkJ
eC5UeXBlVW5pb24gPSB0eXBlT3BlcmF0aW9uQ29tcGxldGUKKwljYXNlIEV2ZW50VHlwZURvbWFp
bkNyZWF0ZUNvbnNvbGVBdmFpbGFibGU6CisJCXguVHlwZVVuaW9uID0gbmlsCiAJZGVmYXVsdDoK
IAkJcmV0dXJuIGZtdC5FcnJvcmYoImludmFsaWQgdW5pb24ga2V5ICcldiciLCB4LlR5cGUpCiAJ
fQpAQCAtNDQ1Miw2ICs0NDc4LDggQEAgZnVuYyAoeCAqRXZlbnQpIHRvQyh4YyAqQy5saWJ4bF9l
dmVudCkgKGVyciBlcnJvcikgewogCQlkb21haW5fc2h1dGRvd24uc2h1dGRvd25fcmVhc29uID0g
Qy51aW50OF90KHRtcC5TaHV0ZG93blJlYXNvbikKIAkJZG9tYWluX3NodXRkb3duQnl0ZXMgOj0g
Qy5Hb0J5dGVzKHVuc2FmZS5Qb2ludGVyKCZkb21haW5fc2h1dGRvd24pLCBDLnNpemVvZl9saWJ4
bF9ldmVudF90eXBlX3VuaW9uX2RvbWFpbl9zaHV0ZG93bikKIAkJY29weSh4Yy51WzpdLCBkb21h
aW5fc2h1dGRvd25CeXRlcykKKwljYXNlIEV2ZW50VHlwZURvbWFpbkRlYXRoOgorCQlicmVhawog
CWNhc2UgRXZlbnRUeXBlRGlza0VqZWN0OgogCQl0bXAsIG9rIDo9IHguVHlwZVVuaW9uLihFdmVu
dFR5cGVVbmlvbkRpc2tFamVjdCkKIAkJaWYgIW9rIHsKQEAgLTQ0NzUsNiArNDUwMyw4IEBAIGZ1
bmMgKHggKkV2ZW50KSB0b0MoeGMgKkMubGlieGxfZXZlbnQpIChlcnIgZXJyb3IpIHsKIAkJb3Bl
cmF0aW9uX2NvbXBsZXRlLnJjID0gQy5pbnQodG1wLlJjKQogCQlvcGVyYXRpb25fY29tcGxldGVC
eXRlcyA6PSBDLkdvQnl0ZXModW5zYWZlLlBvaW50ZXIoJm9wZXJhdGlvbl9jb21wbGV0ZSksIEMu
c2l6ZW9mX2xpYnhsX2V2ZW50X3R5cGVfdW5pb25fb3BlcmF0aW9uX2NvbXBsZXRlKQogCQljb3B5
KHhjLnVbOl0sIG9wZXJhdGlvbl9jb21wbGV0ZUJ5dGVzKQorCWNhc2UgRXZlbnRUeXBlRG9tYWlu
Q3JlYXRlQ29uc29sZUF2YWlsYWJsZToKKwkJYnJlYWsKIAlkZWZhdWx0OgogCQlyZXR1cm4gZm10
LkVycm9yZigiaW52YWxpZCB1bmlvbiBrZXkgJyV2JyIsIHguVHlwZSkKIAl9CkBAIC00NTQ1LDE4
ICs0NTc1LDE4IEBAIGZ1bmMgKHggKlBzckh3SW5mbykgZnJvbUMoeGMgKkMubGlieGxfcHNyX2h3
X2luZm8pIGVycm9yIHsKIAl4LklkID0gdWludDMyKHhjLmlkKQogCXguVHlwZSA9IFBzckZlYXRU
eXBlKHhjLl90eXBlKQogCXN3aXRjaCB4LlR5cGUgewotCWNhc2UgUHNyRmVhdFR5cGVNYmE6Ci0J
CXZhciB0eXBlTWJhIFBzckh3SW5mb1R5cGVVbmlvbk1iYQotCQlpZiBlcnIgOj0gdHlwZU1iYS5m
cm9tQyh4Yyk7IGVyciAhPSBuaWwgewotCQkJcmV0dXJuIGZtdC5FcnJvcmYoImNvbnZlcnRpbmcg
ZmllbGQgdHlwZU1iYTogJXYiLCBlcnIpCi0JCX0KLQkJeC5UeXBlVW5pb24gPSB0eXBlTWJhCiAJ
Y2FzZSBQc3JGZWF0VHlwZUNhdDoKIAkJdmFyIHR5cGVDYXQgUHNySHdJbmZvVHlwZVVuaW9uQ2F0
CiAJCWlmIGVyciA6PSB0eXBlQ2F0LmZyb21DKHhjKTsgZXJyICE9IG5pbCB7CiAJCQlyZXR1cm4g
Zm10LkVycm9yZigiY29udmVydGluZyBmaWVsZCB0eXBlQ2F0OiAldiIsIGVycikKIAkJfQogCQl4
LlR5cGVVbmlvbiA9IHR5cGVDYXQKKwljYXNlIFBzckZlYXRUeXBlTWJhOgorCQl2YXIgdHlwZU1i
YSBQc3JId0luZm9UeXBlVW5pb25NYmEKKwkJaWYgZXJyIDo9IHR5cGVNYmEuZnJvbUMoeGMpOyBl
cnIgIT0gbmlsIHsKKwkJCXJldHVybiBmbXQuRXJyb3JmKCJjb252ZXJ0aW5nIGZpZWxkIHR5cGVN
YmE6ICV2IiwgZXJyKQorCQl9CisJCXguVHlwZVVuaW9uID0gdHlwZU1iYQogCWRlZmF1bHQ6CiAJ
CXJldHVybiBmbXQuRXJyb3JmKCJpbnZhbGlkIHVuaW9uIGtleSAnJXYnIiwgeC5UeXBlKQogCX0K
ZGlmZiAtLWdpdCBhL3Rvb2xzL2dvbGFuZy94ZW5saWdodC90eXBlcy5nZW4uZ28gYi90b29scy9n
b2xhbmcveGVubGlnaHQvdHlwZXMuZ2VuLmdvCmluZGV4IGVkZTQ5YjQ4ODYuLjRhYWVlMjBiOTUg
MTAwNjQ0Ci0tLSBhL3Rvb2xzL2dvbGFuZy94ZW5saWdodC90eXBlcy5nZW4uZ28KKysrIGIvdG9v
bHMvZ29sYW5nL3hlbmxpZ2h0L3R5cGVzLmdlbi5nbwpAQCAtNDAzLDYgKzQwMyw3IEBAIHR5cGUg
RG9tYWluQ3JlYXRlSW5mbyBzdHJ1Y3QgewogCVNzaWRyZWYgICAgICAgICAgIHVpbnQzMgogCVNz
aWRMYWJlbCAgICAgICAgIHN0cmluZwogCU5hbWUgICAgICAgICAgICAgIHN0cmluZworCURvbWlk
ICAgICAgICAgICAgIERvbWlkCiAJVXVpZCAgICAgICAgICAgICAgVXVpZAogCVhzZGF0YSAgICAg
ICAgICAgIEtleVZhbHVlTGlzdAogCVBsYXRmb3JtZGF0YSAgICAgIEtleVZhbHVlTGlzdAotLSAK
Mi4yNS4xCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
WGVuLWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0
cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id D554417B61D
	for <lists+xen-devel@lfdr.de>; Fri,  6 Mar 2020 06:19:38 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1jA5LR-0005Vt-80; Fri, 06 Mar 2020 05:16:21 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=gwnm=4X=virtuozzo.com=vsementsov@srs-us1.protection.inumbo.net>)
 id 1jA5LP-0005VW-NA
 for xen-devel@lists.xenproject.org; Fri, 06 Mar 2020 05:16:19 +0000
X-Inumbo-ID: 959402ba-5f69-11ea-b74d-bc764e2007e4
Received: from relay.sw.ru (unknown [185.231.240.75])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 959402ba-5f69-11ea-b74d-bc764e2007e4;
 Fri, 06 Mar 2020 05:16:08 +0000 (UTC)
Received: from vovaso.qa.sw.ru ([10.94.3.0] helo=kvm.qa.sw.ru)
 by relay.sw.ru with esmtp (Exim 4.92.3)
 (envelope-from <vsementsov@virtuozzo.com>)
 id 1jA5Km-0001tg-7F; Fri, 06 Mar 2020 08:15:40 +0300
From: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
To: qemu-devel@nongnu.org
Date: Fri,  6 Mar 2020 08:15:28 +0300
Message-Id: <20200306051536.27803-3-vsementsov@virtuozzo.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20200306051536.27803-1-vsementsov@virtuozzo.com>
References: <20200306051536.27803-1-vsementsov@virtuozzo.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v8 02/10] scripts: add coccinelle script to use
 auto propagated errp
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, vsementsov@virtuozzo.com,
 Laszlo Ersek <lersek@redhat.com>, qemu-block@nongnu.org,
 Paul Durrant <paul@xen.org>,
 =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>,
 Christian Schoenebeck <qemu_oss@crudebyte.com>, Greg Kurz <groug@kaod.org>,
 armbru@redhat.com, Stefano Stabellini <sstabellini@kernel.org>,
 Gerd Hoffmann <kraxel@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 Anthony Perard <anthony.perard@citrix.com>, xen-devel@lists.xenproject.org,
 Max Reitz <mreitz@redhat.com>, Eric Blake <eblake@redhat.com>,
 Michael Roth <mdroth@linux.vnet.ibm.com>,
 Stefan Berger <stefanb@linux.ibm.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

U2NyaXB0IGFkZHMgRVJSUF9BVVRPX1BST1BBR0FURSBtYWNybyBpbnZvY2F0aW9uIHdoZXJlIGFw
cHJvcHJpYXRlIGFuZApkb2VzIGNvcnJlc3BvbmRpbmcgY2hhbmdlcyBpbiBjb2RlIChsb29rIGZv
ciBkZXRhaWxzIGluCmluY2x1ZGUvcWFwaS9lcnJvci5oKQoKVXNhZ2UgZXhhbXBsZToKc3BhdGNo
IC0tc3AtZmlsZSBzY3JpcHRzL2NvY2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAuY29jY2kg
XAogLS1tYWNyby1maWxlIHNjcmlwdHMvY29jY2ktbWFjcm8tZmlsZS5oIC0taW4tcGxhY2UgLS1u
by1zaG93LWRpZmYgXAogYmxvY2tkZXYtbmJkLmMgcWVtdS1uYmQuYyB7YmxvY2svbmJkKixuYmQv
KixpbmNsdWRlL2Jsb2NrL25iZCp9LltoY10KClNpZ25lZC1vZmYtYnk6IFZsYWRpbWlyIFNlbWVu
dHNvdi1PZ2lldnNraXkgPHZzZW1lbnRzb3ZAdmlydHVvenpvLmNvbT4KLS0tCgpDYzogRXJpYyBC
bGFrZSA8ZWJsYWtlQHJlZGhhdC5jb20+CkNjOiBLZXZpbiBXb2xmIDxrd29sZkByZWRoYXQuY29t
PgpDYzogTWF4IFJlaXR6IDxtcmVpdHpAcmVkaGF0LmNvbT4KQ2M6IEdyZWcgS3VyeiA8Z3JvdWdA
a2FvZC5vcmc+CkNjOiBDaHJpc3RpYW4gU2Nob2VuZWJlY2sgPHFlbXVfb3NzQGNydWRlYnl0ZS5j
b20+CkNjOiBTdGVmYW5vIFN0YWJlbGxpbmkgPHNzdGFiZWxsaW5pQGtlcm5lbC5vcmc+CkNjOiBB
bnRob255IFBlcmFyZCA8YW50aG9ueS5wZXJhcmRAY2l0cml4LmNvbT4KQ2M6IFBhdWwgRHVycmFu
dCA8cGF1bEB4ZW4ub3JnPgpDYzogU3RlZmFuIEhham5vY3ppIDxzdGVmYW5oYUByZWRoYXQuY29t
PgpDYzogIlBoaWxpcHBlIE1hdGhpZXUtRGF1ZMOpIiA8cGhpbG1kQHJlZGhhdC5jb20+CkNjOiBM
YXN6bG8gRXJzZWsgPGxlcnNla0ByZWRoYXQuY29tPgpDYzogR2VyZCBIb2ZmbWFubiA8a3JheGVs
QHJlZGhhdC5jb20+CkNjOiBTdGVmYW4gQmVyZ2VyIDxzdGVmYW5iQGxpbnV4LmlibS5jb20+CkNj
OiBNYXJrdXMgQXJtYnJ1c3RlciA8YXJtYnJ1QHJlZGhhdC5jb20+CkNjOiBNaWNoYWVsIFJvdGgg
PG1kcm90aEBsaW51eC52bmV0LmlibS5jb20+CkNjOiBxZW11LWJsb2NrQG5vbmdudS5vcmcKQ2M6
IHFlbXUtZGV2ZWxAbm9uZ251Lm9yZwpDYzogeGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3Jn
CgogaW5jbHVkZS9xYXBpL2Vycm9yLmggICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAzICsK
IHNjcmlwdHMvY29jY2luZWxsZS9hdXRvLXByb3BhZ2F0ZWQtZXJycC5jb2NjaSB8IDIzMSArKysr
KysrKysrKysrKysrKysKIDIgZmlsZXMgY2hhbmdlZCwgMjM0IGluc2VydGlvbnMoKykKIGNyZWF0
ZSBtb2RlIDEwMDY0NCBzY3JpcHRzL2NvY2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAuY29j
Y2kKCmRpZmYgLS1naXQgYS9pbmNsdWRlL3FhcGkvZXJyb3IuaCBiL2luY2x1ZGUvcWFwaS9lcnJv
ci5oCmluZGV4IGJiOWJjZjAyZmIuLmZiZmM2ZjFjMGIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvcWFw
aS9lcnJvci5oCisrKyBiL2luY2x1ZGUvcWFwaS9lcnJvci5oCkBAIC0yMTEsNiArMjExLDkgQEAK
ICAqICAgICAgICAgfQogICogICAgICAgICAuLi4KICAqICAgICB9CisgKgorICogRm9yIG1hc3Mg
Y29udmVyc2lvbiB1c2Ugc2NyaXB0CisgKiAgIHNjcmlwdHMvY29jY2luZWxsZS9hdXRvLXByb3Bh
Z2F0ZWQtZXJycC5jb2NjaQogICovCiAKICNpZm5kZWYgRVJST1JfSApkaWZmIC0tZ2l0IGEvc2Ny
aXB0cy9jb2NjaW5lbGxlL2F1dG8tcHJvcGFnYXRlZC1lcnJwLmNvY2NpIGIvc2NyaXB0cy9jb2Nj
aW5lbGxlL2F1dG8tcHJvcGFnYXRlZC1lcnJwLmNvY2NpCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAuLmJmZjI3NGJkNmQKLS0tIC9kZXYvbnVsbAorKysgYi9zY3JpcHRzL2Nv
Y2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAuY29jY2kKQEAgLTAsMCArMSwyMzEgQEAKKy8v
IFVzZSBFUlJQX0FVVE9fUFJPUEFHQVRFIChzZWUgaW5jbHVkZS9xYXBpL2Vycm9yLmgpCisvLwor
Ly8gQ29weXJpZ2h0IChjKSAyMDIwIFZpcnR1b3p6byBJbnRlcm5hdGlvbmFsIEdtYkguCisvLwor
Ly8gVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0
IGFuZC9vciBtb2RpZnkKKy8vIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisvLyB0aGUgRnJlZSBTb2Z0d2FyZSBGb3Vu
ZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorLy8gKGF0IHlvdXIg
b3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKy8vCisvLyBUaGlzIHByb2dyYW0gaXMgZGlzdHJp
YnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKy8vIGJ1dCBXSVRIT1VU
IEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisvLyBN
RVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUg
dGhlCisvLyBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorLy8K
Ky8vIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1
YmxpYyBMaWNlbnNlCisvLyBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxo
dHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKy8vCisvLyBVc2FnZSBleGFtcGxlOgorLy8g
c3BhdGNoIC0tc3AtZmlsZSBzY3JpcHRzL2NvY2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAu
Y29jY2kgXAorLy8gIC0tbWFjcm8tZmlsZSBzY3JpcHRzL2NvY2NpLW1hY3JvLWZpbGUuaCAtLWlu
LXBsYWNlIC0tbm8tc2hvdy1kaWZmIFwKKy8vICAtLW1heC13aWR0aCA4MCBibG9ja2Rldi1uYmQu
YyBxZW11LW5iZC5jIFwKKy8vICB7YmxvY2svbmJkKixuYmQvKixpbmNsdWRlL2Jsb2NrL25iZCp9
LltoY10KKworLy8gU3dpdGNoIHVudXN1YWwgKEVycm9yICoqKSBwYXJhbWV0ZXIgbmFtZXMgdG8g
ZXJycAorLy8gKHRoaXMgaXMgbmVjZXNzYXJ5IHRvIHVzZSBFUlJQX0FVVE9fUFJPUEFHQVRFKS4K
Ky8vCisvLyBEaXNhYmxlIG9wdGlvbmFsX3F1YWxpZmllciB0byBza2lwIGZ1bmN0aW9ucyB3aXRo
ICJFcnJvciAqY29uc3QgKmVycnAiCisvLyBwYXJhbWV0ZXIuCisvLworLy8gU2tpcCBmdW5jdGlv
bnMgd2l0aCAiYXNzZXJ0KF9lcnJwICYmICpfZXJycCkiIHN0YXRlbWVudCwgYXMgdGhleSBoYXZl
CisvLyBub24gZ2VuZXJpYyBzZW1hbnRpY3MgYW5kIG1heSBoYXZlIHVudXN1YWwgRXJyb3IgKiog
YXJndW1lbnQgbmFtZSBmb3IgcHVycG9zZQorLy8gKGxpa2UgbmJkX2l0ZXJfY2hhbm5lbF9lcnJv
cigpKS4KKy8vCisvLyBTa2lwIHV0aWwvZXJyb3IuYyB0byBub3QgdG91Y2gsIGZvciBleGFtcGxl
LCBlcnJvcl9wcm9wYWdhdGUgYW5kCisvLyBlcnJvcl9wcm9wYWdhdGVfcHJlcGVuZCgpLgorQCBk
ZXBlbmRzIG9uICEoZmlsZSBpbiAidXRpbC9lcnJvci5jIikgZGlzYWJsZSBvcHRpb25hbF9xdWFs
aWZpZXJACitpZGVudGlmaWVyIGZuOworaWRlbnRpZmllciBfZXJycCAhPSBlcnJwOworQEAKKwor
IGZuKC4uLiwKKy0gICBFcnJvciAqKl9lcnJwCisrICAgRXJyb3IgKiplcnJwCisgICAgLC4uLikK
KyB7CisoCisgICAgIC4uLiB3aGVuICE9IGFzc2VydChfZXJycCAmJiAqX2VycnApCismCisgICAg
IDwuLi4KKy0gICAgX2VycnAKKysgICAgZXJycAorICAgICAuLi4+CispCisgfQorCisvLyBBZGQg
aW52b2NhdGlvbiBvZiBFUlJQX0FVVE9fUFJPUEFHQVRFIHRvIGVycnAtZnVuY3Rpb25zIHdoZXJl
IG5lY2Vzc2FyeQorLy8KKy8vIE5vdGUsIHRoYXQgd2l0aG91dCAid2hlbiBhbnkiIGZpbmFsICIu
Li4iIG1heSBub3Qgd2FudCB0byBtYWNoIHNvbWV0aGluZworLy8gbWF0Y2hlZCBieSBwcmV2aW91
cyBwYXR0ZXJuLCBpLmUuIHRoZSBydWxlIHdpbGwgbm90IG1hdGNoIGRvdWJsZQorLy8gZXJyb3Jf
cHJlcGVuZCBpbiBjb250cm9sIGZsb3cgbGlrZSBpbiB2ZmlvX3NldF9pcnFfc2lnbmFsaW5nKCku
CisvLworLy8gTm90ZSwgImV4aXN0cyIgc2F5cyB0aGF0IHdlIHdhbnQgYXBwbHkgcnVsZSBldmVu
IGlmIGl0IG1hdGNoZXMgbm90IG9uCisvLyBhbGwgcG9zc2libGUgY29udHJvbCBmbG93cyAob3Ro
ZXJ3aXNlLCBpdCB3aWxsIG5vdCBtYXRjaCBzdGFuZGFyZCBwYXR0ZXJuCisvLyB3aGVuIGVycm9y
X3Byb3BhZ2F0ZSgpIGNhbGwgaXMgaW4gaWYgYnJhbmNoKS4KK0AgZGlzYWJsZSBvcHRpb25hbF9x
dWFsaWZpZXIgZXhpc3RzQAoraWRlbnRpZmllciBmbiwgbG9jYWxfZXJyLCBlcnJwOworQEAKKwor
IGZuKC4uLiwgRXJyb3IgKiplcnJwLCAuLi4pCisgeworKyAgIEVSUlBfQVVUT19QUk9QQUdBVEUo
KTsKKyAgICAuLi4gIHdoZW4gIT0gRVJSUF9BVVRPX1BST1BBR0FURSgpOworKAorICAgIGVycm9y
X2FwcGVuZF9oaW50KGVycnAsIC4uLik7Cit8CisgICAgZXJyb3JfcHJlcGVuZChlcnJwLCAuLi4p
OworfAorICAgIGVycm9yX3ZwcmVwZW5kKGVycnAsIC4uLik7Cit8CisgICAgRXJyb3IgKmxvY2Fs
X2VyciA9IE5VTEw7CisgICAgLi4uCisoCisgICAgZXJyb3JfcHJvcGFnYXRlX3ByZXBlbmQoZXJy
cCwgbG9jYWxfZXJyLCAuLi4pOworfAorICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBsb2NhbF9l
cnIpOworKQorKQorICAgIC4uLiB3aGVuIGFueQorIH0KKworCisvLyBNYXRjaCBzY2VuYXJpb3Mg
d2l0aCBwcm9wYWdhdGlvbiBvZiBsb2NhbCBlcnJvciB0byBlcnJwLgorQHJ1bGUxIGRpc2FibGUg
b3B0aW9uYWxfcXVhbGlmaWVyIGV4aXN0c0AKK2lkZW50aWZpZXIgZm4sIGxvY2FsX2VycjsKK3N5
bWJvbCBlcnJwOworQEAKKworIGZuKC4uLiwgRXJyb3IgKiplcnJwLCAuLi4pCisgeworICAgICAu
Li4KKyAgICAgRXJyb3IgKmxvY2FsX2VyciA9IE5VTEw7CisgICAgIC4uLgorKAorICAgIGVycm9y
X3Byb3BhZ2F0ZV9wcmVwZW5kKGVycnAsIGxvY2FsX2VyciwgLi4uKTsKK3wKKyAgICBlcnJvcl9w
cm9wYWdhdGUoZXJycCwgbG9jYWxfZXJyKTsKKykKKyAgICAgLi4uCisgfQorCisvLyBDb252ZXJ0
IHNwZWNpYWwgY2FzZSB3aXRoIGdvdG8gaW4gc2VwYXJhdGUuCisvLyBXZSBjYW4gcHJvYmFibHkg
bWVyZ2UgdGhpcyBpbnRvIHRoZSBmb2xsb3dpbmcgaHVuayB3aXRoIGhlbHAgb2YgKCB8ICkKKy8v
IG9wZXJhdG9yLCBidXQgaXQgc2lnbmlmaWNhbnRseSByZWR1Y2UgcGVyZm9ybWFuY2Ugb24gYmxv
Y2suYyBwYXJzaW5nIChvciBpdAorLy8gaGFuZ3MsIEkgZG9uJ3Qga25vdykKKy8vCisvLyBOb3Rl
IGludGVyZXN0aW5nIHRoaW5nOiBpZiB3ZSBkb24ndCBkbyBpdCBoZXJlLCBhbmQgdHJ5IHRvIGZp
eHVwICJvdXQ6IH0iCisvLyB0aGluZ3MgbGF0ZXIgYWZ0ZXIgYWxsIHRyYW5zZm9ybWF0aW9ucyAo
dGhlIHJ1bGUgd2lsbCBiZSB0aGUgc2FtZSwganVzdAorLy8gd2l0aG91dCBlcnJvcl9wcm9wYWdh
dGUoKSBjYWxsKSwgY29jY2luZWxsZSBmYWlscyB0byBtYXRjaCB0aGlzICJvdXQ6IH0iLgorQEAK
K2lkZW50aWZpZXIgcnVsZTEuZm4sIHJ1bGUxLmxvY2FsX2Vyciwgb3V0Oworc3ltYm9sIGVycnA7
CitAQAorCisgZm4oLi4uKQorIHsKKyAgICAgPC4uLgorLSAgICBnb3RvIG91dDsKKysgICAgcmV0
dXJuOworICAgICAuLi4+CistIG91dDoKKy0gICAgZXJyb3JfcHJvcGFnYXRlKGVycnAsIGxvY2Fs
X2Vycik7CisgfQorCisvLyBDb252ZXJ0IG1vc3Qgb2YgbG9jYWxfZXJyIHJlbGF0ZWQgc3RhZmYu
CisvLworLy8gTm90ZSwgdGhhdCB3ZSB1cGRhdGUgZXZlcnl0aGluZyByZWxhdGVkIHRvIG1hdGNo
ZWQgYnkgcnVsZTEgZnVuY3Rpb24gbmFtZQorLy8gYW5kIGxvY2FsX2VyciBuYW1lLiBXZSBtYXkg
bWF0Y2ggc29tZXRoaW5nIG5vdCByZWxhdGVkIHRvIHRoZSBwYXR0ZXJuCisvLyBtYXRjaGVkIGJ5
IHJ1bGUxLiBGb3IgZXhhbXBsZSwgbG9jYWxfZXJyIG1heSBiZSBkZWZpbmVkIHdpdGggdGhlIHNh
bWUgbmFtZQorLy8gaW4gZGlmZmVyZW50IGJsb2NrcyBpbnNpZGUgb25lIGZ1bmN0aW9uLCBhbmQg
aW4gb25lIGJsb2NrIGZvbGxvdyB0aGUKKy8vIHByb3BhZ2F0aW9uIHBhdHRlcm4gYW5kIGluIG90
aGVyIGJsb2NrIGRvZXNuJ3QuIE9yIHdlIG1heSBoYXZlIHNldmVyYWwKKy8vIGZ1bmN0aW9ucyB3
aXRoIHRoZSBzYW1lIG5hbWUgKGZvciBkaWZmZXJlbnQgY29uZmlndXJhdGlvbnMpLgorLy8KKy8v
IE5vdGUgYWxzbyB0aGF0IGVycnAtY2xlYW5pbmcgZnVuY3Rpb25zCisvLyAgIGVycm9yX2ZyZWVf
ZXJycAorLy8gICBlcnJvcl9yZXBvcnRfZXJycAorLy8gICBlcnJvcl9yZXBvcnRmX2VycnAKKy8v
ICAgd2Fybl9yZXBvcnRfZXJycAorLy8gICB3YXJuX3JlcG9ydGZfZXJycAorLy8gYXJlIG5vdCB5
ZXQgaW1wbGVtZW50ZWQuIFRoZXkgbXVzdCBjYWxsIGNvcnJlc3BvbmRpbmcgRXJyb3IqIC0gZnJl
ZWluZworLy8gZnVuY3Rpb24gYW5kIHRoZW4gc2V0ICplcnJwIHRvIE5VTEwsIHRvIGF2b2lkIGZ1
cnRoZXIgcHJvcGFnYXRpb24gdG8KKy8vIG9yaWdpbmFsIGVycnAgKGNvbnNpZGVyIEVSUlBfQVVU
T19QUk9QQUdBVEUgaW4gdXNlKS4KKy8vIEZvciBleGFtcGxlLCBlcnJvcl9mcmVlX2VycnAgbWF5
IGxvb2sgbGlrZSB0aGlzOgorLy8KKy8vICAgIHZvaWQgZXJyb3JfZnJlZV9lcnJwKEVycm9yICoq
ZXJycCkKKy8vICAgIHsKKy8vICAgICAgICBlcnJvcl9mcmVlKCplcnJwKTsKKy8vICAgICAgICAq
ZXJycCA9IE5VTEw7CisvLyAgICB9CitAIGV4aXN0c0AKK2lkZW50aWZpZXIgcnVsZTEuZm4sIHJ1
bGUxLmxvY2FsX2VycjsKK2V4cHJlc3Npb24gbGlzdCBhcmdzOworc3ltYm9sIGVycnA7CitAQAor
CisgZm4oLi4uKQorIHsKKyAgICAgPC4uLgorKAorLSAgICBFcnJvciAqbG9jYWxfZXJyID0gTlVM
TDsKK3wKKworLy8gQ29udmVydCBlcnJvciBjbGVhcmluZyBmdW5jdGlvbnMKKygKKy0gICAgZXJy
b3JfZnJlZShsb2NhbF9lcnIpOworKyAgICBlcnJvcl9mcmVlX2VycnAoZXJycCk7Cit8CistICAg
IGVycm9yX3JlcG9ydF9lcnIobG9jYWxfZXJyKTsKKysgICAgZXJyb3JfcmVwb3J0X2VycnAoZXJy
cCk7Cit8CistICAgIGVycm9yX3JlcG9ydGZfZXJyKGxvY2FsX2VyciwgYXJncyk7CisrICAgIGVy
cm9yX3JlcG9ydGZfZXJycChlcnJwLCBhcmdzKTsKK3wKKy0gICAgd2Fybl9yZXBvcnRfZXJyKGxv
Y2FsX2Vycik7CisrICAgIHdhcm5fcmVwb3J0X2VycnAoZXJycCk7Cit8CistICAgIHdhcm5fcmVw
b3J0Zl9lcnIobG9jYWxfZXJyLCBhcmdzKTsKKysgICAgd2Fybl9yZXBvcnRmX2VycnAoZXJycCwg
YXJncyk7CispCis/LSAgICBsb2NhbF9lcnIgPSBOVUxMOworCit8CistICAgIGVycm9yX3Byb3Bh
Z2F0ZV9wcmVwZW5kKGVycnAsIGxvY2FsX2VyciwgYXJncyk7CisrICAgIGVycm9yX3ByZXBlbmQo
ZXJycCwgYXJncyk7Cit8CistICAgIGVycm9yX3Byb3BhZ2F0ZShlcnJwLCBsb2NhbF9lcnIpOwor
fAorLSAgICAmbG9jYWxfZXJyCisrICAgIGVycnAKKykKKyAgICAgLi4uPgorIH0KKworLy8gQ29u
dmVydCByZW1haW5pbmcgbG9jYWxfZXJyIHVzYWdlLiBJdCBzaG91bGQgYmUgZGlmZmVyZW50IGtp
bmRzIG9mIGVycm9yCisvLyBjaGVja2luZyBpbiBpZiBvcGVyYXRvcnMuIFdlIGNhbid0IG1lcmdl
IHRoaXMgaW50byBwcmV2aW91cyBodW5rLCBhcyB0aGlzCisvLyBjb25mbGljdHMgd2l0aCBvdGhl
ciBzdWJzdGl0dXRpb25zIGluIGl0IChhdCBsZWFzdCB3aXRoICItIGxvY2FsX2VyciA9IE5VTEwi
KS4KK0BACitpZGVudGlmaWVyIHJ1bGUxLmZuLCBydWxlMS5sb2NhbF9lcnI7CitzeW1ib2wgZXJy
cDsKK0BACisKKyBmbiguLi4pCisgeworICAgICA8Li4uCistICAgIGxvY2FsX2VycgorKyAgICAq
ZXJycAorICAgICAuLi4+CisgfQorCisvLyBBbHdheXMgdXNlIHRoZSBzYW1lIHBhdHRlciBmb3Ig
Y2hlY2tpbmcgZXJyb3IKK0BACitpZGVudGlmaWVyIHJ1bGUxLmZuOworc3ltYm9sIGVycnA7CitA
QAorCisgZm4oLi4uKQorIHsKKyAgICAgPC4uLgorLSAgICAqZXJycCAhPSBOVUxMCisrICAgICpl
cnJwCisgICAgIC4uLj4KKyB9Ci0tIAoyLjIxLjAKCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBs
aXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4v
bGlzdGluZm8veGVuLWRldmVs

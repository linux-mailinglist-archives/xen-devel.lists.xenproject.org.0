Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 573B5DE0D3
	for <lists+xen-devel@lfdr.de>; Mon, 21 Oct 2019 00:06:25 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iMJEv-00019V-2X; Sun, 20 Oct 2019 21:59:53 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=4325=YN=xenproject.org=osstest-admin@srs-us1.protection.inumbo.net>)
 id 1iMJEt-00019Q-CK
 for xen-devel@lists.xenproject.org; Sun, 20 Oct 2019 21:59:51 +0000
X-Inumbo-ID: ef73a732-f384-11e9-bbab-bc764e2007e4
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id ef73a732-f384-11e9-bbab-bc764e2007e4;
 Sun, 20 Oct 2019 21:59:49 +0000 (UTC)
Received: from host146.205.237.98.conversent.net ([205.237.98.146]
 helo=infra.test-lab.xenproject.org)
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1iMJEq-0003ti-Fp; Sun, 20 Oct 2019 21:59:48 +0000
Received: from [172.16.144.3] (helo=osstest.test-lab.xenproject.org)
 by infra.test-lab.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <osstest-admin@xenproject.org>)
 id 1iMJEq-0000V1-4l; Sun, 20 Oct 2019 21:59:48 +0000
Received: from osstest by osstest.test-lab.xenproject.org with local (Exim
 4.89) (envelope-from <osstest-admin@xenproject.org>)
 id 1iMJEq-0001uR-3n; Sun, 20 Oct 2019 21:59:48 +0000
To: xen-devel@lists.xenproject.org,
    osstest-admin@xenproject.org
Message-ID: <osstest-142949-mainreport@xen.org>
MIME-Version: 1.0
X-Osstest-Failures: libvirt:test-arm64-arm64-libvirt-qcow2:guest-start/debian.repeat:fail:regression
 libvirt:test-armhf-armhf-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-amd64-i386-libvirt-qemuu-debianhvm-amd64-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt:saverestore-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-xsm:saverestore-support-check:fail:nonblocking
 libvirt:test-amd64-amd64-libvirt-vhd:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:migrate-support-check:fail:nonblocking
 libvirt:test-arm64-arm64-libvirt-qcow2:saverestore-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt:migrate-support-check:fail:nonblocking
 libvirt:test-armhf-armhf-libvirt-raw:migrate-support-check:fail:nonblocking
X-Osstest-Versions-This: libvirt=313a71ee7b424126a4507b12335fd77b51dab433
X-Osstest-Versions-That: libvirt=b83884d1a0f422e8147a7d1a39ccec0e0cca3285
From: osstest service owner <osstest-admin@xenproject.org>
Date: Sun, 20 Oct 2019 21:59:48 +0000
Subject: [Xen-devel] [libvirt test] 142949: regressions - FAIL
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

ZmxpZ2h0IDE0Mjk0OSBsaWJ2aXJ0IHJlYWwgW3JlYWxdCmh0dHA6Ly9sb2dzLnRlc3QtbGFiLnhl
bnByb2plY3Qub3JnL29zc3Rlc3QvbG9ncy8xNDI5NDkvCgpSZWdyZXNzaW9ucyA6LSgKClRlc3Rz
IHdoaWNoIGRpZCBub3Qgc3VjY2VlZCBhbmQgYXJlIGJsb2NraW5nLAppbmNsdWRpbmcgdGVzdHMg
d2hpY2ggY291bGQgbm90IGJlIHJ1bjoKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293MiAx
NSBndWVzdC1zdGFydC9kZWJpYW4ucmVwZWF0IGZhaWwgUkVHUi4gdnMuIDE0Mjg0MAoKVGVzdHMg
d2hpY2ggZGlkIG5vdCBzdWNjZWVkLCBidXQgYXJlIG5vdCBibG9ja2luZzoKIHRlc3QtYXJtaGYt
YXJtaGYtbGlidmlydCAgICAgMTQgc2F2ZXJlc3RvcmUtc3VwcG9ydC1jaGVjayAgICBmYWlsICBs
aWtlIDE0Mjg0MAogdGVzdC1hcm1oZi1hcm1oZi1saWJ2aXJ0LXJhdyAxMyBzYXZlcmVzdG9yZS1z
dXBwb3J0LWNoZWNrICAgIGZhaWwgIGxpa2UgMTQyODQwCiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZp
cnQgICAgIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MK
IHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0LXhzbSAgMTMgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAg
ICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hbWQ2NC1pMzg2LWxpYnZpcnQgICAgICAxMyBt
aWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFtZDY0
LWFtZDY0LWxpYnZpcnQteHNtIDEzIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAg
IG5ldmVyIHBhc3MKIHRlc3QtYW1kNjQtYW1kNjQtbGlidmlydC1xZW11dS1kZWJpYW5odm0tYW1k
NjQteHNtIDExIG1pZ3JhdGUtc3VwcG9ydC1jaGVjayBmYWlsIG5ldmVyIHBhc3MKIHRlc3QtYW1k
NjQtaTM4Ni1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gMTEgbWlncmF0ZS1zdXBw
b3J0LWNoZWNrIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0ICAgICAx
MyBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgICBuZXZlciBwYXNzCiB0ZXN0LWFy
bTY0LWFybTY0LWxpYnZpcnQgICAgIDE0IHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAgZmFp
bCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC14c20gMTMgbWlncmF0ZS1z
dXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIgcGFzcwogdGVzdC1hcm02NC1hcm02NC1s
aWJ2aXJ0LXhzbSAxNCBzYXZlcmVzdG9yZS1zdXBwb3J0LWNoZWNrICAgIGZhaWwgICBuZXZlciBw
YXNzCiB0ZXN0LWFtZDY0LWFtZDY0LWxpYnZpcnQtdmhkIDEyIG1pZ3JhdGUtc3VwcG9ydC1jaGVj
ayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtNjQtYXJtNjQtbGlidmlydC1xY293
MiAxMiBtaWdyYXRlLXN1cHBvcnQtY2hlY2sgICAgICAgIGZhaWwgbmV2ZXIgcGFzcwogdGVzdC1h
cm02NC1hcm02NC1saWJ2aXJ0LXFjb3cyIDEzIHNhdmVyZXN0b3JlLXN1cHBvcnQtY2hlY2sgICAg
ZmFpbCBuZXZlciBwYXNzCiB0ZXN0LWFybWhmLWFybWhmLWxpYnZpcnQgICAgIDEzIG1pZ3JhdGUt
c3VwcG9ydC1jaGVjayAgICAgICAgZmFpbCAgIG5ldmVyIHBhc3MKIHRlc3QtYXJtaGYtYXJtaGYt
bGlidmlydC1yYXcgMTIgbWlncmF0ZS1zdXBwb3J0LWNoZWNrICAgICAgICBmYWlsICAgbmV2ZXIg
cGFzcwoKdmVyc2lvbiB0YXJnZXRlZCBmb3IgdGVzdGluZzoKIGxpYnZpcnQgICAgICAgICAgICAg
IDMxM2E3MWVlN2I0MjQxMjZhNDUwN2IxMjMzNWZkNzdiNTFkYWI0MzMKYmFzZWxpbmUgdmVyc2lv
bjoKIGxpYnZpcnQgICAgICAgICAgICAgIGI4Mzg4NGQxYTBmNDIyZTgxNDdhN2QxYTM5Y2NlYzBl
MGNjYTMyODUKCkxhc3QgdGVzdCBvZiBiYXNpcyAgIDE0Mjg0MCAgMjAxOS0xMC0xNyAxNTo0Mzox
NiBaICAgIDMgZGF5cwpGYWlsaW5nIHNpbmNlICAgICAgICAxNDI4NjIgIDIwMTktMTAtMTggMDc6
MDc6MTIgWiAgICAyIGRheXMgICAgMyBhdHRlbXB0cwpUZXN0aW5nIHNhbWUgc2luY2UgICAxNDI5
MDQgIDIwMTktMTAtMTkgMDQ6MTg6NDkgWiAgICAxIGRheXMgICAgMiBhdHRlbXB0cwoKLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClBl
b3BsZSB3aG8gdG91Y2hlZCByZXZpc2lvbnMgdW5kZXIgdGVzdDoKICBDb2xlIFJvYmluc29uIDxj
cm9iaW5zb0ByZWRoYXQuY29tPgogIERhbmllbCBIZW5yaXF1ZSBCYXJib3phIDxkYW5pZWxoYjQx
M0BnbWFpbC5jb20+CiAgRGFuaWVsIFAuIEJlcnJhbmfDqSA8YmVycmFuZ2VAcmVkaGF0LmNvbT4K
ICBKdWxpbyBGYXJhY2NvIDxqY2ZhcmFjY29AZ21haWwuY29tPgogIE1hbGluYSBTYWxpbmEgPG1h
bGluYS5zYWxpbmFAcHJvdG9ubWFpbC5jb20+CiAgTWljaGFsIFByaXZvem5payA8bXByaXZvem5A
cmVkaGF0LmNvbT4KICBQZXRlciBLcmVtcGEgPHBrcmVtcGFAcmVkaGF0LmNvbT4KCmpvYnM6CiBi
dWlsZC1hbWQ2NC14c20gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgcGFzcyAgICAKIGJ1aWxkLWFybTY0LXhzbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtaTM4Ni14c20gICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1hbWQ2NCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1
aWxkLWFybTY0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBwYXNzICAgIAogYnVpbGQtYXJtaGYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWlsZC1pMzg2ICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWFtZDY0LWxpYnZp
cnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVp
bGQtYXJtNjQtbGlidmlydCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IHBhc3MgICAgCiBidWlsZC1hcm1oZi1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgcGFzcyAgICAKIGJ1aWxkLWkzODYtbGlidmlydCAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtYW1kNjQtcHZvcHMg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiBidWls
ZC1hcm02NC1wdm9wcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
cGFzcyAgICAKIGJ1aWxkLWFybWhmLXB2b3BzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBwYXNzICAgIAogYnVpbGQtaTM4Ni1wdm9wcyAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFtZDY0LWFtZDY0LWxp
YnZpcnQtcWVtdXUtZGViaWFuaHZtLWFtZDY0LXhzbSAgICAgICAgICAgcGFzcyAgICAKIHRlc3Qt
YW1kNjQtaTM4Ni1saWJ2aXJ0LXFlbXV1LWRlYmlhbmh2bS1hbWQ2NC14c20gICAgICAgICAgICBw
YXNzICAgIAogdGVzdC1hbWQ2NC1hbWQ2NC1saWJ2aXJ0LXhzbSAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQteHNtICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2
aXJ0LXhzbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1h
bWQ2NC1hbWQ2NC1saWJ2aXJ0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBh
c3MgICAgCiB0ZXN0LWFybTY0LWFybTY0LWxpYnZpcnQgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYXJtaGYtYXJtaGYtbGlidmlydCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hbWQ2NC1pMzg2LWxpYnZp
cnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MgICAgCiB0ZXN0LWFt
ZDY0LWFtZDY0LWxpYnZpcnQtcGFpciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFz
cyAgICAKIHRlc3QtYW1kNjQtaTM4Ni1saWJ2aXJ0LXBhaXIgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBwYXNzICAgIAogdGVzdC1hcm02NC1hcm02NC1saWJ2aXJ0LXFjb3cyICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWwgICAgCiB0ZXN0LWFybWhmLWFybWhmLWxpYnZp
cnQtcmF3ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcyAgICAKIHRlc3QtYW1k
NjQtYW1kNjQtbGlidmlydC12aGQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNz
ICAgIAoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQpzZy1yZXBvcnQtZmxpZ2h0IG9uIG9zc3Rlc3QudGVzdC1sYWIueGVucHJvamVj
dC5vcmcKbG9nczogL2hvbWUvbG9ncy9sb2dzCmltYWdlczogL2hvbWUvbG9ncy9pbWFnZXMKCkxv
Z3MsIGNvbmZpZyBmaWxlcywgZXRjLiBhcmUgYXZhaWxhYmxlIGF0CiAgICBodHRwOi8vbG9ncy50
ZXN0LWxhYi54ZW5wcm9qZWN0Lm9yZy9vc3N0ZXN0L2xvZ3MKCkV4cGxhbmF0aW9uIG9mIHRoZXNl
IHJlcG9ydHMsIGFuZCBvZiBvc3N0ZXN0IGluIGdlbmVyYWwsIGlzIGF0CiAgICBodHRwOi8veGVu
Yml0cy54ZW4ub3JnL2dpdHdlYi8/cD1vc3N0ZXN0LmdpdDthPWJsb2I7Zj1SRUFETUUuZW1haWw7
aGI9bWFzdGVyCiAgICBodHRwOi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYi8/cD1vc3N0ZXN0Lmdp
dDthPWJsb2I7Zj1SRUFETUU7aGI9bWFzdGVyCgpUZXN0IGhhcm5lc3MgY29kZSBjYW4gYmUgZm91
bmQgYXQKICAgIGh0dHA6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViP3A9b3NzdGVzdC5naXQ7YT1z
dW1tYXJ5CgoKTm90IHB1c2hpbmcuCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KY29tbWl0IDMxM2E3MWVlN2I0MjQxMjZhNDUwN2Ix
MjMzNWZkNzdiNTFkYWI0MzMKQXV0aG9yOiBNYWxpbmEgU2FsaW5hIDxtYWxpbmEuc2FsaW5hQHBy
b3Rvbm1haWwuY29tPgpEYXRlOiAgIEZyaSBTZXAgMjcgMTc6MTA6MzQgMjAxOSArMDEwMAoKICAg
IG5ldHdvcms6IGFsbG93IERIQ1AvRE5TL1RGVFAgZXhwbGljaXRseSBpbiBPVVRQVVQgcnVsZXMK
ICAgIAogICAgV2hpbGUgdGhlIGRlZmF1bHQgaXB0YWJsZXMgc2V0dXAgdXNlZCBieSBGZWRvcmEv
UkhFTCBkaXN0cm9zCiAgICBvbmx5IHJlc3RyaWN0cyB0cmFmZmljIG9uIHRoZSBJTlBVVCBhbmQv
b3IgRk9SV0FSRCBydWxlcywKICAgIHNvbWUgdXNlcnMgbWlnaHQgaGF2ZSBjdXN0b20gZmlyZXdh
bGxzIHRoYXQgcmVzdHJpY3QgdGhlCiAgICBPVVRQVVQgcnVsZXMgdG9vLgogICAgCiAgICBUaGVz
ZSBjYW4gcHJldmVudCBESENQL0ROUy9URlRQIHJlc3BvbnNlcyBmcm9tIGRuc21hc3EKICAgIGZy
b20gcmVhY2hpbmcgdGhlIGd1ZXN0IFZNcy4gV2Ugc2hvdWxkIHRodXMgd2hpdGVsaXN0CiAgICB0
aGVzZSBwcm90b2NvbHMgaW4gdGhlIE9VVFBVVCBjaGFpbiwgYXMgd2VsbCBhcyB0aGUKICAgIElO
UFVUIGNoYWluLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBNYWxpbmEgU2FsaW5hIDxtYWxpbmEu
c2FsaW5hQHByb3Rvbm1haWwuY29tPgogICAgCiAgICBJbml0aWFsIHBhdGNoIHRoZW4gbW9kaWZp
ZWQgdG8gYWRkIHVuaXQgdGVzdHMgYW5kIElQdjYKICAgIHN1cHBvcnQKICAgIAogICAgUmV2aWV3
ZWQtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5jb20+CiAgICBTaWduZWQt
b2ZmLWJ5OiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoKY29tbWl0
IDgwZjQ1ZTY1YzAyYmMzZTQyMTVkNTAzN2Y2OGZkZmNmNTZiZmQ0OWUKQXV0aG9yOiBEYW5pZWwg
SGVucmlxdWUgQmFyYm96YSA8ZGFuaWVsaGI0MTNAZ21haWwuY29tPgpEYXRlOiAgIEZyaSBPY3Qg
MTggMTE6NDA6MzcgMjAxOSAtMDMwMAoKICAgIGdpdGRtOiBhZGQgJ2libScgZmlsZQogICAgCiAg
ICBTb21lIHBlb3BsZSBmcm9tIElCTSBkb2VzIG5vdCB1c2UgJ2libS5jb20nIGRvbWFpbiBlbWFp
bHMuCiAgICAKICAgIFN1Z2dlc3RlZC1ieTogTGVvbmFyZG8gQXVndXN0byBHdWltYXLDo2VzIEdh
cmNpYSA8bGFnYXJjaWFAYnIuaWJtLmNvbT4KICAgIFNpZ25lZC1vZmYtYnk6IERhbmllbCBIZW5y
aXF1ZSBCYXJib3phIDxkYW5pZWxoYjQxM0BnbWFpbC5jb20+CiAgICBSZXZpZXdlZC1ieTogQW5k
cmVhIEJvbG9nbmFuaSA8YWJvbG9nbmFAcmVkaGF0LmNvbT4KCmNvbW1pdCA1NzIyZTI2ZWM1ODYz
NDNiNmVkZWNmYzI0M2I0NjVhOWZhZTU3YmEyCkF1dGhvcjogRGFuaWVsIFAuIEJlcnJhbmfDqSA8
YmVycmFuZ2VAcmVkaGF0LmNvbT4KRGF0ZTogICBXZWQgT2N0IDIgMTE6NTE6NTEgMjAxOSArMDEw
MAoKICAgIHV0aWw6IGRyb3AgbG9nZ2luZyBmaWx0ZXIvb3V0cHV0IGZsYWdzCiAgICAKICAgIFdp
dGggdGhlIHJlbW92YWwgb2Ygc3VwcG9ydCBmb3IgbG9nIG1lc3NhZ2Ugc3RhY2sgdHJhY2VzLCB0
aGVyZSBpcwogICAgbm90aGluZyB1c2luZyB0aGUgbG9nZ2luZyBmaWx0ZXIvb3V0cHV0IGZsYWdz
IGFuZCB0aGV5IGNhbiBiZSByZW1vdmVkLgogICAgCiAgICBSZXZpZXdlZC1ieTogSsOhbiBUb21r
byA8anRvbWtvQHJlZGhhdC5jb20+CiAgICBTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgUC4gQmVycmFu
Z8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoKY29tbWl0IDliODBlMGMxMmE3NTI4NGExM2U1MGFh
ZDJjMjk5NmViYmQ4Y2NlNDcKQXV0aG9yOiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUBy
ZWRoYXQuY29tPgpEYXRlOiAgIFdlZCBPY3QgMiAxMTo1MTo1MSAyMDE5ICswMTAwCgogICAgdXRp
bDogZHJvcCBzdXBwb3J0IGZvciBzdGFjayB0cmFjZXMgd2l0aCBsb2dnaW5nCiAgICAKICAgIFRo
ZSBsb2cgZmlsdGVycyBoYXZlIHN1cHBvcnRlZCB0aGUgdXNlIG9mIGEgIisiIGJlZm9yZSB0aGUg
c291cmNlIG1hdGNoCiAgICBzdHJpbmcgdG8gcmVxdWVzdCB0aGF0IGEgc3RhY2sgdHJhY2UgYmUg
ZW1pdHRlZCBmb3IgZXZlcnkgbG9nIG1lc3NhZ2U6CiAgICAKICAgICAgY29tbWl0IDU0ODU2Mzk1
NmU0ODRlMGU0M2U5YTY2YTg5YmRkYTBmOTU5MzAxMDgKICAgICAgQXV0aG9yOiBEYW5pZWwgUC4g
QmVycmFuZ2UgPGJlcnJhbmdlQHJlZGhhdC5jb20+CiAgICAgIERhdGU6ICAgV2VkIE1heSA5IDE1
OjE4OjU2IDIwMTIgKzAxMDAKICAgIAogICAgICAgIEFsbG93IHN0YWNrIHRyYWNlcyB0byBiZSBp
bmNsdWRlZCB3aXRoIGxvZyBtZXNzYWdlcwogICAgCiAgICAgICAgU29tZXRpbWVzIGl0IGlzIHVz
ZWZ1bCB0byBzZWUgdGhlIGNhbGxwYXRoIGZvciBsb2cgbWVzc2FnZXMuCiAgICAgICAgVGhpcyBj
aGFuZ2UgZW5oYW5jZXMgdGhlIGxvZyBmaWx0ZXIgc3ludGF4IHNvIHRoYXQgc3RhY2sgdHJhY2Vz
CiAgICAgICAgY2FuIGJlIHNob3cgYnkgc2V0dGluZyAnMTorTkFNRScgaW5zdGVhZCBvZiAnMTpO
QU1FJy4KICAgIAogICAgV2l0aCB0aGUgaHVnZSAmIGV2ZXIgaW5jcmVhc2luZyBudW1iZXIgb2Yg
bG9nZ2luZyBzdGF0ZW1lbnRzIHBlciBmaWxlLAogICAgdGhpcyB3aWxsIGJlIGluY3JlZGlibHkg
dmVyYm9zZSBhbmQgaGF2ZSBhIG1ham9yIHBlcmZvcm1hbmNlIHBlbmFsdHkuCiAgICBUaGlzIG1h
a2VzIHRoZSBmZWF0dXJlIGltcHJhY3RpY2FsIHRvIHVzZSB3aWRlbHkgYW5kIGFzIHN1Y2ggaXQg
aXMgbm90CiAgICB3b3J0aCB0aGUgY29kZSBtYWludCBjb3N0LgogICAgCiAgICBSZW1vdmluZyB0
aGlzIHNlbGRvbSB1c2VkIGZlYXR1cmUgYWxsb3dzIHVzIHRvIGRyb3AgdGhlICdleGVjaW5mbycK
ICAgIG1vZHVsZSBpbiBnbnVsaWIgd2hpY2ggcHJvdmlkZXMgdGhlIGJhY2t0cmFjZSgpIGZ1bmN0
aW9uIHdoaWNoIGRvZXNuJ3QKICAgIGV4aXN0IG9uIG5vbi1MaW51eC4KICAgIAogICAgVXNlcnMg
d2hvIHdhbnQgdG8gZ2V0IHN0YWNrIHRyYWNlcyBvZiBwYXJ0cyBvZiBsaWJ2aXJ0IGNhbiB1c2Ug
R0RCLAogICAgb3Igc3lzdGVtdGFwIGZvciBsaXZlIHRyYWNpbmcgd2l0aCBtaW5pbWFsIHBlcmYg
aW1wYWN0LgogICAgCiAgICBSZXZpZXdlZC1ieTogSsOhbiBUb21rbyA8anRvbWtvQHJlZGhhdC5j
b20+CiAgICBTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRo
YXQuY29tPgoKY29tbWl0IGFmYmRjODQ5NWU4YzYzMjIwODdlMDRiNWY1OWQ4MTU3MjAxMWIwODYK
QXV0aG9yOiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgpEYXRlOiAg
IEZyaSBPY3QgMTggMTU6NDM6MzkgMjAxOSArMDEwMAoKICAgIHV0aWw6IGFkZCBzdGRsaWIuaCBp
bmNsdWRlIGZvciBhYm9ydCgpIHByb3RvdHlwZQogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBEYW5p
ZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoKY29tbWl0IDk3MDY0NzYyNTRm
OGZlOTE0ODQ3NTU0YjZiNTJhMjYyMWZiN2Y1ZjYKQXV0aG9yOiBNaWNoYWwgUHJpdm96bmlrIDxt
cHJpdm96bkByZWRoYXQuY29tPgpEYXRlOiAgIFRodSBPY3QgMTcgMTc6MTc6MDEgMjAxOSArMDIw
MAoKICAgIGdsaWJjb21wYXQ6IFJlaW1wbGVtZW50IGdfc3RyZHVwX3ByaW50ZigpIGFuZCBnX3N0
cmR1cF92cHJpbnRmKCkKICAgIAogICAgVGhlc2UgZnVuY3Rpb25zIGRvbid0IHJlYWxseSBhYm9y
dCgpIG9uIE9PTS4gVGhlIGZpeCB3YXMgbWVyZ2VkCiAgICB1cHN0cmVhbSwgYnV0IG5vdCBpbiB0
aGUgbWluaW1hbCB2ZXJzaW9uIHdlIHJlcXVpcmUuIFByb3ZpZGUgb3VyCiAgICBvd24gaW1wbGVt
ZW50YXRpb24gd2hpY2ggY2FuIGJlIHJlbW92ZWQgb25jZSB3ZSBidW1wIHRoZSBtaW5pbWFsCiAg
ICB2ZXJzaW9uLgogICAgCiAgICBTaWduZWQtb2ZmLWJ5OiBNaWNoYWwgUHJpdm96bmlrIDxtcHJp
dm96bkByZWRoYXQuY29tPgogICAgUmV2aWV3ZWQtYnk6IERhbmllbCBQLiBCZXJyYW5nw6kgPGJl
cnJhbmdlQHJlZGhhdC5jb20+Cgpjb21taXQgYjJjMmEzYWU5MWU0ZmVmYTY5YWViMzg0YTljZGIy
NGMyYTQzYmU3YgpBdXRob3I6IERhbmllbCBQLiBCZXJyYW5nw6kgPGJlcnJhbmdlQHJlZGhhdC5j
b20+CkRhdGU6ICAgRnJpIEF1ZyAzMCAxMzoyMjo1NCAyMDE5ICswMTAwCgogICAgYnVpbGQtYXV4
OiByZXdyaXRlIHBvIGZpbGUgbWluaW1pemVyIGluIFB5dGhvbgogICAgCiAgICBBcyBwYXJ0IG9m
IGFuIGdvYWwgdG8gZWxpbWluYXRlIFBlcmwgZnJvbSBsaWJ2aXJ0IGJ1aWxkIHRvb2xzLAogICAg
cmV3cml0ZSB0aGUgbWluaW1pemUtcG8ucGwgdG9vbCBpbiBQeXRob24uCiAgICAKICAgIFRoaXMg
d2FzIGEgc3RyYWlnaHQgY29udmVyc2lvbiwgbWFudWFsbHkgZ29pbmcgbGluZS1ieS1saW5lIHRv
CiAgICBjaGFuZ2UgdGhlIHN5bnRheCBmcm9tIFBlcmwgdG8gUHl0aG9uLiBUaHVzIHRoZSBvdmVy
YWxsIHN0cnVjdHVyZQogICAgb2YgdGhlIGZpbGUgYW5kIGFwcHJvYWNoIGlzIHRoZSBzYW1lLgog
ICAgCiAgICBSZXZpZXdlZC1ieTogSsOhbiBUb21rbyA8anRvbWtvQHJlZGhhdC5jb20+CiAgICBT
aWduZWQtb2ZmLWJ5OiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoK
Y29tbWl0IDE3YmJkZWY1Y2I4YWFhOWRkOGI2MjMxODI0NDEyZmJkM2MzZWU3NGUKQXV0aG9yOiBE
YW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgpEYXRlOiAgIEZyaSBBdWcg
MzAgMTM6MjI6NTQgMjAxOSArMDEwMAoKICAgIGJ1aWxkLWF1eDogcmV3cml0ZSBhdWdlYXMgdGVz
dCBnZW5lcmF0b3IgaW4gUHl0aG9uCiAgICAKICAgIEFzIHBhcnQgb2YgYW4gZ29hbCB0byBlbGlt
aW5hdGUgUGVybCBmcm9tIGxpYnZpcnQgYnVpbGQgdG9vbHMsCiAgICByZXdyaXRlIHRoZSBhdWdl
YXMtZ2VudGVzdC5wbCB0b29sIGluIFB5dGhvbi4KICAgIAogICAgVGhpcyB3YXMgYSBzdHJhaWdo
dCBjb252ZXJzaW9uLCBtYW51YWxseSBnb2luZyBsaW5lLWJ5LWxpbmUgdG8KICAgIGNoYW5nZSB0
aGUgc3ludGF4IGZyb20gUGVybCB0byBQeXRob24uIFRodXMgdGhlIG92ZXJhbGwgc3RydWN0dXJl
CiAgICBvZiB0aGUgZmlsZSBhbmQgYXBwcm9hY2ggaXMgdGhlIHNhbWUuCiAgICAKICAgIFRoZSB1
c2Ugb2YgJChBVUdfR0VOVEVTVCkgYXMgYSBkZXBlbmRhbmN5IGluIHRoZSBtYWtlZmlsZXMgbmVl
ZGVkCiAgICB0byBiZSBmaXhlZCwgYmVjYXVzZSB0aGlzIHdhcyBhc3N1bWVkIHRvIGJlIHRoZSBm
aWxlbmFtZSBvZiB0aGUKICAgIHNjcmlwdCwgYnV0IGlzIGluIGZhY3QgYSBmdWxsIHNoZWxsIGNv
bW1hbmQgbGluZS4KICAgIAogICAgUmV2aWV3ZWQtYnk6IErDoW4gVG9ta28gPGp0b21rb0ByZWRo
YXQuY29tPgogICAgU2lnbmVkLW9mZi1ieTogRGFuaWVsIFAuIEJlcnJhbmfDqSA8YmVycmFuZ2VA
cmVkaGF0LmNvbT4KCmNvbW1pdCBiMzZiMjBhMWIzMjBjODE0NDZjNjNmYjg2MGMzYzFmN2EwZWEz
OGI0CkF1dGhvcjogRGFuaWVsIFAuIEJlcnJhbmfDqSA8YmVycmFuZ2VAcmVkaGF0LmNvbT4KRGF0
ZTogICBGcmkgU2VwIDI3IDE0OjE3OjU0IDIwMTkgKzAxMDAKCiAgICBidWlsZDogZml4IHVzZSBv
ZiAkKEFVR19HRU5URVNUKSBhcyBhIGRlcGVuZGVuY3kKICAgIAogICAgVGhlIHVzZSBvZiAkKEFV
R19HRU5URVNUKSBhcyBhIGRlcGVuZGVuY3kgaW4gdGhlIG1ha2VmaWxlcyBpcwogICAgYSBwcm9i
bGVtIGJlY2F1c2UgdGhpcyB3YXMgYXNzdW1lZCB0byBiZSB0aGUgZmlsZW5hbWUgb2YgdGhlCiAg
ICBzY3JpcHQsIGJ1dCBpcyBpbiBmYWN0IGEgZnVsbCBzaGVsbCBjb21tYW5kIGxpbmUuCiAgICAK
ICAgIFNwbGl0IGl0IGludG8gdHdvIHZhcmlhYmxlcywgc28gaXQgY2FuIGJlIGNvcnJlY3RseSB1
c2VkIGZvcgogICAgZGVwZW5kZW5jaWVzLgogICAgCiAgICBSZXZpZXdlZC1ieTogSsOhbiBUb21r
byA8anRvbWtvQHJlZGhhdC5jb20+CiAgICBTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgUC4gQmVycmFu
Z8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoKY29tbWl0IGMyMjE5ZWZkMDYzZTI0NjdhNThhYWUy
NDFmYzg2MmFiYmY1NTY2ZmMKQXV0aG9yOiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUBy
ZWRoYXQuY29tPgpEYXRlOiAgIEZyaSBPY3QgMTggMTM6NDg6MDcgMjAxOSArMDEwMAoKICAgIHBv
OiByZWZyZXNoIHRyYW5zbGF0aW9ucyBmcm9tIHphbmF0YQogICAgCiAgICBTaWduZWQtb2ZmLWJ5
OiBEYW5pZWwgUC4gQmVycmFuZ8OpIDxiZXJyYW5nZUByZWRoYXQuY29tPgoKY29tbWl0IDBhZDc5
YzFkMDE4YWYyMTkxZjk0YzgwMmJjZjY3YmNkMjIyNjExZGUKQXV0aG9yOiBNaWNoYWwgUHJpdm96
bmlrIDxtcHJpdm96bkByZWRoYXQuY29tPgpEYXRlOiAgIEZyaSBPY3QgMTggMTA6MDc6NTAgMjAx
OSArMDIwMAoKICAgIG00OiBEb24ndCBzdWdnZXN0IGF0dHJpYnV0ZSBtYWxsb2MKICAgIAogICAg
V2l0aCBnbGliIGluY2x1c2lvbiwgc29tZSBvZiBpdHMgZnVuY3Rpb25zIGhhdmUKICAgIF9fYXR0
cmlidXRlX18oKF9fbWFsbG9jX18pKSB3aGljaCBtYWtlIGNvbXBpbGVyIHJlYWxpemUgd2Ugd2Fu
dAogICAgdG8gdXNlIHRoZSBzYW1lIGF0dHJpYnV0ZSBmb3Igc29tZSB0cml2aWFsIGZ1bmN0aW9u
cyBvZiBvdXJzLiBGb3IKICAgIGluc3RhbmNlIHFlbXVEb21haW5NYW5hZ2VkU2F2ZVBhdGgoKS4g
SSBkb24ndCBzZWUgYW55IHJlYWwKICAgIGJlbmVmaXQgaW50byB1c2luZyB0aGUgYXR0cmlidXRl
LCBzbyBkaXNhYmxlIHRoYXQgc3VnZ2VzdGlvbi4KICAgIAogICAgSW4gZmFjdCwgd3JvbmcgdXNl
IG9mIHRoZSBhdHRyaWJ1dGUgbWF5IGxlYWQgdG8gbXlzdGVyaW91cyBidWdzOgogICAgCiAgICAg
IGh0dHBzOi8vZ2l0bGFiLmdub21lLm9yZy9HTk9NRS9nbGliL2lzc3Vlcy8xNDY1CiAgICAKICAg
IFNpZ25lZC1vZmYtYnk6IE1pY2hhbCBQcml2b3puaWsgPG1wcml2b3puQHJlZGhhdC5jb20+CiAg
ICBBQ0tlZC1ieTogUGV0ZXIgS3JlbXBhIDxwa3JlbXBhQHJlZGhhdC5jb20+Cgpjb21taXQgNzE1
MTlkNDYzOGUzMGE3YzRmNTlhOTc2NGE3YThlNWU4ZjY3OWViMwpBdXRob3I6IEp1bGlvIEZhcmFj
Y28gPGpjZmFyYWNjb0BnbWFpbC5jb20+CkRhdGU6ICAgVGh1IE9jdCAxNyAwMTozMDozMiAyMDE5
IC0wMzAwCgogICAgcWVtdTogR2VuZXJhdGUgJ3hyZXMnIGFuZCAneXJlcycgZm9yIFFFTVUgdmlk
ZW8gZGV2aWNlcwogICAgCiAgICBUaGlzIGNvbW1pdCBsZXQgUUVNVSBjb21tYW5kIGxpbmUgZGVm
aW5lICd4cmVzJyBhbmQgJ3lyZXMnIHByb3BlcnRpZXMKICAgIGlmIFhNTCBjb250YWlucyBib3Ro
IHByb3BlcnRpZXMgZnJvbSB2aWRlbyBtb2RlbDogYmFzZWQgb24gcmVzb2x1dGlvbgogICAgZmll
bGRzICd4JyBhbmQgJ3knLiBUaGVyZSBpcyBhIGNvbmRpdGlvbmFsIHN0cnVjdHVyZSBpbnNpZGUK
ICAgIHFlbXVEb21haW5EZXZpY2VEZWZWYWxpZGF0ZVZpZGVvKCkgdGhhdCB2YWxpZGF0ZXMgaWYg
dmlkZW8gbW9kZWwKICAgIHN1cHBvcnRzIHRoaXMgZmVhdHVyZS4gVGhpcyBjb21taXQgaW5jbHVk
ZXMgdGhlIG5lY2Vzc2FyeSBjaGFuZ2VzIHRvCiAgICBjb3ZlciByZXNvbHV0aW9uIGZvciAndmlk
ZW8tcXhsLXJlc29sdXRpb24nIHRlc3QgY2FzZXMgdG9vLgogICAgCiAgICBSZXZpZXdlZC1ieTog
Q29sZSBSb2JpbnNvbiA8Y3JvYmluc29AcmVkaGF0LmNvbT4KICAgIFNpZ25lZC1vZmYtYnk6IEp1
bGlvIEZhcmFjY28gPGpjZmFyYWNjb0BnbWFpbC5jb20+Cgpjb21taXQgNzI4NjI3OTc5N2EzNGIz
MDgzZDg1YmM0NTU2NDMyYjVlN2FkOWZmZgpBdXRob3I6IEp1bGlvIEZhcmFjY28gPGpjZmFyYWNj
b0BnbWFpbC5jb20+CkRhdGU6ICAgVGh1IE9jdCAxNyAwMTozMDozMSAyMDE5IC0wMzAwCgogICAg
Y29uZjogQWRkICd4JyBhbmQgJ3knIHJlc29sdXRpb24gaW50byB2aWRlbyBYTUwgZGVmaW5pdGlv
bgogICAgCiAgICBUaGlzIGNvbW1pdCBhZGRzIHJlc29sdXRpb24gZWxlbWVudCB3aXRoIHBhcmFt
ZXRlcnMgJ3gnIGFuZCAneScgaW50byB2aWRlbwogICAgWE1MIGRvbWFpbiBncm91cCBkZWZpbml0
aW9uLiBCb3RoLCBwcm9wZXJ0aWVzIHdlcmUgYWRkZWQgaW50byBhbiBlbGVtZW50CiAgICBjYWxs
ZWQgJ3Jlc29sdXRpb24nIGFuZCBpdCB3YXMgYWRkZWQgaW5zaWRlICdtb2RlbCcgZWxlbWVudC4g
VGhleSBhcmUgc2V0CiAgICBhcyBvcHRpb25hbC4gVGhpcyBlbGVtZW50IGRvZXMgbm90IGZvbGxv
dyBRRU1VIHByb3BlcnRpZXMgJ3hyZXMnIGFuZAogICAgJ3lyZXMnIGZvcm1hdC4gQm90aCBIVE1M
IGRvY3VtZW50YXRpb24gYW5kIHNjaGVtYSB3ZXJlIGNoYW5nZWQgdG9vLiBUaGlzCiAgICBjb21t
aXQgaW5jbHVkZXMgYSBzaW1wbGUgdGVzdCBjYXNlIHRvIGNvdmVyIHJlc29sdXRpb24gZm9yIFFF
TVUgdmlkZW8KICAgIG1vZGVscy4gVGhlIG5ldyBYTUwgZm9ybWF0IGZvciByZXNvbHV0aW9uIGxv
b2tzIGxpa2U6CiAgICAKICAgICAgICA8bW9kZWwgLi4uPgogICAgICAgICAgPHJlc29sdXRpb24g
eD0nODAwJyB5PSc2MDAnLz4KICAgICAgICA8L21vZGVsPgogICAgCiAgICBSZXZpZXdlZC1ieTog
Q29sZSBSb2JpbnNvbiA8Y3JvYmluc29AcmVkaGF0LmNvbT4KICAgIFNpZ25lZC1vZmYtYnk6IEp1
bGlvIEZhcmFjY28gPGpjZmFyYWNjb0BnbWFpbC5jb20+Cgpjb21taXQgZmJmN2MyM2MyZGZhZTBm
Zjg3OWM5ODEzMGMzNzY1YjRjMWViZjM0ZQpBdXRob3I6IENvbGUgUm9iaW5zb24gPGNyb2JpbnNv
QHJlZGhhdC5jb20+CkRhdGU6ICAgVHVlIE9jdCAxNSAxMTo0NzoxMCAyMDE5IC0wNDAwCgogICAg
cWVtdTogY2FwczogVXNlIHVuaXF1ZSBrZXkgZm9yIGRvbUNhcHMgY2FjaGluZwogICAgCiAgICBX
aGVuIHNlYXJjaGluZyBxZW11Q2Fwcy0+ZG9tQ2Fwc0NhY2hlIGZvciBleGlzdGluZyBkb21DYXBz
IGRhdGEsCiAgICB3ZSBjaGVjayBmb3IgYSBtYXRjaGluZyBwYWlyIG9mIGFyY2grdmlydHR5cGUr
bWFjaGluZStlbXVsYXRvci4gSG93ZXZlcgogICAgZm9yIHRoZSBoYXNoIHRhYmxlIGtleSB3ZSBv
bmx5IHVzZSB0aGUgbWFjaGluZSBzdHJpbmcuIFNvIGlmIHRoZQogICAgY2FjaGUgYWxyZWFkeSBj
b250YWluczoKICAgIAogICAgICB4ODZfNjQgKyBrdm0gKyBwYyArIC91c3IvYmluL3FlbXUta3Zt
CiAgICAKICAgIEJ1dCBhIG5ldyBWTSBpcyBkZWZpbmVkIHdpdGgKICAgIAogICAgICB4ODZfNjQg
KyBxZW11ICsgcGMgKyAvdXNyL2Jpbi9xZW11LWt2bQogICAgCiAgICBXZSBjb3JyZWN0bHkgZmFp
bCB0byBmaW5kIG1hdGNoaW5nIGNhY2hlZCBkb21DYXBzLCBidXQgdGhlbiBhdHRlbXB0CiAgICB0
byB1c2UgYSBjb2xsaWRpbmcga2V5IHdpdGggdmlySGFzaEFkZEVudHJ5CiAgICAKICAgIEZpeCB0
aGlzIGJ5IGJ1aWxkaW5nIGEgaGFzaCBrZXkgZnJvbSB0aGUgNCB2YWx1ZXMsIG5vdCBqdXN0IG1h
Y2hpbmUKICAgIAogICAgUmV2aWV3ZWQtYnk6IEpvbmF0aG9uIEpvbmdzbWEgPGpqb25nc21hQHJl
ZGhhdC5jb20+CiAgICBSZXZpZXdlZC1ieTogRGFuaWVsIEhlbnJpcXVlIEJhcmJvemEgPGRhbmll
bGhiNDEzQGdtYWlsLmNvbT4KICAgIFNpZ25lZC1vZmYtYnk6IENvbGUgUm9iaW5zb24gPGNyb2Jp
bnNvQHJlZGhhdC5jb20+CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9qZWN0
Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8veGVuLWRl
dmVs

Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id A066913972D
	for <lists+xen-devel@lfdr.de>; Mon, 13 Jan 2020 18:11:07 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1ir3DH-0008Sl-0Z; Mon, 13 Jan 2020 17:09:15 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=aHII=3C=citrix.com=ian.jackson@srs-us1.protection.inumbo.net>)
 id 1ir3DG-0008Rz-18
 for xen-devel@lists.xenproject.org; Mon, 13 Jan 2020 17:09:14 +0000
X-Inumbo-ID: 5df7fffc-3627-11ea-82b0-12813bfff9fa
Received: from esa1.hc3370-68.iphmx.com (unknown [216.71.145.142])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 5df7fffc-3627-11ea-82b0-12813bfff9fa;
 Mon, 13 Jan 2020 17:08:49 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=citrix.com; s=securemail; t=1578935330;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version;
 bh=OvIA52z5IUr6U/0MlYqRVk6y9bCWkJfezM/BnDo8E60=;
 b=amwWs5TDJ1dQ5ACWVn0ufITXHC+kXFc1RGpraIAX2eV297Qjb04EyZNI
 MsStlbeDyt4+uL4vXdvCJfroe+OliN03Qb8LOInpcLUxAc63r+lE3RAtP
 BCHZHHZNUg3hb+tkj8lBJkt9MDJ5UfO2g7xX9CRenWd4jjw46g5R0JFqt Y=;
Authentication-Results: esa1.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none;
 spf=None smtp.pra=ian.jackson@eu.citrix.com;
 spf=Pass smtp.mailfrom=Ian.Jackson@citrix.com;
 spf=None smtp.helo=postmaster@mail.citrix.com
Received-SPF: None (esa1.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 ian.jackson@eu.citrix.com) identity=pra;
 client-ip=162.221.158.21; receiver=esa1.hc3370-68.iphmx.com;
 envelope-from="Ian.Jackson@citrix.com";
 x-sender="ian.jackson@eu.citrix.com";
 x-conformance=sidf_compatible
Received-SPF: Pass (esa1.hc3370-68.iphmx.com: domain of
 Ian.Jackson@citrix.com designates 162.221.158.21 as permitted
 sender) identity=mailfrom; client-ip=162.221.158.21;
 receiver=esa1.hc3370-68.iphmx.com;
 envelope-from="Ian.Jackson@citrix.com";
 x-sender="Ian.Jackson@citrix.com";
 x-conformance=sidf_compatible; x-record-type="v=spf1";
 x-record-text="v=spf1 ip4:209.167.231.154 ip4:178.63.86.133
 ip4:195.66.111.40/30 ip4:85.115.9.32/28 ip4:199.102.83.4
 ip4:192.28.146.160 ip4:192.28.146.107 ip4:216.52.6.88
 ip4:216.52.6.188 ip4:162.221.158.21 ip4:162.221.156.83
 ip4:168.245.78.127 ~all"
Received-SPF: None (esa1.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 postmaster@mail.citrix.com) identity=helo;
 client-ip=162.221.158.21; receiver=esa1.hc3370-68.iphmx.com;
 envelope-from="Ian.Jackson@citrix.com";
 x-sender="postmaster@mail.citrix.com";
 x-conformance=sidf_compatible
IronPort-SDR: wdiCFU+iqhFfSEd8Qge0nCvmK/k/qHUnxsh8EBGRUY1rCRDPU7+5VOhtVicZL+bjJGWdrL4Xrl
 UZmiRPPUFAlbE2d9lLZirYjreBxrrIeoAZyYR9hbSIaIK+WKPUEFEGwNjAKQbYGeT6pd/Gf6XM
 f6lbfg3nB9G38GvKyubVRoBLdl5Cl59SePgIcFA7RdP4RTFa2SGECUR5hUD7l0E2UViyhAyzAI
 qWP15UvhH5y5K5wpafmKSisSnvLDOs8eaD5Pgfxszp+ezPqm8FqB8VCIz8cMd0IerIV0vmTlce
 X38=
X-SBRS: 2.7
X-MesageID: 11009473
X-Ironport-Server: esa1.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.69,429,1571716800"; d="scan'208";a="11009473"
From: Ian Jackson <ian.jackson@eu.citrix.com>
To: <xen-devel@lists.xenproject.org>
Date: Mon, 13 Jan 2020 17:08:39 +0000
Message-ID: <20200113170843.21332-7-ian.jackson@eu.citrix.com>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20200113170843.21332-1-ian.jackson@eu.citrix.com>
References: <20200113170843.21332-1-ian.jackson@eu.citrix.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v2 06/10] libxl: event: Fix hang when mixing
 blocking and eventy calls
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Ian Jackson <ian.jackson@eu.citrix.com>,
 George Dunlap <george.dunlap@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

SWYgdGhlIGFwcGxpY2F0aW9uIGNhbGxzIGxpYnhsIHdpdGggYW9faG93PT0wIGFuZCBhbHNvIG1h
a2VzIGNhbGxzCmxpa2UgX29jY3VycmVkLCBsaWJ4bCB3aWxsIHNvbWV0aW1lcyBnZXQgc3R1Y2su
CgpUaGUgYnVnIGhhcHBlbnMgYXMgZm9sbG93cyAoZm9yIGV4YW1wbGUpOgoKICBUaHJlYWQgQQog
ICAgICAgbGlieGxfZG9fdGhpbmcoLGFvX2hvdz09MCkKICAgICAgIGxpYnhsX2RvX3RoaW5nIHN0
YXJ0cywgc2V0cyB1cCBzb21lIGNhbGxiYWNrcwogICAgICAgbGlieGxfZG9fdGhpbmcgZXhpdCBw
YXRoIGNhbGxzIEFPX0lOUFJPR1JFU1MKICAgICAgIGxpYnhsX19hb19pbnByb2dyZXNzIGdvZXMg
aW50byBldmVudCBsb29wCiAgICAgICBldmVudGxvb3BfaXRlcmF0aW9uIHNsZWVwcyBvbjoKICAg
ICAgICAgIC0gZG9fdGhpbmcncyBjdXJyZW50IGZkIHNldAogICAgICAgICAgLSBzaWdjaGxkIHBp
cGUgaWYgYXBwbGljYWJsZQogICAgICAgICAgLSBpdHMgcG9sbGVyCgogIFRocmVhZCBCCiAgICAg
ICBsaWJ4bF9zb21ldGhpbmdfb2NjdXJyZWQKICAgICAgIHRoZSBzb21ldGhpbmcgaXMgdG8gZG8g
d2l0aCBkb190aGluZywgYWJvdmUKICAgICAgIGRvX3RoaW5nX25leHRfY2FsbGJhY2sgZG9lcyBz
b21lIG1vcmUgd29yawogICAgICAgZG9fdGhpbmdfbmV4dF9jYWxsYmFjayBiZWNvbWVzIGludGVy
ZXN0ZWQgaW4gZmQgTgogICAgICAgdGhyZWFkIEIgcmV0dXJucyB0byBhcHBsaWNhdGlvbgoKTm90
ZSB0aGF0IG5vdGhpbmcgd2FrZXMgdXAgdGhyZWFkIEEuICBBIGlzIG5vdCBsaXN0ZW5pbmcgb24g
ZmQgTi4gIFNvCmRvX3RoaW5nXyogd2lsbCBub3Qgc3BvdCB3aGVuIGZkIE4gc2lnbmFscy4gIGRv
X3RoaW5nIHdpbGwgbm90IG1ha2UKZnVydGhlciB0aW1lbHkgcHJvZ3Jlc3MuICBJZiB0aGVyZSBp
cyBubyB0aW1lb3V0IHRocmVhZCBBIHdpbGwgbmV2ZXIKd2FrZSB1cC4KClRoZSBwcm9ibGVtIGhl
cmUgb2NjdXJzIGJlY2F1c2UgdGhyZWFkIEEgaXMgd2FpdGluZyBvbiBhbiBvdXQgb2YgZGF0ZQpv
c2V2ZW50IHNldC4KClRoZXJlIGlzIGFsc28gdGhlIHBvc3NpYmlsaXR5IHRoYXQgYSB0aHJlYWQg
bWlnaHQgYmxvY2sgd2FpdGluZyBmb3IKbGlieGwgb3NldmVudHMgYnV0IG91dHNpZGUgbGlieGws
IGVnIGlmIHRoZSBhcHBsaWNhdGlvbiB1c2VkCmxpYnhsX29zZXZlbnRfYmVmb3JlcG9sbC4gIFdl
IHdpbGwgZGVhbCB3aXRoIHRoYXQgaW4gYSBtb21lbnQuCgpTZWUgdGhlIGJpZyBjb21tZW50IGlu
IGxpYnhsX2V2ZW50LmMgZm9yIGEgZmFpcmx5IGZvcm1hbCBjb3JyZWN0bmVzcwphcmd1bWVudC4K
ClRoaXMgZGVwZW5kcyBvbiBsaWJ4bF9fZWdjX2FvX2NsZWFudXBfMV9iYXRvbiBiZWluZyBjYWxs
ZWQgZXZlcnl3aGVyZQphbiBlZ2Mgb3IgYW8gaXMgZGlzcG9zZWQgb2YuICBGaXJzdGx5IGVnY3M6
IGluIHRoaXMgcGF0Y2ggd2UgcmVuYW1lCmxpYnhsX19lZ2NfY2xlYW51cCwgd2hpY2ggbWVhbnMg
d2UgY2F0Y2ggYWxsIHRoZSBkaXNwb3NhbCBzaXRlcy4KU2Vjb25kbHkgYW9zOiB0aGVzZSBhcmUg
ZGlzcG9zZWQgb2YgYnkgKGkpIEFPX0NSRUFURV9GQUlMCihpaSkgYW9fX2lucHJvZ3Jlc3MgYW5k
IChpaWkpIGFuIGV2ZW50IHdoaWNoIGNvbXBsZXRlcyB0aGUgYW8gbGF0ZXIuCihpKSBhbmQgKGlp
KSB3ZSBoYW5kbGUgYnkgYWRkaW5nIHRoZSBjYWxsIHRvIF9iYXRvbi4gIEluIHRoZSBjYXNlIG9m
CihpaWkpIGFueSBzdWNoIGZ1bmN0aW9uIG11c3QgYmUgYW4gZXZlbnQtZ2VuZXJhdGluZyBmdW5j
dGlvbiBzbyBpdCBoYXMKYW4gZWdjIHRvbywgc28gaXQgd2lsbCBwYXNzIG9uIHRoZSBiYXRvbiB3
aGVuIHRoZSBlZ2MgaXMgZGlzcG9zZWQuCgpSZXBvcnRlZC1ieTogR2VvcmdlIER1bmxhcCA8Z2Vv
cmdlLmR1bmxhcEBjaXRyaXguY29tPgpTaWduZWQtb2ZmLWJ5OiBJYW4gSmFja3NvbiA8aWFuLmph
Y2tzb25AZXUuY2l0cml4LmNvbT4KLS0tCnYyOiBDYWxsIGxpYnhsX19lZ2NfYW9fY2xlYW51cF8x
X2JhdG9uIChyZW5hbWVkIGZyb20gX19lZ2NfY2xlYW51cCkgb24KICAgIGFsbCBleGl0cyBmcm9t
IGFvX2lucHJvZ3Jlc3MsIGV2ZW4gcmVxdWVzdHMgZm9yIGFzeW5jIHByb2Nlc3NpbmcuCiAgICBG
aXhlcyBhIHJlbWFpbmluZyBpbnN0YW5jZSBvZiB0aGlzIGJ1ZyAoISkKICAgIFRoaXMgaW52b2x2
ZXMgZGlzcG9zaW5nIG9mIGFvLT5wb2xsZXIgc29tZXdoYXQgZWFybGllci4KCnYyOiBOZXcgY29y
cmVjdG5lc3MgYXJndW1lbnRzIGluIGxpYnhsX2V2ZW50LmMgY29tbWVudCBhbmQKICAgIGluIGNv
bW1pdCBtZXNzYWdlLgotLS0KIHRvb2xzL2xpYnhsL2xpYnhsX2V2ZW50LmMgICAgfCAxNzggKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLQogdG9vbHMvbGlieGwvbGli
eGxfaW50ZXJuYWwuaCB8ICAzMyArKysrKystLQogMiBmaWxlcyBjaGFuZ2VkLCAxOTQgaW5zZXJ0
aW9ucygrKSwgMTcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvdG9vbHMvbGlieGwvbGlieGxf
ZXZlbnQuYyBiL3Rvb2xzL2xpYnhsL2xpYnhsX2V2ZW50LmMKaW5kZXggMjY4YTVkYTEyMC4uYjUw
ZDRlNTA3NCAxMDA2NDQKLS0tIGEvdG9vbHMvbGlieGwvbGlieGxfZXZlbnQuYworKysgYi90b29s
cy9saWJ4bC9saWJ4bF9ldmVudC5jCkBAIC0zNyw2ICszNywxNDAgQEAgc3RhdGljIHZvaWQgYW9f
X2NoZWNrX2Rlc3Ryb3kobGlieGxfY3R4ICpjdHgsIGxpYnhsX19hbyAqYW8pOwogCiAKIC8qCisg
KiBvc2V2ZW50IHVwZGF0ZSBiYXRvbiBoYW5kbGluZworICoKKyAqIFdlIG5lZWQgdGhlIGZvbGxv
d2luZyBwcm9wZXJ0eSAodGhlICJ1bnN0YWxlIGxpdmVuZXNzIHByb3BlcnR5Iik6CisgKgorICog
V2hlbmV2ZXIgYW55IHRocmVhZCBpcyBibG9ja2luZyBpbiB0aGUgbGlieGwgZXZlbnQgbG9vcFsx
XSwgYXQKKyAqIGxlYXN0IG9uZSB0aHJlYWQgbXVzdCBiZSB1c2luZyBhbiB1cCB0byBkYXRlIG9z
ZXZlbnQgc2V0LiAgSXQgaXMgT0sKKyAqIGZvciBhbGwgYnV0IG9uZSB0aHJlYWRzIHRvIGhhdmUg
c3RhbGUgZXZlbnQgc2V0cywgYmVjYXVzZSBzbyBsb25nCisgKiBhcyBvbmUgd2FpdGluZyB0aHJl
YWQgaGFzIHRoZSByaWdodCBldmVudCBzZXQsIGFueSBhY3R1YWxseQorICogaW50ZXJlc3Rpbmcg
ZXZlbnQgd2lsbCwgaWYgbm90aGluZyBlbHNlLCB3YWtlIHRoYXQgInJpZ2h0IiB0aHJlYWQKKyAq
IHVwLiAgSXQgd2lsbCB0aGVuIG1ha2Ugc29tZSBwcm9ncmVzcyBhbmQvb3IsIGlmIGl0IGV4aXRz
LCBlbnN1cmUKKyAqIHRoYXQgc29tZSBvdGhlciB0aHJlYWQgYmVjb21lcyB0aGUgInJpZ2h0IiB0
aHJlYWQuCisgKgorICogWzFdIFRPRE86IFJpZ2h0IG5vdyB3ZSBhcmUgY29uc2lkZXJpbmcgb25s
eSB0aGUgbGlieGwgZXZlbnQgbG9vcC4KKyAqIFdlIG5lZWQgdG8gY29uc2lkZXIgYXBwbGljYXRp
b24gZXZlbnQgbG9vcCBvdXRzaWRlIGxpYnhsIHRvby4KKyAqCisgKiBBcmd1bWVudCB0aGF0IG91
ciBhcHByb2FjaCBpcyBzb3VuZDoKKyAqCisgKiBUaGUgaXNzdWUgd2UgYXJlIGNvbmNlcm5lZCBh
Ym91dCBpcyBsaWJ4bCBzbGVlcGluZyBvbiBhbiBvdXQgb2YKKyAqIGRhdGUgZmQgc2V0LCBvciB0
b28gbG9uZyBhIHRpbWVvdXQsIHNvIHRoYXQgaXQgZG9lc24ndCBtYWtlCisgKiBwcm9ncmVzcy4g
IElmIHRoZSBwcm9wZXJ0eSBhYm92ZSBpcyBzYXRpc2ZpZWQsIHRoZW4gaWYgYW55IHRocmVhZAor
ICogaXMgd2FpdGluZyBpbiBsaWJ4bCBhdCBsZWFzdCBvbmUgc3VjaCB0aHJlYWQgd2lsbCBiZSB3
YWl0aW5nIG9uIGEKKyAqIHN1ZmZpY2llbnQgb3NldmVudCBzZXQsIHNvIGFueSByZWxldmFudCBv
c2V2ZW50IHdpbGwgd2FrZSB1cCBhCisgKiBsaWJ4bCB0aHJlYWQgd2hpY2ggd2lsbCBlaXRoZXIg
aGFuZGxlIHRoZSBldmVudCwgb3IgYXJyYW5nZSB0aGF0IGF0CisgKiBsZWFzdCBvbmUgb3RoZXIg
bGlieGwgdGhyZWFkIGhhcyB0aGUgcmlnaHQgc2V0LgorICoKKyAqIFRoZXJlIGFyZSB0d28gY2Fs
bHMgdG8gcG9sbCBpbiBsaWJ4bDogb25lIGlzIHRoZSBmZCByZWNoZWNrLCB3aGljaAorICogaXMg
bm90IGJsb2NraW5nLiAgVGhlcmUgaXMgb25seSB0aGUgb25lIGJsb2NraW5nIGNhbGwsIGluCisg
KiBldmVudGxvb3BfaXRlcmF0aW9uLiAgcG9sbCBydW5zIHdpdGggdGhlIGN0eCB1bmxvY2tlZCwg
c28gb3NldmVudHMKKyAqIG1pZ2h0IGJlIGFkZGVkIGFmdGVyIGl0IHVubG9ja3MgdGhlIGN0eCAt
IHRoYXQgaXMgd2hhdCB3ZSBhcmUKKyAqIHdvcnJpZWQgYWJvdXQuCisgKgorICogVG8gZGVtb25z
dHJhdGUgdGhhdCB0aGUgdW5zdGFsZSBsaXZlbmVzcyBwcm9wZXJ0eSBpcyBzYXRpc2ZpZWQ6Cisg
KgorICogV2UgZGVmaW5lIGEgYmF0b24gaG9sZGVyIGFzIGZvbGxvd3M6IGEgbGlieGwgdGhyZWFk
IGlzIGEgYmF0b24KKyAqIGhvbGRlciBpZgorICogICAoYSkgaXQgaGFzIGFuIGVnYyBvciBhbiBh
byBhbmQgaG9sZHMgdGhlIGN0eCBsb2NrLCBvcgorICogICAoYikgaXQgaGFzIGFuIGFjdGl2ZSBu
b24tYXBwIHBvbGxlciBhbmQgbm8gb3NldmVudHMgaGF2ZSBiZWVuCisgKiAgICAgICBhZGRlZCBz
aW5jZSBpdCByZWxlYXNlZCB0aGUgbG9jaywgb3IKKyAqICAgKGMpIGl0IGhhcyBhbiBhY3RpdmUg
bm9uLWFwcCBwb2xsZXIgd2hpY2ggaGFzIGJlZW4gd29rZW4KKyAqICAgICAgIChieSB3cml0aW5n
IHRvIGl0cyBwaXBlKSwgc28gaXQgd2lsbCBub3Qgc2xlZXAKKyAqIFdlIHdpbGwgbWFpbnRhaW4g
dGhlIGludmFyaWFudCAodGhlICJiYXRvbiBpbnZhcmlhbnQiKSB0aGF0CisgKiB3aGVuZXZlciB0
aGVyZSBpcyBhbnkgYWN0aXZlIHBvbGxlciwgdGhlcmUgaXMgYXQgbGVhc3QKKyAqIG9uZSBiYXRv
biBob2xkZXIuICAoIm5vbi1hcHAiIG1lYW5zIHNpbXBseSAibm90IHBvbGxlcl9hcHAiLikKKyAq
CisgKiBObyB0aHJlYWQgb3V0c2lkZSBsaWJ4bCBjYW4gaGF2ZSBhbiBhY3RpdmUgbm9uLWFwcCBw
b2xsZXI6IHBvbGxlcnMKKyAqIGFyZSBwdXQgb24gdGhlIGFjdGl2ZSBsaXN0IGJ5IHBvbGxlcl9n
ZXQgd2hpY2ggaXMgY2FsbGVkIGluIHRocmVlCisgKiBwbGFjZXM6IGxpYnhsX2V2ZW50X3dhaXQs
IHdoaWNoIHB1dHMgaXQgYmVmb3JlIHJldHVybmluZzsKKyAqIGxpYnhsX19hb19jcmVhdGUgYnV0
IG9ubHkgaW4gdGhlIHN5bmNocm9ub3VzIGNhc2UsIGluIHdoaWNoIGNhc2UKKyAqIHRoZSBwb2xs
ZXIgaXMgcHV0IGJlZm9yZSByZXR1cm5pbmc7IGFuZCB0aGUgcG9sbGVyX2FwcCwgZHVyaW5nCisg
KiBpbml0aWFsaXNhdGlvbi4KKyAqCisgKiBTbyBhbnkgdGltZSB3aGVuIGFsbCBsaWJ4bCB0aHJl
YWRzIGFyZSBibG9ja2luZyAoYW5kIHRoZXJlZm9yZSBkbworICogbm90IGhhdmUgdGhlIGN0eCBs
b2NrKSwgdGhlIG5vbi1hcHAgYWN0aXZlIHBvbGxlcnMgYmVsb25nIHRvIHRob3NlCisgKiB0aHJl
YWRzLiAgSWYgYXQgbGVhc3Qgb25lIGlzIGEgYmF0b24gaG9sZGVyICh0aGUgaW52YXJpYW50KSwg
dGhhdAorICogdGhyZWFkIGhhcyBhIGdvb2QgZW5vdWdoIGV2ZW50IHNldC4KKyAqCisgKiBOb3cg
d2Ugd2lsbCBkZW1vbnN0cmF0ZSB0aGF0IHRoZSAiYmF0b24gaW52YXJpYW50IiBpcyBtYWludGFp
bmVkOgorICoKKyAqIFRoZSBydWxlIGlzIHRoYXQgYW55IHRocmVhZCB3aGljaCBtaWdodCBiZSB0
aGUgYmF0b24gaG9sZGVyIGlzCisgKiByZXNwb25zaWJsZSBmb3IgY2hlY2tpbmcgdGhhdCB0aGVy
ZSBjb250aW51ZXMgdG8gYmUgYSBiYXRvbiBob2xkZXIKKyAqIGFzIG5lZWRlZC4KKyAqCisgKiBG
aXJzdGx5LCBjb25zaWRlciB0aGUgY2FzZSB3aGVuIHRoZSBiYXRvbiBob2xkZXJzIChiKSBjZWFz
ZSB0byBiZQorICogYmF0b24gaG9sZGVycyBiZWNhdXNlIG9zZXZlbnRzIGFyZSBhZGRlZC4KKyAq
CisgKiBUaGVyZSBhcmUgb25seSB0d28ga2luZHMgb2Ygb3NldmVudHM6IHRpbWVvdXRzIGFuZCBm
ZHMuICBFdmVyeQorICogb3RoZXIgaW50ZXJuYWwgZXZlbnQgc291cmNlIHJlZHVjZXMgdG8gb25l
IG9mIHRoZXNlIGV2ZW50dWFsbHkuCisgKiBCb3RoIG9mIHRoZXNlIGNhc2VzIGFyZSBoYW5kbGVk
IChpbiB0aGUgY2FzZSBvZiBmZCBldmVudHMsIGFkZCBhbmQKKyAqIG1vZGlmeSwgc2VwYXJhdGVs
eSksIGNhbGxpbmcgcG9sbGVyc19ub3RlX29zZXZlbnRfYWRkZWQuCisgKgorICogVGhpcyB3YWxr
cyB0aGUgcG9sbGVyX2FjdGl2ZSBsaXN0LCBtYXJraW5nIHRoZSBhY3RpdmUgcG9sbGVycworICog
b3NldmVudHNfYWRkZWQ9MS4gIFN1Y2ggYSBwb2xsZXIgY2Fubm90IGJlIHRoZSBiYXRvbiBob2xk
ZXIuICBCdXQKKyAqIHBvbGxlcnNfbm90ZV9vc2V2ZW50X2FkZGVkIGlzIGNhbGxlZCBvbmx5IGZy
b20gZXZfKiBmdW5jdGlvbnMsCisgKiB3aGljaCBhcmUgb25seSBjYWxsZWQgZnJvbSBldmVudC1j
aGFpbiBsaWJ4bCBjb2RlOiBpZSwgY29kZSB3aXRoIGFuCisgKiBhbyBvciBhbiBlZ2MuICBTbyBh
dCB0aGlzIHBvaW50IHdlIGFyZSBhIGJhdG9uIGhvbGRlciwgYW5kIHRoZXJlIGlzCisgKiBzdGls
bCBhIGJhdG9uIGhvbGRlci4KKyAqCisgKiBTZWNvbmRseSwgY29uc2lkZXIgdGhlIGNhc2Ugd2hl
cmUgYmF0b24gaG9sZGVycyAoYSkgY2Vhc2UgdG8gYmUKKyAqIGJhdHRvbiBob2xkZXJzIGJlY2F1
c2UgdGhleSBkaXNwb3NlIG9mIHRoZWlyIGVnYyBvciBhby4gIFdlIGNhbGwKKyAqIGxpYnhsX19l
Z2NfYW9fY2xlYW51cF8xX2JhdG9uIG9uIGV2ZXJ5IGV4aXQgcGF0aC4gIFdlIGFycmFuZ2UgdGhh
dAorICogZXZlcnl0aGluZyB0aGF0IGRpc3Bvc2VzIG9mIGFuIGVnYyBvciBhbiBhbyBjaGVja3Mg
dGhhdCB0aGVyZSBpcyBhCisgKiBuZXcgYmF0b24gaG9sZGVyIGJ5IGNhbGxpbmcgbGlieGxfX2Vn
Y19hb19jbGVhbnVwXzFfYmF0b24uCisgKgorICogVGhpcyBmdW5jdGlvbiBoYW5kbGVzIHRoZSBp
bnZhcmlhbnQgZXhwbGljaXRseTogaWYgd2UgaGF2ZSBhbnkKKyAqIG5vbi1hcHAgYWN0aXZlIHBv
bGxlcnMgaXQgbG9va3MgZm9yIG9uZSB3aGljaCBpcyB1cCB0byBkYXRlIChiYXRvbgorICogaG9s
ZGVyIGNhdGVnb3J5IChiKSksIGFuZCBmYWlsaW5nIHRoYXQgaXQgcGlja3MgYSB2aWN0aW0gdG8g
dHVybgorICogaW50byB0aGUgYmF0b24gaG9sZGVyIGNhdGVnb3J5IChjKSBieSB3YWtpbmcgaXQg
dXAuICAoQ29ycmVjdG5lc3MKKyAqIGRlcGVuZHMgb24gdGhpcyBmdW5jdGlvbiBub3Qgc3BvdHRp
bmcgaXRzIG93biB0aHJlYWQgYXMgdGhlCisgKiBiYXRvbi1ob2xkZXIsIHNpbmNlIGl0IGlzIG9u
IGl0cyB3YXkgdG8gbm90IGJlaW5nIHRoZSBiYXRvbi1ob2xkZXIsCisgKiBzbyBpdCBtdXN0IGJl
IGNhbGxlZCBhZnRlciB0aGUgcG9sbGVyIGhhcyBiZWVuIHB1dCBiYWNrLikKKyAqCisgKiBUaGly
ZGx5LCB3ZSBtdXN0IGNvbnNpZGVyIHRoZSBjYXNlIChjKS4gIEEgdGhyZWFkIGluIGNhdGVnb3J5
IChjKQorICogd2lsbCByZWVudGVyIGxpYnhsIHdoZW4gaXQgZ2FpbnMgdGhlIGxvY2sgYW5kIG5l
Y2Vzc2FyaWx5IHRoZW4KKyAqIGJlY29tZXMgYSBiYXRvbiBob2xkZXIgaW4gY2F0ZWdvcnkgKGEp
LgorICoKKyAqIFNvIHRoZSAiYmF0b24gaW52YXJpYW50IiBpcyBtYWludGFpbmVkLiAgUUVELgor
ICovCitzdGF0aWMgdm9pZCBwb2xsZXJzX25vdGVfb3NldmVudF9hZGRlZChsaWJ4bF9jdHggKmN0
eCkgeworICAgIGxpYnhsX19wb2xsZXIgKnBvbGxlcjsKKyAgICBMSUJYTF9MSVNUX0ZPUkVBQ0go
cG9sbGVyLCAmY3R4LT5wb2xsZXJzX2FjdGl2ZSwgYWN0aXZlX2VudHJ5KQorICAgICAgICBwb2xs
ZXItPm9zZXZlbnRzX2FkZGVkID0gMTsKK30KKwordm9pZCBsaWJ4bF9fZWdjX2FvX2NsZWFudXBf
MV9iYXRvbihsaWJ4bF9fZ2MgKmdjKQorICAgIC8qIEFueSBwb2xsZXIgd2UgaGFkIG11c3QgaGF2
ZSBiZWVuIGBwdXQnIGFscmVhZHkuICovCit7CisgICAgbGlieGxfX3BvbGxlciAqc2VhcmNoLCAq
d2FrZT0wOworCisgICAgTElCWExfTElTVF9GT1JFQUNIKHNlYXJjaCwgJkNUWC0+cG9sbGVyc19h
Y3RpdmUsIGFjdGl2ZV9lbnRyeSkgeworICAgICAgICBpZiAoc2VhcmNoID09IENUWC0+cG9sbGVy
X2FwcCkKKyAgICAgICAgICAgIC8qIFRoaXMgb25lIGlzIHNwZWNpYWwuICBXZSBjYW4ndCBnaXZl
IGl0IHRoZSBiYXRvbi4gKi8KKyAgICAgICAgICAgIGNvbnRpbnVlOworICAgICAgICBpZiAoIXNl
YXJjaC0+b3NldmVudHNfYWRkZWQpCisgICAgICAgICAgICAvKiBUaGlzIHBvbGxlciBpcyB1cCB0
byBkYXRlIGFuZCB3aWxsIHdha2UgdXAgYXMgbmVlZGVkLiAqLworICAgICAgICAgICAgcmV0dXJu
OworICAgICAgICBpZiAoIXdha2UpCisgICAgICAgICAgICB3YWtlID0gc2VhcmNoOworICAgIH0K
KworICAgIGlmICghd2FrZSkKKyAgICAgICAgLyogbm8tb25lIGluIGxpYnhsIHdhaXRpbmcgZm9y
IGFueSBldmVudHMgKi8KKyAgICAgICAgcmV0dXJuOworCisgICAgbGlieGxfX3BvbGxlcl93YWtl
dXAoZ2MsIHdha2UpOworCisgICAgd2FrZS0+b3NldmVudHNfYWRkZWQgPSAwOworICAgIC8qIFRo
aXMgc2VydmVzIHRvIG1ha2UgXzFfYmF0b24gaWRlbXBvdGVudC4gIEl0IGlzIE9LIGV2ZW4gdGhv
dWdoCisgICAgICogdGhhdCBwb2xsZXIgbWF5IGN1cnJlbnRseSBiZSBzbGVlcGluZyBvbiBvbmx5
IG9sZCBvc2V2ZW50cywKKyAgICAgKiBiZWNhdXNlIGl0IGlzIGdvaW5nIHRvIHdha2UgdXAgYmVj
YXVzZSB3ZSd2ZSBqdXN0IHByb2RkZWQgaXQsCisgICAgICogYW5kIGl0IHBpY2sgdXAgbmV3IG9z
ZXZlbnRzIG9uIGl0cyBuZXh0IGl0ZXJhdGlvbiAob3IgcGFzcworICAgICAqIG9uIHRoZSBiYXRv
bikuICovCit9CisKKy8qCiAgKiBUaGUgY291bnRlciBvc2V2ZW50X2luX2hvb2sgaXMgdXNlZCB0
byBlbnN1cmUgdGhhdCB0aGUgYXBwbGljYXRpb24KICAqIGhvbm91cnMgdGhlIHJlZW50cmFuY3kg
cmVzdHJpY3Rpb24gZG9jdW1lbnRlZCBpbiBsaWJ4bF9ldmVudC5oLgogICoKQEAgLTE5NCw2ICsz
MjgsNyBAQCBpbnQgbGlieGxfX2V2X2ZkX3JlZ2lzdGVyKGxpYnhsX19nYyAqZ2MsIGxpYnhsX19l
dl9mZCAqZXYsCiAgICAgZXYtPmZ1bmMgPSBmdW5jOwogCiAgICAgTElCWExfTElTVF9JTlNFUlRf
SEVBRCgmQ1RYLT5lZmRzLCBldiwgZW50cnkpOworICAgIHBvbGxlcnNfbm90ZV9vc2V2ZW50X2Fk
ZGVkKENUWCk7CiAKICAgICByYyA9IDA7CiAKQEAgLTIxNCw2ICszNDksOCBAQCBpbnQgbGlieGxf
X2V2X2ZkX21vZGlmeShsaWJ4bF9fZ2MgKmdjLCBsaWJ4bF9fZXZfZmQgKmV2LCBzaG9ydCBldmVu
dHMpCiAgICAgcmMgPSBPU0VWRU5UX0hPT0soZmQsbW9kaWZ5LCBub29wLCBldi0+ZmQsICZldi0+
bmV4dXMtPmZvcl9hcHBfcmVnLCBldmVudHMpOwogICAgIGlmIChyYykgZ290byBvdXQ7CiAKKyAg
ICBpZiAoKGV2ZW50cyAmIH5ldi0+ZXZlbnRzKSkKKyAgICAgICAgcG9sbGVyc19ub3RlX29zZXZl
bnRfYWRkZWQoQ1RYKTsKICAgICBldi0+ZXZlbnRzID0gZXZlbnRzOwogCiAgICAgcmMgPSAwOwpA
QCAtMzE1LDYgKzQ1Miw3IEBAIHN0YXRpYyBpbnQgdGltZV9yZWdpc3Rlcl9maW5pdGUobGlieGxf
X2djICpnYywgbGlieGxfX2V2X3RpbWUgKmV2LAogICAgIExJQlhMX1RBSUxRX0lOU0VSVF9TT1JU
RUQoJkNUWC0+ZXRpbWVzLCBlbnRyeSwgZXYsIGV2c2VhcmNoLCAvKmVtcHR5Ki8sCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB0aW1lcmNtcCgmZXYtPmFicywgJmV2c2VhcmNoLT5hYnMs
ID4pKTsKIAorICAgIHBvbGxlcnNfbm90ZV9vc2V2ZW50X2FkZGVkKENUWCk7CiAgICAgcmV0dXJu
IDA7CiB9CiAKQEAgLTExMjEsNiArMTI1OSw3IEBAIHN0YXRpYyBpbnQgYmVmb3JlcG9sbF9pbnRl
cm5hbChsaWJ4bF9fZ2MgKmdjLCBsaWJ4bF9fcG9sbGVyICpwb2xsZXIsCiAgICAgKm5mZHNfaW8g
PSB1c2VkOwogCiAgICAgcG9sbGVyLT5mZHNfZGVyZWdpc3RlcmVkID0gMDsKKyAgICBwb2xsZXIt
Pm9zZXZlbnRzX2FkZGVkID0gMDsKIAogICAgIGxpYnhsX19ldl90aW1lICpldGltZSA9IExJQlhM
X1RBSUxRX0ZJUlNUKCZDVFgtPmV0aW1lcyk7CiAgICAgaWYgKGV0aW1lKSB7CkBAIC0xNDQyLDcg
KzE1ODEsNyBAQCBzdGF0aWMgdm9pZCBlZ2NfcnVuX2NhbGxiYWNrcyhsaWJ4bF9fZWdjICplZ2Mp
CiAgICAgfQogfQogCi12b2lkIGxpYnhsX19lZ2NfY2xlYW51cChsaWJ4bF9fZWdjICplZ2MpCit2
b2lkIGxpYnhsX19lZ2NfY2xlYW51cF8yX3VsX2NiX2djKGxpYnhsX19lZ2MgKmVnYykKIHsKICAg
ICBFR0NfR0M7CiAgICAgZWdjX3J1bl9jYWxsYmFja3MoZWdjKTsKQEAgLTE3NTIsMTMgKzE4OTEs
MTUgQEAgaW50IGxpYnhsX2V2ZW50X3dhaXQobGlieGxfY3R4ICpjdHgsIGxpYnhsX2V2ZW50ICoq
ZXZlbnRfciwKICAgICAgICAgcmMgPSBldmVudGxvb3BfaXRlcmF0aW9uKGVnYywgcG9sbGVyKTsK
ICAgICAgICAgaWYgKHJjKSBnb3RvIG91dDsKIAotICAgICAgICAvKiB3ZSB1bmxvY2sgYW5kIGNs
ZWFudXAgdGhlIGVnYyBlYWNoIHRpbWUgd2UgZ28gdGhyb3VnaCB0aGlzIGxvb3AsCi0gICAgICAg
ICAqIHNvIHRoYXQgKGEpIHdlIGRvbid0IGFjY3VtdWxhdGUgZ2FyYmFnZSBhbmQgKGIpIGFueSBl
dmVudHMKLSAgICAgICAgICogd2hpY2ggYXJlIHRvIGJlIGRpc3BhdGNoZWQgYnkgY2FsbGJhY2sg
YXJlIGFjdHVhbGx5IGRlbGl2ZXJlZAotICAgICAgICAgKiBpbiBhIHRpbWVseSBmYXNoaW9uLgor
ICAgICAgICAvKiB3ZSB1bmxvY2sgYW5kIGNsZWFudXAgdGhlIGVnYyBlYWNoIHRpbWUgd2UgZ28g
dGhyb3VnaCB0aGlzCisgICAgICAgICAqIGxvb3AsIHNvIHRoYXQgKGEpIHdlIGRvbid0IGFjY3Vt
dWxhdGUgZ2FyYmFnZSBhbmQgKGIpIGFueQorICAgICAgICAgKiBldmVudHMgd2hpY2ggYXJlIHRv
IGJlIGRpc3BhdGNoZWQgYnkgY2FsbGJhY2sgYXJlIGFjdHVhbGx5CisgICAgICAgICAqIGRlbGl2
ZXJlZCBpbiBhIHRpbWVseSBmYXNoaW9uLiAgXzFfYmF0b24gd2lsbCBiZQorICAgICAgICAgKiBj
YWxsZWQgdG8gcGFzcyB0aGUgYmF0b24gaWZmIHdlIGFjdHVhbGx5IGxlYXZlOyBvdGhlcndpc2UK
KyAgICAgICAgICogd2UgYXJlIHN0aWxsIGNhcnJ5aW5nIGl0LgogICAgICAgICAgKi8KICAgICAg
ICAgQ1RYX1VOTE9DSzsKLSAgICAgICAgbGlieGxfX2VnY19jbGVhbnVwKGVnYyk7CisgICAgICAg
IGxpYnhsX19lZ2NfY2xlYW51cF8yX3VsX2NiX2djKGVnYyk7CiAgICAgICAgIENUWF9MT0NLOwog
ICAgIH0KIApAQCAtMjAzMSwxNCArMjE3MiwyNCBAQCBpbnQgbGlieGxfX2FvX2lucHJvZ3Jlc3Mo
bGlieGxfX2FvICphbywKICAgICAgICAgICAgICAgICAgKiBzeW5jaHJvbm91cyBjYW5jZWxsYXRp
b24gYWJpbGl0eS4gKi8KICAgICAgICAgICAgIH0KIAorICAgICAgICAgICAgLyogVGhlIGNhbGwg
dG8gZWdjLi4xX2JhdG9uIGlzIGJlbG93LCBvbmx5IGlmIHdlIGFyZSBsZWF2aW5nLiAqLwogICAg
ICAgICAgICAgQ1RYX1VOTE9DSzsKLSAgICAgICAgICAgIGxpYnhsX19lZ2NfY2xlYW51cCgmZWdj
KTsKKyAgICAgICAgICAgIGxpYnhsX19lZ2NfY2xlYW51cF8yX3VsX2NiX2djKCZlZ2MpOwogICAg
ICAgICAgICAgQ1RYX0xPQ0s7CiAgICAgICAgIH0KKworICAgICAgICAvKiBEaXNwb3NlIG9mIHRo
aXMgZWFybHkgc28gbGlieGxfX2VnY19hb19jbGVhbnVwXzFfYmF0b24KKyAgICAgICAgICogZG9l
c24ndCBtaXN0YWtlIHVzIGZvciBhIGJhdG9uLWhvbGRlci4gIE5vLW9uZSBtdWNoIGlzCisgICAg
ICAgICAqIGdvaW5nIHRvIGxvb2sgYXQgdGhpcyBhbyBub3cgc28gc2V0dGluZyB0aGlzIHRvIDAg
aXMgZmluZS4KKyAgICAgICAgICogV2UgY2FuJ3QgY2FsbCBfYmF0b24gYmVsb3cgX2xlYXZlIGJl
Y2F1c2UgX2xlYXZlIGRlc3Ryb3lzCisgICAgICAgICAqIG91ciBnYywgd2hpY2ggX2JhdG9uIG5l
ZWRzLiAqLworICAgICAgICBsaWJ4bF9fcG9sbGVyX3B1dChDVFgsIGFvLT5wb2xsZXIpOworICAg
ICAgICBhby0+cG9sbGVyID0gMDsKICAgICB9IGVsc2UgewogICAgICAgICByYyA9IDA7CiAgICAg
fQogCisgICAgbGlieGxfX2VnY19hb19jbGVhbnVwXzFfYmF0b24oZ2MpOwogICAgIGFvLT5pbl9p
bml0aWF0b3IgPSAwOwogICAgIGFvX19tYW5pcF9sZWF2ZShDVFgsIGFvKTsKIApAQCAtMjA1MSw2
ICsyMjAyLDkgQEAgaW50IGxpYnhsX19hb19pbnByb2dyZXNzKGxpYnhsX19hbyAqYW8sCiBzdGF0
aWMgaW50IGFvX19hYm9ydChsaWJ4bF9jdHggKmN0eCwgbGlieGxfX2FvICpwYXJlbnQpCiAvKiBU
ZW1wb3JhcmlseSB1bmxvY2tzIGN0eCwgd2hpY2ggbXVzdCBiZSBsb2NrZWQgZXhhY3RseSBvbmNl
IG9uIGVudHJ5LiAqLwogeworICAgIGxpYnhsX19lZ2MgZWdjOworICAgIExJQlhMX0lOSVRfRUdD
KGVnYyxjdHgpOworCiAgICAgaW50IHJjOwogICAgIGFvX19tYW5pcF9lbnRlcihwYXJlbnQpOwog
CkBAIC0yMDcxLDkgKzIyMjUsNiBAQCBzdGF0aWMgaW50IGFvX19hYm9ydChsaWJ4bF9jdHggKmN0
eCwgbGlieGxfX2FvICpwYXJlbnQpCiAKICAgICAvKiBXZSBrZWVwIGNhbGxpbmcgYWJvcnQgaG9v
a3MgdW50aWwgdGhlcmUgYXJlIG5vbmUgbGVmdCAqLwogICAgIHdoaWxlICghTElCWExfTElTVF9F
TVBUWSgmcGFyZW50LT5hYm9ydGFibGVzKSkgewotICAgICAgICBsaWJ4bF9fZWdjIGVnYzsKLSAg
ICAgICAgTElCWExfSU5JVF9FR0MoZWdjLGN0eCk7Ci0KICAgICAgICAgYXNzZXJ0KCFwYXJlbnQt
PmNvbXBsZXRlKTsKIAogICAgICAgICBsaWJ4bF9fYW9fYWJvcnRhYmxlICphYnJ0ID0gTElCWExf
TElTVF9GSVJTVCgmcGFyZW50LT5hYm9ydGFibGVzKTsKQEAgLTIwODYsMTUgKzIyMzcsMjAgQEAg
c3RhdGljIGludCBhb19fYWJvcnQobGlieGxfY3R4ICpjdHgsIGxpYnhsX19hbyAqcGFyZW50KQog
ICAgICAgICAgICAgICAgICAgICJhbyAlcDogYWJydD0lcDogYWJvcnRpbmciLCBwYXJlbnQsIGFi
cnQtPmFvKTsKICAgICAgICAgYWJydC0+Y2FsbGJhY2soJmVnYywgYWJydCwgRVJST1JfQUJPUlRF
RCk7CiAKKyAgICAgICAgLyogVGhlIGNhbGwgdG8gZWdjLi4xX2JhdG9uIGlzIGluIHRoZSBvdXQg
YmxvY2sgYmVsb3cuICovCiAgICAgICAgIGxpYnhsX19jdHhfdW5sb2NrKGN0eCk7Ci0gICAgICAg
IGxpYnhsX19lZ2NfY2xlYW51cCgmZWdjKTsKKyAgICAgICAgbGlieGxfX2VnY19jbGVhbnVwXzJf
dWxfY2JfZ2MoJmVnYyk7CiAgICAgICAgIGxpYnhsX19jdHhfbG9jayhjdHgpOwogICAgIH0KIAog
ICAgIHJjID0gMDsKIAogIG91dDoKKyAgICBsaWJ4bF9fZWdjX2FvX2NsZWFudXBfMV9iYXRvbigm
ZWdjLmdjKTsKICAgICBhb19fbWFuaXBfbGVhdmUoY3R4LCBwYXJlbnQpOworICAgIC8qIFRoZSBj
YWxsIHRvIGVnYy4uMl91bF9jYl9nYyBpcyBhYm92ZS4gIFRoaXMgaXMgc3VmZmljaWVudAorICAg
ICAqIGJlY2F1c2Ugb25seSBjb2RlIGluc2lkZSB0aGUgbG9vcCBhZGRzIGFueXRoaW5nIHRvIHRo
ZSBlZ2MsIGFuZAorICAgICAqIHdlIGVuc3VyZXMgdGhhdCB0aGUgZWdjIGlzIGNsZWFuIHdoZW4g
d2UgbGVhdmUgdGhlIGxvb3AuICovCiAgICAgcmV0dXJuIHJjOwogfQogCmRpZmYgLS1naXQgYS90
b29scy9saWJ4bC9saWJ4bF9pbnRlcm5hbC5oIGIvdG9vbHMvbGlieGwvbGlieGxfaW50ZXJuYWwu
aAppbmRleCBiNjhhYjIxOGI2Li5lZWM0YmY3NjdkIDEwMDY0NAotLS0gYS90b29scy9saWJ4bC9s
aWJ4bF9pbnRlcm5hbC5oCisrKyBiL3Rvb2xzL2xpYnhsL2xpYnhsX2ludGVybmFsLmgKQEAgLTYz
NCw5ICs2MzQsMjMgQEAgc3RydWN0IGxpYnhsX19wb2xsZXIgewogICAgICAqIGV2ZW50IGlzIGRl
cmVnaXN0ZXJlZCwgd2Ugc2V0IHRoZSBmZHNfZGVyZWdpc3RlcmVkIG9mIGFsbCBub24taWRsZQog
ICAgICAqIHBvbGxlcnMuICBTbyBhZnRlcnBvbGwgY2FuIHRlbGwgd2hldGhlciBhbnkgUE9MTE5W
QUwgaXMKICAgICAgKiBwbGF1c2libHkgZHVlIHRvIGFuIGZkIGJlaW5nIGNsb3NlZCBhbmQgcmVv
cGVuZWQuCisgICAgICoKKyAgICAgKiBBZGRpdGlvbmFsbHksIHdlIHJlY29yZCB3aGV0aGVyIGFu
eSBmZCBvciB0aW1lIGV2ZW50IHNvdXJjZXMKKyAgICAgKiBoYXZlIGJlZW4gcmVnaXN0ZXJlZC4g
IFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2Ugc29tZXRpbWVzIHdlCisgICAgICogbmVlZCB0byB3
YWtlIHVwIHRoZSBvbmx5IGxpYnhsIHRocmVhZCBzdHVjayBpbgorICAgICAqIGV2ZW50bG9vcF9p
dGVyYXRpb24gc28gdGhhdCBpdCB3aWxsIHBpY2sgdXAgbmV3IGZkcyBvciBlYXJsaWVyCisgICAg
ICogdGltZW91dHMuICBvc2V2ZW50c19hZGRlZCBpcyBjbGVhcmVkIGJ5IGJlZm9yZXBvbGwsIGFu
ZCBzZXQgYnkKKyAgICAgKiBmZCBvciB0aW1lb3V0IGV2ZW50IHJlZ2lzdHJhdGlvbi4gIFdoZW4g
d2UgYXJlIGFib3V0IHRvIGxlYXZlCisgICAgICogbGlieGwgKHN0cmljdGx5LCB3aGVuIHdlIGFy
ZSBhYm91dCB0byBnaXZlIHVwIGFuIGVnYyksIHdlIGNoZWNrCisgICAgICogd2hldGhlciB0aGVy
ZSBhcmUgYW55IHBvbGxlcnMuICBJZiB0aGVyZSBhcmUsIHRoZW4gYXQgbGVhc3Qgb25lCisgICAg
ICogb2YgdGhlbSBtdXN0IGhhdmUgb3NldmVudHNfYWRkZWQgY2xlYXIuICBJZiBub3QsIHdlIHdh
a2UgdXAgdGhlCisgICAgICogZmlyc3Qgb25lIG9uIHRoZSBsaXN0LiAgQW55IGVudHJ5IG9uIHBv
bGxlcnNfYWN0aXZlIGNvbnN0aXR1dGVzCisgICAgICogYSBwcm9taXNlIHRvIGFsc28gbWFrZSB0
aGlzIGNoZWNrLCBzbyB0aGUgYmF0b24gd2lsbCBuZXZlciBiZQorICAgICAqIGRyb3BwZWQuCiAg
ICAgICovCiAgICAgTElCWExfTElTVF9FTlRSWShsaWJ4bF9fcG9sbGVyKSBhY3RpdmVfZW50cnk7
CiAgICAgYm9vbCBmZHNfZGVyZWdpc3RlcmVkOworICAgIGJvb2wgb3NldmVudHNfYWRkZWQ7CiB9
OwogCiBzdHJ1Y3QgbGlieGxfX2djIHsKQEAgLTIzNTAsNyArMjM2NCwxMCBAQCBfaGlkZGVuIGxp
YnhsX2RldmljZV9tb2RlbF92ZXJzaW9uIGxpYnhsX19kZWZhdWx0X2RldmljZV9tb2RlbChsaWJ4
bF9fZ2MgKmdjKTsKICAgICAgICAgTElCWExfU1RBSUxRX0lOSVQoJihlZ2MpLmV2X2ltbWVkaWF0
ZXMpOyAgICAgICAgXAogICAgIH0gd2hpbGUoMCkKIAotX2hpZGRlbiB2b2lkIGxpYnhsX19lZ2Nf
Y2xlYW51cChsaWJ4bF9fZWdjICplZ2MpOworX2hpZGRlbiB2b2lkIGxpYnhsX19lZ2NfYW9fY2xl
YW51cF8xX2JhdG9uKGxpYnhsX19nYyAqZ2MpOworICAvKiBQYXNzZXMgdGhlIGJhdG9uIGZvciBh
ZGRlZCBvc2V2ZW50cy4gIFNlZSBjb21tZW50IGZvcgorICAgKiBvc2V2ZW50c19hZGRlZCBpbiBz
dHJ1Y3QgbGlieGxfX3BvbGxlci4gKi8KK19oaWRkZW4gdm9pZCBsaWJ4bF9fZWdjX2NsZWFudXBf
Ml91bF9jYl9nYyhsaWJ4bF9fZWdjICplZ2MpOwogICAvKiBGcmVlcyBtZW1vcnkgYWxsb2NhdGVk
IHdpdGhpbiB0aGlzIGVnYydzIGdjLCBhbmQgYW5kIHJlcG9ydCBhbGwKICAgICogb2NjdXJyZWQg
ZXZlbnRzIHZpYSBjYWxsYmFjaywgaWYgYXBwbGljYWJsZS4gIE1heSByZWVudGVyIHRoZQogICAg
KiBhcHBsaWNhdGlvbjsgc2VlIHJlc3RyaWN0aW9ucyBhYm92ZS4gIFRoZSBjdHggbXVzdCBiZSBV
TkxPQ0tFRC4gKi8KQEAgLTIzNjEsOSArMjM3OCwxMSBAQCBfaGlkZGVuIHZvaWQgbGlieGxfX2Vn
Y19jbGVhbnVwKGxpYnhsX19lZ2MgKmVnYyk7CiAgICAgbGlieGxfX2VnYyBlZ2NbMV07IExJQlhM
X0lOSVRfRUdDKGVnY1swXSxjdHgpOyAgICAgIFwKICAgICBFR0NfR0MKIAotI2RlZmluZSBFR0Nf
RlJFRSAgICAgICAgICAgbGlieGxfX2VnY19jbGVhbnVwKGVnYykKLQotI2RlZmluZSBDVFhfVU5M
T0NLX0VHQ19GUkVFICBkb3sgQ1RYX1VOTE9DSzsgRUdDX0ZSRUU7IH13aGlsZSgwKQorI2RlZmlu
ZSBDVFhfVU5MT0NLX0VHQ19GUkVFICBkb3sgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAg
ICAgIGxpYnhsX19lZ2NfYW9fY2xlYW51cF8xX2JhdG9uKCZlZ2MtPmdjKTsgICAgICAgIFwKKyAg
ICAgICAgQ1RYX1VOTE9DSzsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAor
ICAgICAgICBsaWJ4bF9fZWdjX2NsZWFudXBfMl91bF9jYl9nYyhlZ2MpOyAgICAgICAgICAgICBc
CisgICAgfXdoaWxlKDApCiAKIAogLyoKQEAgLTI0NjgsOCArMjQ4Nyw5IEBAIF9oaWRkZW4gdm9p
ZCBsaWJ4bF9fZWdjX2NsZWFudXAobGlieGxfX2VnYyAqZWdjKTsKIAogI2RlZmluZSBBT19JTlBS
T0dSRVNTICh7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgICAg
ICAgbGlieGxfY3R4ICphb19fY3R4ID0gbGlieGxfX2djX293bmVyKCZhby0+Z2MpOyAgICAgICAg
ICBcCisgICAgICAgIC8qIF9fYW9faW5wcm9ncmVzcyB3aWxsIGRvIGVnYy4uMV9iYXRvbiBpZiBu
ZWVkZWQgKi8JXAogICAgICAgICBDVFhfVU5MT0NLOyAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFwKLSAgICAgICAgRUdDX0ZSRUU7ICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAgICAgIGxpYnhsX19lZ2NfY2xlYW51
cF8yX3VsX2NiX2djKGVnYyk7ICAgICAgICAgICAgICAgICAgICAgXAogICAgICAgICBDVFhfTE9D
SzsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgICAg
ICAgaW50IGFvX19yYyA9IGxpYnhsX19hb19pbnByb2dyZXNzKGFvLCAgICAgICAgICAgICAgICAg
ICBcCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX19GSUxFX18sIF9fTElORV9fLCBf
X2Z1bmNfXyk7ICAgXApAQCAtMjQ4MSw4ICsyNTAxLDkgQEAgX2hpZGRlbiB2b2lkIGxpYnhsX19l
Z2NfY2xlYW51cChsaWJ4bF9fZWdjICplZ2MpOwogICAgICAgICBsaWJ4bF9jdHggKmFvX19jdHgg
PSBsaWJ4bF9fZ2Nfb3duZXIoJmFvLT5nYyk7ICAgICAgICAgIFwKICAgICAgICAgYXNzZXJ0KHJj
KTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAgICAg
IGxpYnhsX19hb19jcmVhdGVfZmFpbChhbyk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
XAorICAgICAgICBsaWJ4bF9fZWdjX2FvX2NsZWFudXBfMV9iYXRvbigmZWdjLT5nYyk7ICAgICAg
ICAgICAgICAgIFwKICAgICAgICAgbGlieGxfX2N0eF91bmxvY2soYW9fX2N0eCk7IC8qIGdjIGlz
IG5vdyBpbnZhbGlkICovICAgICBcCi0gICAgICAgIEVHQ19GUkVFOyAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAorICAgICAgICBsaWJ4bF9fZWdjX2NsZWFu
dXBfMl91bF9jYl9nYyhlZ2MpOyAgICAgICAgICAgICAgICAgICAgIFwKICAgICAgICAgKHJjKTsg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAg
fSkKIAotLSAKMi4xMS4wCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KWGVuLWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVj
dC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1k
ZXZlbA==

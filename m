Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 27D7914B547
	for <lists+xen-devel@lfdr.de>; Tue, 28 Jan 2020 14:44:11 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iwR7O-0006OF-Mg; Tue, 28 Jan 2020 13:41:26 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=pdAI=3R=xen.org=wl@srs-us1.protection.inumbo.net>)
 id 1iwR7M-0006OA-Qu
 for xen-devel@lists.xenproject.org; Tue, 28 Jan 2020 13:41:24 +0000
X-Inumbo-ID: df878f76-41d3-11ea-ad98-bc764e2007e4
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id df878f76-41d3-11ea-ad98-bc764e2007e4;
 Tue, 28 Jan 2020 13:41:23 +0000 (UTC)
Received: from xenbits.xenproject.org ([104.239.192.120])
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <wl@xen.org>)
 id 1iwR7J-0000Uw-HQ; Tue, 28 Jan 2020 13:41:21 +0000
Received: from 41.142.6.51.dyn.plus.net ([51.6.142.41] helo=debian)
 by xenbits.xenproject.org with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.89)
 (envelope-from <wl@xen.org>)
 id 1iwR7J-0002PM-5K; Tue, 28 Jan 2020 13:41:21 +0000
Date: Tue, 28 Jan 2020 13:41:18 +0000
From: Wei Liu <wl@xen.org>
To: Paul Durrant <pdurrant@amazon.com>
Message-ID: <20200128134118.r3jyjtdzvgp457ho@debian>
References: <20200128122823.12920-1-pdurrant@amazon.com>
 <20200128122823.12920-2-pdurrant@amazon.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20200128122823.12920-2-pdurrant@amazon.com>
User-Agent: NeoMutt/20180716
Subject: Re: [Xen-devel] [PATCH v3 1/2] docs/designs: Add a design document
 for non-cooperative live migration
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, Julien Grall <julien@xen.org>,
 Wei Liu <wl@xen.org>, Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, xen-devel@lists.xenproject.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhhbmtzIGZvciB3cml0aW5nIHRoaXMgdXAuIEkgc2tpbW1lZCB0aHJvdWdoIGl0LiBJdCBsb29r
cyBzZW5zaWJsZS4KCk9uIFR1ZSwgSmFuIDI4LCAyMDIwIGF0IDEyOjI4OjIyUE0gKzAwMDAsIFBh
dWwgRHVycmFudCB3cm90ZToKPiBJdCBoYXMgYmVjb21lIGFwcGFyZW50IHRvIHNvbWUgbGFyZ2Ug
Y2xvdWQgcHJvdmlkZXJzIHRoYXQgdGhlIGN1cnJlbnQKPiBtb2RlbCBvZiBjb29wZXJhdGl2ZSBt
aWdyYXRpb24gb2YgZ3Vlc3RzIHVuZGVyIFhlbiBpcyBub3QgdXNhYmxlIGFzIGl0Cj4gcmVsaWVz
IG9uIHNvZnR3YXJlIHJ1bm5pbmcgaW5zaWRlIHRoZSBndWVzdCwgd2hpY2ggaXMgbGlrZWx5IGJl
eW9uZCB0aGUKPiBwcm92aWRlcidzIGNvbnRyb2wuCj4gVGhpcyBwYXRjaCBpbnRyb2R1Y2VzIGEg
cHJvcG9zYWwgZm9yIG5vbi1jb29wZXJhdGl2ZSBsaXZlIG1pZ3JhdGlvbiwKPiBkZXNpZ25lZCBu
b3QgdG8gcmVseSBvbiBhbnkgZ3Vlc3Qtc2lkZSBzb2Z0d2FyZS4KPiAKPiBTaWduZWQtb2ZmLWJ5
OiBQYXVsIER1cnJhbnQgPHBkdXJyYW50QGFtYXpvbi5jb20+Cj4gLS0tCj4gQ2M6IEFuZHJldyBD
b29wZXIgPGFuZHJldy5jb29wZXIzQGNpdHJpeC5jb20+Cj4gQ2M6IEdlb3JnZSBEdW5sYXAgPEdl
b3JnZS5EdW5sYXBAZXUuY2l0cml4LmNvbT4KPiBDYzogSWFuIEphY2tzb24gPGlhbi5qYWNrc29u
QGV1LmNpdHJpeC5jb20+Cj4gQ2M6IEphbiBCZXVsaWNoIDxqYmV1bGljaEBzdXNlLmNvbT4KPiBD
YzogSnVsaWVuIEdyYWxsIDxqdWxpZW5AeGVuLm9yZz4KPiBDYzogS29ucmFkIFJ6ZXN6dXRlayBX
aWxrIDxrb25yYWQud2lsa0BvcmFjbGUuY29tPgo+IENjOiBTdGVmYW5vIFN0YWJlbGxpbmkgPHNz
dGFiZWxsaW5pQGtlcm5lbC5vcmc+Cj4gQ2M6IFdlaSBMaXUgPHdsQHhlbi5vcmc+Cj4gCj4gdjI6
Cj4gIC0gVXNlIHRoZSB0ZXJtICdub24tY29vcGVyYXRpdmUnIGluc3RlYWQgb2YgJ3RyYW5zcGFy
ZW50Jwo+ICAtIFJlcGxhY2UgJ3RydXN0IGluJyB3aXRoICdyZWxpYW5jZSBvbicgd2hlbiByZWZl
cnJpbmcgdG8gZ3Vlc3Qtc2lkZQo+ICAgIHNvZnR3YXJlCj4gLS0tCj4gIGRvY3MvZGVzaWducy9u
b24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kIHwgMjU5ICsrKysrKysrKysrKysrKysrKysrKysK
PiAgMSBmaWxlIGNoYW5nZWQsIDI1OSBpbnNlcnRpb25zKCspCj4gIGNyZWF0ZSBtb2RlIDEwMDY0
NCBkb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZAo+IAo+IGRpZmYgLS1n
aXQgYS9kb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZCBiL2RvY3MvZGVz
aWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCj4gbmV3IGZpbGUgbW9kZSAxMDA2NDQK
PiBpbmRleCAwMDAwMDAwMDAwLi5mMzhkNjY0YzM0Cj4gLS0tIC9kZXYvbnVsbAo+ICsrKyBiL2Rv
Y3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCj4gQEAgLTAsMCArMSwyNTkg
QEAKPiArIyBOb24tQ29vcGVyYXRpdmUgTWlncmF0aW9uIG9mIEd1ZXN0cyBvbiBYZW4KPiArCj4g
KyMjIEJhY2tncm91bmQKPiArCj4gK1RoZSBub3JtYWwgbW9kZWwgb2YgbWlncmF0aW9uIGluIFhl
biBpcyBkcml2ZW4gYnkgdGhlIGd1ZXN0IGJlY2F1c2UgaXQgd2FzCj4gK29yaWdpbmFsbHkgaW1w
bGVtZW50ZWQgZm9yIFBWIGd1ZXN0cywgd2hlcmUgdGhlIGd1ZXN0IG11c3QgYmUgYXdhcmUgaXQg
aXMKPiArcnVubmluZyB1bmRlciBYZW4gYW5kIGlzIGhlbmNlIGV4cGVjdGVkIHRvIGNvLW9wZXJh
dGUuIFRoaXMgbW9kZWwgZGF0ZXMgZnJvbQo+ICthbiBlcmEgd2hlbiBpdCB3YXMgYXNzdW1lZCB0
aGF0IHRoZSBob3N0IGFkbWluaXN0cmF0b3IgaGFkIGNvbnRyb2wgb2YgYXQgbGVhc3QKPiArdGhl
IHByaXZpbGVnZWQgc29mdHdhcmUgcnVubmluZyBpbiB0aGUgZ3Vlc3QgKGkuZS4gdGhlIGd1ZXN0
IGtlcm5lbCkgd2hpY2ggbWF5Cj4gK3N0aWxsIGJlIHRydWUgaW4gYW4gZW50ZXJwcmlzZSBkZXBs
b3ltZW50IGJ1dCBpcyBub3QgZ2VuZXJhbGx5IHRydWUgaW4gYSBjbG91ZAo+ICtlbnZpcm9ubWVu
dC4gVGhlIGFpbSBvZiB0aGlzIGRlc2lnbiBpcyB0byBwcm92aWRlIGEgbW9kZWwgd2hpY2ggaXMg
cHVyZWx5IGhvc3QKPiArZHJpdmVuLCByZXF1aXJpbmcgbm8gY28tb3BlcmF0aW9uIGZyb20gdGhl
IHNvZnR3YXJlIHJ1bm5pbmcgaW4gdGhlCj4gK2d1ZXN0LCBhbmQgaXMgdGh1cyBzdWl0YWJsZSBm
b3IgY2xvdWQgc2NlbmFyaW9zLgo+ICsKPiArUFYgZ3Vlc3RzIGFyZSBvdXQgb2Ygc2NvcGUgZm9y
IHRoaXMgcHJvamVjdCBiZWNhdXNlLCBhcyBpcyBvdXRsaW5lZCBhYm92ZSwgdGhleQo+ICtoYXZl
IGEgc3ltYmlvdGljIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBoeXBlcnZpc29yIGFuZCB0aGVyZWZv
cmUgYSBjZXJ0YWluIGxldmVsCj4gK29mIGNvLW9wZXJhdGlvbiBjYW4gYmUgYXNzdW1lZC4KCk1p
c3NpbmcgbmV3bGluZSBoZXJlPwoKPiArSFZNIGd1ZXN0cyBjYW4gYWxyZWFkeSBiZSBtaWdyYXRl
ZCBvbiBYZW4gd2l0aG91dCBndWVzdCBjby1vcGVyYXRpb24gYnV0IG9ubHkKPiAraWYgdGhleSBk
b27igJl0IGhhdmUgUFYgZHJpdmVycyBpbnN0YWxsZWRbMV0gb3IgYXJlIGluIHBvd2VyIHN0YXRl
IFMzLiBUaGUKPiArcmVhc29uIGZvciBub3QgZXhwZWN0aW5nIGNvLW9wZXJhdGlvbiBpZiB0aGUg
Z3Vlc3QgaXMgaW4gUzMgaXMgb2J2aW91cywgYnV0IHRoZQo+ICtyZWFzb24gY28tb3BlcmF0aW9u
IGlzIGV4cGVjdGVkIGlmIFBWIGRyaXZlcnMgYXJlIGluc3RhbGxlZCBpcyBkdWUgdG8gdGhlCj4g
K25hdHVyZSBvZiBQViBwcm90b2NvbHMuCj4gKwo+ICsjIyBYZW5zdG9yZSBOb2RlcyBhbmQgRG9t
YWluIElECj4gKwo+ICtUaGUgUFYgZHJpdmVyIG1vZGVsIGNvbnNpc3RzIG9mIGEgKmZyb250ZW5k
KiBhbmQgYSAqYmFja2VuZCouIFRoZSBmcm9udGVuZCBydW5zCj4gK2luc2lkZSB0aGUgZ3Vlc3Qg
ZG9tYWluIGFuZCB0aGUgYmFja2VuZCBydW5zIGluc2lkZSBhICpzZXJ2aWNlIGRvbWFpbiogd2hp
Y2gKPiArbWF5IG9yIG1heSBub3QgZG9tYWluIDAuIFRoZSBmcm9udGVuZCBhbmQgYmFja2VuZCB0
eXBpY2FsbHkgcGFzcyBkYXRhIHZpYQoKIm1heSBvciBtYXkgbm90IF9iZV8gZG9tYWluIDAiCgo+
ICttZW1vcnkgcGFnZXMgd2hpY2ggYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZSB0d28gZG9tYWlucywg
YnV0IHRoaXMgY2hhbm5lbCBvZgo+ICtjb21tdW5pY2F0aW9uIGlzIGdlbmVyYWxseSBlc3RhYmxp
c2hlZCB1c2luZyB4ZW5zdG9yZSAodGhlIHN0b3JlIHByb3RvY29sCj4gK2l0c2VsZiBiZWluZyBh
biBleGNlcHRpb24gdG8gdGhpcyBmb3Igb2J2aW91cyBjaGlja2VuLWFuZC1lZ2cgcmVhc29ucyku
Cj4gKwo+ICtUeXBpY2FsIHByb3RvY29sIGVzdGFibGlzaG1lbnQgaXMgYmFzZWQgb24gdXNlIG9m
IHR3byBzZXBhcmF0ZSB4ZW5zdG9yZQo+ICsqYXJlYXMqLiBJZiB3ZSBjb25zaWRlciBQViBkcml2
ZXJzIGZvciB0aGUgKm5ldGlmKiBwcm90b2NvbCAoaS5lLiBjbGFzcyB2aWYpCj4gK2FuZCBhc3N1
bWUgdGhlIGd1ZXN0IGhhcyBkb21pZCBYLCB0aGUgc2VydmljZSBkb21haW4gaGFzIGRvbWlkIFks
IGFuZCB0aGUgdmlmCj4gK2hhcyBpbmRleCBaIHRoZW4gdGhlIGZyb250ZW5kIGFyZWEgd2lsbCBy
ZXNpZGUgdW5kZXIgdGhlIHBhcmVudCBub2RlOgoKVGhlIHRlcm0gInBhcmVudCIgc2hvd3MgdXAg
Zmlyc3QgdGltZSBpbiB0aGlzIGRvY3VtZW50LiBXaGF0IGRvZXMgaXQKbWVhbiBpbiBYZW4ncyBj
b250ZXh0PwoKPiArCj4gK2AvbG9jYWwvZG9tYWluL1kvZGV2aWNlL3ZpZi9aYAo+ICsKPiArQWxs
IGJhY2tlbmRzLCBieSBjb252ZW50aW9uLCB0eXBpY2FsbHkgcmVzaWRlIHVuZGVyIHBhcmVudCBu
b2RlOgo+ICsKPiArYC9sb2NhbC9kb21haW4vWC9iYWNrZW5kYAo+ICsKPiArYW5kIHRoZSBub3Jt
YWwgYmFja2VuZCBhcmVhIGZvciB2aWYgWiB3b3VsZCBiZToKPiArCj4gK2AvbG9jYWwvZG9tYWlu
L1gvYmFja2VuZC92aWYvWS9aYAo+ICsKPiArYnV0IHRoaXMgc2hvdWxkIG5vdCBiZSBhc3N1bWVk
Lgo+ICsKPiArVGhlIHRvb2xzdGFjayB3aWxsIHBsYWNlIHR3byBub2RlcyBpbiB0aGUgZnJvbnRl
bmQgYXJlYSB0byBleHBsaWNpdGx5IGxvY2F0ZQo+ICt0aGUgYmFja2VuZDoKPiArCj4gKyAgICAq
IGBiYWNrZW5kYDogdGhlIGZ1bGx5IHF1YWxpZmllZCB4ZW5zdG9yZSBwYXRoIG9mIHRoZSBiYWNr
ZW5kIGFyZWEKPiArICAgICogYGJhY2tlbmQtaWRgOiB0aGUgZG9taWQgb2YgdGhlIHNlcnZpY2Ug
ZG9tYWluCj4gKwo+ICthbmQgc2ltaWxhcmx5IHR3byBub2RlcyBpbiB0aGUgYmFja2VuZCBhcmVh
IHRvIGxvY2F0ZSB0aGUgZnJvbnRlbmQgYXJlYToKPiArCj4gKyAgICAqIGBmcm9udGVuZGA6IHRo
ZSBmdWxseSBxdWFsaWZpZWQgeGVuc3RvcmUgcGF0aCBvZiB0aGUgZnJvbnRlbmQgYXJlYQo+ICsg
ICAgKiBgZnJvbnRlbmQtaWRgOiB0aGUgZG9taWQgb2YgdGhlIGd1ZXN0IGRvbWFpbgo+ICsKPiAr
Cj4gK1RoZSBndWVzdCBkb21haW4gb25seSBoYXMgd3JpdGUgcGVybWlzc2lvbiB0byB0aGUgZnJv
bnRlbmQgYXJlYSBhbmQgc2ltaWxhcmx5Cj4gK3RoZSBzZXJ2aWNlIGRvbWFpbiBvbmx5IGhhcyB3
cml0ZSBwZXJtaXNzaW9uIHRvIHRoZSBiYWNrZW5kIGFyZWEsIGJ1dCBib3RoIGVuZHMKPiAraGF2
ZSByZWFkIHBlcm1pc3Npb24gdG8gYm90aCBhcmVhcy4KPiArCj4gK1VuZGVyIGJvdGggZnJvbnRl
bmQgYW5kIGJhY2tlbmQgYXJlYXMgaXMgYSBub2RlIGNhbGxlZCAqc3RhdGUqLiBUaGlzIGlzIGtl
eSB0bwo+ICtwcm90b2NvbCBlc3RhYmxpc2htZW50LiBVcG9uIFBWIGRldmljZSBjcmVhdGlvbiB0
aGUgdG9vbHN0YWNrIHdpbGwgc2V0IHRoZQo+ICt2YWx1ZSBvZiBib3RoIHN0YXRlIG5vZGVzIHRv
IDEgKFhlbmJ1c1N0YXRlSW5pdGlhbGlzaW5nWzJdKS4gVGhpcyBzaG91bGQgY2F1c2UKPiArZW51
bWVyYXRpb24gb2YgYXBwcm9wcmlhdGUgZGV2aWNlcyBpbiBib3RoIHRoZSBndWVzdCBhbmQgc2Vy
dmljZSBkb21haW5zLiBUaGUKPiArYmFja2VuZCBkZXZpY2UsIG9uY2UgaXQgaGFzIHdyaXR0ZW4g
YW55IG5lY2Vzc2FyeSBwcm90b2NvbCBzcGVjaWZpYyBpbmZvcm1hdGlvbgo+ICtpbnRvIHRoZSB4
ZW5zdG9yZSBiYWNrZW5kIGFyZWEgKHRvIGJlIHJlYWQgYnkgdGhlIGZyb250ZW5kIGRyaXZlcikg
d2lsbCB1cGRhdGUKPiArdGhlIGJhY2tlbmQgc3RhdGUgbm9kZSB0byAyIChYZW5idXNTdGF0ZUlu
aXRXYWl0KS4gRnJvbSB0aGlzIHBvaW50IG9uIFBWCj4gK3Byb3RvY29scyBkaWZmZXIgc2xpZ2h0
bHk7IHRoZSBmb2xsb3dpbmcgaWxsdXN0cmF0aW9uIGlzIHRydWUgb2YgdGhlIG5ldGlmCj4gK3By
b3RvY29sLgoKTWlzc2luZyBuZXdsaW5lPwoKPiArVXBvbiBzZWVpbmcgYSBiYWNrZW5kIHN0YXRl
IHZhbHVlIG9mIDIsIHRoZSBmcm9udGVuZCBkcml2ZXIgd2lsbCB0aGVuIHJlYWQgdGhlCj4gK3By
b3RvY29sIHNwZWNpZmljIGluZm9ybWF0aW9uLCB3cml0ZSBkZXRhaWxzIG9mIGdyYW50IHJlZmVy
ZW5jZXMgKGZvciBzaGFyZWQKPiArcGFnZXMpIGFuZCBldmVudCBjaGFubmVsIHBvcnRzIChmb3Ig
c2lnbmFsbGluZykgdGhhdCBpdCBoYXMgY3JlYXRlZCwgYW5kIHNldAo+ICt0aGUgc3RhdGUgbm9k
ZSBpbiB0aGUgZnJvbnRlbmQgYXJlYSB0byA0IChYZW5idXNTdGF0ZUNvbm5lY3RlZCkuIFVwb24g
c2VlIHRoaXMKPiArZnJvbnRlbmQgc3RhdGUsIHRoZSBiYWNrZW5kIGRyaXZlciB3aWxsIHRoZW4g
cmVhZCB0aGUgZ3JhbnQgcmVmZXJlbmNlcyAobWFwcGluZwo+ICt0aGUgc2hhcmVkIHBhZ2VzKSBh
bmQgZXZlbnQgY2hhbm5lbCBwb3J0cyAob3BlbmluZyBpdHMgZW5kIG9mIHRoZW0pIGFuZCBzZXQg
dGhlCj4gK3N0YXRlIG5vZGUgaW4gdGhlIGJhY2tlbmQgYXJlYSB0byA0LiBQcm90b2NvbCBlc3Rh
Ymxpc2htZW50IGlzIG5vdyBjb21wbGV0ZSBhbmQKPiArdGhlIGZyb250ZW5kIGFuZCBiYWNrZW5k
IHN0YXJ0IHRvIHBhc3MgZGF0YS4KPiArCj4gK0JlY2F1c2UgdGhlIGRvbWlkIG9mIGJvdGggZW5k
cyBvZiBhIFBWIHByb3RvY29sIGZvcm1zIGEga2V5IHBhcnQgb2YgbmVnb3RpYXRpbmcKPiArdGhl
IGRhdGEgcGxhbmUgZm9yIHRoYXQgcHJvdG9jb2wgKGJlY2F1c2UgaXQgaXMgZW5jb2RlZCBpbnRv
IGJvdGggeGVuc3RvcmUKPiArbm9kZXMgYW5kIG5vZGUgcGF0aHMpLCBhbmQgYmVjYXVzZSBndWVz
dOKAmXMgb3duIGRvbWlkIGFuZCB0aGUgZG9taWQgb2YgdGhlCj4gK3NlcnZpY2UgZG9tYWluIGFy
ZSB2aXNpYmxlIHRvIHRoZSBndWVzdCBpbiB4ZW5zdG9yZSAoYW5kIGhlbmNlIG1heSBjYWNoZWQK
PiAraW50ZXJuYWxseSksIGFuZCBuZWl0aGVyIGFyZSBuZWNlc3NhcmlseSBwcmVzZXJ2ZWQgZHVy
aW5nIG1pZ3JhdGlvbiwgaXQgaXMKPiAraGVuY2UgbmVjZXNzYXJ5IHRvIGhhdmUgdGhlIGNvLW9w
ZXJhdGlvbiBvZiB0aGUgZnJvbnRlbmQgaW4gcmUtbmVnb3RpYXRpbmcgdGhlCj4gK3Byb3RvY29s
IHVzaW5nIHRoZSBuZXcgZG9taWQgYWZ0ZXIgbWlncmF0aW9uLgoKQWRkIG5ld2xpbmUgaGVyZT8K
Cj4gK01vcmVvdmVyIHRoZSBiYWNrZW5kLWlkIHZhbHVlIHdpbGwgYmUgdXNlZCBieSB0aGUgZnJv
bnRlbmQgZHJpdmVyIGluIHNldHRpbmcgdXAKPiArZ3JhbnQgdGFibGUgZW50cmllcyBhbmQgZXZl
bnQgY2hhbm5lbHMgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgc2VydmljZSBkb21haW4sCj4gK3Nv
IHRoZSBjby1vcGVyYXRpb24gb2YgdGhlIGd1ZXN0IGlzIHJlcXVpcmVkIHRvIHJlLWVzdGFibGlz
aCB0aGVzZSBpbiB0aGUgbmV3Cj4gK2hvc3QgZW52aXJvbm1lbnQgYWZ0ZXIgbWlncmF0aW9uLgo+
ICsKPiArVGh1cyBpZiB3ZSBhcmUgdG8gY2hhbmdlIHRoZSBtb2RlbCBhbmQgc3VwcG9ydCBtaWdy
YXRpb24gb2YgYSBndWVzdCB3aXRoIFBWCj4gK2RyaXZlcnMsIHdpdGhvdXQgdGhlIGNvLW9wZXJh
dGlvbiBvZiB0aGUgZnJvbnRlbmQgZHJpdmVyIGNvZGUsIHRoZSBwYXRocyBhbmQKPiArdmFsdWVz
IGluIGJvdGggdGhlIGZyb250ZW5kIGFuZCBiYWNrZW5kIHhlbnN0b3JlIGFyZWFzIG11c3QgcmVt
YWluIHVuY2hhbmdlZAo+ICthbmQgdmFsaWQgaW4gdGhlIG5ldyBob3N0IGVudmlyb25tZW50LCBh
bmQgdGhlIGdyYW50IHRhYmxlIGVudHJpZXMgYW5kIGV2ZW50Cj4gK2NoYW5uZWxzIG11c3QgYmUg
cHJlc2VydmVkIChhbmQgcmVtYWluIG9wZXJhdGlvbmFsIG9uY2UgZ3Vlc3QgZXhlY3V0aW9uIGlz
Cj4gK3Jlc3VtZWQpLgoKQWRkIG5ld2xpbmUgaGVyZT8KCj4gK0JlY2F1c2UgdGhlIHNlcnZpY2Ug
ZG9tYWlu4oCZcyBkb21pZCBpcyB1c2VkIGRpcmVjdGx5IGJ5IHRoZSBndWVzdCBpbiBzZXR0aW5n
Cj4gK3VwIGdyYW50IGVudHJpZXMgYW5kIGV2ZW50IGNoYW5uZWxzLCB0aGUgYmFja2VuZCBkcml2
ZXJzIGluIHRoZSBuZXcgaG9zdAo+ICtlbnZpcm9ubWVudCBtdXN0IGJlIHByb3ZpZGVkIGJ5IHNl
cnZpY2UgZG9tYWluIHdpdGggdGhlIHNhbWUgZG9taWQuIEFsc28sCj4gK2JlY2F1c2UgdGhlIGd1
ZXN0IGNhbiBzYW1wbGUgaXRzIG93biBkb21pZCBmcm9tIHRoZSBmcm9udGVuZCBhcmVhIGFuZCB1
c2UgaXQgaW4KPiAraHlwZXJjYWxscyAoZS5nLiBIVk1PUF9zZXRfcGFyYW0pIHJhdGhlciB0aGFu
IERPTUlEX1NFTEYsIHRoZSBndWVzdCBkb21pZCBtdXN0Cj4gK2Fsc28gYmUgcHJlc2VydmVkIHRv
IG1haW50YWluIHRoZSBBQkkuCj4gKwo+ICtGdXJ0aGVybW9yZSwgaXQgd2lsbCBuZWNlc3Nhcnkg
dG8gbW9kaWZ5IGJhY2tlbmQgZHJpdmVycyB0byByZS1lc3RhYmxpc2gKPiArY29tbXVuaWNhdGlv
biB3aXRoIGZyb250ZW5kIGRyaXZlcnMgd2l0aG91dCBwZXJ0dXJiaW5nIHRoZSBjb250ZW50IG9m
IHRoZQo+ICtiYWNrZW5kIGFyZWEgb3IgcmVxdWlyaW5nIGFueSBjaGFuZ2VzIHRvIHRoZSB2YWx1
ZXMgb2YgdGhlIHhlbnN0b3JlIHN0YXRlIG5vZGVzLgo+ICsKPiArIyMgT3RoZXIgUGFyYS1WaXJ0
dWFsIFN0YXRlCj4gKwo+ICsjIyMgU2hhcmVkIFJpbmdzCj4gKwo+ICtCZWNhdXNlIHRoZSBjb25z
b2xlIGFuZCBzdG9yZSBwcm90b2NvbCBzaGFyZWQgcGFnZXMgYXJlIGFjdHVhbGx5IHBhcnQgb2Yg
dGhlCj4gK2d1ZXN0IG1lbW9yeSBpbWFnZSAoaW4gYW4gRTgyMCByZXNlcnZlZCByZWdpb24ganVz
dCBiZWxvdyA0RykgdGhlbiB0aGUgY29udGVudAo+ICt3aWxsIGdldCBtaWdyYXRlZCBhcyBwYXJ0
IG9mIHRoZSBndWVzdCBtZW1vcnkgaW1hZ2UuIEhlbmNlIG5vIGFkZGl0aW9uYWwgY29kZQo+ICtp
cyByZXF1aXJlIHRvIHByZXZlbnQgYW55IGd1ZXN0IHZpc2libGUgY2hhbmdlIGluIHRoZSBjb250
ZW50Lgo+ICsKPiArIyMjIFNoYXJlZCBJbmZvCj4gKwo+ICtUaGVyZSBpcyBhbHJlYWR5IGEgcmVj
b3JkIGRlZmluZWQgaW4gKkxpYlhlbkN0cmwgRG9tYWluIEltYWdlIEZvcm1hdCogWzNdCgpMaWJY
ZW5DdHJsIC0+IGxpYnhlbmN0cmwKCj4gK2NhbGxlZCBgU0hBUkVEX0lORk9gIHdoaWNoIHNpbXBs
eSBjb250YWlucyBhIGNvbXBsZXRlIGNvcHkgb2YgdGhlIGRvbWFpbuKAmXMKPiArc2hhcmVkIGlu
Zm8gcGFnZS4gSXQgaXMgbm90IGN1cnJlbnRseSBpbmN1ZGVkIGluIGFuIEhWTSAodHlwZSBgMHgw
MDAyYCkKPiArbWlncmF0aW9uIHN0cmVhbS4gSXQgbWF5IGJlIGZlYXNpYmxlIHRvIGluY2x1ZGUg
aXQgYXMgYW4gb3B0aW9uYWwgcmVjb3JkCj4gK2J1dCBpdCBpcyBub3QgY2xlYXIgdGhhdCB0aGUg
Y29udGVudCBvZiB0aGUgc2hhcmVkIGluZm8gcGFnZSBldmVyIG5lZWRzCj4gK3RvIGJlIHByZXNl
cnZlZCBmb3IgYW4gSFZNIGd1ZXN0LgoKQWRkIG5ld2xpbmU/Cgo+ICtGb3IgYSBQViBndWVzdCB0
aGUgYGFyY2hfc2hhcmVkX2luZm9gIHN1Yi1zdHJ1Y3R1cmUgY29udGFpbnMgaW1wb3J0YW50Cj4g
K2luZm9ybWF0aW9uIGFib3V0IHRoZSBndWVzdOKAmXMgUDJNLCBidXQgdGhpcyBpbmZvcm1hdGlv
biBpcyBub3QgcmVsZXZhbnQgZm9yCj4gK2FuIEhWTSBndWVzdCB3aGVyZSB0aGUgUDJNIGlzIG5v
dCBkaXJlY3RseSBtYW5pcHVsYXRlZCB2aWEgdGhlIGd1ZXN0LiBUaGUgb3RoZXIKPiArc3RhdGUg
Y29udGFpbmVkIGluIHRoZSBgc2hhcmVkX2luZm9gIHN0cnVjdHVyZSByZWxhdGVzIHRoZSBkb21h
aW4gd2FsbC1jbG9jawo+ICsodGhlIHN0YXRlIG9mIHdoaWNoIHNob3VsZCBhbHJlYWR5IGJlIHRy
YW5zZmVycmVkIGJ5IHRoZSBgUlRDYCBIVk0gY29udGV4dAo+ICtpbmZvcm1hdGlvbiB3aGljaCBj
b250YWluZWQgaW4gdGhlIGBIVk1fQ09OVEVYVGAgc2F2ZSByZWNvcmQpIGFuZCBzb21lIGV2ZW50
Cj4gK2NoYW5uZWwgc3RhdGUgKHBhcnRpY3VsYXJseSBpZiB1c2luZyB0aGUgKjJsKiBwcm90b2Nv
bCkuIEV2ZW50IGNoYW5uZWwgc3RhdGUKPiArd2lsbCBuZWVkIHRvIGJlIGZ1bGx5IHRyYW5zZmVy
cmVkIGlmIHdlIGFyZSBub3QgZ29pbmcgdG8gcmVxdWlyZSB0aGUgZ3Vlc3QKPiArY28tb3BlcmF0
aW9uIHRvIHJlLW9wZW4gdGhlIGNoYW5uZWxzIGFuZCBzbyBpdCBzaG91bGQgYmUgcG9zc2libGUg
dG8gcmUtYnVpbGQgYQo+ICtzaGFyZWQgaW5mbyBwYWdlIGZvciBhbiBIVk0gZ3Vlc3QgZnJvbSBz
dWNoIG90aGVyIHN0YXRlLgoKQWRkIG5ld2xpbmUgaGVyZT8KCj4gK05vdGUgdGhhdCB0aGUgc2hh
cmVkIGluZm8gcGFnZSBhbHNvIGNvbnRhaW5zIGFuIGFycmF5IG9mIGBYRU5fTEVHQUNZX01BWF9W
Q1BVU2AKPiArKDMyKSBgdmNwdV9pbmZvYCBzdHJ1Y3R1cmVzLiBBIGRvbWFpbiBtYXkgbm9taW5h
dGUgYSBkaWZmZXJlbnQgZ3Vlc3QgcGh5c2ljYWwKPiArYWRkcmVzcyB0byB1c2UgZm9yIHRoZSB2
Y3B1IGluZm8uIFRoaXMgaXMgbWFuZGF0b3J5IGZvciBpZiBhIGRvbWFpbiB3YW50cyB0bwo+ICt1
c2UgbW9yZSB0aGFuIDMyIHZDUFVzIGFuZCBvcHRpb25hbCBmb3IgbGVnYWN5IHZDUFVzLiBUaGlz
IG1hcHBpbmcgaXMgbm90Cj4gK2N1cnJlbnRseSB0cmFuc2ZlcnJlZCBpbiB0aGUgbWlncmF0aW9u
IHN0YXRlIHNvIHRoaXMgd2lsbCBlaXRoZXIgbmVlZCB0byBiZQo+ICthZGRlZCBpbnRvIGFuIGV4
aXN0aW5nIHNhdmUgcmVjb3JkLCBvciBhbiBhZGRpdGlvbmFsIHR5cGUgb2Ygc2F2ZSByZWNvcmQg
d2lsbAo+ICtiZSBuZWVkZWQuCj4gKwo+ICsjIyMgWGVuc3RvcmUgV2F0Y2hlcwo+ICsKPiArQXMg
bWVudGlvbmVkIGFib3ZlLCBubyBkb21haW4gWGVuc3RvcmUgc3RhdGUgaXMgY3VycmVudGx5IHRy
YW5zZmVycmVkIGluIHRoZQo+ICttaWdyYXRpb24gc3RyZWFtLiBUaGVyZSBpcyBhIHJlY29yZCBk
ZWZpbmVkIGluICpMaWJYZW5MaWdodCBEb21haW4gSW1hZ2UKCkxpYlhlbkxpZ2h0IC0+IGxpYnhl
bmxpZ2h0Cgo+ICtGb3JtYXQqIFs0XSBjYWxsZWQgYEVNVUxBVE9SX1hFTlNUT1JFX0RBVEFgIGZv
ciB0cmFuc2ZlcnJpbmcgWGVuc3RvcmUgbm9kZXMKPiArcmVsYXRpbmcgdG8gZW11bGF0b3JzIGJ1
dCBubyByZWNvcmQgdHlwZSBpcyBkZWZpbmVkIGZvciBub2RlcyByZWxhdGluZyB0byB0aGUKPiAr
ZG9tYWluIGl0c2VsZiwgbm9yIGZvciByZWdpc3RlcmVkICp3YXRjaGVzKi4gQSBYZW5TdG9yZSB3
YXRjaCBpcyBhIG1lY2hhbmlzbQo+ICt1c2VkIGJ5IFBWIGZyb250ZW5kIGFuZCBiYWNrZW5kIGRy
aXZlcnMgdG8gcmVxdWVzdCBhIG5vdGlmaWNhdGlvbiBpZiB0aGUgdmFsdWUKPiArb2YgYSBwYXJ0
aWN1bGFyIG5vZGUgKGUuZy4gdGhlIG90aGVyIGVuZOKAmXMgc3RhdGUgbm9kZSkgY2hhbmdlcywg
c28gaXQgaXMKPiAraW1wb3J0YW50IHRoYXQgd2F0Y2hlcyBjb250aW51ZSB0byBmdW5jdGlvbiBh
ZnRlciBhIG1pZ3JhdGlvbi4gT25lIG9yIG1vcmUgbmV3Cj4gK3NhdmUgcmVjb3JkcyB3aWxsIHRo
ZXJlZm9yZSBiZSByZXF1aXJlZCB0byB0cmFuc2ZlciBYZW5zdG9yZSBzdGF0ZS4gSXQgd2lsbAo+
ICthbHNvIGJlIG5lY2Vzc2FyeSB0byBleHRlbmQgdGhlICpzdG9yZSogcHJvdG9jb2xbNV0gd2l0
aCBtZWNoYW5pc21zIHRvIGFsbG93Cj4gK3RoZSB0b29sc3RhY2sgdG8gYWNxdWlyZSB0aGUgbGlz
dCBvZiB3YXRjaGVzIHRoYXQgdGhlIGd1ZXN0IGhhcyByZWdpc3RlcmVkIGFuZAo+ICtmb3IgdGhl
IHRvb2xzdGFjayB0byByZWdpc3RlciBhIHdhdGNoIG9uIGJlaGFsZiBvZiBhIGRvbWFpbi4KPiAr
Cj4gKyMjIyBFdmVudCBjaGFubmVscwo+ICsKPiArRXZlbnQgY2hhbm5lbHMgYXJlIGVzc2VudGlh
bGx5IHRoZSBwYXJhLXZpcnR1YWwgZXF1aXZhbGVudCBvZiBpbnRlcnJ1cHRzLiBUaGV5Cj4gK2Fy
ZSBhbiBpbXBvcnRhbnQgcGFydCBvZiBwb3N0IFBWIHByb3RvY29scy4gTm9ybWFsbHkgYSBmcm9u
dGVuZCBkcml2ZXIgY3JlYXRlcwo+ICthbiAqaW50ZXItZG9tYWluKiBldmVudCBjaGFubmVsIGJl
dHdlZW4gaXRzIG93biBkb21haW4gYW5kIHRoZSBkb21haW4gcnVubmluZwo+ICt0aGUgYmFja2Vu
ZCwgd2hpY2ggaXQgZGlzY292ZXJzIHVzaW5nIHRoZSBgYmFja2VuZC1pZGAgbm9kZSBpbiBYZW5z
dG9yZSAoc2VlCj4gK2Fib3ZlKSwgYnkgbWFraW5nIGEgYEVWVENITk9QX2FsbG9jX3VuYm91bmRg
IGh5cGVyY2FsbC4gVGhpcyBoeXBlcmNhbGwKPiArYWxsb2NhdGVzIGFuIGV2ZW50IGNoYW5uZWwg
b2JqZWN0IGluIHRoZSBoeXBlcnZpc29yIGFuZCBhc3NpZ25zIGEgKmxvY2FsIHBvcnQqCj4gK251
bWJlciB3aGljaCBpcyB0aGVuIHdyaXR0ZW4gaW50byB0aGUgZnJvbnRlbmQgYXJlYSBpbiBYZW5z
dG9yZS4gVGhlIGJhY2tlbmQKPiArZHJpdmVyIHRoZW4gcmVhZHMgdGhpcyBwb3J0IG51bWJlciBh
bmQgKmJpbmRzKiB0byB0aGUgZXZlbnQgY2hhbm5lbCBieQo+ICtzcGVjaWZ5aW5nIGl0LCBhbmQg
dGhlIHZhbHVlIG9mIGBmcm9udGVuZC1pZGAsIGFzICpyZW1vdGUgZG9tYWluKiBhbmQgKnJlbW90
ZQo+ICtwb3J0KiAocmVzcGVjdGl2ZWx5KSB0byBhIGBFVlRDSE5PUF9iaW5kX2ludGVyZG9tYWlu
YCBoeXBlcmNhbGwuIE9uY2UKPiArY29ubmVjdGlvbiBpcyBlc3RhYmxpc2hlZCBpbiB0aGlzIGZh
c2hpb24gZnJvbnRlbmQgYW5kIGJhY2tlbmQgZHJpdmVycyBjYW4gdXNlCj4gK3RoZSBldmVudCBj
aGFubmVsIGFzIGEgKm1haWxib3gqIHRvIG5vdGlmeSBlYWNoIG90aGVyIHdoZW4gYSBzaGFyZWQg
cmluZyBoYXMKPiArYmVlbiB1cGRhdGVkIHdpdGggbmV3IHJlcXVlc3RzIG9yIHJlc3BvbnNlIHN0
cnVjdHVyZXMuCgpNaXNzaW5nIG5ld2xpbmUgaGVyZS4KCj4gK0N1cnJlbnRseSBubyBldmVudCBj
aGFubmVsIHN0YXRlIGlzIHByZXNlcnZlZCBvbiBtaWdyYXRpb24sIHJlcXVpcmluZyBmcm9udGVu
ZAo+ICthbmQgYmFja2VuZCBkcml2ZXJzIHRvIGNyZWF0ZSBhbmQgYmluZCBhIGNvbXBsZXRlIG5l
dyBzZXQgb2YgZXZlbnQgY2hhbm5lbHMgaW4KPiArb3JkZXIgdG8gcmUtZXN0YWJsaXNoIGEgcHJv
dG9jb2wgY29ubmVjdGlvbi4gSGVuY2UsIG9uZSBvciBtb3JlIG5ldyBzYXZlCj4gK3JlY29yZHMg
d2lsbCBiZSByZXF1aXJlZCB0byB0cmFuc2ZlciBldmVudCBjaGFubmVsIHN0YXRlIGluIG9yZGVy
IHRvIGF2b2lkIHRoZQo+ICtuZWVkIGZvciBleHBsaWNpdCBhY3Rpb24gYnkgZnJvbnRlbmQgZHJp
dmVycyBydW5uaW5nIGluIHRoZSBndWVzdC4gTm90ZSB0aGF0Cj4gK3RoZSBsb2NhbCBwb3J0IG51
bWJlcnMgbmVlZCB0byBwcmVzZXJ2ZWQgaW4gdGhpcyBzdGF0ZSBhcyB0aGV5IGFyZSB0aGUgb25s
eQo+ICtjb250ZXh0IHRoZSBndWVzdCBoYXMgdG8gcmVmZXIgdG8gdGhlIGh5cGVydmlzb3IgZXZl
bnQgY2hhbm5lbCBvYmplY3RzLgo+ICsgTm90ZSBhbHNvIHRoYXQgdGhlIFBWICpzdG9yZSogKFhl
bnN0b3JlIGFjY2VzcykgYW5kICpjb25zb2xlKiBwcm90b2NvbHMgYWxzbwo+ICtyZWx5IG9uIGV2
ZW50IGNoYW5uZWxzIHdoaWNoIGFyZSBzZXQgdXAgYnkgdGhlIHRvb2xzdGFjay4gTm9ybWFsbHks
IGVhcmx5IGluCj4gK21pZ3JhdGlvbiwgdGhlIHRvb2xzdGFjayBydW5uaW5nIG9uIHRoZSByZW1v
dGUgaG9zdCB3b3VsZCBzZXQgdXAgYSBuZXcgcGFpciBvZgo+ICtldmVudCBjaGFubmVscyBmb3Ig
dGhlc2UgcHJvdG9jb2xzIGluIHRoZSBkZXN0aW5hdGlvbiBkb21haW4uIFRoZXNlIG1heSBub3Qg
YmUKPiArYXNzaWduZWQgdGhlIHNhbWUgbG9jYWwgcG9ydCBudW1iZXJzIGFzIHRoZSBwcm90b2Nv
bHMgcnVubmluZyBpbiB0aGUgc291cmNlCj4gK2RvbWFpbi4gRm9yIG5vbi1jb29wZXJhdGl2ZSBt
aWdyYXRpb24gdGhlc2UgY2hhbm5lbHMgbXVzdCBlaXRoZXIgYmUgY3JlYXRlZCB3aXRoCj4gK2Zp
eGVkIHBvcnQgbnVtYmVycywgb3IgdGhlaXIgY3JlYXRpb24gbXVzdCBiZSBhdm9pZGVkIGFuZCBp
bnN0ZWFkIGJlIGluY2x1ZGVkCj4gK2luIHRoZSBnZW5lcmFsIGV2ZW50IGNoYW5uZWwgc3RhdGUg
cmVjb3JkKHMpLgo+ICsKPiArIyMjIEdyYW50IHRhYmxlCj4gKwo+ICtUaGUgZ3JhbnQgdGFibGUg
aXMgZXNzZW50aWFsbHkgdGhlIHBhcmEtdmlydHVhbCBlcXVpdmFsZW50IG9mIGFuIElPTU1VLiBG
b3IKPiArZXhhbXBsZSwgdGhlIHNoYXJlZCByaW5ncyBvZiBhIFBWIHByb3RvY29sIGFyZSAqZ3Jh
bnRlZCogYnkgYSBmcm9udGVuZCBkcml2ZXIKPiArdG8gdGhlIGJhY2tlbmQgZHJpdmVyIGJ5IGFs
bG9jYXRpbmcgKmdyYW50IGVudHJpZXMqIGluIHRoZSBndWVzdOKAmXMgdGFibGUsCj4gK2ZpbGxp
bmcgaW4gZGV0YWlscyBvZiB0aGUgbWVtb3J5IHBhZ2VzIGFuZCB0aGVuIHdyaXRpbmcgdGhlICpn
cmFudCByZWZlcmVuY2VzKgo+ICsodGhlIGluZGV4IHZhbHVlcyBvZiB0aGUgZ3JhbnQgZW50cmll
cykgaW50byBYZW5zdG9yZS4gVGhlIGdyYW50IHJlZmVyZW5jZXMgb2YKPiArdGhlIHByb3RvY29s
IGJ1ZmZlcnMgdGhlbXNlbHZlcyBhcmUgdHlwaWNhbGx5IHdyaXR0ZW4gZGlyZWN0bHkgaW50byB0
aGUgcmVxdWVzdAo+ICtzdHJ1Y3R1cmVzIHBhc3NlZCB2aWEgYSBzaGFyZWQgcmluZy4KCk1pc3Np
bmcgbmV3bGluZS4KCj4gK1RoZSBndWVzdCBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcgaXRz
IG93biBncmFudCB0YWJsZS4gTm8gaHlwZXJjYWxsIGlzCj4gK3JlcXVpcmVkIHRvIGdyYW50IGEg
bWVtb3J5IHBhZ2UgdG8gYW5vdGhlciBkb21haW4uIEl0IGlzIHN1ZmZpY2llbnQgdG8gZmluZCBh
bgo+ICt1bnVzZWQgZ3JhbnQgZW50cnkgYW5kIHNldCBiaXRzIGluIHRoZSBlbnRyeSB0byBnaXZl
IHJlYWQgYW5kL29yIHdyaXRlIGFjY2Vzcwo+ICt0byBhIHJlbW90ZSBkb21haW4gYWxzbyBzcGVj
aWZpZWQgaW4gdGhlIGVudHJ5IGFsb25nIHdpdGggdGhlIHBhZ2UgZnJhbWUKPiArbnVtYmVyLiBU
aHVzIHRoZSBsYXlvdXQgYW5kIGNvbnRlbnQgb2YgdGhlIGdyYW50IHRhYmxlIGxvZ2ljYWxseSBm
b3JtcyBwYXJ0IG9mCj4gK3RoZSBndWVzdCBzdGF0ZS4KCk1pc3NpbmcgbmV3bGluZS4KCj4gK0N1
cnJlbnRseSBubyBncmFudCB0YWJsZSBzdGF0ZSBpcyBtaWdyYXRlZCwgcmVxdWlyaW5nIGEgZ3Vl
c3QgdG8gc2VwYXJhdGVseQo+ICttYWludGFpbiBhbnkgc3RhdGUgdGhhdCBpdCB3aXNoZXMgdG8g
cGVyc2lzdCBlbHNld2hlcmUgaW4gaXRzIG1lbW9yeSBpbWFnZSBhbmQKPiArdGhlbiByZXN0b3Jl
IGl0IGFmdGVyIG1pZ3JhdGlvbi4gVGh1cyB0byBhdm9pZCB0aGUgbmVlZCBmb3Igc3VjaCBleHBs
aWNpdAo+ICthY3Rpb24gYnkgdGhlIGd1ZXN0LCBvbmUgb3IgbW9yZSBuZXcgc2F2ZSByZWNvcmRz
IHdpbGwgYmUgcmVxdWlyZWQgdG8gbWlncmF0ZQo+ICt0aGUgY29udGVudHMgb2YgdGhlIGdyYW50
IHRhYmxlLgo+ICsKPiArIyBPdXRsaW5lIFByb3Bvc2FsCj4gKwo+ICsqIFBWIGJhY2tlbmQgZHJp
dmVycyB3aWxsIGJlIG1vZGlmaWVkIHRvIHVuaWxhdGVyYWxseSByZS1lc3RhYmxpc2ggY29ubmVj
dGlvbgo+ICt0byBhIGZyb250ZW5kIGlmIHRoZSBiYWNrZW5kIHN0YXRlIG5vZGUgaXMgcmVzdG9y
ZWQgd2l0aCB2YWx1ZSA0Cj4gKyhYZW5idXNTdGF0ZUNvbm5lY3RlZClbNl0uCgpNaXNzaW5nIG5l
d2xpbmUuCgo+ICsqIFRoZSB0b29sc3RhY2sgc2hvdWxkIGJlIG1vZGlmaWVkIHRvIGFsbG93IGRv
bWlkIHRvIGJlIHJhbmRvbWl6ZWQgb24gaW5pdGlhbAo+ICtjcmVhdGlvbiBvciBkZWZhdWx0IG1p
Z3JhdGlvbiwgYnV0IG1ha2UgaXQgaWRlbnRpY2FsIHRvIHRoZSBzb3VyY2UgZG9tYWluIG9uCj4g
K25vbi1jb29wZXJhdGl2ZSBtaWdyYXRpb24uIE5vbi1Db29wZXJhdGl2ZSBtaWdyYXRpb24gd2ls
bCBoYXZlIHRvIGJlIGRlbmllZCBpZiB0aGUKPiArZG9taWQgaXMgdW5hdmFpbGFibGUgb24gdGhl
IHRhcmdldCBob3N0LCBidXQgcmFuZG9taXphdGlvbiBvZiBkb21pZCBvbiBjcmVhdGlvbgo+ICtz
aG91bGQgaG9wZWZ1bGx5IG1pbmltaXplIHRoZSBsaWtlbGlob29kIG9mIHRoaXMuIE5vbi1Db29w
ZXJhdGl2ZSBtaWdyYXRpb24gdG8KPiArbG9jYWxob3N0IHdpbGwgY2xlYXJseSBub3QgYmUgcG9z
c2libGUuIFBhdGNoZXMgaGF2ZSBhbHJlYWR5IGJlZW4gc2VudCB0bwo+ICtgeGVuLWRldmVsYCB0
byBtYWtlIHRoaXMgY2hhbmdlWzddLgo+ICsqIGB4ZW5zdG9yZWRgIHNob3VsZCBiZSBtb2RpZmll
ZCB0byBpbXBsZW1lbnQgdGhlIG5ldyBtZWNoYW5pc21zIG5lZWRlZC4gU2VlCj4gKypPdGhlciBQ
YXJhLVZpcnR1YWwgU3RhdGUqIGFib3ZlLiBBIGZ1cnRoZXIgZGVzaWduIGRvY3VtZW50IHdpbGwg
cHJvcG9zZQo+ICthZGRpdGlvbmFsIHByb3RvY29sIG1lc3NhZ2VzLgo+ICsqIFdpdGhpbiB0aGUg
bWlncmF0aW9uIHN0cmVhbSBleHRyYSBzYXZlIHJlY29yZHMgd2lsbCBiZSBkZWZpbmVkIGFzIHJl
cXVpcmVkLgo+ICtTZWUgKk90aGVyIFBhcmEtVmlydHVhbCBTdGF0ZSogYWJvdmUuIEEgZnVydGhl
ciBkZXNpZ24gZG9jdW1lbnQgd2lsbCBwcm9wb3NlCj4gK21vZGlmaWNhdGlvbnMgdG8gdGhlIExp
YlhlbkxpZ2h0IGFuZCBMaWJYZW5DdHJsIERvbWFpbiBJbWFnZSBGb3JtYXRzLgoKTGliWGVuTGln
aHQgYW5kIExpYlhlbkN0cmwgc2hvdWxkIGJlIGZpeGVkLgoKPiArKiBBbiBvcHRpb24gc2hvdWxk
IGJlIGFkZGVkIHRvIHRoZSB0b29sc3RhY2sgdG8gaW5pdGlhdGUgYSBub24tY29vcGVyYXRpdmUK
PiArbWlncmF0aW9uLCBpbnN0ZWFkIG9mIHRoZSAoZGVmYXVsdCkgcG90ZW50aWFsbHkgY28tb3Bl
cmF0aXZlIG1pZ3JhdGlvbi4KPiArRXNzZW50aWFsbHkgdGhpcyBzaG91bGQgc2tpcCB0aGUgY2hl
Y2sgdG8gc2VlIGlmIFBWIGRyaXZlcnMgYW5kIG1pZ3JhdGUgYXMgaWYKPiArdGhlcmUgYXJlIG5v
bmUgcHJlc2VudCwgYnV0IGFsc28gZW5hYmxpbmcgdGhlIGV4dHJhIHNhdmUgcmVjb3Jkcy4gTm90
ZSB0aGF0IGF0Cj4gK2xlYXN0IHNvbWUgb2YgdGhlIGV4dHJhIHJlY29yZHMgc2hvdWxkIG9ubHkg
Zm9ybSBwYXJ0IG9mIGEgbm9uLWNvb3BlcmF0aXZlCj4gK21pZ3JhdGlvbiBzdHJlYW0uIEZvciBl
eGFtcGxlLCBtaWdyYXRpbmcgZXZlbnQgY2hhbm5lbCBzdGF0ZSB3b3VsZCBiZSBjb3VudGVyCj4g
K3Byb2R1Y3RpdmUgaW4gYSBub3JtYWwgbWlncmF0aW9uIGFzIHRoaXMgd2lsbCBlc3NlbnRpYWxs
eSBsZWFrIGV2ZW50IGNoYW5uZWwKPiArb2JqZWN0cyBhdCB0aGUgcmVjZWl2aW5nIGVuZC4gT3Ro
ZXJzLCBzdWNoIGFzIGdyYW50IHRhYmxlIHN0YXRlLCBjb3VsZAo+ICtwb3RlbnRpYWxseSBoYXJt
bGVzc2x5IGZvcm0gcGFydCBvZiBhIG5vcm1hbCBtaWdyYXRpb24gc3RyZWFtLgo+ICsKPiArKiAq
ICoKPiArWzFdIFBWIGRyaXZlcnMgYXJlIGRlZW1lZCB0byBiZSBpbnN0YWxsZWQgaWYgdGhlIEhW
TSBwYXJhbWV0ZXIKPiArKkhWTV9QQVJBTV9DQUxMQkFDS19JUlEqIGhhcyBiZWVuIHNldCB0byBh
IG5vbi16ZXJvIHZhbHVlLgoKSSB0aGluayB0aGlzIGlzIGp1c3QgYW4gYXBwcm94aW1hdGlvbiwg
YnV0IGl0IHNob3VsZCBiZSBnb29kIGVub3VnaCBpbgpwcmFjdGljZS4KCj4gKwo+ICtbMl0gU2Vl
IGh0dHBzOi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPXhlbi9p
bmNsdWRlL3B1YmxpYy9pby94ZW5idXMuaAo+ICsKPiArWzNdIFNlZSBodHRwczovL3hlbmJpdHMu
eGVuLm9yZy9naXR3ZWIvP3A9eGVuLmdpdDthPWJsb2I7Zj1kb2NzL3NwZWNzL2xpYnhjLW1pZ3Jh
dGlvbi1zdHJlYW0ucGFuZG9jCj4gKwo+ICtbNF0gU2VlIGh0dHBzOi8veGVuYml0cy54ZW4ub3Jn
L2dpdHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPWRvY3Mvc3BlY3MvbGlieGwtbWlncmF0aW9uLXN0
cmVhbS5wYW5kb2MKPiArCj4gK1s1XSBTZWUgaHR0cHM6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2Vi
Lz9wPXhlbi5naXQ7YT1ibG9iO2Y9ZG9jcy9taXNjL3hlbnN0b3JlLnR4dAo+ICsKPiArWzZdIGB4
ZW4tYmxrYmFja2AgYW5kIGB4ZW4tbmV0YmFja2AgaGF2ZSBhbHJlYWR5IGJlZW4gbW9kaWZpZWQg
aW4gTGludXggdG8gZG8KPiArdGhpcy4KPiArCj4gK1s3XSBTZWUgaHR0cHM6Ly9saXN0cy54ZW5w
cm9qZWN0Lm9yZy9hcmNoaXZlcy9odG1sL3hlbi1kZXZlbC8yMDIwLTAxL21zZzAwNjMyLmh0bWwK
PiArCj4gLS0gCj4gMi4yMC4xCj4gCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5w
cm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8v
eGVuLWRldmVs

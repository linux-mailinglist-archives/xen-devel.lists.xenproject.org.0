Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id AA681BF46B
	for <lists+xen-devel@lfdr.de>; Thu, 26 Sep 2019 15:52:02 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iDU9i-0002Bb-2i; Thu, 26 Sep 2019 13:50:02 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=njQ1=XV=intel.com=chao.gao@srs-us1.protection.inumbo.net>)
 id 1iDU9g-00027m-8T
 for xen-devel@lists.xenproject.org; Thu, 26 Sep 2019 13:50:00 +0000
X-Inumbo-ID: 80e4a5a6-e064-11e9-8628-bc764e2007e4
Received: from mga04.intel.com (unknown [192.55.52.120])
 by localhost (Halon) with ESMTPS
 id 80e4a5a6-e064-11e9-8628-bc764e2007e4;
 Thu, 26 Sep 2019 13:49:47 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Sep 2019 06:49:47 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,552,1559545200"; d="scan'208";a="189126045"
Received: from gao-cwp.sh.intel.com ([10.239.159.26])
 by fmsmga008.fm.intel.com with ESMTP; 26 Sep 2019 06:49:44 -0700
From: Chao Gao <chao.gao@intel.com>
To: xen-devel@lists.xenproject.org
Date: Thu, 26 Sep 2019 21:53:32 +0800
Message-Id: <1569506015-26938-5-git-send-email-chao.gao@intel.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1569506015-26938-1-git-send-email-chao.gao@intel.com>
References: <1569506015-26938-1-git-send-email-chao.gao@intel.com>
Subject: [Xen-devel] [PATCH v11 4/7] x86/microcode: Synchronize late
 microcode loading
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sergey Dyasli <sergey.dyasli@citrix.com>, Kevin Tian <kevin.tian@intel.com>,
 Borislav Petkov <bp@suse.de>, Ashok Raj <ashok.raj@intel.com>,
 Wei Liu <wl@xen.org>, Jun Nakajima <jun.nakajima@intel.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>, Jan Beulich <jbeulich@suse.com>,
 Thomas Gleixner <tglx@linutronix.de>, Chao Gao <chao.gao@intel.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhpcyBwYXRjaCBwb3J0cyBtaWNyb2NvZGUgaW1wcm92ZW1lbnQgcGF0Y2hlcyBmcm9tIGxpbnV4
IGtlcm5lbC4KCkJlZm9yZSB5b3UgcmVhZCBhbnkgZnVydGhlcjogdGhlIGVhcmx5IGxvYWRpbmcg
bWV0aG9kIGlzIHN0aWxsIHRoZQpwcmVmZXJyZWQgb25lIGFuZCB5b3Ugc2hvdWxkIGFsd2F5cyBk
byB0aGF0LiBUaGUgZm9sbG93aW5nIHBhdGNoIGlzCmltcHJvdmluZyB0aGUgbGF0ZSBsb2FkaW5n
IG1lY2hhbmlzbSBmb3IgbG9uZyBydW5uaW5nIGpvYnMgYW5kIGNsb3VkIHVzZQpjYXNlcy4KCkdh
dGhlciBhbGwgY29yZXMgYW5kIHNlcmlhbGl6ZSB0aGUgbWljcm9jb2RlIHVwZGF0ZSBvbiB0aGVt
IGJ5IGRvaW5nIGl0Cm9uZS1ieS1vbmUgdG8gbWFrZSB0aGUgbGF0ZSB1cGRhdGUgcHJvY2VzcyBh
cyByZWxpYWJsZSBhcyBwb3NzaWJsZSBhbmQKYXZvaWQgcG90ZW50aWFsIGlzc3VlcyBjYXVzZWQg
YnkgdGhlIG1pY3JvY29kZSB1cGRhdGUuCgpTaWduZWQtb2ZmLWJ5OiBDaGFvIEdhbyA8Y2hhby5n
YW9AaW50ZWwuY29tPgpUZXN0ZWQtYnk6IENoYW8gR2FvIDxjaGFvLmdhb0BpbnRlbC5jb20+Clts
aW51eCBjb21taXQ6IGE1MzIxYWVjNjQxMmIyMGI1YWQxNWRiMmQ2YjkxNmMwNTM0OWRiZmZdClts
aW51eCBjb21taXQ6IGJiOGMxM2Q2MWE2MjkyNzZhMTYyYzFkMmIxYTIwYTgxNWNiY2ZiYjddCkNj
OiBLZXZpbiBUaWFuIDxrZXZpbi50aWFuQGludGVsLmNvbT4KQ2M6IEp1biBOYWthamltYSA8anVu
Lm5ha2FqaW1hQGludGVsLmNvbT4KQ2M6IEFzaG9rIFJhaiA8YXNob2sucmFqQGludGVsLmNvbT4K
Q2M6IEJvcmlzbGF2IFBldGtvdiA8YnBAc3VzZS5kZT4KQ2M6IFRob21hcyBHbGVpeG5lciA8dGds
eEBsaW51dHJvbml4LmRlPgpDYzogQW5kcmV3IENvb3BlciA8YW5kcmV3LmNvb3BlcjNAY2l0cml4
LmNvbT4KQ2M6IEphbiBCZXVsaWNoIDxqYmV1bGljaEBzdXNlLmNvbT4KLS0tCkNoYW5nZXMgaW4g
djExOgogLSBVc2UgdGhlIHNhbXBsZSBjb2RlIG9mIHdhaXRfZm9yX3N0YXRlKCkgcHJvdmlkZWQg
YnkgSmFuCiAtIG1ha2Ugd2FpdF9jcHVfY2FsbHtpbixvdXR9IHRha2UgdW5zaWduZWQgaW50IHRv
IGF2b2lkIHR5cGUgY2FzdGluZwogLSBkbyBhc3NpZ25tZW50IGluIHdoaWxlIGNsYXVzZSBpbiBj
b250cm9sX3RocmVhZF9mbigpIHRvIGVsaW1pbmF0ZQogZHVwbGljYXRpb24uCgpDaGFuZ2VzIGlu
IHYxMDoKIC0gaW50cm9kdWNlIHdhaXRfZm9yX3N0YXRlKCkgYW5kIHNldF9zdGF0ZSgpIGhlbHBl
ciBmdW5jdGlvbnMKIC0gbWFrZSB3YWl0X2Zvcl9jb25kaXRpb24oKSByZXR1cm4gYm9vbCBhbmQg
dGFrZSBjb25zdCB2b2lkICoKIC0gZGlzYWJsZS9lbmFibGUgd2F0Y2hkb2cgaW4gY29udHJvbCB0
aHJlYWQKIC0gcmVuYW1lICJtYXN0ZXIiIGFuZCAic2xhdmUiIHRocmVhZCB0byAicHJpbWFyeSIg
YW5kICJzZWNvbmRhcnkiCgpDaGFuZ2VzIGluIHY5OgogLSBsb2cgX19idWlsZGluX3JldHVybl9h
ZGRyZXNzKDApIHdoZW4gdGltZW91dAogLSBkaXZpZGUgQ1BVcyBpbnRvIHRocmVlIGxvZ2ljYWwg
c2V0cyBhbmQgdGhleSB3aWxsIGNhbGwgZGlmZmVyZW50CiBmdW5jdGlvbnMgZHVyaW5nIHVjb2Rl
IGxvYWRpbmcuIFRoZSAnY29udHJvbCB0aHJlYWQnIGlzIGNob3NlbiB0bwogY29vcmRpbmF0ZSB1
Y29kZSBsb2FkaW5nIG9uIGFsbCBDUFVzLiBTaW5jZSBvbmx5IGNvbnRyb2wgdGhyZWFkIHdvdWxk
CiBzZXQgJ2xvYWRpbmdfc3RhdGUnLCB3ZSBjYW4gZ2V0IHJpZCBvZiAnY21weGNoZycgc3R1ZmYg
aW4gdjguCiAtIHMvcmVwX25vcC9jcHVfcmVsYXgKIC0gZWFjaCB0aHJlYWQgdXBkYXRlcyBpdHMg
cmV2aXNpb24gbnVtYmVyIGl0c2VsZgogLSBhZGQgWEVOTE9HX0VSUiBwcmVmaXggZm9yIGVhY2gg
bGluZSBvZiBtdWx0aS1saW5lIGxvZyBtZXNzYWdlcwoKQ2hhbmdlcyBpbiB2ODoKIC0gdG8gc3Vw
cG9ydCBibG9ja2luZyAjTk1JIGhhbmRsaW5nIGR1cmluZyBsb2FkaW5nIHVjb2RlCiAgICogaW50
cm9kdWNlIGEgZmxhZywgJ2xvYWRpbmdfc3RhdGUnLCB0byBtYXJrIHRoZSBzdGFydCBvciBlbmQg
b2YKICAgICB1Y29kZSBsb2FkaW5nLgogICAqIHVzZSBhIGJpdG1hcCBmb3IgY3B1IGNhbGxpbiBz
aW5jZSBpZiBjcHUgbWF5IHN0YXkgaW4gI05NSSBoYW5kbGluZywKICAgICB0aGVyZSBhcmUgdHdv
IHBsYWNlcyBmb3IgYSBjcHUgdG8gY2FsbCBpbi4gYml0bWFwIHdvbid0IGJlIGNvdW50ZWQKICAg
ICB0d2ljZS4KICAgKiBkb24ndCB3YWl0IGZvciBhbGwgQ1BVcyBjYWxsb3V0LCBqdXN0IHdhaXQg
Zm9yIENQVXMgdGhhdCBwZXJmb3JtIHRoZQogICAgIHVwZGF0ZS4gV2UgaGF2ZSB0byBkbyB0aGlz
IGJlY2F1c2Ugc29tZSB0aHJlYWRzIG1heSBiZSBzdHVjayBpbiBOTUkKICAgICBoYW5kbGluZyAo
d2hlcmUgY2Fubm90IHJlYWNoIHRoZSByZW5kZXp2b3VzKS4KIC0gZW1pdCBhIHdhcm5pbmcgaWYg
dGhlIHN5c3RlbSBzdGF5cyBpbiBzdG9wX21hY2hpbmUgY29udGV4dCBmb3IgbW9yZQogdGhhbiAx
cwogLSBjb21tZW50IHRoYXQgcmR0c2MgaXMgZmluZSB3aGlsZSBsb2FkaW5nIGFuIHVwZGF0ZQog
LSB1c2UgY21weGNoZygpIHRvIGF2b2lkIHBhbmljIGJlaW5nIGNhbGxlZCBvbiBtdWx0aXBsZSBD
UFVzCiAtIFByb3BhZ2F0ZSByZXZpc2lvbiBudW1iZXIgdG8gb3RoZXIgdGhyZWFkcwogLSByZWZp
bmUgY29tbWVudHMgYW5kIHByb21wdCBtZXNzYWdlcwoKQ2hhbmdlcyBpbiB2NzoKIC0gQ2hlY2sg
d2hldGhlciAndGltZW91dCcgaXMgMCByYXRoZXIgdGhhbiAiPD0wIiBzaW5jZSBpdCBpcyB1bnNp
Z25lZCBpbnQuCiAtIHJld29yZCB0aGUgY29tbWVudCBhYm92ZSBtaWNyb2NvZGVfdXBkYXRlX2Nw
dSgpIHRvIGNsZWFybHkgc3RhdGUgdGhhdAogb25lIHRocmVhZCBwZXIgY29yZSBzaG91bGQgZG8g
dGhlIHVwZGF0ZS4KLS0tCiB4ZW4vYXJjaC94ODYvbWljcm9jb2RlLmMgfCAyOTcgKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAy
NjcgaW5zZXJ0aW9ucygrKSwgMzAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEveGVuL2FyY2gv
eDg2L21pY3JvY29kZS5jIGIveGVuL2FyY2gveDg2L21pY3JvY29kZS5jCmluZGV4IDljMGU1YzQu
LjZjMjM4NzkgMTAwNjQ0Ci0tLSBhL3hlbi9hcmNoL3g4Ni9taWNyb2NvZGUuYworKysgYi94ZW4v
YXJjaC94ODYvbWljcm9jb2RlLmMKQEAgLTMwLDE4ICszMCw1MiBAQAogI2luY2x1ZGUgPHhlbi9z
bXAuaD4KICNpbmNsdWRlIDx4ZW4vc29mdGlycS5oPgogI2luY2x1ZGUgPHhlbi9zcGlubG9jay5o
PgorI2luY2x1ZGUgPHhlbi9zdG9wX21hY2hpbmUuaD4KICNpbmNsdWRlIDx4ZW4vdGFza2xldC5o
PgogI2luY2x1ZGUgPHhlbi9ndWVzdF9hY2Nlc3MuaD4KICNpbmNsdWRlIDx4ZW4vZWFybHljcGlv
Lmg+CisjaW5jbHVkZSA8eGVuL3dhdGNoZG9nLmg+CiAKKyNpbmNsdWRlIDxhc20vZGVsYXkuaD4K
ICNpbmNsdWRlIDxhc20vbXNyLmg+CiAjaW5jbHVkZSA8YXNtL3Byb2Nlc3Nvci5oPgogI2luY2x1
ZGUgPGFzbS9zZXR1cC5oPgogI2luY2x1ZGUgPGFzbS9taWNyb2NvZGUuaD4KIAorLyoKKyAqIEJl
Zm9yZSBwZXJmb3JtaW5nIGEgbGF0ZSBtaWNyb2NvZGUgdXBkYXRlIG9uIGFueSB0aHJlYWQsIHdl
CisgKiByZW5kZXp2b3VzIGFsbCBjcHVzIGluIHN0b3BfbWFjaGluZSBjb250ZXh0LiBUaGUgdGlt
ZW91dCBmb3IKKyAqIHdhaXRpbmcgZm9yIGNwdSByZW5kZXp2b3VzIGlzIDMwbXMuIEl0IGlzIHRo
ZSB0aW1lb3V0IHVzZWQgYnkKKyAqIGxpdmUgcGF0Y2hpbmcKKyAqLworI2RlZmluZSBNSUNST0NP
REVfQ0FMTElOX1RJTUVPVVRfVVMgMzAwMDAKKworLyoKKyAqIFRpbWVvdXQgZm9yIGVhY2ggdGhy
ZWFkIHRvIGNvbXBsZXRlIHVwZGF0ZSBpcyBzZXQgdG8gMXMuIEl0IGlzIGEKKyAqIGNvbnNlcnZh
dGl2ZSBjaG9pY2UgY29uc2lkZXJpbmcgYWxsIHBvc3NpYmxlIGludGVyZmVyZW5jZS4KKyAqLwor
I2RlZmluZSBNSUNST0NPREVfVVBEQVRFX1RJTUVPVVRfVVMgMTAwMDAwMAorCiBzdGF0aWMgbW9k
dWxlX3QgX19pbml0ZGF0YSB1Y29kZV9tb2Q7CiBzdGF0aWMgc2lnbmVkIGludCBfX2luaXRkYXRh
IHVjb2RlX21vZF9pZHg7CiBzdGF0aWMgYm9vbF90IF9faW5pdGRhdGEgdWNvZGVfbW9kX2ZvcmNl
ZDsKK3N0YXRpYyB1bnNpZ25lZCBpbnQgbnJfY29yZXM7CisKKy8qCisgKiBUaGVzZSBzdGF0ZXMg
aGVscCB0byBjb29yZGluYXRlIENQVXMgZHVyaW5nIGxvYWRpbmcgYW4gdXBkYXRlLgorICoKKyAq
IFRoZSBzZW1hbnRpY3Mgb2YgZWFjaCBzdGF0ZSBpcyBhcyBmb2xsb3c6CisgKiAgLSBMT0FESU5H
X1BSRVBBUkU6IGluaXRpYWwgc3RhdGUgb2YgJ2xvYWRpbmdfc3RhdGUnLgorICogIC0gTE9BRElO
R19DQUxMSU46IENQVXMgYXJlIGFsbG93ZWQgdG8gY2FsbGluLgorICogIC0gTE9BRElOR19FTlRF
UjogYWxsIENQVXMgaGF2ZSBjYWxsZWQgaW4uIEluaXRpYXRlIHVjb2RlIGxvYWRpbmcuCisgKiAg
LSBMT0FESU5HX0VYSVQ6IHVjb2RlIGxvYWRpbmcgaXMgZG9uZSBvciBhYm9ydGVkLgorICovCitz
dGF0aWMgZW51bSB7CisgICAgTE9BRElOR19QUkVQQVJFLAorICAgIExPQURJTkdfQ0FMTElOLAor
ICAgIExPQURJTkdfRU5URVIsCisgICAgTE9BRElOR19FWElULAorfSBsb2FkaW5nX3N0YXRlOwog
CiAvKgogICogSWYgd2Ugc2NhbiB0aGUgaW5pdHJhbWZzLmNwaW8gZm9yIHRoZSBlYXJseSBtaWNy
b2NvZGUgY29kZQpAQCAtMTkwLDYgKzIyNCwxNiBAQCBzdGF0aWMgREVGSU5FX1NQSU5MT0NLKG1p
Y3JvY29kZV9tdXRleCk7CiBERUZJTkVfUEVSX0NQVShzdHJ1Y3QgY3B1X3NpZ25hdHVyZSwgY3B1
X3NpZyk7CiAKIC8qCisgKiBDb3VudCB0aGUgQ1BVcyB0aGF0IGhhdmUgZW50ZXJlZCwgZXhpdGVk
IHRoZSByZW5kZXp2b3VzIGFuZCBzdWNjZWVkZWQgaW4KKyAqIG1pY3JvY29kZSB1cGRhdGUgZHVy
aW5nIGxhdGUgbWljcm9jb2RlIHVwZGF0ZSByZXNwZWN0aXZlbHkuCisgKgorICogTm90ZSB0aGF0
IGEgYml0bWFwIGlzIHVzZWQgZm9yIGNhbGxpbiB0byBhbGxvdyBjcHUgdG8gc2V0IGEgYml0IG11
bHRpcGxlCisgKiB0aW1lcy4gSXQgaXMgcmVxdWlyZWQgdG8gZG8gYnVzeS1sb29wIGluICNOTUkg
aGFuZGxpbmcuCisgKi8KK3N0YXRpYyBjcHVtYXNrX3QgY3B1X2NhbGxpbl9tYXA7CitzdGF0aWMg
YXRvbWljX3QgY3B1X291dCwgY3B1X3VwZGF0ZWQ7CisKKy8qCiAgKiBSZXR1cm4gYSBwYXRjaCB0
aGF0IGNvdmVycyBjdXJyZW50IENQVS4gSWYgdGhlcmUgYXJlIG11bHRpcGxlIHBhdGNoZXMsCiAg
KiByZXR1cm4gdGhlIG9uZSB3aXRoIHRoZSBoaWdoZXN0IHJldmlzaW9uIG51bWJlci4gUmV0dXJu
IGVycm9yIElmIG5vCiAgKiBwYXRjaCBpcyBmb3VuZCBhbmQgYW4gZXJyb3Igb2NjdXJzIGR1cmlu
ZyB0aGUgcGFyc2luZyBwcm9jZXNzLiBPdGhlcndpc2UKQEAgLTIzMSw2ICsyNzUsMzQgQEAgc3Rh
dGljIGJvb2wgbWljcm9jb2RlX3VwZGF0ZV9jYWNoZShzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpw
YXRjaCkKICAgICByZXR1cm4gdHJ1ZTsKIH0KIAorLyogV2FpdCBmb3IgYSBjb25kaXRpb24gdG8g
YmUgbWV0IHdpdGggYSB0aW1lb3V0ICh1cykuICovCitzdGF0aWMgaW50IHdhaXRfZm9yX2NvbmRp
dGlvbihib29sICgqZnVuYykodW5zaWduZWQgaW50IGRhdGEpLAorICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgdW5zaWduZWQgaW50IGRhdGEsIHVuc2lnbmVkIGludCB0aW1lb3V0KQorewor
ICAgIHdoaWxlICggIWZ1bmMoZGF0YSkgKQorICAgIHsKKyAgICAgICAgaWYgKCAhdGltZW91dC0t
ICkKKyAgICAgICAgeworICAgICAgICAgICAgcHJpbnRrKCJDUFUldTogVGltZW91dCBpbiAlcFNc
biIsCisgICAgICAgICAgICAgICAgICAgc21wX3Byb2Nlc3Nvcl9pZCgpLCBfX2J1aWx0aW5fcmV0
dXJuX2FkZHJlc3MoMCkpOworICAgICAgICAgICAgcmV0dXJuIC1FQlVTWTsKKyAgICAgICAgfQor
ICAgICAgICB1ZGVsYXkoMSk7CisgICAgfQorCisgICAgcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBi
b29sIHdhaXRfY3B1X2NhbGxpbih1bnNpZ25lZCBpbnQgbnIpCit7CisgICAgcmV0dXJuIGNwdW1h
c2tfd2VpZ2h0KCZjcHVfY2FsbGluX21hcCkgPj0gbnI7Cit9CisKK3N0YXRpYyBib29sIHdhaXRf
Y3B1X2NhbGxvdXQodW5zaWduZWQgaW50IG5yKQoreworICAgIHJldHVybiBhdG9taWNfcmVhZCgm
Y3B1X291dCkgPj0gbnI7Cit9CisKIC8qCiAgKiBMb2FkIGEgbWljcm9jb2RlIHVwZGF0ZSB0byBj
dXJyZW50IENQVS4KICAqCkBAIC0yNjQsNDAgKzMzNiwxNTAgQEAgc3RhdGljIGludCBtaWNyb2Nv
ZGVfdXBkYXRlX2NwdShjb25zdCBzdHJ1Y3QgbWljcm9jb2RlX3BhdGNoICpwYXRjaCkKICAgICBy
ZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgbG9uZyBkb19taWNyb2NvZGVfdXBkYXRlKHZvaWQgKnBh
dGNoKQorc3RhdGljIGJvb2wgd2FpdF9mb3Jfc3RhdGUodHlwZW9mKGxvYWRpbmdfc3RhdGUpIHN0
YXRlKQogewotICAgIHVuc2lnbmVkIGludCBjcHU7Ci0gICAgaW50IHJldCA9IG1pY3JvY29kZV91
cGRhdGVfY3B1KHBhdGNoKTsKKyAgICB0eXBlb2YobG9hZGluZ19zdGF0ZSkgY3VyX3N0YXRlOwog
Ci0gICAgLyogU3RvcmUgdGhlIHBhdGNoIGFmdGVyIGEgc3VjY2Vzc2Z1bCBsb2FkaW5nICovCi0g
ICAgaWYgKCAhcmV0ICYmIHBhdGNoICkKKyAgICB3aGlsZSAoIChjdXJfc3RhdGUgPSBBQ0NFU1Nf
T05DRShsb2FkaW5nX3N0YXRlKSkgIT0gc3RhdGUgKQogICAgIHsKLSAgICAgICAgc3Bpbl9sb2Nr
KCZtaWNyb2NvZGVfbXV0ZXgpOwotICAgICAgICBtaWNyb2NvZGVfdXBkYXRlX2NhY2hlKHBhdGNo
KTsKLSAgICAgICAgc3Bpbl91bmxvY2soJm1pY3JvY29kZV9tdXRleCk7Ci0gICAgICAgIHBhdGNo
ID0gTlVMTDsKKyAgICAgICAgaWYgKCBjdXJfc3RhdGUgPT0gTE9BRElOR19FWElUICkKKyAgICAg
ICAgICAgIHJldHVybiBmYWxzZTsKKyAgICAgICAgY3B1X3JlbGF4KCk7CiAgICAgfQogCi0gICAg
aWYgKCBtaWNyb2NvZGVfb3BzLT5lbmRfdXBkYXRlX3BlcmNwdSApCi0gICAgICAgIG1pY3JvY29k
ZV9vcHMtPmVuZF91cGRhdGVfcGVyY3B1KCk7CisgICAgcmV0dXJuIHRydWU7Cit9CisKK3N0YXRp
YyB2b2lkIHNldF9zdGF0ZSh1bnNpZ25lZCBpbnQgc3RhdGUpCit7CisgICAgbG9hZGluZ19zdGF0
ZSA9IHN0YXRlOworICAgIHNtcF93bWIoKTsKK30KKworc3RhdGljIGludCBzZWNvbmRhcnlfdGhy
ZWFkX2ZuKHZvaWQpCit7CisgICAgdW5zaWduZWQgaW50IHByaW1hcnkgPSBjcHVtYXNrX2ZpcnN0
KHRoaXNfY3B1KGNwdV9zaWJsaW5nX21hc2spKTsKKworICAgIGlmICggIXdhaXRfZm9yX3N0YXRl
KExPQURJTkdfQ0FMTElOKSApCisgICAgICAgIHJldHVybiAtRUJVU1k7CisKKyAgICBjcHVtYXNr
X3NldF9jcHUoc21wX3Byb2Nlc3Nvcl9pZCgpLCAmY3B1X2NhbGxpbl9tYXApOworCisgICAgaWYg
KCAhd2FpdF9mb3Jfc3RhdGUoTE9BRElOR19FWElUKSApCisgICAgICAgIHJldHVybiAtRUJVU1k7
CisKKyAgICAvKiBDb3B5IHVwZGF0ZSByZXZpc2lvbiBmcm9tIHRoZSBwcmltYXJ5IHRocmVhZC4g
Ki8KKyAgICB0aGlzX2NwdShjcHVfc2lnKS5yZXYgPSBwZXJfY3B1KGNwdV9zaWcsIHByaW1hcnkp
LnJldjsKKworICAgIHJldHVybiAwOworfQorCitzdGF0aWMgaW50IHByaW1hcnlfdGhyZWFkX2Zu
KGNvbnN0IHN0cnVjdCBtaWNyb2NvZGVfcGF0Y2ggKnBhdGNoKQoreworICAgIGludCByZXQgPSAw
OworCisgICAgaWYgKCAhd2FpdF9mb3Jfc3RhdGUoTE9BRElOR19DQUxMSU4pICkKKyAgICAgICAg
cmV0dXJuIC1FQlVTWTsKKworICAgIGNwdW1hc2tfc2V0X2NwdShzbXBfcHJvY2Vzc29yX2lkKCks
ICZjcHVfY2FsbGluX21hcCk7CisKKyAgICBpZiAoICF3YWl0X2Zvcl9zdGF0ZShMT0FESU5HX0VO
VEVSKSApCisgICAgICAgIHJldHVybiAtRUJVU1k7CisKKyAgICByZXQgPSBtaWNyb2NvZGVfb3Bz
LT5hcHBseV9taWNyb2NvZGUocGF0Y2gpOworICAgIGlmICggIXJldCApCisgICAgICAgIGF0b21p
Y19pbmMoJmNwdV91cGRhdGVkKTsKKyAgICBhdG9taWNfaW5jKCZjcHVfb3V0KTsKKworICAgIHJl
dHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgY29udHJvbF90aHJlYWRfZm4oY29uc3Qgc3RydWN0
IG1pY3JvY29kZV9wYXRjaCAqcGF0Y2gpCit7CisgICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9w
cm9jZXNzb3JfaWQoKSwgZG9uZTsKKyAgICB1bnNpZ25lZCBsb25nIHRpY2s7CisgICAgaW50IHJl
dDsKIAogICAgIC8qCi0gICAgICogRWFjaCB0aHJlYWQgdHJpZXMgdG8gbG9hZCB1Y29kZS4gT25s
eSB0aGUgZmlyc3QgdGhyZWFkIG9mIGEgY29yZQotICAgICAqIHdvdWxkIHN1Y2NlZWQgd2hpbGUg
b3RoZXIgdGhyZWFkcyB3b3VsZCBlbmNvdW50ZXIgLUVJTlZBTCB3aGljaAotICAgICAqIGluZGlj
YXRlcyBjdXJyZW50IHVjb2RlIHJldmlzaW9uIGlzIGVxdWFsIHRvIG9yIG5ld2VyIHRoYW4gdGhl
Ci0gICAgICogZ2l2ZW4gcGF0Y2guIEl0IGlzIGFjdHVhbGx5IGV4cGVjdGVkOyBzbyBpZ25vcmUg
dGhpcyBlcnJvci4KKyAgICAgKiBXZSBpbnRlbmQgdG8ga2VlcCBpbnRlcnJ1cHQgZGlzYWJsZWQg
Zm9yIGEgbG9uZyB0aW1lLCB3aGljaCBtYXkgbGVhZCB0bworICAgICAqIHdhdGNoZG9nIHRpbWVv
dXQuCiAgICAgICovCi0gICAgaWYgKCByZXQgPT0gLUVJTlZBTCApCi0gICAgICAgIHJldCA9IDA7
CisgICAgd2F0Y2hkb2dfZGlzYWJsZSgpOwogCi0gICAgY3B1ID0gY3B1bWFza19uZXh0KHNtcF9w
cm9jZXNzb3JfaWQoKSwgJmNwdV9vbmxpbmVfbWFwKTsKLSAgICBpZiAoIGNwdSA8IG5yX2NwdV9p
ZHMgKQotICAgICAgICByZXR1cm4gY29udGludWVfaHlwZXJjYWxsX29uX2NwdShjcHUsIGRvX21p
Y3JvY29kZV91cGRhdGUsIHBhdGNoKSA/OgotICAgICAgICAgICAgICAgcmV0OworICAgIC8qIEFs
bG93IHRocmVhZHMgdG8gY2FsbCBpbiAqLworICAgIHNldF9zdGF0ZShMT0FESU5HX0NBTExJTik7
CiAKLSAgICAvKiBGcmVlIHRoZSBwYXRjaCBpZiBubyBDUFUgaGFzIGxvYWRlZCBpdCBzdWNjZXNz
ZnVsbHkuICovCi0gICAgaWYgKCBwYXRjaCApCi0gICAgICAgIG1pY3JvY29kZV9mcmVlX3BhdGNo
KHBhdGNoKTsKKyAgICBjcHVtYXNrX3NldF9jcHUoY3B1LCAmY3B1X2NhbGxpbl9tYXApOworCisg
ICAgLyogV2FpdGluZyBmb3IgYWxsIHRocmVhZHMgY2FsbGluZyBpbiAqLworICAgIHJldCA9IHdh
aXRfZm9yX2NvbmRpdGlvbih3YWl0X2NwdV9jYWxsaW4sIG51bV9vbmxpbmVfY3B1cygpLAorICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBNSUNST0NPREVfQ0FMTElOX1RJTUVPVVRfVVMpOwor
ICAgIGlmICggcmV0ICkKKyAgICB7CisgICAgICAgIHNldF9zdGF0ZShMT0FESU5HX0VYSVQpOwor
ICAgICAgICByZXR1cm4gcmV0OworICAgIH0KKworICAgIC8qIExldCBwcmltYXJ5IHRocmVhZHMg
bG9hZCB0aGUgZ2l2ZW4gdWNvZGUgdXBkYXRlICovCisgICAgc2V0X3N0YXRlKExPQURJTkdfRU5U
RVIpOworCisgICAgcmV0ID0gbWljcm9jb2RlX29wcy0+YXBwbHlfbWljcm9jb2RlKHBhdGNoKTsK
KyAgICBpZiAoICFyZXQgKQorICAgICAgICBhdG9taWNfaW5jKCZjcHVfdXBkYXRlZCk7CisgICAg
YXRvbWljX2luYygmY3B1X291dCk7CisKKyAgICB0aWNrID0gcmR0c2Nfb3JkZXJlZCgpOworICAg
IC8qIFdhaXQgZm9yIHByaW1hcnkgdGhyZWFkcyBmaW5pc2hpbmcgdXBkYXRlICovCisgICAgd2hp
bGUgKCAoZG9uZSA9IGF0b21pY19yZWFkKCZjcHVfb3V0KSkgIT0gbnJfY29yZXMgKQorICAgIHsK
KyAgICAgICAgLyoKKyAgICAgICAgICogRHVyaW5nIGVhY2ggdGltZW91dCBpbnRlcnZhbCwgYXQg
bGVhc3QgYSBDUFUgaXMgZXhwZWN0ZWQgdG8KKyAgICAgICAgICogZmluaXNoIGl0cyB1cGRhdGUu
IE90aGVyd2lzZSwgc29tZXRoaW5nIGdvZXMgd3JvbmcuCisgICAgICAgICAqCisgICAgICAgICAq
IE5vdGUgdGhhdCBSRFRTQyAoaW4gd2FpdF9mb3JfY29uZGl0aW9uKCkpIGlzIHNhZmUgZm9yIHRo
cmVhZHMgdG8KKyAgICAgICAgICogZXhlY3V0ZSB3aGlsZSB3YWl0aW5nIGZvciBjb21wbGV0aW9u
IG9mIGxvYWRpbmcgYW4gdXBkYXRlLgorICAgICAgICAgKi8KKyAgICAgICAgaWYgKCB3YWl0X2Zv
cl9jb25kaXRpb24od2FpdF9jcHVfY2FsbG91dCwgKGRvbmUgKyAxKSwKKyAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgTUlDUk9DT0RFX1VQREFURV9USU1FT1VUX1VTKSApCisgICAgICAg
ICAgICBwYW5pYygiVGltZW91dCB3aGVuIGZpbmlzaGVkIHVwZGF0aW5nIG1pY3JvY29kZSAoZmlu
aXNoZWQgJXUvJXUpIiwKKyAgICAgICAgICAgICAgICAgIGRvbmUsIG5yX2NvcmVzKTsKKworICAg
ICAgICAvKiBQcmludCB3YXJuaW5nIG1lc3NhZ2Ugb25jZSBpZiBsb25nIHRpbWUgaXMgc3BlbnQg
aGVyZSAqLworICAgICAgICBpZiAoIHRpY2sgJiYgcmR0c2Nfb3JkZXJlZCgpIC0gdGljayA+PSBj
cHVfa2h6ICogMTAwMCApCisgICAgICAgIHsKKyAgICAgICAgICAgIHByaW50ayhYRU5MT0dfV0FS
TklORworICAgICAgICAgICAgICAgICAgICJXQVJOSU5HOiBVUERBVElORyBNSUNST0NPREUgSEFT
IENPTlNVTUVEIE1PUkUgVEhBTiAxIFNFQ09ORCFcbiIpOworICAgICAgICAgICAgdGljayA9IDA7
CisgICAgICAgIH0KKyAgICB9CisKKyAgICAvKiBNYXJrIGxvYWRpbmcgaXMgZG9uZSB0byB1bmJs
b2NrIG90aGVyIHRocmVhZHMgKi8KKyAgICBzZXRfc3RhdGUoTE9BRElOR19FWElUKTsKKworICAg
IHdhdGNoZG9nX2VuYWJsZSgpOworCisgICAgcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBk
b19taWNyb2NvZGVfdXBkYXRlKHZvaWQgKnBhdGNoKQoreworICAgIHVuc2lnbmVkIGludCBjcHUg
PSBzbXBfcHJvY2Vzc29yX2lkKCk7CisgICAgaW50IHJldDsKKworICAgIC8qCisgICAgICogVGhl
IGNvbnRyb2wgdGhyZWFkIHNldCBzdGF0ZSB0byBjb29yZGluYXRlIHVjb2RlIGxvYWRpbmcuIFBy
aW1hcnkKKyAgICAgKiB0aHJlYWRzIGxvYWQgdGhlIGdpdmVuIHVjb2RlIHBhdGNoLiBTZWNvbmRh
cnkgdGhyZWFkcyBqdXN0IHdhaXQgZm9yCisgICAgICogdGhlIGNvbXBsZXRpb24gb2YgdGhlIHVj
b2RlIGxvYWRpbmcgcHJvY2Vzcy4KKyAgICAgKi8KKyAgICBpZiAoIGNwdSA9PSBjcHVtYXNrX2Zp
cnN0KCZjcHVfb25saW5lX21hcCkgKQorICAgICAgICByZXQgPSBjb250cm9sX3RocmVhZF9mbihw
YXRjaCk7CisgICAgZWxzZSBpZiAoIGNwdSA9PSBjcHVtYXNrX2ZpcnN0KHRoaXNfY3B1KGNwdV9z
aWJsaW5nX21hc2spKSApCisgICAgICAgIHJldCA9IHByaW1hcnlfdGhyZWFkX2ZuKHBhdGNoKTsK
KyAgICBlbHNlCisgICAgICAgIHJldCA9IHNlY29uZGFyeV90aHJlYWRfZm4oKTsKKworICAgIGlm
ICggbWljcm9jb2RlX29wcy0+ZW5kX3VwZGF0ZV9wZXJjcHUgKQorICAgICAgICBtaWNyb2NvZGVf
b3BzLT5lbmRfdXBkYXRlX3BlcmNwdSgpOwogCiAgICAgcmV0dXJuIHJldDsKIH0KQEAgLTMwNiw2
ICs0ODgsNyBAQCBpbnQgbWljcm9jb2RlX3VwZGF0ZShYRU5fR1VFU1RfSEFORExFX1BBUkFNKGNv
bnN0X3ZvaWQpIGJ1ZiwgdW5zaWduZWQgbG9uZyBsZW4pCiB7CiAgICAgaW50IHJldDsKICAgICB2
b2lkICpidWZmZXI7CisgICAgdW5zaWduZWQgaW50IGNwdSwgdXBkYXRlZDsKICAgICBzdHJ1Y3Qg
bWljcm9jb2RlX3BhdGNoICpwYXRjaDsKIAogICAgIGlmICggbGVuICE9ICh1aW50MzJfdClsZW4g
KQpAQCAtMzI1LDMwICs1MDgsODQgQEAgaW50IG1pY3JvY29kZV91cGRhdGUoWEVOX0dVRVNUX0hB
TkRMRV9QQVJBTShjb25zdF92b2lkKSBidWYsIHVuc2lnbmVkIGxvbmcgbGVuKQogICAgICAgICBy
ZXR1cm4gLUVGQVVMVDsKICAgICB9CiAKKyAgICAvKiBjcHVfb25saW5lX21hcCBtdXN0IG5vdCBj
aGFuZ2UgZHVyaW5nIHVwZGF0ZSAqLworICAgIGlmICggIWdldF9jcHVfbWFwcygpICkKKyAgICB7
CisgICAgICAgIHhmcmVlKGJ1ZmZlcik7CisgICAgICAgIHJldHVybiAtRUJVU1k7CisgICAgfQor
CiAgICAgcGF0Y2ggPSBwYXJzZV9ibG9iKGJ1ZmZlciwgbGVuKTsKICAgICB4ZnJlZShidWZmZXIp
OwogICAgIGlmICggSVNfRVJSKHBhdGNoKSApCiAgICAgewogICAgICAgICByZXQgPSBQVFJfRVJS
KHBhdGNoKTsKICAgICAgICAgcHJpbnRrKFhFTkxPR19XQVJOSU5HICJQYXJzaW5nIG1pY3JvY29k
ZSBibG9iIGVycm9yICVkXG4iLCByZXQpOwotICAgICAgICByZXR1cm4gcmV0OworICAgICAgICBn
b3RvIHB1dDsKICAgICB9CiAKICAgICBpZiAoICFwYXRjaCApCi0gICAgICAgIHJldHVybiAtRU5P
RU5UOworICAgIHsKKyAgICAgICAgcmV0ID0gLUVOT0VOVDsKKyAgICAgICAgZ290byBwdXQ7Cisg
ICAgfQogCiAgICAgaWYgKCBtaWNyb2NvZGVfb3BzLT5zdGFydF91cGRhdGUgKQogICAgIHsKICAg
ICAgICAgcmV0ID0gbWljcm9jb2RlX29wcy0+c3RhcnRfdXBkYXRlKCk7Ci0gICAgICAgIGlmICgg
cmV0ICE9IDAgKQorICAgICAgICBpZiAoIHJldCApCiAgICAgICAgIHsKICAgICAgICAgICAgIG1p
Y3JvY29kZV9mcmVlX3BhdGNoKHBhdGNoKTsKLSAgICAgICAgICAgIHJldHVybiByZXQ7CisgICAg
ICAgICAgICBnb3RvIHB1dDsKICAgICAgICAgfQogICAgIH0KIAotICAgIHJldHVybiBjb250aW51
ZV9oeXBlcmNhbGxfb25fY3B1KGNwdW1hc2tfZmlyc3QoJmNwdV9vbmxpbmVfbWFwKSwKLSAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb19taWNyb2NvZGVfdXBkYXRlLCBwYXRj
aCk7CisgICAgY3B1bWFza19jbGVhcigmY3B1X2NhbGxpbl9tYXApOworICAgIGF0b21pY19zZXQo
JmNwdV9vdXQsIDApOworICAgIGF0b21pY19zZXQoJmNwdV91cGRhdGVkLCAwKTsKKyAgICBsb2Fk
aW5nX3N0YXRlID0gTE9BRElOR19QUkVQQVJFOworCisgICAgLyogQ2FsY3VsYXRlIHRoZSBudW1i
ZXIgb2Ygb25saW5lIENQVSBjb3JlICovCisgICAgbnJfY29yZXMgPSAwOworICAgIGZvcl9lYWNo
X29ubGluZV9jcHUoY3B1KQorICAgICAgICBpZiAoIGNwdSA9PSBjcHVtYXNrX2ZpcnN0KHBlcl9j
cHUoY3B1X3NpYmxpbmdfbWFzaywgY3B1KSkgKQorICAgICAgICAgICAgbnJfY29yZXMrKzsKKwor
ICAgIHByaW50ayhYRU5MT0dfSU5GTyAiJXUgY29yZXMgYXJlIHRvIHVwZGF0ZSB0aGVpciBtaWNy
b2NvZGVcbiIsIG5yX2NvcmVzKTsKKworICAgIC8qCisgICAgICogTGF0ZSBsb2FkaW5nIGRhbmNl
LiBXaHkgdGhlIGhlYXZ5LWhhbmRlZCBzdG9wX21hY2hpbmUgZWZmb3J0PworICAgICAqCisgICAg
ICogLSBIVCBzaWJsaW5ncyBtdXN0IGJlIGlkbGUgYW5kIG5vdCBleGVjdXRlIG90aGVyIGNvZGUg
d2hpbGUgdGhlIG90aGVyCisgICAgICogICBzaWJsaW5nIGlzIGxvYWRpbmcgbWljcm9jb2RlIGlu
IG9yZGVyIHRvIGF2b2lkIGFueSBuZWdhdGl2ZQorICAgICAqICAgaW50ZXJhY3Rpb25zIGNhdXNl
IGJ5IHRoZSBsb2FkaW5nLgorICAgICAqCisgICAgICogLSBJbiBhZGRpdGlvbiwgbWljcm9jb2Rl
IHVwZGF0ZSBvbiB0aGUgY29yZXMgbXVzdCBiZSBzZXJpYWxpemVkIHVudGlsCisgICAgICogICB0
aGlzIHJlcXVpcmVtZW50IGNhbiBiZSByZWxheGVkIGluIHRoZSBmdXR1cmUuIFJpZ2h0IG5vdywg
dGhpcyBpcworICAgICAqICAgY29uc2VydmF0aXZlIGFuZCBnb29kLgorICAgICAqLworICAgIHJl
dCA9IHN0b3BfbWFjaGluZV9ydW4oZG9fbWljcm9jb2RlX3VwZGF0ZSwgcGF0Y2gsIE5SX0NQVVMp
OworCisgICAgdXBkYXRlZCA9IGF0b21pY19yZWFkKCZjcHVfdXBkYXRlZCk7CisgICAgaWYgKCB1
cGRhdGVkID4gMCApCisgICAgeworICAgICAgICBzcGluX2xvY2soJm1pY3JvY29kZV9tdXRleCk7
CisgICAgICAgIG1pY3JvY29kZV91cGRhdGVfY2FjaGUocGF0Y2gpOworICAgICAgICBzcGluX3Vu
bG9jaygmbWljcm9jb2RlX211dGV4KTsKKyAgICB9CisgICAgZWxzZQorICAgICAgICBtaWNyb2Nv
ZGVfZnJlZV9wYXRjaChwYXRjaCk7CisKKyAgICBpZiAoIHVwZGF0ZWQgJiYgdXBkYXRlZCAhPSBu
cl9jb3JlcyApCisgICAgICAgIHByaW50ayhYRU5MT0dfRVJSICJFUlJPUjogVXBkYXRpbmcgbWlj
cm9jb2RlIHN1Y2NlZWRlZCBvbiAldSBjb3JlcyBhbmQgZmFpbGVkXG4iCisgICAgICAgICAgICAg
ICBYRU5MT0dfRVJSICJvbiBvdGhlciAldSBjb3Jlcy4gQSBzeXN0ZW0gd2l0aCBkaWZmZXJpbmcg
bWljcm9jb2RlXG4iCisgICAgICAgICAgICAgICBYRU5MT0dfRVJSICJyZXZpc2lvbnMgaXMgY29u
c2lkZXJlZCB1bnN0YWJsZS4gUGxlYXNlIHJlYm9vdCBhbmQgZG8gbm90XG4iCisgICAgICAgICAg
ICAgICBYRU5MT0dfRVJSICJsb2FkIHRoZSBtaWNyb2NvZGUgdGhhdCB0cmlnZ2VycyB0aGlzIHdh
cm5pbmchXG4iLAorICAgICAgICAgICAgICAgdXBkYXRlZCwgbnJfY29yZXMgLSB1cGRhdGVkKTsK
KworIHB1dDoKKyAgICBwdXRfY3B1X21hcHMoKTsKKyAgICByZXR1cm4gcmV0OwogfQogCiBzdGF0
aWMgaW50IF9faW5pdCBtaWNyb2NvZGVfaW5pdCh2b2lkKQotLSAKMS44LjMuMQoKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5n
IGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJv
amVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

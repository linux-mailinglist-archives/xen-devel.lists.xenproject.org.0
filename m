Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 196B1BCA5C
	for <lists+xen-devel@lfdr.de>; Tue, 24 Sep 2019 16:38:01 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iClub-0000R7-0y; Tue, 24 Sep 2019 14:35:29 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=IFsf=XT=arm.com=julien.grall@srs-us1.protection.inumbo.net>)
 id 1iCluZ-0000Qg-HH
 for xen-devel@lists.xenproject.org; Tue, 24 Sep 2019 14:35:27 +0000
X-Inumbo-ID: 8ac30d0c-ded8-11e9-961f-12813bfff9fa
Received: from foss.arm.com (unknown [217.140.110.172])
 by localhost (Halon) with ESMTP
 id 8ac30d0c-ded8-11e9-961f-12813bfff9fa;
 Tue, 24 Sep 2019 14:35:23 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 44F561596;
 Tue, 24 Sep 2019 07:35:23 -0700 (PDT)
Received: from e108454-lin.cambridge.arm.com (e108454-lin.cambridge.arm.com
 [10.1.196.50])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 9458B3F59C;
 Tue, 24 Sep 2019 07:35:21 -0700 (PDT)
From: Julien Grall <julien.grall@arm.com>
To: xen-devel@lists.xenproject.org
Date: Tue, 24 Sep 2019 15:35:15 +0100
Message-Id: <20190924143515.8810-3-julien.grall@arm.com>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20190924143515.8810-1-julien.grall@arm.com>
References: <20190924143515.8810-1-julien.grall@arm.com>
Subject: [Xen-devel] [PATCH for-4.13 v2 2/2] docs: Replace all instance of
 ARM by Arm
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: jgross@suse.com, Stefano Stabellini <sstabellini@kernel.org>,
 Wei Liu <wl@xen.org>, Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Tim Deegan <tim@xen.org>,
 Julien Grall <julien.grall@arm.com>, Jan Beulich <jbeulich@suse.com>,
 Volodymyr Babchuk <Volodymyr_Babchuk@epam.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VGhlIGRvY3VtZW50YXRpb24gaXMgdXNpbmcgYSBtaXggb2YgQVJNIChvbGQpIGFuZCBBcm0gKG5l
dykuIFRvIHN0YXkKY29uc2lzdGVudCwgdXNlIG9ubHkgdGhlIG5ldyBuYW1lLgoKU2lnbmVkLW9m
Zi1ieTogSnVsaWVuIEdyYWxsIDxqdWxpZW4uZ3JhbGxAYXJtLmNvbT4KCi0tLQoKQ2M6IGpncm9z
c0BzdXNlLmNvbQoKICAgIENoYW5nZXMgaW4gdjI6CiAgICAgICAgLSBQYXRjaCBhZGRlZAotLS0K
IFNVUFBPUlQubWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDUwICsrKysrKysr
KysrKysrKy0tLS0tLS0tLS0tLS0tLQogZG9jcy9JTkRFWCAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHwgIDYgKystLQogZG9jcy9mZWF0dXJlcy9saXZlcGF0Y2gucGFuZG9jICAgICAg
ICAgICAgIHwgIDIgKy0KIGRvY3MvZmVhdHVyZXMvc2NoZWRfcnRkcy5wYW5kb2MgICAgICAgICAg
ICB8ICAyICstCiBkb2NzL2h5cGVydmlzb3ItZ3VpZGUvY29kZS1jb3ZlcmFnZS5yc3QgICAgfCAg
MiArLQogZG9jcy9tYW4veGwuY2ZnLjUucG9kLmluICAgICAgICAgICAgICAgICAgIHwgIDggKyst
LS0KIGRvY3MvbWlzYy9hcm0vYm9vdGluZy50eHQgICAgICAgICAgICAgICAgICB8IDEwICsrKy0t
LQogZG9jcy9taXNjL2FybS9kZXZpY2UtdHJlZS9ndWVzdC50eHQgICAgICAgIHwgIDQgKy0tCiBk
b2NzL21pc2MvYXJtL2Vhcmx5LXByaW50ay50eHQgICAgICAgICAgICAgfCAgMiArLQogZG9jcy9t
aXNjL2FybS9zaWxpY29uLWVycmF0YS50eHQgICAgICAgICAgIHwgMjYgKysrKysrKystLS0tLS0t
LQogZG9jcy9taXNjL2NvbnNvbGUudHh0ICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRv
Y3MvbWlzYy9lZmkucGFuZG9jICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBkb2NzL21p
c2MvbGl2ZXBhdGNoLnBhbmRvYyAgICAgICAgICAgICAgICAgfCAgOCArKy0tLQogZG9jcy9taXNj
L3hlbi1jb21tYW5kLWxpbmUucGFuZG9jICAgICAgICAgIHwgMjIgKysrKysrLS0tLS0tLQogZG9j
cy9wcm9jZXNzL3hlbi1yZWxlYXNlLW1hbmFnZW1lbnQucGFuZG9jIHwgIDIgKy0KIGRvY3Mvc3Bl
Y3MvbGlieGMtbWlncmF0aW9uLXN0cmVhbS5wYW5kb2MgICB8ICA2ICsrLS0KIGRvY3Mvc3BlY3Mv
bGlieGwtbWlncmF0aW9uLXN0cmVhbS5wYW5kb2MgICB8ICAyICstCiAxNyBmaWxlcyBjaGFuZ2Vk
LCA3OCBpbnNlcnRpb25zKCspLCA3OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9TVVBQT1JU
Lm1kIGIvU1VQUE9SVC5tZAppbmRleCAzNzU0NzNhNDU2Li5jZjc1OTMxOWNjIDEwMDY0NAotLS0g
YS9TVVBQT1JULm1kCisrKyBiL1NVUFBPUlQubWQKQEAgLTMxLDExICszMSwxMSBAQCBzdXBwb3J0
ZWQgaW4gdGhpcyBkb2N1bWVudC4KIAogICAgIFN0YXR1czogU3VwcG9ydGVkCiAKLSMjIyBBUk0g
djcgKyBWaXJ0dWFsaXphdGlvbiBFeHRlbnNpb25zCisjIyMgQXJtIHY3ICsgVmlydHVhbGl6YXRp
b24gRXh0ZW5zaW9ucwogCiAgICAgU3RhdHVzOiBTdXBwb3J0ZWQKIAotIyMjIEFSTSB2OAorIyMj
IEFybSB2OAogCiAgICAgU3RhdHVzOiBTdXBwb3J0ZWQKIApAQCAtNTIsNyArNTIsNyBAQCBzdXBw
b3J0ZWQgaW4gdGhpcyBkb2N1bWVudC4KICMjIyBIb3N0IEFDUEkgKHZpYSBEb21haW4gMCkKIAog
ICAgIFN0YXR1cywgeDg2IFBWOiBTdXBwb3J0ZWQKLSAgICBTdGF0dXMsIEFSTTogRXhwZXJpbWVu
dGFsCisgICAgU3RhdHVzLCBBcm06IEV4cGVyaW1lbnRhbAogCiAjIyMgeDg2L0ludGVsIFBsYXRm
b3JtIFFvUyBUZWNobm9sb2dpZXMKIApAQCAtNjIsMTAgKzYyLDEwIEBAIHN1cHBvcnRlZCBpbiB0
aGlzIGRvY3VtZW50LgogCiAgICAgU3RhdHVzLCBBTUQgSU9NTVU6IFN1cHBvcnRlZAogICAgIFN0
YXR1cywgSW50ZWwgVlQtZDogU3VwcG9ydGVkCi0gICAgU3RhdHVzLCBBUk0gU01NVXYxOiBTdXBw
b3J0ZWQKLSAgICBTdGF0dXMsIEFSTSBTTU1VdjI6IFN1cHBvcnRlZAorICAgIFN0YXR1cywgQXJt
IFNNTVV2MTogU3VwcG9ydGVkCisgICAgU3RhdHVzLCBBcm0gU01NVXYyOiBTdXBwb3J0ZWQKIAot
IyMjIEFSTS9HSUN2MyBJVFMKKyMjIyBBcm0vR0lDdjMgSVRTCiAKIEV4dGVuc2lvbiB0byB0aGUg
R0lDdjMgaW50ZXJydXB0IGNvbnRyb2xsZXIgdG8gc3VwcG9ydCBNU0kuCiAKQEAgLTEwMiw5ICsx
MDIsOSBAQCBEb20wIHN1cHBvcnQgcmVxdWlyZXMgYW4gSU9NTVUgKEludGVsIFZULWQgLyBBTUQg
SU9NTVUpLgogICAgIFN0YXR1cywgZG9tVTogU3VwcG9ydGVkCiAgICAgU3RhdHVzLCBkb20wOiBF
eHBlcmltZW50YWwKIAotIyMjIEFSTQorIyMjIEFybQogCi1BUk0gb25seSBoYXMgb25lIGd1ZXN0
IHR5cGUgYXQgdGhlIG1vbWVudAorQXJtIG9ubHkgaGFzIG9uZSBndWVzdCB0eXBlIGF0IHRoZSBt
b21lbnQKIAogICAgIFN0YXR1czogU3VwcG9ydGVkCiAKQEAgLTExOSw4ICsxMTksOCBAQCBBUk0g
b25seSBoYXMgb25lIGd1ZXN0IHR5cGUgYXQgdGhlIG1vbWVudAogRm9ybWF0IHdoaWNoIHRoZSB0
b29sc3RhY2sgYWNjZXB0cyBmb3IgZGlyZWN0LWJvb3Qga2VybmVscwogCiAgICAgU3VwcG9ydGVk
LCB4ODY6IGJ6SW1hZ2UsIEVMRgotICAgIFN1cHBvcnRlZCwgQVJNMzI6IHpJbWFnZQotICAgIFN1
cHBvcnRlZCwgQVJNNjQ6IEltYWdlCisgICAgU3VwcG9ydGVkLCBBcm0zMjogekltYWdlCisgICAg
U3VwcG9ydGVkLCBBcm02NDogSW1hZ2UKIAogIyMjIERvbTAgaW5pdCBzdXBwb3J0IGZvciB4bAog
CkBAIC0xNTgsMTAgKzE1OCwxMCBAQCBPdXRwdXQgb2YgaW5mb3JtYXRpb24gaW4gbWFjaGluZS1w
YXJzZWFibGUgSlNPTiBmb3JtYXQKIAogICAgIFN0YXR1cywgTlMxNjU1MDogU3VwcG9ydGVkCiAg
ICAgU3RhdHVzLCBFSENJOiBTdXBwb3J0ZWQKLSAgICBTdGF0dXMsIENhZGVuY2UgVUFSVCAoQVJN
KTogU3VwcG9ydGVkCi0gICAgU3RhdHVzLCBQTDAxMSBVQVJUIChBUk0pOiBTdXBwb3J0ZWQKLSAg
ICBTdGF0dXMsIEV4eW5vcyA0MjEwIFVBUlQgKEFSTSk6IFN1cHBvcnRlZAotICAgIFN0YXR1cywg
T01BUCBVQVJUIChBUk0pOiBTdXBwb3J0ZWQKKyAgICBTdGF0dXMsIENhZGVuY2UgVUFSVCAoQXJt
KTogU3VwcG9ydGVkCisgICAgU3RhdHVzLCBQTDAxMSBVQVJUIChBcm0pOiBTdXBwb3J0ZWQKKyAg
ICBTdGF0dXMsIEV4eW5vcyA0MjEwIFVBUlQgKEFybSk6IFN1cHBvcnRlZAorICAgIFN0YXR1cywg
T01BUCBVQVJUIChBcm0pOiBTdXBwb3J0ZWQKICAgICBTdGF0dXMsIFNDSShGKSBVQVJUOiBTdXBw
b3J0ZWQKIAogIyMjIEh5cGVydmlzb3IgJ2RlYnVnIGtleXMnCkBAIC0yNDIsNyArMjQyLDcgQEAg
QWx0ZXJuYXRpdmUgcDJtIChhbHRwMm0pIGFsbG93cyBleHRlcm5hbCBtb25pdG9yaW5nIG9mIGd1
ZXN0IG1lbW9yeQogYnkgbWFpbnRhaW5pbmcgbXVsdGlwbGUgcGh5c2ljYWwgdG8gbWFjaGluZSAo
cDJtKSBtZW1vcnkgbWFwcGluZ3MuCiAKICAgICBTdGF0dXMsIHg4NiBIVk06IFRlY2ggUHJldmll
dwotICAgIFN0YXR1cywgQVJNOiBUZWNoIFByZXZpZXcKKyAgICBTdGF0dXMsIEFybTogVGVjaCBQ
cmV2aWV3CiAKICMjIFJlc291cmNlIE1hbmFnZW1lbnQKIApAQCAtMzA1LDE1ICszMDUsMTUgQEAg
RW5hYmxlcyBOVU1BIGF3YXJlIHNjaGVkdWxpbmcgaW4gWGVuCiBOQiB0aGF0IHRoaXMgcmVmZXJz
IHRvIHRoZSBhYmlsaXR5IG9mIGd1ZXN0cwogdG8gaGF2ZSBoaWdoZXItbGV2ZWwgcGFnZSB0YWJs
ZSBlbnRyaWVzIHBvaW50IGRpcmVjdGx5IHRvIG1lbW9yeSwKIGltcHJvdmluZyBUTEIgcGVyZm9y
bWFuY2UuCi1PbiBBUk0sIGFuZCBvbiB4ODYgaW4gSEFQIG1vZGUsCitPbiBBcm0sIGFuZCBvbiB4
ODYgaW4gSEFQIG1vZGUsCiB0aGUgZ3Vlc3QgaGFzIHdoYXRldmVyIHN1cHBvcnQgaXMgZW5hYmxl
ZCBieSB0aGUgaGFyZHdhcmUuCiAKIFRoaXMgZmVhdHVyZSBpcyBpbmRlcGVuZGVudAotb2YgdGhl
IEFSTSAicGFnZSBncmFudWxhcml0eSIgZmVhdHVyZSAoc2VlIGJlbG93KS4KK29mIHRoZSBBcm0g
InBhZ2UgZ3JhbnVsYXJpdHkiIGZlYXR1cmUgKHNlZSBiZWxvdykuCiAKICAgICBTdGF0dXMsIHg4
NiBIVk0vUFZILCBIQVA6IFN1cHBvcnRlZAogICAgIFN0YXR1cywgeDg2IEhWTS9QVkgsIFNoYWRv
dywgMk1pQjogU3VwcG9ydGVkCi0gICAgU3RhdHVzLCBBUk06IFN1cHBvcnRlZAorICAgIFN0YXR1
cywgQXJtOiBTdXBwb3J0ZWQKIAogT24geDg2IGluIHNoYWRvdyBtb2RlLCBvbmx5IDJNaUIgKEwy
KSBzdXBlcnBhZ2VzIGFyZSBhdmFpbGFibGU7CiBmdXJ0aGVybW9yZSwgdGhleSBkbyBub3QgaGF2
ZSB0aGUgcGVyZm9ybWFuY2UgY2hhcmFjdGVyaXN0aWNzCkBAIC01NDUsOSArNTQ1LDkgQEAgYmUg
aXNzdWVkIGFuIFhTQSwgc2luY2UgdGhhdCBkb2VzIHdlYWtlbiBzZWN1cml0eS4KICMjIyBMaXZl
IFBhdGNoaW5nCiAKICAgICBTdGF0dXMsIHg4NjogU3VwcG9ydGVkCi0gICAgU3RhdHVzLCBBUk06
IEV4cGVyaW1lbnRhbAorICAgIFN0YXR1cywgQXJtOiBFeHBlcmltZW50YWwKIAotQ29tcGlsZSB0
aW1lIGRpc2FibGVkIGZvciBBUk0gYnkgZGVmYXVsdC4KK0NvbXBpbGUgdGltZSBkaXNhYmxlZCBm
b3IgQXJtIGJ5IGRlZmF1bHQuCiAKICMjIyBWaXJ0dWFsIE1hY2hpbmUgSW50cm9zcGVjdGlvbgog
CkBAIC02MzksMjQgKzYzOSwyNCBAQCB0byBiZSB1c2VkIGluIGFkZGl0aW9uIHRvIFFFTVUuCiAK
IAlTdGF0dXM6IEV4cGVyaW1lbnRhbAogCi0jIyMgQVJNL05vbi1QQ0kgZGV2aWNlIHBhc3N0aHJv
dWdoCisjIyMgQXJtL05vbi1QQ0kgZGV2aWNlIHBhc3N0aHJvdWdoCiAKICAgICBTdGF0dXM6IFN1
cHBvcnRlZCwgbm90IHNlY3VyaXR5IHN1cHBvcnRlZAogCiBOb3RlIHRoYXQgdGhpcyBzdGlsbCBy
ZXF1aXJlcyBhbiBJT01NVQogdGhhdCBjb3ZlcnMgdGhlIERNQSBvZiB0aGUgZGV2aWNlIHRvIGJl
IHBhc3NlZCB0aHJvdWdoLgogCi0jIyMgQVJNOiAxNksgYW5kIDY0SyBwYWdlIGdyYW51bGFyaXR5
IGluIGd1ZXN0cworIyMjIEFybTogMTZLIGFuZCA2NEsgcGFnZSBncmFudWxhcml0eSBpbiBndWVz
dHMKIAogICAgIFN0YXR1czogU3VwcG9ydGVkLCB3aXRoIGNhdmVhdHMKIAogTm8gc3VwcG9ydCBm
b3IgUUVNVSBiYWNrZW5kcyBpbiBhIDE2SyBvciA2NEsgZG9tYWluLgogCi0jIyMgQVJNOiBHdWVz
dCBEZXZpY2UgVHJlZSBzdXBwb3J0CisjIyMgQXJtOiBHdWVzdCBEZXZpY2UgVHJlZSBzdXBwb3J0
CiAKICAgICBTdGF0dXM6IFN1cHBvcnRlZAogCi0jIyMgQVJNOiBHdWVzdCBBQ1BJIHN1cHBvcnQK
KyMjIyBBcm06IEd1ZXN0IEFDUEkgc3VwcG9ydAogCiAgICAgU3RhdHVzOiBTdXBwb3J0ZWQKIApA
QCAtNzYyLDcgKzc2Miw3IEBAIGluY2x1ZGluZyBzZWN1cml0eSBzdXBwb3J0IHN0YXR1cywgZnVu
Y3Rpb25hbCBjb21wbGV0ZW5lc3MsIGV0Yy4KIFJlZmVyIHRvIHRoZSBkZXRhaWxlZCBkZWZpbml0
aW9ucyBiZWxvdy4KIAogSWYgc3VwcG9ydCBkaWZmZXJzIGJhc2VkIG9uIGltcGxlbWVudGF0aW9u
Ci0oZm9yIGluc3RhbmNlLCB4ODYgLyBBUk0sIExpbnV4IC8gUUVNVSAvIEZyZWVCU0QpLAorKGZv
ciBpbnN0YW5jZSwgeDg2IC8gQXJtLCBMaW51eCAvIFFFTVUgLyBGcmVlQlNEKSwKIG9uZSBsaW5l
IGZvciBlYWNoIHNldCBvZiBpbXBsZW1lbnRhdGlvbnMgd2lsbCBiZSBsaXN0ZWQuCiAKICMjIERl
ZmluaXRpb24gb2YgU3RhdHVzIGxhYmVscwpkaWZmIC0tZ2l0IGEvZG9jcy9JTkRFWCBiL2RvY3Mv
SU5ERVgKaW5kZXggZTY3M2VkZDc1Yy4uOGNkN2M3Y2Y2NSAxMDA2NDQKLS0tIGEvZG9jcy9JTkRF
WAorKysgYi9kb2NzL0lOREVYCkBAIC0xLDUgKzEsNSBAQAogaHlwZXJjYWxsCQkJSHlwZXJjYWxs
IEludGVyZmFjZXMKLWh5cGVyY2FsbC9hcm0vaW5kZXgJCUFSTQoraHlwZXJjYWxsL2FybS9pbmRl
eAkJQXJtCiBoeXBlcmNhbGwveDg2XzMyL2luZGV4CQl4ODZfMzIKIGh5cGVyY2FsbC94ODZfNjQv
aW5kZXgJCXg4Nl82NAogCkBAIC0yMCw4ICsyMCw4IEBAIG1pc2MvdnRkCQkJVlQtZCBIT1dUTwog
bWlzYy94ZW4tZXJyb3ItaGFuZGxpbmcJCVhlbiBFcnJvciBIYW5kbGluZwogbWlzYy94ZW5wYWdp
bmcJCQlYZW4gUGFnaW5nCiBtaXNjL3hzbS1mbGFzawkJCVhTTS9GTEFTSyBDb25maWd1cmF0aW9u
Ci1taXNjL2FybS9ib290aW5nCQlIb3cgdG8gYm9vdCBYZW4gb24gQVJNCi1taXNjL2FybS9lYXJs
eS1wcmludGsJCUVuYWJsaW5nIGVhcmx5IHByaW50ayBvbiBBUk0KK21pc2MvYXJtL2Jvb3RpbmcJ
CUhvdyB0byBib290IFhlbiBvbiBBcm0KK21pc2MvYXJtL2Vhcmx5LXByaW50awkJRW5hYmxpbmcg
ZWFybHkgcHJpbnRrIG9uIEFybQogbWlzYy9hcm0vcGFzc3Rocm91Z2gJCVBhc3N0aHJvdWdoIGEg
ZGV2aWNlIGRlc2NyaWJlZCBpbiB0aGUgRGV2aWNlIFRyZWUgdG8gYSBndWVzdAogbWlzYy9hcm0v
ZGV2aWNlLXRyZWUvYm9vdGluZwlEZXZpY2UgdHJlZSBiaW5kaW5ncyB0byBib290IFhlbgogbWlz
Yy9hcm0vZGV2aWNlLXRyZWUvcGFzc3Rocm91Z2gJRGV2aWNlIHRyZWUgYmluZGluZyB0byBwYXNz
dGhyb3VnaCBhIGRldmljZQpkaWZmIC0tZ2l0IGEvZG9jcy9mZWF0dXJlcy9saXZlcGF0Y2gucGFu
ZG9jIGIvZG9jcy9mZWF0dXJlcy9saXZlcGF0Y2gucGFuZG9jCmluZGV4IDE3ZjFjZDBkMDUuLjg5
NzRiOWQ4OTQgMTAwNjQ0Ci0tLSBhL2RvY3MvZmVhdHVyZXMvbGl2ZXBhdGNoLnBhbmRvYworKysg
Yi9kb2NzL2ZlYXR1cmVzL2xpdmVwYXRjaC5wYW5kb2MKQEAgLTEyLDcgKzEyLDcgQEAKIAogICAg
ICAgICAgU3RhdHVzOiAqKlRlY2ggUHJldmlldy9FeHBlcmltZW50YWwqKgogCi0gICBBcmNoaXRl
Y3R1cmU6IEFSTQorICAgQXJjaGl0ZWN0dXJlOiBBcm0KIAogICAgICAgQ29tcG9uZW50OiBIeXBl
cnZpc29yLCB0b29sc3RhY2sKIC0tLS0tLS0tLS0tLS0tLS0gLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpkaWZmIC0tZ2l0IGEvZG9jcy9mZWF0dXJl
cy9zY2hlZF9ydGRzLnBhbmRvYyBiL2RvY3MvZmVhdHVyZXMvc2NoZWRfcnRkcy5wYW5kb2MKaW5k
ZXggNGNjZjcwNGI1My4uMmE1MGNkMWI0ZCAxMDA2NDQKLS0tIGEvZG9jcy9mZWF0dXJlcy9zY2hl
ZF9ydGRzLnBhbmRvYworKysgYi9kb2NzL2ZlYXR1cmVzL3NjaGVkX3J0ZHMucGFuZG9jCkBAIC0x
MDEsNyArMTAxLDcgQEAgYXQgYSBtYWNyb3Njb3BpYyBsZXZlbCksIHRoZSBmb2xsb3dpbmcgc2hv
dWxkIGJlIGRvbmU6CiAKICMgS25vd24gaXNzdWVzCiAKLSogT1NTVGVzdCByZXBvcnRzIG9jY2Fz
aW9uYWwgZmFpbHVyZXMgb24gQVJNLgorKiBPU1NUZXN0IHJlcG9ydHMgb2NjYXNpb25hbCBmYWls
dXJlcyBvbiBBcm0uCiAKICMgUmVmZXJlbmNlcwogCmRpZmYgLS1naXQgYS9kb2NzL2h5cGVydmlz
b3ItZ3VpZGUvY29kZS1jb3ZlcmFnZS5yc3QgYi9kb2NzL2h5cGVydmlzb3ItZ3VpZGUvY29kZS1j
b3ZlcmFnZS5yc3QKaW5kZXggNmM3NTUyZDY5MS4uMWM3MDU3MDAzNyAxMDA2NDQKLS0tIGEvZG9j
cy9oeXBlcnZpc29yLWd1aWRlL2NvZGUtY292ZXJhZ2UucnN0CisrKyBiL2RvY3MvaHlwZXJ2aXNv
ci1ndWlkZS9jb2RlLWNvdmVyYWdlLnJzdApAQCAtOCw3ICs4LDcgQEAgc28gc29tZSBleHRyYSBz
dGVwcyBhcmUgcmVxdWlyZWQgdG8gY29sbGVjdCBhbmQgcHJvY2VzcyB0aGUgZGF0YS4KIAogLi4g
d2FybmluZzo6CiAKLSAgQVJNIGRvZXNuJ3QgY3VycmVudGx5IGJvb3Qgd2hlbiB0aGUgZmluYWwg
YmluYXJ5IGV4Y2VlZHMgMk1CIGluIHNpemUsCisgIEFybSBkb2Vzbid0IGN1cnJlbnRseSBib290
IHdoZW4gdGhlIGZpbmFsIGJpbmFyeSBleGNlZWRzIDJNQiBpbiBzaXplLAogICBhbmQgdGhlIGNv
dmVyYWdlIGJ1aWxkIHRlbmRzIHRvIGV4Y2VlZCB0aGlzIGxpbWl0LgogCiAKZGlmZiAtLWdpdCBh
L2RvY3MvbWFuL3hsLmNmZy41LnBvZC5pbiBiL2RvY3MvbWFuL3hsLmNmZy41LnBvZC5pbgppbmRl
eCBlNzFiM2I0MTFkLi5kYmIxMmUxNTU4IDEwMDY0NAotLS0gYS9kb2NzL21hbi94bC5jZmcuNS5w
b2QuaW4KKysrIGIvZG9jcy9tYW4veGwuY2ZnLjUucG9kLmluCkBAIC0xMjU5LDcgKzEyNTksNyBA
QCBHdWVzdHMgdXNlIGh5cGVydmlzb3IgcmVzb3VyY2VzIGZvciBlYWNoIGV2ZW50IGNoYW5uZWwg
dGhleSB1c2UuCiBUaGUgZGVmYXVsdCBvZiAxMDIzIHNob3VsZCBiZSBzdWZmaWNpZW50IGZvciB0
eXBpY2FsIGd1ZXN0cy4gIFRoZQogbWF4aW11bSB2YWx1ZSBkZXBlbmRzIG9uIHdoYXQgdGhlIGd1
ZXN0IHN1cHBvcnRzLiAgR3Vlc3RzIHN1cHBvcnRpbmcgdGhlCiBGSUZPLWJhc2VkIGV2ZW50IGNo
YW5uZWwgQUJJIHN1cHBvcnQgdXAgdG8gMTMxLDA3MSBldmVudCBjaGFubmVscy4KLU90aGVyIGd1
ZXN0cyBhcmUgbGltaXRlZCB0byA0MDk1ICg2NC1iaXQgeDg2IGFuZCBBUk0pIG9yIDEwMjMgKDMy
LWJpdAorT3RoZXIgZ3Vlc3RzIGFyZSBsaW1pdGVkIHRvIDQwOTUgKDY0LWJpdCB4ODYgYW5kIEFy
bSkgb3IgMTAyMyAoMzItYml0CiB4ODYpLgogCiA9aXRlbSBCPHZkaXNwbD1bICJWRElTUExfU1BF
Q19TVFJJTkciLCAiVkRJU1BMX1NQRUNfU1RSSU5HIiwgLi4uXT4KQEAgLTE3OTEsNyArMTc5MSw3
IEBAIHRoZSB2aXJ0dWFsIGZpcm13YXJlIHRvIHRoZSBndWVzdCBPcGVyYXRpbmcgU3lzdGVtLiBB
Q1BJIGlzIHJlcXVpcmVkCiBieSBtb3N0IG1vZGVybiBndWVzdCBPcGVyYXRpbmcgU3lzdGVtcy4g
VGhpcyBvcHRpb24gaXMgZW5hYmxlZCBieQogZGVmYXVsdCBhbmQgdXN1YWxseSB5b3Ugc2hvdWxk
IG9taXQgaXQuIEhvd2V2ZXIsIGl0IG1heSBiZSBuZWNlc3NhcnkgdG8KIGRpc2FibGUgQUNQSSBm
b3IgY29tcGF0aWJpbGl0eSB3aXRoIHNvbWUgZ3Vlc3QgT3BlcmF0aW5nIFN5c3RlbXMuCi1UaGlz
IG9wdGlvbiBpcyB0cnVlIGZvciB4ODYgd2hpbGUgaXQncyBmYWxzZSBmb3IgQVJNIGJ5IGRlZmF1
bHQuCitUaGlzIG9wdGlvbiBpcyB0cnVlIGZvciB4ODYgd2hpbGUgaXQncyBmYWxzZSBmb3IgQXJt
IGJ5IGRlZmF1bHQuCiAKID1pdGVtIEI8YWNwaV9zMz1CT09MRUFOPgogCkBAIC0yNzA3LDcgKzI3
MDcsNyBAQCBTZWUgQjxxZW11KDEpPiBmb3IgbW9yZSBpbmZvcm1hdGlvbi4KIAogPWhlYWQyIEFy
Y2hpdGVjdHVyZSBTcGVjaWZpYyBvcHRpb25zCiAKLT1oZWFkMyBBUk0KKz1oZWFkMyBBcm0KIAog
PW92ZXIgNAogCkBAIC0yNzQ1LDcgKzI3NDUsNyBAQCBWTSBjb25maWcgZmlsZToKIAogdnVhcnQg
PSAic2JzYV91YXJ0IgogCi1DdXJyZW50bHksIG9ubHkgdGhlICJzYnNhX3VhcnQiIG1vZGVsIGlz
IHN1cHBvcnRlZCBmb3IgQVJNLgorQ3VycmVudGx5LCBvbmx5IHRoZSAic2JzYV91YXJ0IiBtb2Rl
bCBpcyBzdXBwb3J0ZWQgZm9yIEFybS4KIAogPWJhY2sKIApkaWZmIC0tZ2l0IGEvZG9jcy9taXNj
L2FybS9ib290aW5nLnR4dCBiL2RvY3MvbWlzYy9hcm0vYm9vdGluZy50eHQKaW5kZXggZDNmNmNl
NDc1NS4uNjkyNTBjMWY4ZCAxMDA2NDQKLS0tIGEvZG9jcy9taXNjL2FybS9ib290aW5nLnR4dAor
KysgYi9kb2NzL21pc2MvYXJtL2Jvb3RpbmcudHh0CkBAIC0xLDEzICsxLDEzIEBACiBCb290aW5n
IFhlbgogPT09PT09PT09PT0KIAotWGVuIGZvbGxvd3MgdGhlIHpJbWFnZSBwcm90b2NvbCBkZWZp
bmVkIGZvciAzMi1iaXQgQVJNIExpbnV4WzFdIGFuZCB0aGUKLUltYWdlIHByb3RvY29sIGRlZmlu
ZWQgZm9yIEFSTTY0IExpbnV4WzJdLgorWGVuIGZvbGxvd3MgdGhlIHpJbWFnZSBwcm90b2NvbCBk
ZWZpbmVkIGZvciAzMi1iaXQgQXJtIExpbnV4WzFdIGFuZCB0aGUKK0ltYWdlIHByb3RvY29sIGRl
ZmluZWQgZm9yIEFybTY0IExpbnV4WzJdLgogCiBJbiBib3RoIGNhc2VzIHRoZSByZWNvbW1lbmRh
dGlvbiB0byBib290IGluIEhZUC9FTDIgbW9kZSBpcyBhIHN0cmljdAogcmVxdWlyZW1lbnQgZm9y
IFhlbi4KIAotVGhlIGV4Y2VwdGlvbnMgdG8gdGhpcyBvbiAzMi1iaXQgQVJNIGFyZSBhcyBmb2xs
b3dzOgorVGhlIGV4Y2VwdGlvbnMgdG8gdGhpcyBvbiAzMi1iaXQgQXJtIGFyZSBhcyBmb2xsb3dz
OgogCiAgWGVuIGRvZXMgbm90IHJlcXVpcmUgdGhlIG1hY2hpbmUgdHlwZSB0byBiZSBwYXNzZWQg
aW4gcjEuIFRoaXMKICByZWdpc3RlciBpcyBpZ25vcmVkIChzbyBtYXkgYmUgaW52YWxpZCBvciB0
aGUgYWN0dWFsIG1hY2hpbmUgdHlwZSkuCkBAIC0yMSw3ICsyMSw3IEBAIFRoZSBleGNlcHRpb25z
IHRvIHRoaXMgb24gMzItYml0IEFSTSBhcmUgYXMgZm9sbG93czoKICB6SW1hZ2UgcHJvdG9jb2wg
c2hvdWxkIHN0aWxsIGJlIHVzZWQgYW5kIG5vdCB0aGUgc3RyaWN0ZXIgInJhdwogIChub24teklt
YWdlKSIgcHJvdG9jb2wgZGVzY3JpYmVkIGluIGFybS9Cb290aW5nLgogCi1UaGVyZSBhcmUgbm8g
ZXhjZXB0aW9uIG9uIDY0LWJpdCBBUk0uCitUaGVyZSBhcmUgbm8gZXhjZXB0aW9uIG9uIDY0LWJp
dCBBcm0uCiAKIAogRmlybXdhcmUvYm9vdGxvYWRlciByZXF1aXJlbWVudHMKQEAgLTMxLDcgKzMx
LDcgQEAgWGVuIHJlbGllcyBvbiBzb21lIHNldHRpbmdzIHRoZSBmaXJtd2FyZSBoYXMgdG8gY29u
ZmlndXJlIGluIEVMMyBiZWZvcmUgc3RhcnRpbmcKIAogKiBYZW4gbXVzdCBiZSBlbnRlcmVkIGlu
IE5TIEVMMiBtb2RlCiAKLSogVGhlIGJpdCBTQ1JfRUwzLkhDRSAocmVzcC4gU0NSLkhDRSBmb3Ig
MzItYml0IEFSTSkgbXVzdCBiZSBzZXQgdG8gMS4KKyogVGhlIGJpdCBTQ1JfRUwzLkhDRSAocmVz
cC4gU0NSLkhDRSBmb3IgMzItYml0IEFybSkgbXVzdCBiZSBzZXQgdG8gMS4KIAogCiBbMV0gbGlu
dXgvRG9jdW1lbnRhdGlvbi9hcm0vQm9vdGluZwpkaWZmIC0tZ2l0IGEvZG9jcy9taXNjL2FybS9k
ZXZpY2UtdHJlZS9ndWVzdC50eHQgYi9kb2NzL21pc2MvYXJtL2RldmljZS10cmVlL2d1ZXN0LnR4
dAppbmRleCA0MThmMWU5ZjRlLi41YTc2YmE4MWUxIDEwMDY0NAotLS0gYS9kb2NzL21pc2MvYXJt
L2RldmljZS10cmVlL2d1ZXN0LnR4dAorKysgYi9kb2NzL21pc2MvYXJtL2RldmljZS10cmVlL2d1
ZXN0LnR4dApAQCAtMSw2ICsxLDYgQEAKICogWGVuIGh5cGVydmlzb3IgZGV2aWNlIHRyZWUgYmlu
ZGluZ3MKIAotWGVuIEFSTSB2aXJ0dWFsIHBsYXRmb3JtcyBzaGFsbCBoYXZlIGEgdG9wLWxldmVs
ICJoeXBlcnZpc29yIiBub2RlIHdpdGgKK1hlbiBBcm0gdmlydHVhbCBwbGF0Zm9ybXMgc2hhbGwg
aGF2ZSBhIHRvcC1sZXZlbCAiaHlwZXJ2aXNvciIgbm9kZSB3aXRoCiB0aGUgZm9sbG93aW5nIHBy
b3BlcnRpZXM6CiAKIC0gY29tcGF0aWJsZToKQEAgLTE3LDcgKzE3LDcgQEAgdGhlIGZvbGxvd2lu
ZyBwcm9wZXJ0aWVzOgogICBBIEdJQyBub2RlIGlzIGFsc28gcmVxdWlyZWQuCiAgIFRoaXMgcHJv
cGVydHkgaXMgdW5uZWNlc3Nhcnkgd2hlbiBib290aW5nIERvbTAgdXNpbmcgQUNQSS4KIAotVG8g
c3VwcG9ydCBVRUZJIG9uIFhlbiBBUk0gdmlydHVhbCBwbGF0Zm9ybXMsIFhlbiBwb3B1bGF0ZXMg
dGhlIEZEVCAidWVmaSIgbm9kZQorVG8gc3VwcG9ydCBVRUZJIG9uIFhlbiBBcm0gdmlydHVhbCBw
bGF0Zm9ybXMsIFhlbiBwb3B1bGF0ZXMgdGhlIEZEVCAidWVmaSIgbm9kZQogdW5kZXIgL2h5cGVy
dmlzb3Igd2l0aCBmb2xsb3dpbmcgcGFyYW1ldGVyczoKIAogX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KZGlmZiAtLWdpdCBhL2RvY3MvbWlzYy9hcm0vZWFybHktcHJpbnRrLnR4dCBiL2RvY3MvbWlz
Yy9hcm0vZWFybHktcHJpbnRrLnR4dAppbmRleCA4OWUwODFlNTFlLi5iNTNhZGVhZTQ5IDEwMDY0
NAotLS0gYS9kb2NzL21pc2MvYXJtL2Vhcmx5LXByaW50ay50eHQKKysrIGIvZG9jcy9taXNjL2Fy
bS9lYXJseS1wcmludGsudHh0CkBAIC00MSw3ICs0MSw3IEBAIHRoZSBuYW1lIG9mIHRoZSBtYWNo
aW5lOgogICAtIGJyY206IHByaW50ayB3aXRoIDgyNTAgb24gQnJvYWRjb20gNzQ0NUQwIGJvYXJk
cyB3aXRoIEExNSBwcm9jZXNzb3JzLgogICAtIGRyYTc6IHByaW50ayB3aXRoIDgyNTAgb24gRFJB
NyBwbGF0Zm9ybQogICAtIGV4eW5vczUyNTA6IHByaW50ayB3aXRoIHRoZSBzZWNvbmQgVUFSVAot
ICAtIGZhc3Rtb2RlbDogcHJpbnRrIG9uIEFSTSBGYXN0bW9kZWwgc29mdHdhcmUgZW11bGF0b3Jz
CisgIC0gZmFzdG1vZGVsOiBwcmludGsgb24gQXJtIEZhc3Rtb2RlbCBzb2Z0d2FyZSBlbXVsYXRv
cnMKICAgLSBoaWtleTk2MDogcHJpbnRrIHdpdGggcGwwMTEgd2l0aCBIaWtleSA5NjAKICAgLSBq
dW5vOiBwcmludGsgd2l0aCBwbDAxMSBvbiBKdW5vIHBsYXRmb3JtCiAgIC0gbGFnZXI6IHByaW50
ayB3aXRoIFNDSUYwIG9uIFJlbmVzYXMgTGFnZXIgYm9hcmQgKFItQ2FyIEgyIHByb2Nlc3NvcikK
ZGlmZiAtLWdpdCBhL2RvY3MvbWlzYy9hcm0vc2lsaWNvbi1lcnJhdGEudHh0IGIvZG9jcy9taXNj
L2FybS9zaWxpY29uLWVycmF0YS50eHQKaW5kZXggMTFlNWE5ZGNlYy4uNGJiMWEwM2IxZSAxMDA2
NDQKLS0tIGEvZG9jcy9taXNjL2FybS9zaWxpY29uLWVycmF0YS50eHQKKysrIGIvZG9jcy9taXNj
L2FybS9zaWxpY29uLWVycmF0YS50eHQKQEAgLTMsNyArMyw3IEBACiAKIEl0IGlzIGFuIHVuZm9y
dHVuYXRlIGZhY3Qgb2YgbGlmZSB0aGF0IGhhcmR3YXJlIGlzIG9mdGVuIHByb2R1Y2VkIHdpdGgK
IHNvLWNhbGxlZCAiZXJyYXRhIiwgd2hpY2ggY2FuIGNhdXNlIGl0IHRvIGRldmlhdGUgZnJvbSB0
aGUgYXJjaGl0ZWN0dXJlCi11bmRlciBzcGVjaWZpYyBjaXJjdW1zdGFuY2VzLiAgRm9yIGhhcmR3
YXJlIHByb2R1Y2VkIGJ5IEFSTSwgdGhlc2UKK3VuZGVyIHNwZWNpZmljIGNpcmN1bXN0YW5jZXMu
ICBGb3IgaGFyZHdhcmUgcHJvZHVjZWQgYnkgQXJtLCB0aGVzZQogZXJyYXRhIGFyZSBicm9hZGx5
IGNsYXNzaWZpZWQgaW50byB0aGUgZm9sbG93aW5nIGNhdGVnb3JpZXM6CiAKICAgQ2F0ZWdvcnkg
QTogQSBjcml0aWNhbCBlcnJvciB3aXRob3V0IGEgdmlhYmxlIHdvcmthcm91bmQuCkBAIC0yOSw3
ICsyOSw3IEBAIEZvciBzb2Z0d2FyZSB3b3JrYXJvdW5kcyB0aGF0IG1heSBhZHZlcnNlbHkgaW1w
YWN0IHN5c3RlbXMgdW5hZmZlY3RlZCBieQogdGhlIGVycmF0dW0gaW4gcXVlc3Rpb24sIGEgS2Nv
bmZpZyBlbnRyeSBpcyBhZGRlZCB1bmRlciAiQVJNIGVycmF0YQogd29ya2Fyb3VuZHMgdmlhIHRo
ZSBhbHRlcm5hdGl2ZXMgZnJhbWV3b3JrIi4gVGhlc2UgYXJlIGVuYWJsZWQgYnkgZGVmYXVsdAog
YW5kIHBhdGNoZWQgaW4gYXQgcnVudGltZSB3aGVuIGFuIGFmZmVjdGVkIENQVSBpcyBkZXRlY3Rl
ZC4gTm90ZSB0aGF0Ci1ydW50aW1lIHBhdGNoaW5nIGlzIG9ubHkgc3VwcG9ydGVkIG9uIEFSTTY0
LiBGb3IgbGVzcy1pbnRydXNpdmUgd29ya2Fyb3VuZHMsCitydW50aW1lIHBhdGNoaW5nIGlzIG9u
bHkgc3VwcG9ydGVkIG9uIEFybTY0LiBGb3IgbGVzcy1pbnRydXNpdmUgd29ya2Fyb3VuZHMsCiBh
IEtjb25maWcgb3B0aW9uIGlzIG5vdCBhdmFpbGFibGUgYW5kIHRoZSBjb2RlIGlzIHN0cnVjdHVy
ZWQgKHByZWZlcmFibHkKIHdpdGggYSBjb21tZW50KSBpbiBzdWNoIGEgd2F5IHRoYXQgdGhlIGVy
cmF0dW0gd2lsbCBub3QgYmUgaGl0LgogCkBAIC00MSwxNCArNDEsMTQgQEAgc3RhYmxlIGh5cGVy
dmlzb3JzLgogCiB8IEltcGxlbWVudG9yICAgIHwgQ29tcG9uZW50ICAgICAgIHwgRXJyYXR1bSBJ
RCAgICAgIHwgS2NvbmZpZyAgICAgICAgICAgICAgICAgfAogKy0tLS0tLS0tLS0tLS0tLS0rLS0t
LS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LSsKLXwgQVJNICAgICAgICAgICAgfCBDb3J0ZXgtQTE1ICAgICAgfCAjNzY2NDIyICAgICAgICAg
fCBOL0EgICAgICAgICAgICAgICAgICAgICB8Ci18IEFSTSAgICAgICAgICAgIHwgQ29ydGV4LUE1
MyAgICAgIHwgIzgyNzMxOSAgICAgICAgIHwgQVJNNjRfRVJSQVRVTV84MjczMTkgICAgfAotfCBB
Uk0gICAgICAgICAgICB8IENvcnRleC1BNTMgICAgICB8ICM4MjQwNjkgICAgICAgICB8IEFSTTY0
X0VSUkFUVU1fODI0MDY5ICAgIHwKLXwgQVJNICAgICAgICAgICAgfCBDb3J0ZXgtQTUzICAgICAg
fCAjODE5NDcyICAgICAgICAgfCBBUk02NF9FUlJBVFVNXzgxOTQ3MiAgICB8Ci18IEFSTSAgICAg
ICAgICAgIHwgQ29ydGV4LUE1NyAgICAgIHwgIzg1MjUyMyAgICAgICAgIHwgTi9BICAgICAgICAg
ICAgICAgICAgICAgfAotfCBBUk0gICAgICAgICAgICB8IENvcnRleC1BNTcgICAgICB8ICM4MzIw
NzUgICAgICAgICB8IEFSTTY0X0VSUkFUVU1fODMyMDc1ICAgIHwKLXwgQVJNICAgICAgICAgICAg
fCBDb3J0ZXgtQTU3ICAgICAgfCAjODM0MjIwICAgICAgICAgfCBBUk02NF9FUlJBVFVNXzgzNDIy
MCAgICB8Ci18IEFSTSAgICAgICAgICAgIHwgQ29ydGV4LUE1NyAgICAgIHwgIzEzMTk1MzcgICAg
ICAgIHwgTi9BICAgICAgICAgICAgICAgICAgICAgfAotfCBBUk0gICAgICAgICAgICB8IENvcnRl
eC1BNzIgICAgICB8ICMxMzE5MzY3ICAgICAgICB8IE4vQSAgICAgICAgICAgICAgICAgICAgIHwK
LXwgQVJNICAgICAgICAgICAgfCBDb3J0ZXgtQTc2ICAgICAgfCAjMTE2NTUyMiAgICAgICAgfCBO
L0EgICAgICAgICAgICAgICAgICAgICB8Ci18IEFSTSAgICAgICAgICAgIHwgTU1VLTUwMCAgICAg
ICAgIHwgIzg0Mjg2OSAgICAgICAgIHwgTi9BICAgICAgICAgICAgICAgICAgICAgfAorfCBBcm0g
ICAgICAgICAgICB8IENvcnRleC1BMTUgICAgICB8ICM3NjY0MjIgICAgICAgICB8IE4vQSAgICAg
ICAgICAgICAgICAgICAgIHwKK3wgQXJtICAgICAgICAgICAgfCBDb3J0ZXgtQTUzICAgICAgfCAj
ODI3MzE5ICAgICAgICAgfCBBUk02NF9FUlJBVFVNXzgyNzMxOSAgICB8Cit8IEFybSAgICAgICAg
ICAgIHwgQ29ydGV4LUE1MyAgICAgIHwgIzgyNDA2OSAgICAgICAgIHwgQVJNNjRfRVJSQVRVTV84
MjQwNjkgICAgfAorfCBBcm0gICAgICAgICAgICB8IENvcnRleC1BNTMgICAgICB8ICM4MTk0NzIg
ICAgICAgICB8IEFSTTY0X0VSUkFUVU1fODE5NDcyICAgIHwKK3wgQXJtICAgICAgICAgICAgfCBD
b3J0ZXgtQTU3ICAgICAgfCAjODUyNTIzICAgICAgICAgfCBOL0EgICAgICAgICAgICAgICAgICAg
ICB8Cit8IEFybSAgICAgICAgICAgIHwgQ29ydGV4LUE1NyAgICAgIHwgIzgzMjA3NSAgICAgICAg
IHwgQVJNNjRfRVJSQVRVTV84MzIwNzUgICAgfAorfCBBcm0gICAgICAgICAgICB8IENvcnRleC1B
NTcgICAgICB8ICM4MzQyMjAgICAgICAgICB8IEFSTTY0X0VSUkFUVU1fODM0MjIwICAgIHwKK3wg
QXJtICAgICAgICAgICAgfCBDb3J0ZXgtQTU3ICAgICAgfCAjMTMxOTUzNyAgICAgICAgfCBOL0Eg
ICAgICAgICAgICAgICAgICAgICB8Cit8IEFybSAgICAgICAgICAgIHwgQ29ydGV4LUE3MiAgICAg
IHwgIzEzMTkzNjcgICAgICAgIHwgTi9BICAgICAgICAgICAgICAgICAgICAgfAorfCBBcm0gICAg
ICAgICAgICB8IENvcnRleC1BNzYgICAgICB8ICMxMTY1NTIyICAgICAgICB8IE4vQSAgICAgICAg
ICAgICAgICAgICAgIHwKK3wgQXJtICAgICAgICAgICAgfCBNTVUtNTAwICAgICAgICAgfCAjODQy
ODY5ICAgICAgICAgfCBOL0EgICAgICAgICAgICAgICAgICAgICB8CmRpZmYgLS1naXQgYS9kb2Nz
L21pc2MvY29uc29sZS50eHQgYi9kb2NzL21pc2MvY29uc29sZS50eHQKaW5kZXggNGUxODBmODhi
YS4uYWRiZWZkMzk1NSAxMDA2NDQKLS0tIGEvZG9jcy9taXNjL2NvbnNvbGUudHh0CisrKyBiL2Rv
Y3MvbWlzYy9jb25zb2xlLnR4dApAQCAtMjMsNyArMjMsNyBAQCBUaGUgdmlydHVhbCBVQVJUIGNv
bnNvbGUgcGF0aCBpbiB4ZW5zdG9yZSBpcyBkZWZpbmVkIGFzOgogCiAvbG9jYWwvZG9tYWluLyRE
T01JRC92dWFydC8wCiAKLVRoZSB2dWFydCBjb25zb2xlIHByb3ZpZGVzIGFjY2VzcyB0byBhIHZp
cnR1YWwgU0JTQSBVQVJUIG9uIEFSTSBzeXN0ZW1zLgorVGhlIHZ1YXJ0IGNvbnNvbGUgcHJvdmlk
ZXMgYWNjZXNzIHRvIGEgdmlydHVhbCBTQlNBIFVBUlQgb24gQXJtIHN5c3RlbXMuCiBUbyBlbmFi
bGUgdnVhcnQgdGhlIGZvbGxvd2luZyBsaW5lIGhhcyB0byBiZSBhZGRlZCB0byB0aGUgZ3Vlc3Qg
Y29uZmlndXJhdGlvbgogZmlsZToKIApkaWZmIC0tZ2l0IGEvZG9jcy9taXNjL2VmaS5wYW5kb2Mg
Yi9kb2NzL21pc2MvZWZpLnBhbmRvYwppbmRleCAyM2MxYTI3MzJkLi45NjhmNDk4MGJkIDEwMDY0
NAotLS0gYS9kb2NzL21pc2MvZWZpLnBhbmRvYworKysgYi9kb2NzL21pc2MvZWZpLnBhbmRvYwpA
QCAtMTAzLDcgKzEwMyw3IEBAIFNwZWNpZmllcyBhIENQVSBtaWNyb2NvZGUgYmxvYiB0byBsb2Fk
LiAoeDg2IG9ubHkpCiBTcGVjaWZpZXMgYSBkZXZpY2UgdHJlZSBmaWxlIHRvIGxvYWQuICBUaGUg
cGxhdGZvcm0gZmlybXdhcmUgbWF5IHByb3ZpZGUgYQogRFRCIGluIGFuIEVGSSBjb25maWd1cmF0
aW9uIHRhYmxlLCBzbyB0aGlzIGZpZWxkIGlzIG9wdGlvbmFsIGluIHRoYXQKIGNhc2UuIEEgZHRi
IHNwZWNpZmllZCBpbiB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHdpbGwgb3ZlcnJpZGUgYSBkZXZp
Y2UgdHJlZQotcHJvdmlkZWQgaW4gdGhlIEVGSSBjb25maWd1cmF0aW9uIHRhYmxlLiAoQVJNIG9u
bHkpCitwcm92aWRlZCBpbiB0aGUgRUZJIGNvbmZpZ3VyYXRpb24gdGFibGUuIChBcm0gb25seSkK
IAogIyMjYGNoYWluPTxmaWxlbmFtZT5gCiAKZGlmZiAtLWdpdCBhL2RvY3MvbWlzYy9saXZlcGF0
Y2gucGFuZG9jIGIvZG9jcy9taXNjL2xpdmVwYXRjaC5wYW5kb2MKaW5kZXggNmQ5ZjcyZjQ5Yi4u
MDczNTQxMjEzYiAxMDA2NDQKLS0tIGEvZG9jcy9taXNjL2xpdmVwYXRjaC5wYW5kb2MKKysrIGIv
ZG9jcy9taXNjL2xpdmVwYXRjaC5wYW5kb2MKQEAgLTMxMyw3ICszMTMsNyBAQCBUaGUgc2l6ZSBv
ZiB0aGUgc3RydWN0dXJlIGlzIDY0IGJ5dGVzIG9uIDY0LWJpdCBoeXBlcnZpc29ycy4gSXQgd2ls
bCBiZQogICAgIHRoZSBuZXcgZnVuY3Rpb24gKHdoaWNoIHdpbGwgcmVwbGFjZSB0aGUgb25lIGF0
IGBvbGRfYWRkcmApIGluIGJ5dGVzLgogICAgKiBJZiB0aGUgdmFsdWUgb2YgYG5ld19hZGRyYCBp
cyB6ZXJvIHRoZW4gYG5ld19zaXplYCBkZXRlcm1pbmVzIGhvdyBtYW55CiAgICAgaW5zdHJ1Y3Rp
b24gYnl0ZXMgdG8gTk9QICh1cCB0byBvcGFxdWUgc2l6ZSBtb2R1bG8gc21hbGxlc3QgcGxhdGZv
cm0KLSAgICBpbnN0cnVjdGlvbiAtIDEgYnl0ZSB4ODYgYW5kIDQgYnl0ZXMgb24gQVJNKS4KKyAg
ICBpbnN0cnVjdGlvbiAtIDEgYnl0ZSB4ODYgYW5kIDQgYnl0ZXMgb24gQXJtKS4KICAqIGB2ZXJz
aW9uYCBpcyB0byBiZSBvbmUuCiAgKiBgb3BhcXVlYCAqKk1VU1QqKiBiZSB6ZXJvLgogCkBAIC0x
MDkxLDcgKzEwOTEsNyBAQCB0aGF0IGluIHRoZSBoeXBlcnZpc29yIGlzIGFkdmlzZWQuCiBUaGUg
dG9vbCBmb3IgZ2VuZXJhdGluZyBwYXlsb2FkcyBjdXJyZW50bHkgZG9lcyBwZXJmb3JtIGEgY29t
cGlsZS10aW1lCiBjaGVjayB0byBlbnN1cmUgdGhhdCB0aGUgZnVuY3Rpb24gdG8gYmUgcmVwbGFj
ZWQgaXMgbGFyZ2UgZW5vdWdoLgogCi0jIyMjIFRyYW1wb2xpbmUsIEFSTQorIyMjIyBUcmFtcG9s
aW5lLCBBcm0KIAogVGhlIHVuY29uZGl0aW9uYWwgYnJhbmNoIGluc3RydWN0aW9uIChmb3IgdGhl
IGVuY29kaW5nIHNlZSB0aGUKIERESSAwNDA2Qy5jIGFuZCBEREkgMDQ4N0EuaiBBcmNoaXRlY3R1
cmUgUmVmZXJlbmNlIE1hbnVhbCdzKS4KQEAgLTEwOTksOCArMTA5OSw4IEBAIHdpdGggcHJvcGVy
IG9mZnNldCBpcyB1c2VkIGZvciBhbiB1bmNvbmRpdGlvbmFsIGJyYW5jaCB0byB0aGUgbmV3IGNv
ZGUuCiBUaGlzIG1lYW5zIHRoYXQgdGhhdCBgb2xkX3NpemVgICoqTVVTVCoqIGJlIGF0IGxlYXN0
IGZvdXIgYnl0ZXMgaWYgcGF0Y2hpbmcKIGluIHRyYW1wb2xpbmUuCiAKLVRoZSBpbnN0cnVjdGlv
biBvZmZzZXQgaXMgbGltaXRlZCBvbiBBUk0zMiB0byArLy0gMzJNQiB0byBkaXNwbGFjZW1lbnQK
LWFuZCBvbiBBUk02NCB0byArLy0gMTI4TUIgZGlzcGxhY2VtZW50LgorVGhlIGluc3RydWN0aW9u
IG9mZnNldCBpcyBsaW1pdGVkIG9uIEFybTMyIHRvICsvLSAzMk1CIHRvIGRpc3BsYWNlbWVudAor
YW5kIG9uIEFybTY0IHRvICsvLSAxMjhNQiBkaXNwbGFjZW1lbnQuCiAKIFRoZSBuZXcgY29kZSBp
cyBwbGFjZWQgaW4gdGhlIDhNIC0gMTBNIHZpcnR1YWwgYWRkcmVzcyBzcGFjZSB3aGlsZSB0aGUK
IFhlbiBjb2RlIGlzIGluIDJNIC0gNE0uIFRoYXQgZ2l2ZXMgdXMgZW5vdWdoIHNwYWNlLgpkaWZm
IC0tZ2l0IGEvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUucGFuZG9jIGIvZG9jcy9taXNjL3hl
bi1jb21tYW5kLWxpbmUucGFuZG9jCmluZGV4IDgzMjc5N2UyZTIuLjU1ZGZiNzQyMGQgMTAwNjQ0
Ci0tLSBhL2RvY3MvbWlzYy94ZW4tY29tbWFuZC1saW5lLnBhbmRvYworKysgYi9kb2NzL21pc2Mv
eGVuLWNvbW1hbmQtbGluZS5wYW5kb2MKQEAgLTcxMCw3ICs3MTAsNyBAQCBDb250cm9scyBmb3Ig
dGhlIGRvbTAgSU9NTVUgc2V0dXAuCiAgICAgYXZhaWxhYmxlIGJ5IGZ1bGx5IGRpc2FibGluZyBh
bGwgSU9NTVVzLgogCiAgICAgVGhpcyBvcHRpb24gaXMgaGFyZHdpcmVkIHRvIGZhbHNlIGZvciB4
ODYgUFZIIGRvbTAncyAod2hlcmUgYSBub24taWRlbnRpdHkKLSAgICB0cmFuc2Zvcm0gaXMgcmVx
dWlyZWQgZm9yIGRvbTAgdG8gZnVuY3Rpb24pLCBhbmQgaXMgaWdub3JlZCBmb3IgQVJNLgorICAg
IHRyYW5zZm9ybSBpcyByZXF1aXJlZCBmb3IgZG9tMCB0byBmdW5jdGlvbiksIGFuZCBpcyBpZ25v
cmVkIGZvciBBcm0uCiAKICogICBUaGUgYHN0cmljdGAgYm9vbGVhbiBpcyBhcHBsaWNhYmxlIHRv
IHg4NiBQViBkb20wJ3Mgb25seSBhbmQgZGVmYXVsdHMgdG8KICAgICBmYWxzZS4gIEl0IGNvbnRy
b2xzIHdoZXRoZXIgZG9tMCBjYW4gaGF2ZSBJT01NVSBtYXBwaW5ncyBmb3IgYWxsIGRvbWFpbgpA
QCAtNzE4LDcgKzcxOCw3IEBAIENvbnRyb2xzIGZvciB0aGUgZG9tMCBJT01NVSBzZXR1cC4KIAog
ICAgIFRoaXMgb3B0aW9uIGlzIGhhcmR3aXJlZCB0byB0cnVlIGZvciB4ODYgUFZIIGRvbTAncyAo
YXMgUkFNIGJlbG9uZ2luZyB0bwogICAgIG90aGVyIGRvbWFpbnMgaW4gdGhlIHN5c3RlbSBkb24n
dCBsaXZlIGluIGEgY29tcGF0aWJsZSBhZGRyZXNzIHNwYWNlKSwgYW5kCi0gICAgaXMgaWdub3Jl
ZCBmb3IgQVJNLgorICAgIGlzIGlnbm9yZWQgZm9yIEFybS4KIAogKiAgIFRoZSBgbWFwLWluY2x1
c2l2ZWAgYm9vbGVhbiBpcyBhcHBsaWNhYmxlIHRvIHg4NiBQViBkb20wJ3MsIGFuZCBzZXRzIHVw
CiAgICAgaWRlbnRpdHkgSU9NTVUgbWFwcGluZ3MgZm9yIGFsbCBub24tUkFNIHJlZ2lvbnMgYmVs
b3cgNEdCIGV4Y2VwdCBmb3IKQEAgLTc4NCw3ICs3ODQsNyBAQCBGb3IgZXhhbXBsZSwgd2l0aCBg
ZG9tMF9tYXhfdmNwdXM9NC04YDoKID4gICAgICA4ICAgIHwgIDgKID4gICAgIDEwICAgIHwgIDgK
IAotIyMjIGRvbTBfbWVtIChBUk0pCisjIyMgZG9tMF9tZW0gKEFybSkKID4gYD0gPHNpemU+YAog
CiBTZXQgdGhlIGFtb3VudCBvZiBtZW1vcnkgZm9yIHRoZSBpbml0aWFsIGRvbWFpbiAoZG9tMCku
IEl0IG11c3QgYmUKQEAgLTg0OSw3ICs4NDksNyBAQCBhZmZpbml0aWVzIHRvIHByZWZlciBidXQg
YmUgbm90IGxpbWl0ZWQgdG8gdGhlIHNwZWNpZmllZCBub2RlKHMpLgogCiBQaW4gZG9tMCB2Y3B1
cyB0byB0aGVpciByZXNwZWN0aXZlIHBjcHVzCiAKLSMjIyBkdHVhcnQgKEFSTSkKKyMjIyBkdHVh
cnQgKEFybSkKID4gYD0gcGF0aCBbOm9wdGlvbnNdYAogCiA+IERlZmF1bHQ6IGAiImAKQEAgLTEw
MTcsNyArMTAxNyw3IEBAIHZlcnNpb24gYXJlIDEgYW5kIDIuCiB1c2Ugb2YgZ3JhbnQgdGFibGUg
djIgd2l0aG91dCB0cmFuc2l0aXZlIGdyYW50cyBpcyBhbiBBQkkgYnJlYWthZ2UgZnJvbSB0aGUK
IGd1ZXN0cyBwb2ludCBvZiB2aWV3LgogCi1UaGUgdXNhZ2Ugb2YgZ250dGFiIHYyIGlzIG5vdCBz
ZWN1cml0eSBzdXBwb3J0ZWQgb24gQVJNIHBsYXRmb3Jtcy4KK1RoZSB1c2FnZSBvZiBnbnR0YWIg
djIgaXMgbm90IHNlY3VyaXR5IHN1cHBvcnRlZCBvbiBBcm0gcGxhdGZvcm1zLgogCiAjIyMgZ250
dGFiX21heF9mcmFtZXMKID4gYD0gPGludGVnZXI+YApAQCAtMTIyNSw3ICsxMjI1LDcgQEAgYm9v
bGVhbiAoZS5nLiBgaW9tbXU9bm9gKSBjYW4gb3ZlcnJpZGUgdGhpcyBhbmQgbGVhdmUgdGhlIElP
TU1VcyBkaXNhYmxlZC4KICAgICBoYXJkd2FyZSwgYW5kIHRoaXMgb3B0aW9uIGlzIGlnbm9yZWQu
ICBJdCBpcyBlbmFibGVkIGJ5IGRlZmF1bHQgb24gSW50ZWwKICAgICBzeXN0ZW1zLgogCi0gICAg
VGhpcyBvcHRpb24gaXMgaWdub3JlZCBvbiBBUk0sIGFuZCB0aGUgcGFnZXRhYmxlcyBhcmUgYWx3
YXlzIHNoYXJlZC4KKyAgICBUaGlzIG9wdGlvbiBpcyBpZ25vcmVkIG9uIEFybSwgYW5kIHRoZSBw
YWdldGFibGVzIGFyZSBhbHdheXMgc2hhcmVkLgogCiAqICAgVGhlIGBpbnRyZW1hcGAgYm9vbGVh
biBjb250cm9scyB0aGUgSW50ZXJydXB0IFJlbWFwcGluZyBzdWItZmVhdHVyZSwgYW5kCiAgICAg
aXMgYWN0aXZlIGJ5IGRlZmF1bHQgb24gY29tcGF0aWJsZSBoYXJkd2FyZS4gIE9uIHg4NiBzeXN0
ZW1zLCB0aGUgZmlyc3QKQEAgLTEzOTAsNyArMTM5MCw3IEBAIGJhc2VkIGludGVycnVwdHMuIEFu
eSBoaWdoZXIgSVJRcyB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgdXNlIHZpYSBQQ0kgTVNJLgogIyMj
IG1heF9scGlfYml0cyAoYXJtKQogPiBgPSA8aW50ZWdlcj5gCiAKLVNwZWNpZmllcyB0aGUgbnVt
YmVyIG9mIEFSTSBHSUN2MyBMUEkgaW50ZXJydXB0cyB0byBhbGxvY2F0ZSBvbiB0aGUgaG9zdCwK
K1NwZWNpZmllcyB0aGUgbnVtYmVyIG9mIEFybSBHSUN2MyBMUEkgaW50ZXJydXB0cyB0byBhbGxv
Y2F0ZSBvbiB0aGUgaG9zdCwKIHByZXNlbnRlZCBhcyB0aGUgbnVtYmVyIG9mIGJpdHMgbmVlZGVk
IHRvIGVuY29kZSBpdC4gVGhpcyBtdXN0IGJlIGF0IGxlYXN0CiAxNCBhbmQgbm90IGV4Y2VlZCAz
MiwgYW5kIGVhY2ggTFBJIHJlcXVpcmVzIG9uZSBieXRlIChjb25maWd1cmF0aW9uKSBhbmQKIG9u
ZSBwZW5kaW5nIGJpdCB0byBiZSBhbGxvY2F0ZWQuCkBAIC0xNDE3LDcgKzE0MTcsNyBAQCBsaW1p
dCBpcyBpZ25vcmVkIGJ5IFhlbi4KID4gYD0gWzxkb21VPl1bLFs8Y3RsZG9tPl1bLFs8aHdkb20+
XVssPHB0ZG9tPl1dXWAKIAogPiB4ODYgZGVmYXVsdDogYDksMTgsMTIsMTJgCi0+IEFSTSBkZWZh
dWx0OiBgOSwxOCwxMCwxMGAKKz4gQXJtIGRlZmF1bHQ6IGA5LDE4LDEwLDEwYAogCiBDaGFuZ2Ug
dGhlIG1heGltdW0gb3JkZXIgcGVybWl0dGVkIGZvciBhbGxvY2F0aW9uIChvciBhbGxvY2F0aW9u
LWxpa2UpCiByZXF1ZXN0cyBpc3N1ZWQgYnkgdGhlIHZhcmlvdXMga2luZHMgb2YgZG9tYWlucyAo
aW4gdGhpcyBvcmRlcjoKQEAgLTE4MDQsNyArMTgwNCw3IEBAIGFjY2lkZW50YWxseSBsZWFraW5n
IHNlY3JldHMgYnkgcmVsZWFzaW5nIHBhZ2VzIHdpdGhvdXQgcHJvcGVyIHNhbml0aXphdGlvbi4K
IAogU2V0IHRoZSBzZXJpYWwgdHJhbnNtaXQgYnVmZmVyIHNpemUuCiAKLSMjIyBzZXJyb3JzIChB
Uk0pCisjIyMgc2Vycm9ycyAoQXJtKQogPiBgPSBkaXZlcnNlIHwgZm9yd2FyZCB8IHBhbmljYAog
CiA+IERlZmF1bHQ6IGBkaXZlcnNlYApAQCAtMjE4NCw4ICsyMTg0LDggQEAgcHJvZHVjdGlvbiBz
eXN0ZW1zIChzZWUgaHR0cDovL3hlbmJpdHMueGVuLm9yZy94c2EvYWR2aXNvcnktMTYzLmh0bWwp
IQogCiA+IERlZmF1bHQ6IGB0cmFwYAogCi1XRkkgaXMgdGhlIEFSTSBpbnN0cnVjdGlvbiB0byAi
d2FpdCBmb3IgaW50ZXJydXB0Ii4gV0ZFIGlzIHNpbWlsYXIgYW5kCi1tZWFucyAid2FpdCBmb3Ig
ZXZlbnQiLiBUaGlzIG9wdGlvbiwgd2hpY2ggaXMgQVJNIHNwZWNpZmljLCBjaGFuZ2VzIHRoZQor
V0ZJIGlzIHRoZSBBcm0gaW5zdHJ1Y3Rpb24gdG8gIndhaXQgZm9yIGludGVycnVwdCIuIFdGRSBp
cyBzaW1pbGFyIGFuZAorbWVhbnMgIndhaXQgZm9yIGV2ZW50Ii4gVGhpcyBvcHRpb24sIHdoaWNo
IGlzIEFybSBzcGVjaWZpYywgY2hhbmdlcyB0aGUKIHdheSBndWVzdCBXRkkgYW5kIFdGRSBhcmUg
aW1wbGVtZW50ZWQgaW4gWGVuLiBCeSBkZWZhdWx0LCBYZW4gdHJhcHMgYm90aAogaW5zdHJ1Y3Rp
b25zLiBJbiB0aGUgY2FzZSBvZiBXRkksIFhlbiBibG9ja3MgdGhlIGd1ZXN0IHZjcHU7IGluIHRo
ZSBjYXNlCiBvZiBXRkUsIFhlbiB5aWVsZCB0aGUgZ3Vlc3QgdmNwdS4gV2hlbiBzZXR0aW5nIHZ3
ZmkgdG8gYG5hdGl2ZWAsIFhlbgpkaWZmIC0tZ2l0IGEvZG9jcy9wcm9jZXNzL3hlbi1yZWxlYXNl
LW1hbmFnZW1lbnQucGFuZG9jIGIvZG9jcy9wcm9jZXNzL3hlbi1yZWxlYXNlLW1hbmFnZW1lbnQu
cGFuZG9jCmluZGV4IGQ2YWJjOTBhMDIuLjk2MjA3YzkzZjAgMTAwNjQ0Ci0tLSBhL2RvY3MvcHJv
Y2Vzcy94ZW4tcmVsZWFzZS1tYW5hZ2VtZW50LnBhbmRvYworKysgYi9kb2NzL3Byb2Nlc3MveGVu
LXJlbGVhc2UtbWFuYWdlbWVudC5wYW5kb2MKQEAgLTQxNiw3ICs0MTYsNyBAQCBKOiBYRU4tMjgK
IAogPT09IHg4NiA9PT0KIAotPT09IEFSTSA9PT0KKz09PSBBcm0gPT09CiAKID09IENvbXBsZXRl
ZCA9PQogCmRpZmYgLS1naXQgYS9kb2NzL3NwZWNzL2xpYnhjLW1pZ3JhdGlvbi1zdHJlYW0ucGFu
ZG9jIGIvZG9jcy9zcGVjcy9saWJ4Yy1taWdyYXRpb24tc3RyZWFtLnBhbmRvYwppbmRleCA5N2Rh
Y2I2ZTMwLi5kZGQ3ZDFlYjJmIDEwMDY0NAotLS0gYS9kb2NzL3NwZWNzL2xpYnhjLW1pZ3JhdGlv
bi1zdHJlYW0ucGFuZG9jCisrKyBiL2RvY3Mvc3BlY3MvbGlieGMtbWlncmF0aW9uLXN0cmVhbS5w
YW5kb2MKQEAgLTMwLDcgKzMwLDcgQEAgaW1hZ2UgdXNlZCBpbiBYZW4gNC40IGFuZCBlYXJsaWVy
ICh0aGUgX2xlZ2FjeSBmb3JtYXRfKS4KIAogQSBuZXcgZm9ybWF0IHRoYXQgYWRkcmVzc2VzIHRo
ZSBhYm92ZSBpcyByZXF1aXJlZC4KIAotQVJNIGRvZXMgbm90IHlldCBoYXZlIGhhdmUgYSBkb21h
aW4gc2F2ZSBpbWFnZSBmb3JtYXQgc3BlY2lmaWVkIGFuZAorQXJtIGRvZXMgbm90IHlldCBoYXZl
IGhhdmUgYSBkb21haW4gc2F2ZSBpbWFnZSBmb3JtYXQgc3BlY2lmaWVkIGFuZAogdGhlIGZvcm1h
dCBkZXNjcmliZWQgaW4gdGhpcyBzcGVjaWZpY2F0aW9uIHNob3VsZCBiZSBzdWl0YWJsZS4KIAog
Tm90IFlldCBJbmNsdWRlZApAQCAtNDEsNyArNDEsNyBAQCBpbmNsdWRlZCBpbiBhIGZ1dHVyZSBk
cmFmdC4KIAogKiBQYWdlIGRhdGEgY29tcHJlc3Npb24uCiAKLSogQVJNCisqIEFybQogCiAKIE92
ZXJ2aWV3CkBAIC0xNjIsNyArMTYyLDcgQEAgdHlwZSAgICAgICAgMHgwMDAwOiBSZXNlcnZlZC4K
IAogICAgICAgICAgICAgMHgwMDAzOiB4ODYgUFZILgogCi0gICAgICAgICAgICAweDAwMDQ6IEFS
TS4KKyAgICAgICAgICAgIDB4MDAwNDogQXJtLgogCiAgICAgICAgICAgICAweDAwMDUgLSAweEZG
RkZGRkZGOiBSZXNlcnZlZC4KIApkaWZmIC0tZ2l0IGEvZG9jcy9zcGVjcy9saWJ4bC1taWdyYXRp
b24tc3RyZWFtLnBhbmRvYyBiL2RvY3Mvc3BlY3MvbGlieGwtbWlncmF0aW9uLXN0cmVhbS5wYW5k
b2MKaW5kZXggMzc2NmYzN2Y0Zi4uZDQwN2FiZDgxNyAxMDA2NDQKLS0tIGEvZG9jcy9zcGVjcy9s
aWJ4bC1taWdyYXRpb24tc3RyZWFtLnBhbmRvYworKysgYi9kb2NzL3NwZWNzL2xpYnhsLW1pZ3Jh
dGlvbi1zdHJlYW0ucGFuZG9jCkBAIC00Myw3ICs0Myw3IEBAIE5vdCBZZXQgSW5jbHVkZWQKIFRo
ZSBmb2xsb3dpbmcgZmVhdHVyZXMgYXJlIG5vdCB5ZXQgZnVsbHkgc3BlY2lmaWVkIGFuZCB3aWxs
IGJlCiBpbmNsdWRlZCBpbiBhIGZ1dHVyZSBkcmFmdC4KIAotKiBBUk0KKyogQXJtCiAKIAogT3Zl
cnZpZXcKLS0gCjIuMTEuMAoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2pl
Y3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4t
ZGV2ZWw=

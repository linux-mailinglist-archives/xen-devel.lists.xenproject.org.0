Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 80A469BC19
	for <lists+xen-devel@lfdr.de>; Sat, 24 Aug 2019 08:05:59 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1i1P8Y-0004Lr-TX; Sat, 24 Aug 2019 06:02:54 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=Fuan=WU=gmail.com=nadav.amit@srs-us1.protection.inumbo.net>)
 id 1i1P8X-0004Lk-Jt
 for xen-devel@lists.xenproject.org; Sat, 24 Aug 2019 06:02:53 +0000
X-Inumbo-ID: cd586ae8-c634-11e9-adf1-12813bfff9fa
Received: from mail-pf1-f196.google.com (unknown [209.85.210.196])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id cd586ae8-c634-11e9-adf1-12813bfff9fa;
 Sat, 24 Aug 2019 06:02:50 +0000 (UTC)
Received: by mail-pf1-f196.google.com with SMTP id w16so8035992pfn.7
 for <xen-devel@lists.xenproject.org>; Fri, 23 Aug 2019 23:02:50 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references;
 bh=F7wnaN2sm4dDETq+DUPx8pSGm3FuGxmG+QLwLZs+eRM=;
 b=S47Uy6FMew48+EEL1i38ELNutf6QjrIKjxDb1eUH4NgQKL9fpMUql2XHRC/1G60N3G
 F1SNO8g3WCsPhkEceDVRwOZuSRFw34QJysQ8hjdbXSeUw5DMC4qQLkHKmvUWjiqex5dt
 uB5YJbu3XIKKKoKCo3jQbnLq5ChJpgSLmDYq6mZnWPfrjDudi+5f4oIDDQ4u9R1+Kyat
 xSTkbMC9sg7fjXA87b+riiQ6u+NaI+zwVnyWhQ59zJUv0NpbSX2eY55BY7+3bKcgGsGb
 EGxeGCrVzTCeqhWJKMTjZK3Mb7wXABS4Vh0TLw/YZAT5BS0aiKSJPbeAhRYoO80Ct/Hd
 mqLA==
X-Gm-Message-State: APjAAAXRP9qlIy5j1Sw6fhW3bgJVV/P0P3+8Jy2EZby0FDF3micmODKU
 6u35OMSEK/m2XuNhmNNeiXc=
X-Google-Smtp-Source: APXvYqz52LafkL2XCB2zaw0uHZgr1PbVP18me3xzKilmH63LO1lCskfJOHdA3QwemTRsPXXXLUh0sw==
X-Received: by 2002:aa7:8602:: with SMTP id p2mr9258456pfn.138.1566626569056; 
 Fri, 23 Aug 2019 23:02:49 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
 by smtp.gmail.com with ESMTPSA id i11sm6505645pfk.34.2019.08.23.23.02.47
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 23 Aug 2019 23:02:47 -0700 (PDT)
From: Nadav Amit <namit@vmware.com>
To: Andy Lutomirski <luto@kernel.org>,
 Dave Hansen <dave.hansen@linux.intel.com>
Date: Fri, 23 Aug 2019 15:41:48 -0700
Message-Id: <20190823224153.15223-5-namit@vmware.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190823224153.15223-1-namit@vmware.com>
References: <20190823224153.15223-1-namit@vmware.com>
Subject: [Xen-devel] [PATCH v4 4/9] x86/mm/tlb: Flush remote and local TLBs
 concurrently
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Sasha Levin <sashal@kernel.org>, Juergen Gross <jgross@suse.com>,
 linux-hyperv@vger.kernel.org, Stephen Hemminger <sthemmin@microsoft.com>,
 xen-devel@lists.xenproject.org, kvm@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>, Haiyang Zhang <haiyangz@microsoft.com>,
 x86@kernel.org, linux-kernel@vger.kernel.org,
 virtualization@lists.linux-foundation.org, Ingo Molnar <mingo@redhat.com>,
 Nadav Amit <namit@vmware.com>, Paolo Bonzini <pbonzini@redhat.com>,
 Borislav Petkov <bp@alien8.de>, Thomas Gleixner <tglx@linutronix.de>,
 "K. Y. Srinivasan" <kys@microsoft.com>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VG8gaW1wcm92ZSBUTEIgc2hvb3Rkb3duIHBlcmZvcm1hbmNlLCBmbHVzaCB0aGUgcmVtb3RlIGFu
ZCBsb2NhbCBUTEJzCmNvbmN1cnJlbnRseS4gSW50cm9kdWNlIGZsdXNoX3RsYl9tdWx0aSgpIHRo
YXQgZG9lcyBzby4gSW50cm9kdWNlCnBhcmF2aXJ0dWFsIHZlcnNpb25zIG9mIGZsdXNoX3RsYl9t
dWx0aSgpIGZvciBLVk0sIFhlbiBhbmQgaHlwZXItdiAoWGVuCmFuZCBoeXBlci12IGFyZSBvbmx5
IGNvbXBpbGUtdGVzdGVkKS4KCldoaWxlIHRoZSB1cGRhdGVkIHNtcCBpbmZyYXN0cnVjdHVyZSBp
cyBjYXBhYmxlIG9mIHJ1bm5pbmcgYSBmdW5jdGlvbiBvbgphIHNpbmdsZSBsb2NhbCBjb3JlLCBp
dCBpcyBub3Qgb3B0aW1pemVkIGZvciB0aGlzIGNhc2UuIFRoZSBtdWx0aXBsZQpmdW5jdGlvbiBj
YWxscyBhbmQgdGhlIGluZGlyZWN0IGJyYW5jaCBpbnRyb2R1Y2Ugc29tZSBvdmVyaGVhZCwgYW5k
Cm1pZ2h0IG1ha2UgbG9jYWwgVExCIGZsdXNoZXMgc2xvd2VyIHRoYW4gdGhleSB3ZXJlIGJlZm9y
ZSB0aGUgcmVjZW50CmNoYW5nZXMuCgpCZWZvcmUgY2FsbGluZyB0aGUgU01QIGluZnJhc3RydWN0
dXJlLCBjaGVjayBpZiBvbmx5IGEgbG9jYWwgVExCIGZsdXNoCmlzIG5lZWRlZCB0byByZXN0b3Jl
IHRoZSBsb3N0IHBlcmZvcm1hbmNlIGluIHRoaXMgY29tbW9uIGNhc2UuIFRoaXMKcmVxdWlyZXMg
dG8gY2hlY2sgbW1fY3B1bWFzaygpIG9uZSBtb3JlIHRpbWUsIGJ1dCB1bmxlc3MgdGhpcyBtYXNr
IGlzCnVwZGF0ZWQgdmVyeSBmcmVxdWVudGx5LCB0aGlzIHNob3VsZCBpbXBhY3QgcGVyZm9ybWFu
Y2UgbmVnYXRpdmVseS4KCkNjOiAiSy4gWS4gU3Jpbml2YXNhbiIgPGt5c0BtaWNyb3NvZnQuY29t
PgpDYzogSGFpeWFuZyBaaGFuZyA8aGFpeWFuZ3pAbWljcm9zb2Z0LmNvbT4KQ2M6IFN0ZXBoZW4g
SGVtbWluZ2VyIDxzdGhlbW1pbkBtaWNyb3NvZnQuY29tPgpDYzogU2FzaGEgTGV2aW4gPHNhc2hh
bEBrZXJuZWwub3JnPgpDYzogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxpbnV0cm9uaXguZGU+CkNj
OiBJbmdvIE1vbG5hciA8bWluZ29AcmVkaGF0LmNvbT4KQ2M6IEJvcmlzbGF2IFBldGtvdiA8YnBA
YWxpZW44LmRlPgpDYzogeDg2QGtlcm5lbC5vcmcKQ2M6IEp1ZXJnZW4gR3Jvc3MgPGpncm9zc0Bz
dXNlLmNvbT4KQ2M6IFBhb2xvIEJvbnppbmkgPHBib256aW5pQHJlZGhhdC5jb20+CkNjOiBBbmR5
IEx1dG9taXJza2kgPGx1dG9Aa2VybmVsLm9yZz4KQ2M6IFBldGVyIFppamxzdHJhIDxwZXRlcnpA
aW5mcmFkZWFkLm9yZz4KQ2M6IEJvcmlzIE9zdHJvdnNreSA8Ym9yaXMub3N0cm92c2t5QG9yYWNs
ZS5jb20+CkNjOiBsaW51eC1oeXBlcnZAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1rZXJuZWxA
dmdlci5rZXJuZWwub3JnCkNjOiB2aXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9u
Lm9yZwpDYzoga3ZtQHZnZXIua2VybmVsLm9yZwpDYzogeGVuLWRldmVsQGxpc3RzLnhlbnByb2pl
Y3Qub3JnClJldmlld2VkLWJ5OiBNaWNoYWVsIEtlbGxleSA8bWlrZWxsZXlAbWljcm9zb2Z0LmNv
bT4gIyBIeXBlci12IHBhcnRzClJldmlld2VkLWJ5OiBKdWVyZ2VuIEdyb3NzIDxqZ3Jvc3NAc3Vz
ZS5jb20+ICMgWGVuIGFuZCBwYXJhdmlydCBwYXJ0cwpSZXZpZXdlZC1ieTogRGF2ZSBIYW5zZW4g
PGRhdmUuaGFuc2VuQGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTmFkYXYgQW1pdCA8
bmFtaXRAdm13YXJlLmNvbT4KLS0tCiBhcmNoL3g4Ni9oeXBlcnYvbW11LmMgICAgICAgICAgICAg
ICAgIHwgMTAgKysrLS0tCiBhcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydC5oICAgICAgIHwg
IDYgKystLQogYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnRfdHlwZXMuaCB8ICA0ICstLQog
YXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaCAgICAgICB8ICA4ICsrLS0tCiBhcmNoL3g4
Ni9pbmNsdWRlL2FzbS90cmFjZS9oeXBlcnYuaCAgIHwgIDIgKy0KIGFyY2gveDg2L2tlcm5lbC9r
dm0uYyAgICAgICAgICAgICAgICAgfCAxMSArKysrKy0tCiBhcmNoL3g4Ni9rZXJuZWwvcGFyYXZp
cnQuYyAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gveDg2L21tL3RsYi5jICAgICAgICAgICAgICAg
ICAgICAgfCA0NSArKysrKysrKysrKysrKysrKystLS0tLS0tLS0KIGFyY2gveDg2L3hlbi9tbXVf
cHYuYyAgICAgICAgICAgICAgICAgfCAxMSArKystLS0tCiBpbmNsdWRlL3RyYWNlL2V2ZW50cy94
ZW4uaCAgICAgICAgICAgIHwgIDIgKy0KIDEwIGZpbGVzIGNoYW5nZWQsIDYxIGluc2VydGlvbnMo
KyksIDQwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2h5cGVydi9tbXUuYyBi
L2FyY2gveDg2L2h5cGVydi9tbXUuYwppbmRleCBlNjVkN2ZlNjQ4OWYuLjg3NDBkOGIyMWRiMyAx
MDA2NDQKLS0tIGEvYXJjaC94ODYvaHlwZXJ2L21tdS5jCisrKyBiL2FyY2gveDg2L2h5cGVydi9t
bXUuYwpAQCAtNTAsOCArNTAsOCBAQCBzdGF0aWMgaW5saW5lIGludCBmaWxsX2d2YV9saXN0KHU2
NCBndmFfbGlzdFtdLCBpbnQgb2Zmc2V0LAogCXJldHVybiBndmFfbiAtIG9mZnNldDsKIH0KIAot
c3RhdGljIHZvaWQgaHlwZXJ2X2ZsdXNoX3RsYl9vdGhlcnMoY29uc3Qgc3RydWN0IGNwdW1hc2sg
KmNwdXMsCi0JCQkJICAgIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbykKK3N0YXRp
YyB2b2lkIGh5cGVydl9mbHVzaF90bGJfbXVsdGkoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdXMs
CisJCQkJICAgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9pbmZvICppbmZvKQogewogCWludCBjcHUs
IHZjcHUsIGd2YV9uLCBtYXhfZ3ZhczsKIAlzdHJ1Y3QgaHZfdGxiX2ZsdXNoICoqZmx1c2hfcGNw
dTsKQEAgLTU5LDcgKzU5LDcgQEAgc3RhdGljIHZvaWQgaHlwZXJ2X2ZsdXNoX3RsYl9vdGhlcnMo
Y29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdXMsCiAJdTY0IHN0YXR1cyA9IFU2NF9NQVg7CiAJdW5z
aWduZWQgbG9uZyBmbGFnczsKIAotCXRyYWNlX2h5cGVydl9tbXVfZmx1c2hfdGxiX290aGVycyhj
cHVzLCBpbmZvKTsKKwl0cmFjZV9oeXBlcnZfbW11X2ZsdXNoX3RsYl9tdWx0aShjcHVzLCBpbmZv
KTsKIAogCWlmICghaHZfaHlwZXJjYWxsX3BnKQogCQlnb3RvIGRvX25hdGl2ZTsKQEAgLTE1Niw3
ICsxNTYsNyBAQCBzdGF0aWMgdm9pZCBoeXBlcnZfZmx1c2hfdGxiX290aGVycyhjb25zdCBzdHJ1
Y3QgY3B1bWFzayAqY3B1cywKIAlpZiAoIShzdGF0dXMgJiBIVl9IWVBFUkNBTExfUkVTVUxUX01B
U0spKQogCQlyZXR1cm47CiBkb19uYXRpdmU6Ci0JbmF0aXZlX2ZsdXNoX3RsYl9vdGhlcnMoY3B1
cywgaW5mbyk7CisJbmF0aXZlX2ZsdXNoX3RsYl9tdWx0aShjcHVzLCBpbmZvKTsKIH0KIAogc3Rh
dGljIHU2NCBoeXBlcnZfZmx1c2hfdGxiX290aGVyc19leChjb25zdCBzdHJ1Y3QgY3B1bWFzayAq
Y3B1cywKQEAgLTIzMSw2ICsyMzEsNiBAQCB2b2lkIGh5cGVydl9zZXR1cF9tbXVfb3BzKHZvaWQp
CiAJCXJldHVybjsKIAogCXByX2luZm8oIlVzaW5nIGh5cGVyY2FsbCBmb3IgcmVtb3RlIFRMQiBm
bHVzaFxuIik7Ci0JcHZfb3BzLm1tdS5mbHVzaF90bGJfb3RoZXJzID0gaHlwZXJ2X2ZsdXNoX3Rs
Yl9vdGhlcnM7CisJcHZfb3BzLm1tdS5mbHVzaF90bGJfbXVsdGkgPSBoeXBlcnZfZmx1c2hfdGxi
X211bHRpOwogCXB2X29wcy5tbXUudGxiX3JlbW92ZV90YWJsZSA9IHRsYl9yZW1vdmVfdGFibGU7
CiB9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydC5oIGIvYXJjaC94
ODYvaW5jbHVkZS9hc20vcGFyYXZpcnQuaAppbmRleCA2OTA4OWQ0NmYxMjguLmJjNDgyOWM5YjNm
OSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnQuaAorKysgYi9hcmNo
L3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydC5oCkBAIC02MiwxMCArNjIsMTAgQEAgc3RhdGljIGlu
bGluZSB2b2lkIF9fZmx1c2hfdGxiX29uZV91c2VyKHVuc2lnbmVkIGxvbmcgYWRkcikKIAlQVk9Q
X1ZDQUxMMShtbXUuZmx1c2hfdGxiX29uZV91c2VyLCBhZGRyKTsKIH0KIAotc3RhdGljIGlubGlu
ZSB2b2lkIGZsdXNoX3RsYl9vdGhlcnMoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdW1hc2ssCi0J
CQkJICAgIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbykKK3N0YXRpYyBpbmxpbmUg
dm9pZCBmbHVzaF90bGJfbXVsdGkoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdW1hc2ssCisJCQkJ
ICAgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9pbmZvICppbmZvKQogewotCVBWT1BfVkNBTEwyKG1t
dS5mbHVzaF90bGJfb3RoZXJzLCBjcHVtYXNrLCBpbmZvKTsKKwlQVk9QX1ZDQUxMMihtbXUuZmx1
c2hfdGxiX211bHRpLCBjcHVtYXNrLCBpbmZvKTsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIHBh
cmF2aXJ0X3RsYl9yZW1vdmVfdGFibGUoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwgdm9pZCAqdGFi
bGUpCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydF90eXBlcy5oIGIv
YXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnRfdHlwZXMuaAppbmRleCA3MGI2NTRmM2ZmZTUu
LjYzZmE3NTEzNDRiZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcGFyYXZpcnRf
dHlwZXMuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYXJhdmlydF90eXBlcy5oCkBAIC0y
MDYsOCArMjA2LDggQEAgc3RydWN0IHB2X21tdV9vcHMgewogCXZvaWQgKCpmbHVzaF90bGJfdXNl
cikodm9pZCk7CiAJdm9pZCAoKmZsdXNoX3RsYl9rZXJuZWwpKHZvaWQpOwogCXZvaWQgKCpmbHVz
aF90bGJfb25lX3VzZXIpKHVuc2lnbmVkIGxvbmcgYWRkcik7Ci0Jdm9pZCAoKmZsdXNoX3RsYl9v
dGhlcnMpKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVzLAotCQkJCSBjb25zdCBzdHJ1Y3QgZmx1
c2hfdGxiX2luZm8gKmluZm8pOworCXZvaWQgKCpmbHVzaF90bGJfbXVsdGkpKGNvbnN0IHN0cnVj
dCBjcHVtYXNrICpjcHVzLAorCQkJCWNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbyk7
CiAKIAl2b2lkICgqdGxiX3JlbW92ZV90YWJsZSkoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwgdm9p
ZCAqdGFibGUpOwogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS90bGJmbHVzaC5o
IGIvYXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaAppbmRleCAyZjZlOWJlMTYzYWUuLjU1
OTE5NWY3OWMyZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdGxiZmx1c2guaAor
KysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS90bGJmbHVzaC5oCkBAIC01MzMsNyArNTMzLDcgQEAg
c3RhdGljIGlubGluZSB2b2lkIF9fZmx1c2hfdGxiX29uZV9rZXJuZWwodW5zaWduZWQgbG9uZyBh
ZGRyKQogICogIC0gZmx1c2hfdGxiX3BhZ2Uodm1hLCB2bWFkZHIpIGZsdXNoZXMgb25lIHBhZ2UK
ICAqICAtIGZsdXNoX3RsYl9yYW5nZSh2bWEsIHN0YXJ0LCBlbmQpIGZsdXNoZXMgYSByYW5nZSBv
ZiBwYWdlcwogICogIC0gZmx1c2hfdGxiX2tlcm5lbF9yYW5nZShzdGFydCwgZW5kKSBmbHVzaGVz
IGEgcmFuZ2Ugb2Yga2VybmVsIHBhZ2VzCi0gKiAgLSBmbHVzaF90bGJfb3RoZXJzKGNwdW1hc2ss
IGluZm8pIGZsdXNoZXMgVExCcyBvbiBvdGhlciBjcHVzCisgKiAgLSBmbHVzaF90bGJfbXVsdGko
Y3B1bWFzaywgaW5mbykgZmx1c2hlcyBUTEJzIG9uIG11bHRpcGxlIGNwdXMKICAqCiAgKiAuLmJ1
dCB0aGUgaTM4NiBoYXMgc29tZXdoYXQgbGltaXRlZCB0bGIgZmx1c2hpbmcgY2FwYWJpbGl0aWVz
LAogICogYW5kIHBhZ2UtZ3JhbnVsYXIgZmx1c2hlcyBhcmUgYXZhaWxhYmxlIG9ubHkgb24gaTQ4
NiBhbmQgdXAuCkBAIC01ODYsNyArNTg2LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIGZsdXNoX3Rs
Yl9wYWdlKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLCB1bnNpZ25lZCBsb25nIGEpCiAJZmx1
c2hfdGxiX21tX3JhbmdlKHZtYS0+dm1fbW0sIGEsIGEgKyBQQUdFX1NJWkUsIFBBR0VfU0hJRlQs
IGZhbHNlKTsKIH0KIAotdm9pZCBuYXRpdmVfZmx1c2hfdGxiX290aGVycyhjb25zdCBzdHJ1Y3Qg
Y3B1bWFzayAqY3B1bWFzaywKK3ZvaWQgbmF0aXZlX2ZsdXNoX3RsYl9tdWx0aShjb25zdCBzdHJ1
Y3QgY3B1bWFzayAqY3B1bWFzaywKIAkJCSAgICAgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9pbmZv
ICppbmZvKTsKIAogc3RhdGljIGlubGluZSB1NjQgaW5jX21tX3RsYl9nZW4oc3RydWN0IG1tX3N0
cnVjdCAqbW0pCkBAIC02MTAsOCArNjEwLDggQEAgc3RhdGljIGlubGluZSB2b2lkIGFyY2hfdGxi
YmF0Y2hfYWRkX21tKHN0cnVjdCBhcmNoX3RsYmZsdXNoX3VubWFwX2JhdGNoICpiYXRjaCwKIGV4
dGVybiB2b2lkIGFyY2hfdGxiYmF0Y2hfZmx1c2goc3RydWN0IGFyY2hfdGxiZmx1c2hfdW5tYXBf
YmF0Y2ggKmJhdGNoKTsKIAogI2lmbmRlZiBDT05GSUdfUEFSQVZJUlQKLSNkZWZpbmUgZmx1c2hf
dGxiX290aGVycyhtYXNrLCBpbmZvKQlcCi0JbmF0aXZlX2ZsdXNoX3RsYl9vdGhlcnMobWFzaywg
aW5mbykKKyNkZWZpbmUgZmx1c2hfdGxiX211bHRpKG1hc2ssIGluZm8pCVwKKwluYXRpdmVfZmx1
c2hfdGxiX211bHRpKG1hc2ssIGluZm8pCiAKICNkZWZpbmUgcGFyYXZpcnRfdGxiX3JlbW92ZV90
YWJsZSh0bGIsIHBhZ2UpIFwKIAl0bGJfcmVtb3ZlX3BhZ2UodGxiLCAodm9pZCAqKShwYWdlKSkK
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3RyYWNlL2h5cGVydi5oIGIvYXJjaC94
ODYvaW5jbHVkZS9hc20vdHJhY2UvaHlwZXJ2LmgKaW5kZXggYWNlNDY0ZjA5NjgxLi44NWNhODU2
MGM3ZjkgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3RyYWNlL2h5cGVydi5oCisr
KyBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3RyYWNlL2h5cGVydi5oCkBAIC04LDcgKzgsNyBAQAog
CiAjaWYgSVNfRU5BQkxFRChDT05GSUdfSFlQRVJWKQogCi1UUkFDRV9FVkVOVChoeXBlcnZfbW11
X2ZsdXNoX3RsYl9vdGhlcnMsCitUUkFDRV9FVkVOVChoeXBlcnZfbW11X2ZsdXNoX3RsYl9tdWx0
aSwKIAkgICAgVFBfUFJPVE8oY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdXMsCiAJCSAgICAgY29u
c3Qgc3RydWN0IGZsdXNoX3RsYl9pbmZvICppbmZvKSwKIAkgICAgVFBfQVJHUyhjcHVzLCBpbmZv
KSwKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2tlcm5lbC9rdm0uYyBiL2FyY2gveDg2L2tlcm5lbC9r
dm0uYwppbmRleCA0Y2M5NjcxNzhiZjkuLjA5NDFkMmQ3ZjFjYiAxMDA2NDQKLS0tIGEvYXJjaC94
ODYva2VybmVsL2t2bS5jCisrKyBiL2FyY2gveDg2L2tlcm5lbC9rdm0uYwpAQCAtNTkyLDcgKzU5
Miw3IEBAIHN0YXRpYyB2b2lkIF9faW5pdCBrdm1fYXBmX3RyYXBfaW5pdCh2b2lkKQogCiBzdGF0
aWMgREVGSU5FX1BFUl9DUFUoY3B1bWFza192YXJfdCwgX19wdl90bGJfbWFzayk7CiAKLXN0YXRp
YyB2b2lkIGt2bV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNr
LAorc3RhdGljIHZvaWQga3ZtX2ZsdXNoX3RsYl9tdWx0aShjb25zdCBzdHJ1Y3QgY3B1bWFzayAq
Y3B1bWFzaywKIAkJCWNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5mbykKIHsKIAl1OCBz
dGF0ZTsKQEAgLTYwNiw2ICs2MDYsMTEgQEAgc3RhdGljIHZvaWQga3ZtX2ZsdXNoX3RsYl9vdGhl
cnMoY29uc3Qgc3RydWN0IGNwdW1hc2sgKmNwdW1hc2ssCiAJICogcXVldWUgZmx1c2hfb25fZW50
ZXIgZm9yIHByZS1lbXB0ZWQgdkNQVXMKIAkgKi8KIAlmb3JfZWFjaF9jcHUoY3B1LCBmbHVzaG1h
c2spIHsKKwkJLyoKKwkJICogVGhlIGxvY2FsIHZDUFUgaXMgbmV2ZXIgcHJlZW1wdGVkLCBzbyB3
ZSBkbyBub3QgZXhwbGljaXRseQorCQkgKiBza2lwIGNoZWNrIGZvciBsb2NhbCB2Q1BVIC0gaXQg
d2lsbCBuZXZlciBiZSBjbGVhcmVkIGZyb20KKwkJICogZmx1c2htYXNrLgorCQkgKi8KIAkJc3Jj
ID0gJnBlcl9jcHUoc3RlYWxfdGltZSwgY3B1KTsKIAkJc3RhdGUgPSBSRUFEX09OQ0Uoc3JjLT5w
cmVlbXB0ZWQpOwogCQlpZiAoKHN0YXRlICYgS1ZNX1ZDUFVfUFJFRU1QVEVEKSkgewpAQCAtNjE1
LDcgKzYyMCw3IEBAIHN0YXRpYyB2b2lkIGt2bV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVj
dCBjcHVtYXNrICpjcHVtYXNrLAogCQl9CiAJfQogCi0JbmF0aXZlX2ZsdXNoX3RsYl9vdGhlcnMo
Zmx1c2htYXNrLCBpbmZvKTsKKwluYXRpdmVfZmx1c2hfdGxiX211bHRpKGZsdXNobWFzaywgaW5m
byk7CiB9CiAKIHN0YXRpYyB2b2lkIF9faW5pdCBrdm1fZ3Vlc3RfaW5pdCh2b2lkKQpAQCAtNjM3
LDcgKzY0Miw3IEBAIHN0YXRpYyB2b2lkIF9faW5pdCBrdm1fZ3Vlc3RfaW5pdCh2b2lkKQogCWlm
IChrdm1fcGFyYV9oYXNfZmVhdHVyZShLVk1fRkVBVFVSRV9QVl9UTEJfRkxVU0gpICYmCiAJICAg
ICFrdm1fcGFyYV9oYXNfaGludChLVk1fSElOVFNfUkVBTFRJTUUpICYmCiAJICAgIGt2bV9wYXJh
X2hhc19mZWF0dXJlKEtWTV9GRUFUVVJFX1NURUFMX1RJTUUpKSB7Ci0JCXB2X29wcy5tbXUuZmx1
c2hfdGxiX290aGVycyA9IGt2bV9mbHVzaF90bGJfb3RoZXJzOworCQlwdl9vcHMubW11LmZsdXNo
X3RsYl9tdWx0aSA9IGt2bV9mbHVzaF90bGJfbXVsdGk7CiAJCXB2X29wcy5tbXUudGxiX3JlbW92
ZV90YWJsZSA9IHRsYl9yZW1vdmVfdGFibGU7CiAJfQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9r
ZXJuZWwvcGFyYXZpcnQuYyBiL2FyY2gveDg2L2tlcm5lbC9wYXJhdmlydC5jCmluZGV4IDU5ZDNk
Mjc2M2E5ZS4uNTUyMGEwNGM4NGJhIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rZXJuZWwvcGFyYXZp
cnQuYworKysgYi9hcmNoL3g4Ni9rZXJuZWwvcGFyYXZpcnQuYwpAQCAtMzU5LDcgKzM1OSw3IEBA
IHN0cnVjdCBwYXJhdmlydF9wYXRjaF90ZW1wbGF0ZSBwdl9vcHMgPSB7CiAJLm1tdS5mbHVzaF90
bGJfdXNlcgk9IG5hdGl2ZV9mbHVzaF90bGIsCiAJLm1tdS5mbHVzaF90bGJfa2VybmVsCT0gbmF0
aXZlX2ZsdXNoX3RsYl9nbG9iYWwsCiAJLm1tdS5mbHVzaF90bGJfb25lX3VzZXIJPSBuYXRpdmVf
Zmx1c2hfdGxiX29uZV91c2VyLAotCS5tbXUuZmx1c2hfdGxiX290aGVycwk9IG5hdGl2ZV9mbHVz
aF90bGJfb3RoZXJzLAorCS5tbXUuZmx1c2hfdGxiX211bHRpCT0gbmF0aXZlX2ZsdXNoX3RsYl9t
dWx0aSwKIAkubW11LnRsYl9yZW1vdmVfdGFibGUJPQogCQkJKHZvaWQgKCopKHN0cnVjdCBtbXVf
Z2F0aGVyICosIHZvaWQgKikpdGxiX3JlbW92ZV9wYWdlLAogCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni9tbS90bGIuYyBiL2FyY2gveDg2L21tL3RsYi5jCmluZGV4IGMzY2EzNTQ1ZDc4YS4uNTM3NmE1
NDQ3YmQwIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9tbS90bGIuYworKysgYi9hcmNoL3g4Ni9tbS90
bGIuYwpAQCAtNTYyLDcgKzU2Miw3IEBAIHN0YXRpYyB2b2lkIGZsdXNoX3RsYl9mdW5jKHZvaWQg
KmluZm8pCiAJCSAqIGdhcmJhZ2UgaW50byBvdXIgVExCLiAgU2luY2Ugc3dpdGNoaW5nIHRvIGlu
aXRfbW0gaXMgYmFyZWx5CiAJCSAqIHNsb3dlciB0aGFuIGEgbWluaW1hbCBmbHVzaCwganVzdCBz
d2l0Y2ggdG8gaW5pdF9tbS4KIAkJICoKLQkJICogVGhpcyBzaG91bGQgYmUgcmFyZSwgd2l0aCBu
YXRpdmVfZmx1c2hfdGxiX290aGVycyBza2lwcGluZworCQkgKiBUaGlzIHNob3VsZCBiZSByYXJl
LCB3aXRoIG5hdGl2ZV9mbHVzaF90bGJfbXVsdGkoKSBza2lwcGluZwogCQkgKiBJUElzIHRvIGxh
enkgVExCIG1vZGUgQ1BVcy4KIAkJICovCiAJCXN3aXRjaF9tbV9pcnFzX29mZihOVUxMLCAmaW5p
dF9tbSwgTlVMTCk7CkBAIC02NjAsOSArNjYwLDE0IEBAIHN0YXRpYyBib29sIHRsYl9pc19ub3Rf
bGF6eShpbnQgY3B1KQogCiBzdGF0aWMgREVGSU5FX1BFUl9DUFUoY3B1bWFza190LCBmbHVzaF90
bGJfbWFzayk7CiAKLXZvaWQgbmF0aXZlX2ZsdXNoX3RsYl9vdGhlcnMoY29uc3Qgc3RydWN0IGNw
dW1hc2sgKmNwdW1hc2ssCi0JCQkgICAgIGNvbnN0IHN0cnVjdCBmbHVzaF90bGJfaW5mbyAqaW5m
bykKK3ZvaWQgbmF0aXZlX2ZsdXNoX3RsYl9tdWx0aShjb25zdCBzdHJ1Y3QgY3B1bWFzayAqY3B1
bWFzaywKKwkJCSAgICBjb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmluZm8pCiB7CisJLyoK
KwkgKiBEbyBhY2NvdW50aW5nIGFuZCB0cmFjaW5nLiBOb3RlIHRoYXQgdGhlcmUgYXJlIChhbmQg
aGF2ZSBhbHdheXMgYmVlbikKKwkgKiBjYXNlcyBpbiB3aGljaCBhIHJlbW90ZSBUTEIgZmx1c2gg
d2lsbCBiZSB0cmFjZWQsIGJ1dCBldmVudHVhbGx5CisJICogd291bGQgbm90IGhhcHBlbi4KKwkg
Ki8KIAljb3VudF92bV90bGJfZXZlbnQoTlJfVExCX1JFTU9URV9GTFVTSCk7CiAJaWYgKGluZm8t
PmVuZCA9PSBUTEJfRkxVU0hfQUxMKQogCQl0cmFjZV90bGJfZmx1c2goVExCX1JFTU9URV9TRU5E
X0lQSSwgVExCX0ZMVVNIX0FMTCk7CkBAIC02ODIsMTAgKzY4NywxMiBAQCB2b2lkIG5hdGl2ZV9m
bHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVtYXNrLAogCQkgKiBtZWFu
cyB0aGF0IHRoZSBwZXJjcHUgdGxiX2dlbiB2YXJpYWJsZXMgd29uJ3QgYmUgdXBkYXRlZAogCQkg
KiBhbmQgd2UnbGwgZG8gcG9pbnRsZXNzIGZsdXNoZXMgb24gZnV0dXJlIGNvbnRleHQgc3dpdGNo
ZXMuCiAJCSAqCi0JCSAqIFJhdGhlciB0aGFuIGhvb2tpbmcgbmF0aXZlX2ZsdXNoX3RsYl9vdGhl
cnMoKSBoZXJlLCBJIHRoaW5rCisJCSAqIFJhdGhlciB0aGFuIGhvb2tpbmcgbmF0aXZlX2ZsdXNo
X3RsYl9tdWx0aSgpIGhlcmUsIEkgdGhpbmsKIAkJICogdGhhdCBVViBzaG91bGQgYmUgdXBkYXRl
ZCBzbyB0aGF0IHNtcF9jYWxsX2Z1bmN0aW9uX21hbnkoKSwKIAkJICogZXRjLCBhcmUgb3B0aW1h
bCBvbiBVVi4KIAkJICovCisJCWZsdXNoX3RsYl9mdW5jKCh2b2lkICopaW5mbyk7CisKIAkJY3B1
bWFzayA9IHV2X2ZsdXNoX3RsYl9vdGhlcnMoY3B1bWFzaywgaW5mbyk7CiAJCWlmIChjcHVtYXNr
KQogCQkJc21wX2NhbGxfZnVuY3Rpb25fbWFueShjcHVtYXNrLCBmbHVzaF90bGJfZnVuYywKQEAg
LTcwNCw3ICs3MTEsOCBAQCB2b2lkIG5hdGl2ZV9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVj
dCBjcHVtYXNrICpjcHVtYXNrLAogCSAqIGRvaW5nIGEgc3BlY3VsYXRpdmUgbWVtb3J5IGFjY2Vz
cy4KIAkgKi8KIAlpZiAoaW5mby0+ZnJlZWRfdGFibGVzKSB7Ci0JCXNtcF9jYWxsX2Z1bmN0aW9u
X21hbnkoY3B1bWFzaywgZmx1c2hfdGxiX2Z1bmMsICh2b2lkICopaW5mbywgMSk7CisJCV9fc21w
X2NhbGxfZnVuY3Rpb25fbWFueShjcHVtYXNrLCBmbHVzaF90bGJfZnVuYywgKHZvaWQgKilpbmZv
LAorCQkJCQkgU0NGX1dBSVQgfCBTQ0ZfUlVOX0xPQ0FMKTsKIAl9IGVsc2UgewogCQkvKgogCQkg
KiBBbHRob3VnaCB3ZSBjb3VsZCBoYXZlIHVzZWQgb25fZWFjaF9jcHVfY29uZF9tYXNrKCksCkBA
IC03MzEsNyArNzM5LDggQEAgdm9pZCBuYXRpdmVfZmx1c2hfdGxiX290aGVycyhjb25zdCBzdHJ1
Y3QgY3B1bWFzayAqY3B1bWFzaywKIAkJCWlmICh0bGJfaXNfbm90X2xhenkoY3B1KSkKIAkJCQlf
X2NwdW1hc2tfc2V0X2NwdShjcHUsIGNvbmRfY3B1bWFzayk7CiAJCX0KLQkJc21wX2NhbGxfZnVu
Y3Rpb25fbWFueShjb25kX2NwdW1hc2ssIGZsdXNoX3RsYl9mdW5jLCAodm9pZCAqKWluZm8sIDEp
OworCQlfX3NtcF9jYWxsX2Z1bmN0aW9uX21hbnkoY29uZF9jcHVtYXNrLCBmbHVzaF90bGJfZnVu
YywKKwkJCQkJICh2b2lkICopaW5mbywgU0NGX1dBSVQgfCBTQ0ZfUlVOX0xPQ0FMKTsKIAl9CiB9
CiAKQEAgLTgxMiwxNiArODIxLDIwIEBAIHZvaWQgZmx1c2hfdGxiX21tX3JhbmdlKHN0cnVjdCBt
bV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIHN0YXJ0LAogCWluZm8gPSBnZXRfZmx1c2hfdGxi
X2luZm8obW0sIHN0YXJ0LCBlbmQsIHN0cmlkZV9zaGlmdCwgZnJlZWRfdGFibGVzLAogCQkJCSAg
bmV3X3RsYl9nZW4pOwogCi0JaWYgKG1tID09IHRoaXNfY3B1X3JlYWQoY3B1X3RsYnN0YXRlLmxv
YWRlZF9tbSkpIHsKKwkvKgorCSAqIGZsdXNoX3RsYl9tdWx0aSgpIGlzIG5vdCBvcHRpbWl6ZWQg
Zm9yIHRoZSBjb21tb24gY2FzZSBpbiB3aGljaCBvbmx5CisJICogYSBsb2NhbCBUTEIgZmx1c2gg
aXMgbmVlZGVkLiBPcHRpbWl6ZSB0aGlzIHVzZS1jYXNlIGJ5IGNhbGxpbmcKKwkgKiBmbHVzaF90
bGJfZnVuY19sb2NhbCgpIGRpcmVjdGx5IGluIHRoaXMgY2FzZS4KKwkgKi8KKwlpZiAoY3B1bWFz
a19hbnlfYnV0KG1tX2NwdW1hc2sobW0pLCBjcHUpIDwgbnJfY3B1X2lkcykgeworCQlmbHVzaF90
bGJfbXVsdGkobW1fY3B1bWFzayhtbSksIGluZm8pOworCX0gZWxzZSBpZiAobW0gPT0gdGhpc19j
cHVfcmVhZChjcHVfdGxic3RhdGUubG9hZGVkX21tKSkgewogCQlsb2NrZGVwX2Fzc2VydF9pcnFz
X2VuYWJsZWQoKTsKIAkJbG9jYWxfaXJxX2Rpc2FibGUoKTsKIAkJZmx1c2hfdGxiX2Z1bmMoaW5m
byk7CiAJCWxvY2FsX2lycV9lbmFibGUoKTsKIAl9CiAKLQlpZiAoY3B1bWFza19hbnlfYnV0KG1t
X2NwdW1hc2sobW0pLCBjcHUpIDwgbnJfY3B1X2lkcykKLQkJZmx1c2hfdGxiX290aGVycyhtbV9j
cHVtYXNrKG1tKSwgaW5mbyk7Ci0KIAlwdXRfZmx1c2hfdGxiX2luZm8oKTsKIAlwdXRfY3B1KCk7
CiB9CkBAIC04NzUsMTYgKzg4OCwyMCBAQCB2b2lkIGFyY2hfdGxiYmF0Y2hfZmx1c2goc3RydWN0
IGFyY2hfdGxiZmx1c2hfdW5tYXBfYmF0Y2ggKmJhdGNoKQogCiAJaW5mbyA9IGdldF9mbHVzaF90
bGJfaW5mbyhOVUxMLCAwLCBUTEJfRkxVU0hfQUxMLCAwLCBmYWxzZSwgMCk7CiAKLQlpZiAoY3B1
bWFza190ZXN0X2NwdShjcHUsICZiYXRjaC0+Y3B1bWFzaykpIHsKKwkvKgorCSAqIGZsdXNoX3Rs
Yl9tdWx0aSgpIGlzIG5vdCBvcHRpbWl6ZWQgZm9yIHRoZSBjb21tb24gY2FzZSBpbiB3aGljaCBv
bmx5CisJICogYSBsb2NhbCBUTEIgZmx1c2ggaXMgbmVlZGVkLiBPcHRpbWl6ZSB0aGlzIHVzZS1j
YXNlIGJ5IGNhbGxpbmcKKwkgKiBmbHVzaF90bGJfZnVuY19sb2NhbCgpIGRpcmVjdGx5IGluIHRo
aXMgY2FzZS4KKwkgKi8KKwlpZiAoY3B1bWFza19hbnlfYnV0KCZiYXRjaC0+Y3B1bWFzaywgY3B1
KSA8IG5yX2NwdV9pZHMpIHsKKwkJZmx1c2hfdGxiX211bHRpKCZiYXRjaC0+Y3B1bWFzaywgaW5m
byk7CisJfSBlbHNlIGlmIChjcHVtYXNrX3Rlc3RfY3B1KGNwdSwgJmJhdGNoLT5jcHVtYXNrKSkg
ewogCQlsb2NrZGVwX2Fzc2VydF9pcnFzX2VuYWJsZWQoKTsKIAkJbG9jYWxfaXJxX2Rpc2FibGUo
KTsKIAkJZmx1c2hfdGxiX2Z1bmMoaW5mbyk7CiAJCWxvY2FsX2lycV9lbmFibGUoKTsKIAl9CiAK
LQlpZiAoY3B1bWFza19hbnlfYnV0KCZiYXRjaC0+Y3B1bWFzaywgY3B1KSA8IG5yX2NwdV9pZHMp
Ci0JCWZsdXNoX3RsYl9vdGhlcnMoJmJhdGNoLT5jcHVtYXNrLCBpbmZvKTsKLQogCWNwdW1hc2tf
Y2xlYXIoJmJhdGNoLT5jcHVtYXNrKTsKIAogCXB1dF9mbHVzaF90bGJfaW5mbygpOwpkaWZmIC0t
Z2l0IGEvYXJjaC94ODYveGVuL21tdV9wdi5jIGIvYXJjaC94ODYveGVuL21tdV9wdi5jCmluZGV4
IDI2ZThiMzI2OTY2ZC4uNDhmN2M3ZWI0ZGJjIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni94ZW4vbW11
X3B2LmMKKysrIGIvYXJjaC94ODYveGVuL21tdV9wdi5jCkBAIC0xMzQ1LDggKzEzNDUsOCBAQCBz
dGF0aWMgdm9pZCB4ZW5fZmx1c2hfdGxiX29uZV91c2VyKHVuc2lnbmVkIGxvbmcgYWRkcikKIAlw
cmVlbXB0X2VuYWJsZSgpOwogfQogCi1zdGF0aWMgdm9pZCB4ZW5fZmx1c2hfdGxiX290aGVycyhj
b25zdCBzdHJ1Y3QgY3B1bWFzayAqY3B1cywKLQkJCQkgY29uc3Qgc3RydWN0IGZsdXNoX3RsYl9p
bmZvICppbmZvKQorc3RhdGljIHZvaWQgeGVuX2ZsdXNoX3RsYl9tdWx0aShjb25zdCBzdHJ1Y3Qg
Y3B1bWFzayAqY3B1cywKKwkJCQljb25zdCBzdHJ1Y3QgZmx1c2hfdGxiX2luZm8gKmluZm8pCiB7
CiAJc3RydWN0IHsKIAkJc3RydWN0IG1tdWV4dF9vcCBvcDsKQEAgLTEzNTYsNyArMTM1Niw3IEBA
IHN0YXRpYyB2b2lkIHhlbl9mbHVzaF90bGJfb3RoZXJzKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpj
cHVzLAogCWNvbnN0IHNpemVfdCBtY19lbnRyeV9zaXplID0gc2l6ZW9mKGFyZ3MtPm9wKSArCiAJ
CXNpemVvZihhcmdzLT5tYXNrWzBdKSAqIEJJVFNfVE9fTE9OR1MobnVtX3Bvc3NpYmxlX2NwdXMo
KSk7CiAKLQl0cmFjZV94ZW5fbW11X2ZsdXNoX3RsYl9vdGhlcnMoY3B1cywgaW5mby0+bW0sIGlu
Zm8tPnN0YXJ0LCBpbmZvLT5lbmQpOworCXRyYWNlX3hlbl9tbXVfZmx1c2hfdGxiX211bHRpKGNw
dXMsIGluZm8tPm1tLCBpbmZvLT5zdGFydCwgaW5mby0+ZW5kKTsKIAogCWlmIChjcHVtYXNrX2Vt
cHR5KGNwdXMpKQogCQlyZXR1cm47CQkvKiBub3RoaW5nIHRvIGRvICovCkBAIC0xMzY1LDkgKzEz
NjUsOCBAQCBzdGF0aWMgdm9pZCB4ZW5fZmx1c2hfdGxiX290aGVycyhjb25zdCBzdHJ1Y3QgY3B1
bWFzayAqY3B1cywKIAlhcmdzID0gbWNzLmFyZ3M7CiAJYXJncy0+b3AuYXJnMi52Y3B1bWFzayA9
IHRvX2NwdW1hc2soYXJncy0+bWFzayk7CiAKLQkvKiBSZW1vdmUgdXMsIGFuZCBhbnkgb2ZmbGlu
ZSBDUFVTLiAqLworCS8qIFJlbW92ZSBhbnkgb2ZmbGluZSBDUFVzICovCiAJY3B1bWFza19hbmQo
dG9fY3B1bWFzayhhcmdzLT5tYXNrKSwgY3B1cywgY3B1X29ubGluZV9tYXNrKTsKLQljcHVtYXNr
X2NsZWFyX2NwdShzbXBfcHJvY2Vzc29yX2lkKCksIHRvX2NwdW1hc2soYXJncy0+bWFzaykpOwog
CiAJYXJncy0+b3AuY21kID0gTU1VRVhUX1RMQl9GTFVTSF9NVUxUSTsKIAlpZiAoaW5mby0+ZW5k
ICE9IFRMQl9GTFVTSF9BTEwgJiYKQEAgLTIzOTYsNyArMjM5NSw3IEBAIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgcHZfbW11X29wcyB4ZW5fbW11X29wcyBfX2luaXRjb25zdCA9IHsKIAkuZmx1c2hfdGxi
X3VzZXIgPSB4ZW5fZmx1c2hfdGxiLAogCS5mbHVzaF90bGJfa2VybmVsID0geGVuX2ZsdXNoX3Rs
YiwKIAkuZmx1c2hfdGxiX29uZV91c2VyID0geGVuX2ZsdXNoX3RsYl9vbmVfdXNlciwKLQkuZmx1
c2hfdGxiX290aGVycyA9IHhlbl9mbHVzaF90bGJfb3RoZXJzLAorCS5mbHVzaF90bGJfbXVsdGkg
PSB4ZW5fZmx1c2hfdGxiX211bHRpLAogCS50bGJfcmVtb3ZlX3RhYmxlID0gdGxiX3JlbW92ZV90
YWJsZSwKIAogCS5wZ2RfYWxsb2MgPSB4ZW5fcGdkX2FsbG9jLApkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS90cmFjZS9ldmVudHMveGVuLmggYi9pbmNsdWRlL3RyYWNlL2V2ZW50cy94ZW4uaAppbmRleCA5
YTBlOGFmMjEzMTAuLjU0NjAyMmFjZjE2MCAxMDA2NDQKLS0tIGEvaW5jbHVkZS90cmFjZS9ldmVu
dHMveGVuLmgKKysrIGIvaW5jbHVkZS90cmFjZS9ldmVudHMveGVuLmgKQEAgLTM2Miw3ICszNjIs
NyBAQCBUUkFDRV9FVkVOVCh4ZW5fbW11X2ZsdXNoX3RsYl9vbmVfdXNlciwKIAkgICAgVFBfcHJp
bnRrKCJhZGRyICVseCIsIF9fZW50cnktPmFkZHIpCiAJKTsKIAotVFJBQ0VfRVZFTlQoeGVuX21t
dV9mbHVzaF90bGJfb3RoZXJzLAorVFJBQ0VfRVZFTlQoeGVuX21tdV9mbHVzaF90bGJfbXVsdGks
CiAJICAgIFRQX1BST1RPKGNvbnN0IHN0cnVjdCBjcHVtYXNrICpjcHVzLCBzdHJ1Y3QgbW1fc3Ry
dWN0ICptbSwKIAkJICAgICB1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgZW5kKSwK
IAkgICAgVFBfQVJHUyhjcHVzLCBtbSwgYWRkciwgZW5kKSwKLS0gCjIuMTcuMQoKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5n
IGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJv
amVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

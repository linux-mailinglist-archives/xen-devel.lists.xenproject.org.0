Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 1B327109D74
	for <lists+xen-devel@lfdr.de>; Tue, 26 Nov 2019 13:03:54 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iZZW3-0001mb-Jy; Tue, 26 Nov 2019 12:00:23 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=68iG=ZS=xenbits.xen.org=iwj@srs-us1.protection.inumbo.net>)
 id 1iZZW2-0001mS-5v
 for xen-devel@lists.xen.org; Tue, 26 Nov 2019 12:00:22 +0000
X-Inumbo-ID: 5129893f-1044-11ea-a39f-12813bfff9fa
Received: from mail.xenproject.org (unknown [104.130.215.37])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 5129893f-1044-11ea-a39f-12813bfff9fa;
 Tue, 26 Nov 2019 12:00:20 +0000 (UTC)
Received: from xenbits.xenproject.org ([104.239.192.120])
 by mail.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <iwj@xenbits.xen.org>)
 id 1iZZVo-00028i-Az; Tue, 26 Nov 2019 12:00:08 +0000
Received: from iwj by xenbits.xenproject.org with local (Exim 4.89)
 (envelope-from <iwj@xenbits.xen.org>)
 id 1iZZVo-0005iD-8p; Tue, 26 Nov 2019 12:00:08 +0000
Content-Type: multipart/mixed; boundary="=separator"; charset="utf-8"
Content-Transfer-Encoding: binary
MIME-Version: 1.0
X-Mailer: MIME-tools 5.508 (Entity 5.508)
To: xen-announce@lists.xen.org, xen-devel@lists.xen.org,
 xen-users@lists.xen.org, oss-security@lists.openwall.com
From: Xen.org security team <security@xen.org>
Message-Id: <E1iZZVo-0005iD-8p@xenbits.xenproject.org>
Date: Tue, 26 Nov 2019 12:00:08 +0000
Subject: [Xen-devel] Xen Security Advisory 306 v2 - Device quarantine for
 alternate pci assignment methods
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: "Xen.org security team" <security-team-members@xen.org>
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

--=separator
Content-Type: text/plain; charset="utf-8"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

                    Xen Security Advisory XSA-306
                              version 2

        Device quarantine for alternate pci assignment methods

UPDATES IN VERSION 2
====================

Public release.

ISSUE DESCRIPTION
=================

XSA-302 relies on the use of libxl's "assignable-add" feature to
prepare devices to be assigned to untrusted guests.

Unfortunately, this is not considered a strictly required step for
device assignment.  The PCI passthrough documentation on the wiki
describes alternate ways of preparing devices for assignment, and
libvirt uses its own ways as well.  Hosts where these "alternate"
methods are used will still leave the system in a vulnerable state
after the device comes back from a guest.

IMPACT
======

An untrusted domain with access to a physical device can DMA into host
memory, leading to privilege escalation.

VULNERABLE SYSTEMS
==================

Only systems where guests are given direct access to physical devices
capable of DMA (PCI pass-through) are vulnerable.  Systems which do
not use PCI pass-through are not vulnerable.

Only systems which use "alternate" methods to assign devices to pciback
before assignment are vulnerable.  These methods include:
 - Assigning devices on the Linux command-line using `xen-pciback.hide`
 - Assigning devices via xen-pciback module parameters
 - Assigning devices manually via sysfs
 - Assigning devices using libvirt

Systems which use `xl pci-assignable-add` or
libxl_device_pci_assignable_add, or have the assignable state handled
automatically via setting the `seize` parameter, are not affected.

MITIGATION
==========

For xl and libvirt, before assigning a device to a guest, manually run
`xl pci-assignable-add`.  This will quarantine the device even if the
device has already been assigned to pciback by one of the alternate
methods.  This may also work for other libxl-based toolstacks,
depending on the particular implementation.

CREDITS
=======

This issue was discovered by Marek Marczykowski-GÃ³recki of Invisible
Things Lab.

RESOLUTION
==========

Applying the appropriate attached patch resolves this issue.

Note that this patch will quarantine the device after the domain is
destroyed by default.  It must be un-quarantined before it can be used
by domain 0 again.  This can be done by executing `xl
pci-assignable-remove`.  This will be effective even if the device was
assigned to pciback with one of the alternate methods.

xsa306.patch           xen-unstable
xsa306-4.12.patch      Xen 4.12.x
xsa306-4.11.patch      Xen 4.11.x, Xen 4.10.x
xsa306-4.9.patch       Xen 4.9.x, Xen 4.8.x

$ sha256sum xsa306*
07468dcdfbe34b794fd0618bce7d6d1edb6b10b234dccf1e5dd1f1120a0affe7  xsa306.meta
3534ec46f03bb8dac3011e0e3739fc75400559078e4361bbe5385d97b7892650  xsa306.patch
426e32bfa7d7787fe6778685e623966f8762857f7920443a0ca73347df9d6624  xsa306-4.9.patch
b00e58c9f96b0ff654dfd4904c675a54356148af718eb9b2adca0253b900dfc1  xsa306-4.11.patch
69857d08969903452fbf009905a145e06a5aef9966e969de9fbb22e62c557ffd  xsa306-4.12.patch
$

DEPLOYMENT DURING EMBARGO
=========================

Deployment of the patches and/or mitigations described above (or
others which are substantially similar) is permitted during the
embargo, even on public-facing systems with untrusted guest users and
administrators.

But: Distribution of updated software is prohibited (except to other
members of the predisclosure list).

Predisclosure list members who wish to deploy significantly different
patches and/or mitigations, please contact the Xen Project Security
Team.


(Note: this during-embargo deployment notice is retained in
post-embargo publicly released Xen Project advisories, even though it
is then no longer applicable.  This is to enable the community to have
oversight of the Xen Project Security Team's decisionmaking.)

For more information about permissible uses of embargoed information,
consult the Xen Project community's agreed Security Policy:
  http://www.xenproject.org/security-policy.html
-----BEGIN PGP SIGNATURE-----

iQFABAEBCAAqFiEEI+MiLBRfRHX6gGCng/4UyVfoK9kFAl3dE7EMHHBncEB4ZW4u
b3JnAAoJEIP+FMlX6CvZdj0H/1MUzg8URNtE5FsG5Q0OwszcNXSuV1qW9B6mZCRJ
ffGyGtTmhM2M/KXao9j15Hn83BVxTh5iFVkmZ9LoQSFiwu4L9nhx8KGw+nnspb9G
v2+NrEbZRpxbloPxDplMfWLx1/GNFCs+wK550LtGC+yzITqMckacD6cTkbEGmIwR
otLTU3JTlfwMnvhZraDzVrICyX/+vNri9EvHd7Tviz1yXk83QMapgZ+xJCocUY3n
kA93XN2yG/xFB0jHky75wBT2HFRR1RpmLECSodiOP0ONLPJiRBl3O2ziqb8OtdRD
mkMvTMWEJawTPiWKc5CS4ieD2YyiUngFC806r2LDpRk6468=
=gi2B
-----END PGP SIGNATURE-----

--=separator
Content-Type: application/octet-stream; name="xsa306.meta"
Content-Disposition: attachment; filename="xsa306.meta"
Content-Transfer-Encoding: base64

ewogICJYU0EiOiAzMDYsCiAgIlN1cHBvcnRlZFZlcnNpb25zIjogWwogICAg
Im1hc3RlciIsCiAgICAiNC4xMiIsCiAgICAiNC4xMSIsCiAgICAiNC4xMCIs
CiAgICAiNC45IiwKICAgICI0LjgiCiAgXSwKICAiVHJlZXMiOiBbCiAgICAi
eGVuIgogIF0sCiAgIlJlY2lwZXMiOiB7CiAgICAiNC4xMCI6IHsKICAgICAg
IlJlY2lwZXMiOiB7CiAgICAgICAgInhlbiI6IHsKICAgICAgICAgICJTdGFi
bGVSZWYiOiAiMWRhM2RhYjg2Y2YyMTljMTc5YTIzYTA1MTgwMjFhYjYwMWQw
ODY2MSIsCiAgICAgICAgICAiUHJlcmVxcyI6IFtdLAogICAgICAgICAgIlBh
dGNoZXMiOiBbCiAgICAgICAgICAgICJ4c2EzMDYtNC4xMS5wYXRjaCIKICAg
ICAgICAgIF0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiNC4xMSI6
IHsKICAgICAgIlJlY2lwZXMiOiB7CiAgICAgICAgInhlbiI6IHsKICAgICAg
ICAgICJTdGFibGVSZWYiOiAiMDA2YjIwNDEyNDIxMjk4OTZmYmQzMDEzNWIz
ZGM2ZjU3NTg5NGEwNyIsCiAgICAgICAgICAiUHJlcmVxcyI6IFtdLAogICAg
ICAgICAgIlBhdGNoZXMiOiBbCiAgICAgICAgICAgICJ4c2EzMDYtNC4xMS5w
YXRjaCIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAg
ICAiNC4xMiI6IHsKICAgICAgIlJlY2lwZXMiOiB7CiAgICAgICAgInhlbiI6
IHsKICAgICAgICAgICJTdGFibGVSZWYiOiAiMjc4ZTQ2YWU4Zjk5NDg1OTE1
YWU2NjJlNzkwNWM4MzMzYTU1MDQ4YSIsCiAgICAgICAgICAiUHJlcmVxcyI6
IFtdLAogICAgICAgICAgIlBhdGNoZXMiOiBbCiAgICAgICAgICAgICJ4c2Ez
MDYtNC4xMi5wYXRjaCIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0K
ICAgIH0sCiAgICAiNC44IjogewogICAgICAiUmVjaXBlcyI6IHsKICAgICAg
ICAieGVuIjogewogICAgICAgICAgIlN0YWJsZVJlZiI6ICI4MGU2N2U0MzVm
YzFmNzMwYzEyM2ViNDc1ZjlhN2RlOTIxMGI1NGMzIiwKICAgICAgICAgICJQ
cmVyZXFzIjogW10sCiAgICAgICAgICAiUGF0Y2hlcyI6IFsKICAgICAgICAg
ICAgInhzYTMwNi00LjkucGF0Y2giCiAgICAgICAgICBdCiAgICAgICAgfQog
ICAgICB9CiAgICB9LAogICAgIjQuOSI6IHsKICAgICAgIlJlY2lwZXMiOiB7
CiAgICAgICAgInhlbiI6IHsKICAgICAgICAgICJTdGFibGVSZWYiOiAiOGM1
MmVlMjY3OWYyNGU2MjgxZGU5M2FkNjg2ODNlZGNhZDdlZjNjZSIsCiAgICAg
ICAgICAiUHJlcmVxcyI6IFtdLAogICAgICAgICAgIlBhdGNoZXMiOiBbCiAg
ICAgICAgICAgICJ4c2EzMDYtNC45LnBhdGNoIgogICAgICAgICAgXQogICAg
ICAgIH0KICAgICAgfQogICAgfSwKICAgICJtYXN0ZXIiOiB7CiAgICAgICJS
ZWNpcGVzIjogewogICAgICAgICJ4ZW4iOiB7CiAgICAgICAgICAiU3RhYmxl
UmVmIjogIjM2ODMyOTBmYzBiMGQ2NTAwMzkyZGI3MzM4MTFjYzc4YmNiMzVl
YWIiLAogICAgICAgICAgIlByZXJlcXMiOiBbXSwKICAgICAgICAgICJQYXRj
aGVzIjogWwogICAgICAgICAgICAieHNhMzA2LnBhdGNoIgogICAgICAgICAg
XQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQ==

--=separator
Content-Type: application/octet-stream; name="xsa306.patch"
Content-Disposition: attachment; filename="xsa306.patch"
Content-Transfer-Encoding: base64

RnJvbTogSmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgpTdWJqZWN0
OiBJT01NVTogZGVmYXVsdCB0byBhbHdheXMgcXVhcmFudGluaW5nIFBDSSBk
ZXZpY2VzCgpYU0EtMzAyIHJlbGllcyBvbiB0aGUgdXNlIG9mIGxpYnhsJ3Mg
ImFzc2lnbmFibGUtYWRkIiBmZWF0dXJlIHRvIHByZXBhcmUKZGV2aWNlcyB0
byBiZSBhc3NpZ25lZCB0byB1bnRydXN0ZWQgZ3Vlc3RzLgoKVW5mb3J0dW5h
dGVseSwgdGhpcyBpcyBub3QgY29uc2lkZXJlZCBhIHN0cmljdGx5IHJlcXVp
cmVkIHN0ZXAgZm9yCmRldmljZSBhc3NpZ25tZW50LiBUaGUgUENJIHBhc3N0
aHJvdWdoIGRvY3VtZW50YXRpb24gb24gdGhlIHdpa2kKZGVzY3JpYmVzIGFs
dGVybmF0ZSB3YXlzIG9mIHByZXBhcmluZyBkZXZpY2VzIGZvciBhc3NpZ25t
ZW50LCBhbmQKbGlidmlydCB1c2VzIGl0cyBvd24gd2F5cyBhcyB3ZWxsLiBI
b3N0cyB3aGVyZSB0aGVzZSBhbHRlcm5hdGUgbWV0aG9kcwphcmUgdXNlZCB3
aWxsIHN0aWxsIGxlYXZlIHRoZSBzeXN0ZW0gaW4gYSB2dWxuZXJhYmxlIHN0
YXRlIGFmdGVyIHRoZQpkZXZpY2UgY29tZXMgYmFjayBmcm9tIGEgZ3Vlc3Qu
CgpEZWZhdWx0IHRvIGFsd2F5cyBxdWFyYW50aW5pbmcgUENJIGRldmljZXMs
IGJ1dCBwcm92aWRlIGEgY29tbWFuZCBsaW5lCm9wdGlvbiB0byByZXZlcnQg
YmFjayB0byBwcmlvciBiZWhhdmlvciAoc3VjaCB0aGF0IHBlb3BsZSB3aG8g
Ym90aApzdWZmaWNpZW50bHkgdHJ1c3QgdGhlaXIgZ3Vlc3RzIGFuZCB3YW50
IHRvIGJlIGFibGUgdG8gdXNlIGRldmljZXMgaW4KRG9tMCBhZ2FpbiBhZnRl
ciB0aGV5IGhhZCBiZWVuIGluIHVzZSBieSBhIGd1ZXN0IHdvdWxkbid0IG5l
ZWQgdG8KIm1hbnVhbGx5IiBtb3ZlIHN1Y2ggZGV2aWNlcyBiYWNrIGZyb20g
RG9tSU8gdG8gRG9tMCkuCgpUaGlzIGlzIFhTQS0zMDYuCgpSZXBvcnRlZC1i
eTogTWFyZWsgTWFyY3p5a293c2tpLUfDs3JlY2tpIDxtYXJtYXJla0BpbnZp
c2libGV0aGluZ3NsYWIuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYW4gQmV1bGlj
aCA8amJldWxpY2hAc3VzZS5jb20+ClJldmlld2VkLWJ5OiBXZWkgTGl1IDx3
bEB4ZW4ub3JnPgotLS0KdjM6IEFkanVzdCBjb21tYW5kIGxpbmUgZG9jLgp2
MjogQWRqdXN0IGRlc2NyaXB0aW9uLgoKLS0tIGEvZG9jcy9taXNjL3hlbi1j
b21tYW5kLWxpbmUucGFuZG9jCisrKyBiL2RvY3MvbWlzYy94ZW4tY29tbWFu
ZC1saW5lLnBhbmRvYwpAQCAtMTE5NCw3ICsxMTk0LDcgQEAgZGV0ZWN0aW9u
IG9mIHN5c3RlbXMga25vd24gdG8gbWlzYmVoYXZlCiA+IERlZmF1bHQ6IGBu
ZXdgIHVubGVzcyBkaXJlY3RlZC1FT0kgaXMgc3VwcG9ydGVkCiAKICMjIyBp
b21tdQotICAgID0gTGlzdCBvZiBbIDxib29sPiwgdmVyYm9zZSwgZGVidWcs
IGZvcmNlLCByZXF1aXJlZCwKKyAgICA9IExpc3Qgb2YgWyA8Ym9vbD4sIHZl
cmJvc2UsIGRlYnVnLCBmb3JjZSwgcmVxdWlyZWQsIHF1YXJhbnRpbmUsCiAg
ICAgICAgICAgICAgICAgc2hhcmVwdCwgaW50cmVtYXAsIGludHBvc3QsIGNy
YXNoLWRpc2FibGUsCiAgICAgICAgICAgICAgICAgc25vb3AsIHFpbnZhbCwg
aWdmeCwgYW1kLWlvbW11LXBlcmRldi1pbnRyZW1hcCwKICAgICAgICAgICAg
ICAgICBkb20wLXtwYXNzdGhyb3VnaCxzdHJpY3R9IF0KQEAgLTEyMzIsNiAr
MTIzMiwxMiBAQCBib29sZWFuIChlLmcuIGBpb21tdT1ub2ApIGNhbiBvdmVy
cmlkZSB0CiAgICAgd2lsbCBwcmV2ZW50IFhlbiBmcm9tIGJvb3RpbmcgaWYg
SU9NTVVzIGFyZW4ndCBkaXNjb3ZlcmVkIGFuZCBlbmFibGVkCiAgICAgc3Vj
Y2Vzc2Z1bGx5LgogCisqICAgVGhlIGBxdWFyYW50aW5lYCBib29sZWFuIGNh
biBiZSB1c2VkIHRvIGNvbnRyb2wgWGVuJ3MgYmVoYXZpb3Igd2hlbgorICAg
IGRlLWFzc2lnbmluZyBkZXZpY2VzIGZyb20gZ3Vlc3RzLiAgSWYgZW5hYmxl
ZCAodGhlIGRlZmF1bHQpLCBYZW4gYWx3YXlzCisgICAgcXVhcmFudGluZXMg
c3VjaCBkZXZpY2VzOyB0aGV5IG11c3QgYmUgZXhwbGljaXRseSBhc3NpZ25l
ZCBiYWNrIHRvIERvbTAKKyAgICBiZWZvcmUgdGhleSBjYW4gYmUgdXNlZCB0
aGVyZSBhZ2Fpbi4gIElmIGRpc2FibGVkLCBYZW4gd2lsbCBvbmx5CisgICAg
cXVhcmFudGluZSBkZXZpY2VzIHRoZSB0b29sc3RhY2sgaGFzcyBhcnJhbmdl
ZCBmb3IgZ2V0dGluZyBxdWFyYW50aW5lZC4KKwogKiAgIFRoZSBgc2hhcmVw
dGAgYm9vbGVhbiBjb250cm9scyB3aGV0aGVyIHRoZSBJT01NVSBwYWdldGFi
bGVzIGFyZSBzaGFyZWQKICAgICB3aXRoIHRoZSBDUFUtc2lkZSBIQVAgcGFn
ZXRhYmxlcywgb3IgYWxsb2NhdGVkIHNlcGFyYXRlbHkuICBTaGFyaW5nCiAg
ICAgcmVkdWNlcyB0aGUgbWVtb3J5IG92ZXJoZWFkLCBidXQgZG9lc24ndCB3
b3JrIGluIGNvbWJpbmF0aW9uIHdpdGggQ1BVLXNpZGUKLS0tIGEveGVuL2Ry
aXZlcnMvcGFzc3Rocm91Z2gvaW9tbXUuYworKysgYi94ZW4vZHJpdmVycy9w
YXNzdGhyb3VnaC9pb21tdS5jCkBAIC0zMCw2ICszMCw3IEBAIGJvb2xfdCBf
X2luaXRkYXRhIGlvbW11X2VuYWJsZSA9IDE7CiBib29sX3QgX19yZWFkX21v
c3RseSBpb21tdV9lbmFibGVkOwogYm9vbF90IF9fcmVhZF9tb3N0bHkgZm9y
Y2VfaW9tbXU7CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV92ZXJib3Nl
OworYm9vbCBfX3JlYWRfbW9zdGx5IGlvbW11X3F1YXJhbnRpbmUgPSB0cnVl
OwogYm9vbF90IF9fcmVhZF9tb3N0bHkgaW9tbXVfaWdmeCA9IDE7CiBib29s
X3QgX19yZWFkX21vc3RseSBpb21tdV9zbm9vcCA9IDE7CiBib29sX3QgX19y
ZWFkX21vc3RseSBpb21tdV9xaW52YWwgPSAxOwpAQCAtNzgsNiArNzksOCBA
QCBzdGF0aWMgaW50IF9faW5pdCBwYXJzZV9pb21tdV9wYXJhbShjb25zCiAg
ICAgICAgIGVsc2UgaWYgKCAodmFsID0gcGFyc2VfYm9vbGVhbigiZm9yY2Ui
LCBzLCBzcykpID49IDAgfHwKICAgICAgICAgICAgICAgICAgICh2YWwgPSBw
YXJzZV9ib29sZWFuKCJyZXF1aXJlZCIsIHMsIHNzKSkgPj0gMCApCiAgICAg
ICAgICAgICBmb3JjZV9pb21tdSA9IHZhbDsKKyAgICAgICAgZWxzZSBpZiAo
ICh2YWwgPSBwYXJzZV9ib29sZWFuKCJxdWFyYW50aW5lIiwgcywgc3MpKSA+
PSAwICkKKyAgICAgICAgICAgIGlvbW11X3F1YXJhbnRpbmUgPSB2YWw7CiAg
ICAgICAgIGVsc2UgaWYgKCAodmFsID0gcGFyc2VfYm9vbGVhbigiaWdmeCIs
IHMsIHNzKSkgPj0gMCApCiAgICAgICAgICAgICBpb21tdV9pZ2Z4ID0gdmFs
OwogICAgICAgICBlbHNlIGlmICggKHZhbCA9IHBhcnNlX2Jvb2xlYW4oInZl
cmJvc2UiLCBzLCBzcykpID49IDAgKQotLS0gYS94ZW4vZHJpdmVycy9wYXNz
dGhyb3VnaC9wY2kuYworKysgYi94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9w
Y2kuYwpAQCAtOTIyLDcgKzkyMiw4IEBAIHN0YXRpYyBpbnQgZGVhc3NpZ25f
ZGV2aWNlKHN0cnVjdCBkb21haW4KICAgICAgICAgcmV0dXJuIC1FTk9ERVY7
CiAKICAgICAvKiBEZS1hc3NpZ25tZW50IGZyb20gZG9tX2lvIHNob3VsZCBk
ZS1xdWFyYW50aW5lIHRoZSBkZXZpY2UgKi8KLSAgICB0YXJnZXQgPSAocGRl
di0+cXVhcmFudGluZSAmJiBwZGV2LT5kb21haW4gIT0gZG9tX2lvKSA/Cisg
ICAgdGFyZ2V0ID0gKChwZGV2LT5xdWFyYW50aW5lIHx8IGlvbW11X3F1YXJh
bnRpbmUpICYmCisgICAgICAgICAgICAgIHBkZXYtPmRvbWFpbiAhPSBkb21f
aW8pID8KICAgICAgICAgZG9tX2lvIDogaGFyZHdhcmVfZG9tYWluOwogCiAg
ICAgd2hpbGUgKCBwZGV2LT5waGFudG9tX3N0cmlkZSApCi0tLSBhL3hlbi9p
bmNsdWRlL3hlbi9pb21tdS5oCisrKyBiL3hlbi9pbmNsdWRlL3hlbi9pb21t
dS5oCkBAIC01Myw3ICs1Myw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbF90IGRm
bl9lcShkZm5fdCB4LCBkZm4KIH0KIAogZXh0ZXJuIGJvb2xfdCBpb21tdV9l
bmFibGUsIGlvbW11X2VuYWJsZWQ7Ci1leHRlcm4gYm9vbF90IGZvcmNlX2lv
bW11LCBpb21tdV92ZXJib3NlLCBpb21tdV9pZ2Z4OworZXh0ZXJuIGJvb2wg
Zm9yY2VfaW9tbXUsIGlvbW11X3F1YXJhbnRpbmUsIGlvbW11X3ZlcmJvc2Us
IGlvbW11X2lnZng7CiBleHRlcm4gYm9vbF90IGlvbW11X3Nub29wLCBpb21t
dV9xaW52YWwsIGlvbW11X2ludHJlbWFwLCBpb21tdV9pbnRwb3N0OwogCiAj
aWYgZGVmaW5lZChDT05GSUdfSU9NTVVfRk9SQ0VfUFRfU0hBUkUpCg==

--=separator
Content-Type: application/octet-stream; name="xsa306-4.9.patch"
Content-Disposition: attachment; filename="xsa306-4.9.patch"
Content-Transfer-Encoding: base64

RnJvbTogSmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgpTdWJqZWN0
OiBJT01NVTogZGVmYXVsdCB0byBhbHdheXMgcXVhcmFudGluaW5nIFBDSSBk
ZXZpY2VzCgpYU0EtMzAyIHJlbGllcyBvbiB0aGUgdXNlIG9mIGxpYnhsJ3Mg
ImFzc2lnbmFibGUtYWRkIiBmZWF0dXJlIHRvIHByZXBhcmUKZGV2aWNlcyB0
byBiZSBhc3NpZ25lZCB0byB1bnRydXN0ZWQgZ3Vlc3RzLgoKVW5mb3J0dW5h
dGVseSwgdGhpcyBpcyBub3QgY29uc2lkZXJlZCBhIHN0cmljdGx5IHJlcXVp
cmVkIHN0ZXAgZm9yCmRldmljZSBhc3NpZ25tZW50LiBUaGUgUENJIHBhc3N0
aHJvdWdoIGRvY3VtZW50YXRpb24gb24gdGhlIHdpa2kKZGVzY3JpYmVzIGFs
dGVybmF0ZSB3YXlzIG9mIHByZXBhcmluZyBkZXZpY2VzIGZvciBhc3NpZ25t
ZW50LCBhbmQKbGlidmlydCB1c2VzIGl0cyBvd24gd2F5cyBhcyB3ZWxsLiBI
b3N0cyB3aGVyZSB0aGVzZSBhbHRlcm5hdGUgbWV0aG9kcwphcmUgdXNlZCB3
aWxsIHN0aWxsIGxlYXZlIHRoZSBzeXN0ZW0gaW4gYSB2dWxuZXJhYmxlIHN0
YXRlIGFmdGVyIHRoZQpkZXZpY2UgY29tZXMgYmFjayBmcm9tIGEgZ3Vlc3Qu
CgpEZWZhdWx0IHRvIGFsd2F5cyBxdWFyYW50aW5pbmcgUENJIGRldmljZXMs
IGJ1dCBwcm92aWRlIGEgY29tbWFuZCBsaW5lCm9wdGlvbiB0byByZXZlcnQg
YmFjayB0byBwcmlvciBiZWhhdmlvciAoc3VjaCB0aGF0IHBlb3BsZSB3aG8g
Ym90aApzdWZmaWNpZW50bHkgdHJ1c3QgdGhlaXIgZ3Vlc3RzIGFuZCB3YW50
IHRvIGJlIGFibGUgdG8gdXNlIGRldmljZXMgaW4KRG9tMCBhZ2FpbiBhZnRl
ciB0aGV5IGhhZCBiZWVuIGluIHVzZSBieSBhIGd1ZXN0IHdvdWxkbid0IG5l
ZWQgdG8KIm1hbnVhbGx5IiBtb3ZlIHN1Y2ggZGV2aWNlcyBiYWNrIGZyb20g
RG9tSU8gdG8gRG9tMCkuCgpUaGlzIGlzIFhTQS0zMDYuCgpSZXBvcnRlZC1i
eTogTWFyZWsgTWFyY3p5a293c2tpLUfDs3JlY2tpIDxtYXJtYXJla0BpbnZp
c2libGV0aGluZ3NsYWIuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYW4gQmV1bGlj
aCA8amJldWxpY2hAc3VzZS5jb20+ClJldmlld2VkLWJ5OiBXZWkgTGl1IDx3
bEB4ZW4ub3JnPgoKLS0tIGEvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUu
bWFya2Rvd24KKysrIGIvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUubWFy
a2Rvd24KQEAgLTEwNDMsNyArMTA0Myw3IEBAIGRlYnVnIGh5cGVydmlzb3Ig
b25seSkuCiA+IERlZmF1bHQ6IGBuZXdgIHVubGVzcyBkaXJlY3RlZC1FT0kg
aXMgc3VwcG9ydGVkCiAKICMjIyBpb21tdQotPiBgPSBMaXN0IG9mIFsgPGJv
b2xlYW4+IHwgZm9yY2UgfCByZXF1aXJlZCB8IGludHJlbWFwIHwgaW50cG9z
dCB8IHFpbnZhbCB8IHNub29wIHwgc2hhcmVwdCB8IGRvbTAtcGFzc3Rocm91
Z2ggfCBkb20wLXN0cmljdCB8IGFtZC1pb21tdS1wZXJkZXYtaW50cmVtYXAg
fCB3b3JrYXJvdW5kX2Jpb3NfYnVnIHwgaWdmeCB8IHZlcmJvc2UgfCBkZWJ1
ZyBdYAorPiBgPSBMaXN0IG9mIFsgPGJvb2xlYW4+IHwgZm9yY2UgfCByZXF1
aXJlZCB8IHF1YXJhbnRpbmUgfCBpbnRyZW1hcCB8IGludHBvc3QgfCBxaW52
YWwgfCBzbm9vcCB8IHNoYXJlcHQgfCBkb20wLXBhc3N0aHJvdWdoIHwgZG9t
MC1zdHJpY3QgfCBhbWQtaW9tbXUtcGVyZGV2LWludHJlbWFwIHwgd29ya2Fy
b3VuZF9iaW9zX2J1ZyB8IGlnZnggfCB2ZXJib3NlIHwgZGVidWcgXWAKIAog
PiBTdWItb3B0aW9uczoKIApAQCAtMTA2Myw2ICsxMDYzLDE1IEBAIGRlYnVn
IGh5cGVydmlzb3Igb25seSkuCiA+PiBEb24ndCBjb250aW51ZSBib290aW5n
IHVubGVzcyBJT01NVSBzdXBwb3J0IGlzIGZvdW5kIGFuZCBjYW4gYmUgaW5p
dGlhbGl6ZWQKID4+IHN1Y2Nlc3NmdWxseS4KIAorPiBgcXVhcmFudGluZWAK
KworPiBEZWZhdWx0OiBgdHJ1ZWAKKworPj4gQ29udHJvbCBYZW4ncyBiZWhh
dmlvciB3aGVuIGRlLWFzc2lnbmluZyBkZXZpY2VzIGZyb20gZ3Vlc3RzLiAg
SWYgZW5hYmxlZCwKKz4+IFhlbiBhbHdheXMgcXVhcmFudGluZXMgc3VjaCBk
ZXZpY2VzOyB0aGV5IG11c3QgYmUgZXhwbGljaXRseSBhc3NpZ25lZCBiYWNr
Cis+PiB0byBEb20wIGJlZm9yZSB0aGV5IGNhbiBiZSB1c2VkIHRoZXJlIGFn
YWluLiAgSWYgZGlzYWJsZWQsIFhlbiB3aWxsIG9ubHkKKz4+IHF1YXJhbnRp
bmUgZGV2aWNlcyB0aGUgdG9vbHN0YWNrIGhhc3MgYXJyYW5nZWQgZm9yIGdl
dHRpbmcgcXVhcmFudGluZWQuCisKID4gYGludHJlbWFwYAogCiA+IERlZmF1
bHQ6IGB0cnVlYAotLS0gYS94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9pb21t
dS5jCisrKyBiL3hlbi9kcml2ZXJzL3Bhc3N0aHJvdWdoL2lvbW11LmMKQEAg
LTUyLDYgKzUyLDcgQEAgY3VzdG9tX3BhcmFtKCJpb21tdSIsIHBhcnNlX2lv
bW11X3BhcmFtKQogYm9vbF90IF9faW5pdGRhdGEgaW9tbXVfZW5hYmxlID0g
MTsKIGJvb2xfdCBfX3JlYWRfbW9zdGx5IGlvbW11X2VuYWJsZWQ7CiBib29s
X3QgX19yZWFkX21vc3RseSBmb3JjZV9pb21tdTsKK2Jvb2wgX19yZWFkX21v
c3RseSBpb21tdV9xdWFyYW50aW5lID0gdHJ1ZTsKIGJvb2xfdCBfX2h3ZG9t
X2luaXRkYXRhIGlvbW11X2RvbTBfc3RyaWN0OwogYm9vbF90IF9fcmVhZF9t
b3N0bHkgaW9tbXVfdmVyYm9zZTsKIGJvb2xfdCBfX3JlYWRfbW9zdGx5IGlv
bW11X3dvcmthcm91bmRfYmlvc19idWc7CkBAIC05Niw2ICs5Nyw4IEBAIHN0
YXRpYyB2b2lkIF9faW5pdCBwYXJzZV9pb21tdV9wYXJhbShjaGEKICAgICAg
ICAgICAgIGlvbW11X2VuYWJsZSA9IDA7CiAgICAgICAgIGVsc2UgaWYgKCAh
c3RyY21wKHMsICJmb3JjZSIpIHx8ICFzdHJjbXAocywgInJlcXVpcmVkIikg
KQogICAgICAgICAgICAgZm9yY2VfaW9tbXUgPSB2YWw7CisgICAgICAgIGVs
c2UgaWYgKCAhc3RyY21wKHMsICJxdWFyYW50aW5lIikgKQorICAgICAgICAg
ICAgaW9tbXVfcXVhcmFudGluZSA9IHZhbDsKICAgICAgICAgZWxzZSBpZiAo
ICFzdHJjbXAocywgIndvcmthcm91bmRfYmlvc19idWciKSApCiAgICAgICAg
ICAgICBpb21tdV93b3JrYXJvdW5kX2Jpb3NfYnVnID0gdmFsOwogICAgICAg
ICBlbHNlIGlmICggIXN0cmNtcChzLCAiaWdmeCIpICkKLS0tIGEveGVuL2Ry
aXZlcnMvcGFzc3Rocm91Z2gvcGNpLmMKKysrIGIveGVuL2RyaXZlcnMvcGFz
c3Rocm91Z2gvcGNpLmMKQEAgLTE0NjAsNyArMTQ2MCw4IEBAIGludCBkZWFz
c2lnbl9kZXZpY2Uoc3RydWN0IGRvbWFpbiAqZCwgdTEKICAgICAgICAgcmV0
dXJuIC1FTk9ERVY7CiAKICAgICAvKiBEZS1hc3NpZ25tZW50IGZyb20gZG9t
X2lvIHNob3VsZCBkZS1xdWFyYW50aW5lIHRoZSBkZXZpY2UgKi8KLSAgICB0
YXJnZXQgPSAocGRldi0+cXVhcmFudGluZSAmJiBwZGV2LT5kb21haW4gIT0g
ZG9tX2lvKSA/CisgICAgdGFyZ2V0ID0gKChwZGV2LT5xdWFyYW50aW5lIHx8
IGlvbW11X3F1YXJhbnRpbmUpICYmCisgICAgICAgICAgICAgIHBkZXYtPmRv
bWFpbiAhPSBkb21faW8pID8KICAgICAgICAgZG9tX2lvIDogaGFyZHdhcmVf
ZG9tYWluOwogCiAgICAgd2hpbGUgKCBwZGV2LT5waGFudG9tX3N0cmlkZSAp
Ci0tLSBhL3hlbi9pbmNsdWRlL3hlbi9pb21tdS5oCisrKyBiL3hlbi9pbmNs
dWRlL3hlbi9pb21tdS5oCkBAIC0yOCw3ICsyOCw3IEBACiAjaW5jbHVkZSA8
YXNtL2lvbW11Lmg+CiAKIGV4dGVybiBib29sX3QgaW9tbXVfZW5hYmxlLCBp
b21tdV9lbmFibGVkOwotZXh0ZXJuIGJvb2xfdCBmb3JjZV9pb21tdSwgaW9t
bXVfdmVyYm9zZTsKK2V4dGVybiBib29sIGZvcmNlX2lvbW11LCBpb21tdV9x
dWFyYW50aW5lLCBpb21tdV92ZXJib3NlOwogZXh0ZXJuIGJvb2xfdCBpb21t
dV93b3JrYXJvdW5kX2Jpb3NfYnVnLCBpb21tdV9pZ2Z4LCBpb21tdV9wYXNz
dGhyb3VnaDsKIGV4dGVybiBib29sX3QgaW9tbXVfc25vb3AsIGlvbW11X3Fp
bnZhbCwgaW9tbXVfaW50cmVtYXAsIGlvbW11X2ludHBvc3Q7CiBleHRlcm4g
Ym9vbF90IGlvbW11X2hhcF9wdF9zaGFyZTsK

--=separator
Content-Type: application/octet-stream; name="xsa306-4.11.patch"
Content-Disposition: attachment; filename="xsa306-4.11.patch"
Content-Transfer-Encoding: base64

RnJvbTogSmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgpTdWJqZWN0
OiBJT01NVTogZGVmYXVsdCB0byBhbHdheXMgcXVhcmFudGluaW5nIFBDSSBk
ZXZpY2VzCgpYU0EtMzAyIHJlbGllcyBvbiB0aGUgdXNlIG9mIGxpYnhsJ3Mg
ImFzc2lnbmFibGUtYWRkIiBmZWF0dXJlIHRvIHByZXBhcmUKZGV2aWNlcyB0
byBiZSBhc3NpZ25lZCB0byB1bnRydXN0ZWQgZ3Vlc3RzLgoKVW5mb3J0dW5h
dGVseSwgdGhpcyBpcyBub3QgY29uc2lkZXJlZCBhIHN0cmljdGx5IHJlcXVp
cmVkIHN0ZXAgZm9yCmRldmljZSBhc3NpZ25tZW50LiBUaGUgUENJIHBhc3N0
aHJvdWdoIGRvY3VtZW50YXRpb24gb24gdGhlIHdpa2kKZGVzY3JpYmVzIGFs
dGVybmF0ZSB3YXlzIG9mIHByZXBhcmluZyBkZXZpY2VzIGZvciBhc3NpZ25t
ZW50LCBhbmQKbGlidmlydCB1c2VzIGl0cyBvd24gd2F5cyBhcyB3ZWxsLiBI
b3N0cyB3aGVyZSB0aGVzZSBhbHRlcm5hdGUgbWV0aG9kcwphcmUgdXNlZCB3
aWxsIHN0aWxsIGxlYXZlIHRoZSBzeXN0ZW0gaW4gYSB2dWxuZXJhYmxlIHN0
YXRlIGFmdGVyIHRoZQpkZXZpY2UgY29tZXMgYmFjayBmcm9tIGEgZ3Vlc3Qu
CgpEZWZhdWx0IHRvIGFsd2F5cyBxdWFyYW50aW5pbmcgUENJIGRldmljZXMs
IGJ1dCBwcm92aWRlIGEgY29tbWFuZCBsaW5lCm9wdGlvbiB0byByZXZlcnQg
YmFjayB0byBwcmlvciBiZWhhdmlvciAoc3VjaCB0aGF0IHBlb3BsZSB3aG8g
Ym90aApzdWZmaWNpZW50bHkgdHJ1c3QgdGhlaXIgZ3Vlc3RzIGFuZCB3YW50
IHRvIGJlIGFibGUgdG8gdXNlIGRldmljZXMgaW4KRG9tMCBhZ2FpbiBhZnRl
ciB0aGV5IGhhZCBiZWVuIGluIHVzZSBieSBhIGd1ZXN0IHdvdWxkbid0IG5l
ZWQgdG8KIm1hbnVhbGx5IiBtb3ZlIHN1Y2ggZGV2aWNlcyBiYWNrIGZyb20g
RG9tSU8gdG8gRG9tMCkuCgpUaGlzIGlzIFhTQS0zMDYuCgpSZXBvcnRlZC1i
eTogTWFyZWsgTWFyY3p5a293c2tpLUfDs3JlY2tpIDxtYXJtYXJla0BpbnZp
c2libGV0aGluZ3NsYWIuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYW4gQmV1bGlj
aCA8amJldWxpY2hAc3VzZS5jb20+ClJldmlld2VkLWJ5OiBXZWkgTGl1IDx3
bEB4ZW4ub3JnPgoKLS0tIGEvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUu
bWFya2Rvd24KKysrIGIvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUubWFy
a2Rvd24KQEAgLTExMTIsNyArMTExMiw3IEBAIGRldGVjdGlvbiBvZiBzeXN0
ZW1zIGtub3duIHRvIG1pc2JlaGF2ZQogPiBEZWZhdWx0OiBgbmV3YCB1bmxl
c3MgZGlyZWN0ZWQtRU9JIGlzIHN1cHBvcnRlZAogCiAjIyMgaW9tbXUKLT4g
YD0gTGlzdCBvZiBbIDxib29sZWFuPiB8IGZvcmNlIHwgcmVxdWlyZWQgfCBp
bnRyZW1hcCB8IGludHBvc3QgfCBxaW52YWwgfCBzbm9vcCB8IHNoYXJlcHQg
fCBkb20wLXBhc3N0aHJvdWdoIHwgZG9tMC1zdHJpY3QgfCBhbWQtaW9tbXUt
cGVyZGV2LWludHJlbWFwIHwgd29ya2Fyb3VuZF9iaW9zX2J1ZyB8IGlnZngg
fCBjcmFzaC1kaXNhYmxlIHwgdmVyYm9zZSB8IGRlYnVnIF1gCis+IGA9IExp
c3Qgb2YgWyA8Ym9vbGVhbj4gfCBmb3JjZSB8IHJlcXVpcmVkIHwgcXVhcmFu
dGluZSB8IGludHJlbWFwIHwgaW50cG9zdCB8IHFpbnZhbCB8IHNub29wIHwg
c2hhcmVwdCB8IGRvbTAtcGFzc3Rocm91Z2ggfCBkb20wLXN0cmljdCB8IGFt
ZC1pb21tdS1wZXJkZXYtaW50cmVtYXAgfCB3b3JrYXJvdW5kX2Jpb3NfYnVn
IHwgaWdmeCB8IGNyYXNoLWRpc2FibGUgfCB2ZXJib3NlIHwgZGVidWcgXWAK
IAogPiBTdWItb3B0aW9uczoKIApAQCAtMTEzMiw2ICsxMTMyLDE1IEBAIGRl
dGVjdGlvbiBvZiBzeXN0ZW1zIGtub3duIHRvIG1pc2JlaGF2ZQogPj4gRG9u
J3QgY29udGludWUgYm9vdGluZyB1bmxlc3MgSU9NTVUgc3VwcG9ydCBpcyBm
b3VuZCBhbmQgY2FuIGJlIGluaXRpYWxpemVkCiA+PiBzdWNjZXNzZnVsbHku
CiAKKz4gYHF1YXJhbnRpbmVgCisKKz4gRGVmYXVsdDogYHRydWVgCisKKz4+
IENvbnRyb2wgWGVuJ3MgYmVoYXZpb3Igd2hlbiBkZS1hc3NpZ25pbmcgZGV2
aWNlcyBmcm9tIGd1ZXN0cy4gIElmIGVuYWJsZWQsCis+PiBYZW4gYWx3YXlz
IHF1YXJhbnRpbmVzIHN1Y2ggZGV2aWNlczsgdGhleSBtdXN0IGJlIGV4cGxp
Y2l0bHkgYXNzaWduZWQgYmFjaworPj4gdG8gRG9tMCBiZWZvcmUgdGhleSBj
YW4gYmUgdXNlZCB0aGVyZSBhZ2Fpbi4gIElmIGRpc2FibGVkLCBYZW4gd2ls
bCBvbmx5Cis+PiBxdWFyYW50aW5lIGRldmljZXMgdGhlIHRvb2xzdGFjayBo
YXNzIGFycmFuZ2VkIGZvciBnZXR0aW5nIHF1YXJhbnRpbmVkLgorCiA+IGBp
bnRyZW1hcGAKIAogPiBEZWZhdWx0OiBgdHJ1ZWAKLS0tIGEveGVuL2RyaXZl
cnMvcGFzc3Rocm91Z2gvaW9tbXUuYworKysgYi94ZW4vZHJpdmVycy9wYXNz
dGhyb3VnaC9pb21tdS5jCkBAIC01Miw2ICs1Miw3IEBAIGN1c3RvbV9wYXJh
bSgiaW9tbXUiLCBwYXJzZV9pb21tdV9wYXJhbSkKIGJvb2xfdCBfX2luaXRk
YXRhIGlvbW11X2VuYWJsZSA9IDE7CiBib29sX3QgX19yZWFkX21vc3RseSBp
b21tdV9lbmFibGVkOwogYm9vbF90IF9fcmVhZF9tb3N0bHkgZm9yY2VfaW9t
bXU7Citib29sIF9fcmVhZF9tb3N0bHkgaW9tbXVfcXVhcmFudGluZSA9IHRy
dWU7CiBib29sX3QgX19od2RvbV9pbml0ZGF0YSBpb21tdV9kb20wX3N0cmlj
dDsKIGJvb2xfdCBfX3JlYWRfbW9zdGx5IGlvbW11X3ZlcmJvc2U7CiBib29s
X3QgX19yZWFkX21vc3RseSBpb21tdV93b3JrYXJvdW5kX2Jpb3NfYnVnOwpA
QCAtOTksNiArMTAwLDggQEAgc3RhdGljIGludCBfX2luaXQgcGFyc2VfaW9t
bXVfcGFyYW0oY29ucwogICAgICAgICBlbHNlIGlmICggIWNtZGxpbmVfc3Ry
Y21wKHMsICJmb3JjZSIpIHx8CiAgICAgICAgICAgICAgICAgICAhY21kbGlu
ZV9zdHJjbXAocywgInJlcXVpcmVkIikgKQogICAgICAgICAgICAgZm9yY2Vf
aW9tbXUgPSB2YWw7CisgICAgICAgIGVsc2UgaWYgKCAhY21kbGluZV9zdHJj
bXAocywgInF1YXJhbnRpbmUiKSApCisgICAgICAgICAgICBpb21tdV9xdWFy
YW50aW5lID0gdmFsOwogICAgICAgICBlbHNlIGlmICggIWNtZGxpbmVfc3Ry
Y21wKHMsICJ3b3JrYXJvdW5kX2Jpb3NfYnVnIikgKQogICAgICAgICAgICAg
aW9tbXVfd29ya2Fyb3VuZF9iaW9zX2J1ZyA9IHZhbDsKICAgICAgICAgZWxz
ZSBpZiAoICFjbWRsaW5lX3N0cmNtcChzLCAiaWdmeCIpICkKLS0tIGEveGVu
L2RyaXZlcnMvcGFzc3Rocm91Z2gvcGNpLmMKKysrIGIveGVuL2RyaXZlcnMv
cGFzc3Rocm91Z2gvcGNpLmMKQEAgLTE1MTEsNyArMTUxMSw4IEBAIGludCBk
ZWFzc2lnbl9kZXZpY2Uoc3RydWN0IGRvbWFpbiAqZCwgdTEKICAgICAgICAg
cmV0dXJuIC1FTk9ERVY7CiAKICAgICAvKiBEZS1hc3NpZ25tZW50IGZyb20g
ZG9tX2lvIHNob3VsZCBkZS1xdWFyYW50aW5lIHRoZSBkZXZpY2UgKi8KLSAg
ICB0YXJnZXQgPSAocGRldi0+cXVhcmFudGluZSAmJiBwZGV2LT5kb21haW4g
IT0gZG9tX2lvKSA/CisgICAgdGFyZ2V0ID0gKChwZGV2LT5xdWFyYW50aW5l
IHx8IGlvbW11X3F1YXJhbnRpbmUpICYmCisgICAgICAgICAgICAgIHBkZXYt
PmRvbWFpbiAhPSBkb21faW8pID8KICAgICAgICAgZG9tX2lvIDogaGFyZHdh
cmVfZG9tYWluOwogCiAgICAgd2hpbGUgKCBwZGV2LT5waGFudG9tX3N0cmlk
ZSApCi0tLSBhL3hlbi9pbmNsdWRlL3hlbi9pb21tdS5oCisrKyBiL3hlbi9p
bmNsdWRlL3hlbi9pb21tdS5oCkBAIC0yOSw3ICsyOSw3IEBACiAjaW5jbHVk
ZSA8YXNtL2lvbW11Lmg+CiAKIGV4dGVybiBib29sX3QgaW9tbXVfZW5hYmxl
LCBpb21tdV9lbmFibGVkOwotZXh0ZXJuIGJvb2xfdCBmb3JjZV9pb21tdSwg
aW9tbXVfdmVyYm9zZTsKK2V4dGVybiBib29sIGZvcmNlX2lvbW11LCBpb21t
dV9xdWFyYW50aW5lLCBpb21tdV92ZXJib3NlOwogZXh0ZXJuIGJvb2xfdCBp
b21tdV93b3JrYXJvdW5kX2Jpb3NfYnVnLCBpb21tdV9pZ2Z4LCBpb21tdV9w
YXNzdGhyb3VnaDsKIGV4dGVybiBib29sX3QgaW9tbXVfc25vb3AsIGlvbW11
X3FpbnZhbCwgaW9tbXVfaW50cmVtYXAsIGlvbW11X2ludHBvc3Q7CiBleHRl
cm4gYm9vbF90IGlvbW11X2hhcF9wdF9zaGFyZTsK

--=separator
Content-Type: application/octet-stream; name="xsa306-4.12.patch"
Content-Disposition: attachment; filename="xsa306-4.12.patch"
Content-Transfer-Encoding: base64

RnJvbTogSmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgpTdWJqZWN0
OiBJT01NVTogZGVmYXVsdCB0byBhbHdheXMgcXVhcmFudGluaW5nIFBDSSBk
ZXZpY2VzCgpYU0EtMzAyIHJlbGllcyBvbiB0aGUgdXNlIG9mIGxpYnhsJ3Mg
ImFzc2lnbmFibGUtYWRkIiBmZWF0dXJlIHRvIHByZXBhcmUKZGV2aWNlcyB0
byBiZSBhc3NpZ25lZCB0byB1bnRydXN0ZWQgZ3Vlc3RzLgoKVW5mb3J0dW5h
dGVseSwgdGhpcyBpcyBub3QgY29uc2lkZXJlZCBhIHN0cmljdGx5IHJlcXVp
cmVkIHN0ZXAgZm9yCmRldmljZSBhc3NpZ25tZW50LiBUaGUgUENJIHBhc3N0
aHJvdWdoIGRvY3VtZW50YXRpb24gb24gdGhlIHdpa2kKZGVzY3JpYmVzIGFs
dGVybmF0ZSB3YXlzIG9mIHByZXBhcmluZyBkZXZpY2VzIGZvciBhc3NpZ25t
ZW50LCBhbmQKbGlidmlydCB1c2VzIGl0cyBvd24gd2F5cyBhcyB3ZWxsLiBI
b3N0cyB3aGVyZSB0aGVzZSBhbHRlcm5hdGUgbWV0aG9kcwphcmUgdXNlZCB3
aWxsIHN0aWxsIGxlYXZlIHRoZSBzeXN0ZW0gaW4gYSB2dWxuZXJhYmxlIHN0
YXRlIGFmdGVyIHRoZQpkZXZpY2UgY29tZXMgYmFjayBmcm9tIGEgZ3Vlc3Qu
CgpEZWZhdWx0IHRvIGFsd2F5cyBxdWFyYW50aW5pbmcgUENJIGRldmljZXMs
IGJ1dCBwcm92aWRlIGEgY29tbWFuZCBsaW5lCm9wdGlvbiB0byByZXZlcnQg
YmFjayB0byBwcmlvciBiZWhhdmlvciAoc3VjaCB0aGF0IHBlb3BsZSB3aG8g
Ym90aApzdWZmaWNpZW50bHkgdHJ1c3QgdGhlaXIgZ3Vlc3RzIGFuZCB3YW50
IHRvIGJlIGFibGUgdG8gdXNlIGRldmljZXMgaW4KRG9tMCBhZ2FpbiBhZnRl
ciB0aGV5IGhhZCBiZWVuIGluIHVzZSBieSBhIGd1ZXN0IHdvdWxkbid0IG5l
ZWQgdG8KIm1hbnVhbGx5IiBtb3ZlIHN1Y2ggZGV2aWNlcyBiYWNrIGZyb20g
RG9tSU8gdG8gRG9tMCkuCgpUaGlzIGlzIFhTQS0zMDYuCgpSZXBvcnRlZC1i
eTogTWFyZWsgTWFyY3p5a293c2tpLUfDs3JlY2tpIDxtYXJtYXJla0BpbnZp
c2libGV0aGluZ3NsYWIuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYW4gQmV1bGlj
aCA8amJldWxpY2hAc3VzZS5jb20+ClJldmlld2VkLWJ5OiBXZWkgTGl1IDx3
bEB4ZW4ub3JnPgoKLS0tIGEvZG9jcy9taXNjL3hlbi1jb21tYW5kLWxpbmUu
cGFuZG9jCisrKyBiL2RvY3MvbWlzYy94ZW4tY29tbWFuZC1saW5lLnBhbmRv
YwpAQCAtMTE3MSw3ICsxMTcxLDcgQEAgZGV0ZWN0aW9uIG9mIHN5c3RlbXMg
a25vd24gdG8gbWlzYmVoYXZlCiA+IERlZmF1bHQ6IGBuZXdgIHVubGVzcyBk
aXJlY3RlZC1FT0kgaXMgc3VwcG9ydGVkCiAKICMjIyBpb21tdQotICAgID0g
TGlzdCBvZiBbIDxib29sPiwgdmVyYm9zZSwgZGVidWcsIGZvcmNlLCByZXF1
aXJlZCwKKyAgICA9IExpc3Qgb2YgWyA8Ym9vbD4sIHZlcmJvc2UsIGRlYnVn
LCBmb3JjZSwgcmVxdWlyZWQsIHF1YXJhbnRpbmUsCiAgICAgICAgICAgICAg
ICAgc2hhcmVwdCwgaW50cmVtYXAsIGludHBvc3QsIGNyYXNoLWRpc2FibGUs
CiAgICAgICAgICAgICAgICAgc25vb3AsIHFpbnZhbCwgaWdmeCwgYW1kLWlv
bW11LXBlcmRldi1pbnRyZW1hcCwKICAgICAgICAgICAgICAgICBkb20wLXtw
YXNzdGhyb3VnaCxzdHJpY3R9IF0KQEAgLTEyMDksNiArMTIwOSwxMiBAQCBi
b29sZWFuIChlLmcuIGBpb21tdT1ub2ApIGNhbiBvdmVycmlkZSB0CiAgICAg
d2lsbCBwcmV2ZW50IFhlbiBmcm9tIGJvb3RpbmcgaWYgSU9NTVVzIGFyZW4n
dCBkaXNjb3ZlcmVkIGFuZCBlbmFibGVkCiAgICAgc3VjY2Vzc2Z1bGx5Lgog
CisqICAgVGhlIGBxdWFyYW50aW5lYCBib29sZWFuIGNhbiBiZSB1c2VkIHRv
IGNvbnRyb2wgWGVuJ3MgYmVoYXZpb3Igd2hlbgorICAgIGRlLWFzc2lnbmlu
ZyBkZXZpY2VzIGZyb20gZ3Vlc3RzLiAgSWYgZW5hYmxlZCAodGhlIGRlZmF1
bHQpLCBYZW4gYWx3YXlzCisgICAgcXVhcmFudGluZXMgc3VjaCBkZXZpY2Vz
OyB0aGV5IG11c3QgYmUgZXhwbGljaXRseSBhc3NpZ25lZCBiYWNrIHRvIERv
bTAKKyAgICBiZWZvcmUgdGhleSBjYW4gYmUgdXNlZCB0aGVyZSBhZ2Fpbi4g
IElmIGRpc2FibGVkLCBYZW4gd2lsbCBvbmx5CisgICAgcXVhcmFudGluZSBk
ZXZpY2VzIHRoZSB0b29sc3RhY2sgaGFzcyBhcnJhbmdlZCBmb3IgZ2V0dGlu
ZyBxdWFyYW50aW5lZC4KKwogKiAgIFRoZSBgc2hhcmVwdGAgYm9vbGVhbiBj
b250cm9scyB3aGV0aGVyIHRoZSBJT01NVSBwYWdldGFibGVzIGFyZSBzaGFy
ZWQKICAgICB3aXRoIHRoZSBDUFUtc2lkZSBIQVAgcGFnZXRhYmxlcywgb3Ig
YWxsb2NhdGVkIHNlcGFyYXRlbHkuICBTaGFyaW5nCiAgICAgcmVkdWNlcyB0
aGUgbWVtb3J5IG92ZXJoZWFkLCBidXQgZG9lc24ndCB3b3JrIGluIGNvbWJp
bmF0aW9uIHdpdGggQ1BVLXNpZGUKLS0tIGEveGVuL2RyaXZlcnMvcGFzc3Ro
cm91Z2gvaW9tbXUuYworKysgYi94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9p
b21tdS5jCkBAIC0zMCw2ICszMCw3IEBAIGJvb2xfdCBfX2luaXRkYXRhIGlv
bW11X2VuYWJsZSA9IDE7CiBib29sX3QgX19yZWFkX21vc3RseSBpb21tdV9l
bmFibGVkOwogYm9vbF90IF9fcmVhZF9tb3N0bHkgZm9yY2VfaW9tbXU7CiBi
b29sX3QgX19yZWFkX21vc3RseSBpb21tdV92ZXJib3NlOworYm9vbCBfX3Jl
YWRfbW9zdGx5IGlvbW11X3F1YXJhbnRpbmUgPSB0cnVlOwogYm9vbF90IF9f
cmVhZF9tb3N0bHkgaW9tbXVfaWdmeCA9IDE7CiBib29sX3QgX19yZWFkX21v
c3RseSBpb21tdV9zbm9vcCA9IDE7CiBib29sX3QgX19yZWFkX21vc3RseSBp
b21tdV9xaW52YWwgPSAxOwpAQCAtNzQsNiArNzUsOCBAQCBzdGF0aWMgaW50
IF9faW5pdCBwYXJzZV9pb21tdV9wYXJhbShjb25zCiAgICAgICAgIGVsc2Ug
aWYgKCAodmFsID0gcGFyc2VfYm9vbGVhbigiZm9yY2UiLCBzLCBzcykpID49
IDAgfHwKICAgICAgICAgICAgICAgICAgICh2YWwgPSBwYXJzZV9ib29sZWFu
KCJyZXF1aXJlZCIsIHMsIHNzKSkgPj0gMCApCiAgICAgICAgICAgICBmb3Jj
ZV9pb21tdSA9IHZhbDsKKyAgICAgICAgZWxzZSBpZiAoICh2YWwgPSBwYXJz
ZV9ib29sZWFuKCJxdWFyYW50aW5lIiwgcywgc3MpKSA+PSAwICkKKyAgICAg
ICAgICAgIGlvbW11X3F1YXJhbnRpbmUgPSB2YWw7CiAgICAgICAgIGVsc2Ug
aWYgKCAodmFsID0gcGFyc2VfYm9vbGVhbigiaWdmeCIsIHMsIHNzKSkgPj0g
MCApCiAgICAgICAgICAgICBpb21tdV9pZ2Z4ID0gdmFsOwogICAgICAgICBl
bHNlIGlmICggKHZhbCA9IHBhcnNlX2Jvb2xlYW4oInZlcmJvc2UiLCBzLCBz
cykpID49IDAgKQotLS0gYS94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9wY2ku
YworKysgYi94ZW4vZHJpdmVycy9wYXNzdGhyb3VnaC9wY2kuYwpAQCAtMTU0
OCw3ICsxNTQ4LDggQEAgaW50IGRlYXNzaWduX2RldmljZShzdHJ1Y3QgZG9t
YWluICpkLCB1MQogICAgICAgICByZXR1cm4gLUVOT0RFVjsKIAogICAgIC8q
IERlLWFzc2lnbm1lbnQgZnJvbSBkb21faW8gc2hvdWxkIGRlLXF1YXJhbnRp
bmUgdGhlIGRldmljZSAqLwotICAgIHRhcmdldCA9IChwZGV2LT5xdWFyYW50
aW5lICYmIHBkZXYtPmRvbWFpbiAhPSBkb21faW8pID8KKyAgICB0YXJnZXQg
PSAoKHBkZXYtPnF1YXJhbnRpbmUgfHwgaW9tbXVfcXVhcmFudGluZSkgJiYK
KyAgICAgICAgICAgICAgcGRldi0+ZG9tYWluICE9IGRvbV9pbykgPwogICAg
ICAgICBkb21faW8gOiBoYXJkd2FyZV9kb21haW47CiAKICAgICB3aGlsZSAo
IHBkZXYtPnBoYW50b21fc3RyaWRlICkKLS0tIGEveGVuL2luY2x1ZGUveGVu
L2lvbW11LmgKKysrIGIveGVuL2luY2x1ZGUveGVuL2lvbW11LmgKQEAgLTUz
LDcgKzUzLDcgQEAgc3RhdGljIGlubGluZSBib29sX3QgZGZuX2VxKGRmbl90
IHgsIGRmbgogfQogCiBleHRlcm4gYm9vbF90IGlvbW11X2VuYWJsZSwgaW9t
bXVfZW5hYmxlZDsKLWV4dGVybiBib29sX3QgZm9yY2VfaW9tbXUsIGlvbW11
X3ZlcmJvc2UsIGlvbW11X2lnZng7CitleHRlcm4gYm9vbCBmb3JjZV9pb21t
dSwgaW9tbXVfcXVhcmFudGluZSwgaW9tbXVfdmVyYm9zZSwgaW9tbXVfaWdm
eDsKIGV4dGVybiBib29sX3QgaW9tbXVfc25vb3AsIGlvbW11X3FpbnZhbCwg
aW9tbXVfaW50cmVtYXAsIGlvbW11X2ludHBvc3Q7CiBleHRlcm4gYm9vbF90
IGlvbW11X2hhcF9wdF9zaGFyZTsKIGV4dGVybiBib29sX3QgaW9tbXVfZGVi
dWc7Cg==

--=separator
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Content-Disposition: inline

X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVs
IG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0
cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

--=separator--


Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 349F018F1D
	for <lists+xen-devel@lfdr.de>; Thu,  9 May 2019 19:28:56 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hOmnl-0000fh-Hk; Thu, 09 May 2019 17:25:49 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=fgKw=TJ=oracle.com=ankur.a.arora@srs-us1.protection.inumbo.net>)
 id 1hOmnk-0000ec-9a
 for xen-devel@lists.xenproject.org; Thu, 09 May 2019 17:25:48 +0000
X-Inumbo-ID: 79d38f96-727f-11e9-9064-db2b4d5a665c
Received: from aserp2130.oracle.com (unknown [141.146.126.79])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 79d38f96-727f-11e9-9064-db2b4d5a665c;
 Thu, 09 May 2019 17:25:44 +0000 (UTC)
Received: from pps.filterd (aserp2130.oracle.com [127.0.0.1])
 by aserp2130.oracle.com (8.16.0.27/8.16.0.27) with SMTP id x49HJdZJ162617;
 Thu, 9 May 2019 17:25:42 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=from : to : cc :
 subject : date : message-id : in-reply-to : references : mime-version :
 content-transfer-encoding; s=corp-2018-07-02;
 bh=tvxEVQHSjGEEQ2j+NCO0wtnQzFGpPG5tooLTFGk+YKs=;
 b=R+PspFkmBGjY1zA4xTkjO91hNkxNSLURJi2IYBIEA+DiTzJbCFNuPj8rgEeWREDdZHqp
 b3rGtBzgCq0M6ZAoaTXu45YDfWuDn3qEtVXZDQZhoI1yjmmE2bRxtcmGBFvG+FFzvIDD
 GjpjzSnPkJVuab1x3F3ZVIz/HaVXjfgWZIR/zvlgHbRZzg8Gz5QdKln/p+VyQutjZX03
 B+omb60+0vmBZQlWviVbYEL6JGSSisD86BrqzzN7xcawuBvn9kjm6PZBxO1wBvfcZDUf
 iLnMzAFRJc9RrDkcWTFQ9xFoEUMqb/nuqCuBOFAfPwiuvNGijN2Rj2zJvYCG6XnDASQG jg== 
Received: from userp3030.oracle.com (userp3030.oracle.com [156.151.31.80])
 by aserp2130.oracle.com with ESMTP id 2s94b6ceys-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Thu, 09 May 2019 17:25:42 +0000
Received: from pps.filterd (userp3030.oracle.com [127.0.0.1])
 by userp3030.oracle.com (8.16.0.27/8.16.0.27) with SMTP id x49HOMIN110350;
 Thu, 9 May 2019 17:25:41 GMT
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
 by userp3030.oracle.com with ESMTP id 2sagyvcg4r-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Thu, 09 May 2019 17:25:41 +0000
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
 by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id x49HPewo011061;
 Thu, 9 May 2019 17:25:40 GMT
Received: from aa1-ca-oracle-com.ca.oracle.com (/10.156.75.204)
 by default (Oracle Beehive Gateway v4.0)
 with ESMTP ; Thu, 09 May 2019 10:25:40 -0700
From: Ankur Arora <ankur.a.arora@oracle.com>
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org
Date: Thu,  9 May 2019 10:25:31 -0700
Message-Id: <20190509172540.12398-8-ankur.a.arora@oracle.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190509172540.12398-1-ankur.a.arora@oracle.com>
References: <20190509172540.12398-1-ankur.a.arora@oracle.com>
MIME-Version: 1.0
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9252
 signatures=668686
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0
 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1905090100
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9252
 signatures=668686
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0
 priorityscore=1501 malwarescore=0
 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0 clxscore=1015
 lowpriorityscore=0 mlxscore=0 impostorscore=0 mlxlogscore=999 adultscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.0.1-1810050000
 definitions=main-1905090100
Subject: [Xen-devel] [RFC PATCH 07/16] x86/xen: make vcpu_info part of
 xenhost_t
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: jgross@suse.com, sstabellini@kernel.org, konrad.wilk@oracle.com,
 ankur.a.arora@oracle.com, pbonzini@redhat.com, boris.ostrovsky@oracle.com,
 joao.m.martins@oracle.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

QWJzdHJhY3Qgb3V0IHhlbl92Y3B1X2lkIHByb2JpbmcgdmlhICgqcHJvYmVfdmNwdV9pZCkoKS4g
T25jZSB0aGF0IGlzCmF2YWlsYWIsZSB0aGUgdmNwdV9pbmZvIHJlZ2lzdHJhdGlvbiBoYXBwZW5z
IHZpYSB0aGUgVkNQVU9QIGh5cGVyY2FsbC4KCk5vdGUgdGhhdCBmb3IgdGhlIG5lc3RlZCBjYXNl
LCB0aGVyZSBhcmUgdHdvIHZjcHVfaWRzLCBhbmQgdHdvIHZjcHVfaW5mbwphcmVhcywgb25lIGVh
Y2ggZm9yIHRoZSBkZWZhdWx0IHhlbmhvc3QgYW5kIHRoZSByZW1vdGUgeGVuaG9zdC4KVGhlIHZj
cHVfaW5mbyBpcyB1c2VkIHZpYSBwdl9pcnFfb3BzLCBhbmQgZXZ0Y2huIHNpZ25hbGluZy4KClRo
ZSBvdGhlciBWQ1BVT1AgaHlwZXJjYWxscyBhcmUgdXNlZCBmb3IgbWFuYWdlbWVudCAoYW5kIHNj
aGVkdWxpbmcpCndoaWNoIGlzIGV4cGVjdGVkIHRvIGJlIGRvbmUgcHVyZWx5IGluIHRoZSBkZWZh
dWx0IGh5cGVydmlzb3IuCkhvd2V2ZXIsIHNjaGVkdWxpbmcgb2YgTDEtZ3Vlc3QgZG9lcyBpbXBs
eSBMMC1YZW4tdmNwdV9pbmZvIHN3aXRjaGluZywKd2hpY2ggbWlnaHQgbWVhbiB0aGF0IHRoZSBy
ZW1vdGUgaHlwZXJ2aXNvciBuZWVkcyBzb21lIHZpc2liaWxpdHkKaW50byByZWxhdGVkIGV2ZW50
cy9oeXBlcmNhbGxzIGluIHRoZSBkZWZhdWx0IGh5cGVydmlzb3IuCgpUT0RPOgogIC0gcGVyY3B1
IGRhdGEgc3RydWN0dXJlcyBmb3IgeGVuX3ZjcHUKClNpZ25lZC1vZmYtYnk6IEFua3VyIEFyb3Jh
IDxhbmt1ci5hLmFyb3JhQG9yYWNsZS5jb20+Ci0tLQogYXJjaC94ODYveGVuL2VubGlnaHRlbi5j
ICAgICAgICAgfCA5MyArKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLS0tLQogYXJjaC94ODYv
eGVuL2VubGlnaHRlbl9odm0uYyAgICAgfCA4NyArKysrKysrKysrKysrKysrKystLS0tLS0tLS0t
LS0KIGFyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHYuYyAgICAgIHwgNjAgKysrKysrKysrKysrKyst
LS0tLS0tCiBhcmNoL3g4Ni94ZW4vZW5saWdodGVuX3B2aC5jICAgICB8ICAzICstCiBhcmNoL3g4
Ni94ZW4vaXJxLmMgICAgICAgICAgICAgICB8IDEwICsrLS0KIGFyY2gveDg2L3hlbi9tbXVfcHYu
YyAgICAgICAgICAgIHwgIDYgKy0tCiBhcmNoL3g4Ni94ZW4vcGNpLXN3aW90bGIteGVuLmMgICB8
ICAxICsKIGFyY2gveDg2L3hlbi9zZXR1cC5jICAgICAgICAgICAgIHwgIDEgKwogYXJjaC94ODYv
eGVuL3NtcC5jICAgICAgICAgICAgICAgfCAgOSArKystCiBhcmNoL3g4Ni94ZW4vc21wX2h2bS5j
ICAgICAgICAgICB8IDE3ICsrKy0tLQogYXJjaC94ODYveGVuL3NtcF9wdi5jICAgICAgICAgICAg
fCAxMiArKy0tLQogYXJjaC94ODYveGVuL3RpbWUuYyAgICAgICAgICAgICAgfCAyMyArKysrLS0t
LQogYXJjaC94ODYveGVuL3hlbi1vcHMuaCAgICAgICAgICAgfCAgNSArLQogZHJpdmVycy94ZW4v
ZXZlbnRzL2V2ZW50c19iYXNlLmMgfCAxNCArKy0tLQogZHJpdmVycy94ZW4vZXZlbnRzL2V2ZW50
c19maWZvLmMgfCAgMiArLQogZHJpdmVycy94ZW4vZXZ0Y2huLmMgICAgICAgICAgICAgfCAgMiAr
LQogZHJpdmVycy94ZW4vdGltZS5jICAgICAgICAgICAgICAgfCAgMiArLQogaW5jbHVkZS94ZW4v
eGVuLW9wcy5oICAgICAgICAgICAgfCAgNyArLS0KIGluY2x1ZGUveGVuL3hlbmhvc3QuaCAgICAg
ICAgICAgIHwgNDcgKysrKysrKysrKysrKysrKwogMTkgZmlsZXMgY2hhbmdlZCwgMjQwIGluc2Vy
dGlvbnMoKyksIDE2MSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vZW5s
aWdodGVuLmMgYi9hcmNoL3g4Ni94ZW4vZW5saWdodGVuLmMKaW5kZXggMjBlMGRlODQ0NDQyLi4w
ZGFmYmJjODM4ZWYgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9lbmxpZ2h0ZW4uYworKysgYi9h
cmNoL3g4Ni94ZW4vZW5saWdodGVuLmMKQEAgLTIwLDM1ICsyMCw2IEBACiAjaW5jbHVkZSAic21w
LmgiCiAjaW5jbHVkZSAicG11LmgiCiAKLS8qCi0gKiBQb2ludGVyIHRvIHRoZSB4ZW5fdmNwdV9p
bmZvIHN0cnVjdHVyZSBvcgotICogJkhZUEVSVklTT1Jfc2hhcmVkX2luZm8tPnZjcHVfaW5mb1tj
cHVdLiBTZWUgeGVuX2h2bV9pbml0X3NoYXJlZF9pbmZvCi0gKiBhbmQgeGVuX3ZjcHVfc2V0dXAg
Zm9yIGRldGFpbHMuIEJ5IGRlZmF1bHQgaXQgcG9pbnRzIHRvIHNoYXJlX2luZm8tPnZjcHVfaW5m
bwotICogYnV0IGlmIHRoZSBoeXBlcnZpc29yIHN1cHBvcnRzIFZDUFVPUF9yZWdpc3Rlcl92Y3B1
X2luZm8gdGhlbiBpdCBjYW4gcG9pbnQKLSAqIHRvIHhlbl92Y3B1X2luZm8uIFRoZSBwb2ludGVy
IGlzIHVzZWQgaW4gX194ZW5fZXZ0Y2huX2RvX3VwY2FsbCB0bwotICogYWNrbm93bGVkZ2UgcGVu
ZGluZyBldmVudHMuCi0gKiBBbHNvIG1vcmUgc3VidGx5IGl0IGlzIHVzZWQgYnkgdGhlIHBhdGNo
ZWQgdmVyc2lvbiBvZiBpcnEgZW5hYmxlL2Rpc2FibGUKLSAqIGUuZy4geGVuX2lycV9lbmFibGVf
ZGlyZWN0IGFuZCB4ZW5faXJldCBpbiBQViBtb2RlLgotICoKLSAqIFRoZSBkZXNpcmUgdG8gYmUg
YWJsZSB0byBkbyB0aG9zZSBtYXNrL3VubWFzayBvcGVyYXRpb25zIGFzIGEgc2luZ2xlCi0gKiBp
bnN0cnVjdGlvbiBieSB1c2luZyB0aGUgcGVyLWNwdSBvZmZzZXQgaGVsZCBpbiAlZ3MgaXMgdGhl
IHJlYWwgcmVhc29uCi0gKiB2Y3B1IGluZm8gaXMgaW4gYSBwZXItY3B1IHBvaW50ZXIgYW5kIHRo
ZSBvcmlnaW5hbCByZWFzb24gZm9yIHRoaXMKLSAqIGh5cGVyY2FsbC4KLSAqCi0gKi8KLURFRklO
RV9QRVJfQ1BVKHN0cnVjdCB2Y3B1X2luZm8gKiwgeGVuX3ZjcHUpOwotCi0vKgotICogUGVyIENQ
VSBwYWdlcyB1c2VkIGlmIGh5cGVydmlzb3Igc3VwcG9ydHMgVkNQVU9QX3JlZ2lzdGVyX3ZjcHVf
aW5mbwotICogaHlwZXJjYWxsLiBUaGlzIGNhbiBiZSB1c2VkIGJvdGggaW4gUFYgYW5kIFBWSFZN
IG1vZGUuIFRoZSBzdHJ1Y3R1cmUKLSAqIG92ZXJyaWRlcyB0aGUgZGVmYXVsdCBwZXJfY3B1KHhl
bl92Y3B1LCBjcHUpIHZhbHVlLgotICovCi1ERUZJTkVfUEVSX0NQVShzdHJ1Y3QgdmNwdV9pbmZv
LCB4ZW5fdmNwdV9pbmZvKTsKLQotLyogTGludXggPC0+IFhlbiB2Q1BVIGlkIG1hcHBpbmcgKi8K
LURFRklORV9QRVJfQ1BVKHVpbnQzMl90LCB4ZW5fdmNwdV9pZCk7Ci1FWFBPUlRfUEVSX0NQVV9T
WU1CT0woeGVuX3ZjcHVfaWQpOwotCiBlbnVtIHhlbl9kb21haW5fdHlwZSB4ZW5fZG9tYWluX3R5
cGUgPSBYRU5fTkFUSVZFOwogRVhQT1JUX1NZTUJPTF9HUEwoeGVuX2RvbWFpbl90eXBlKTsKIApA
QCAtMTEyLDEyICs4MywxMiBAQCBpbnQgeGVuX2NwdWhwX3NldHVwKGludCAoKmNwdV91cF9wcmVw
YXJlX2NiKSh1bnNpZ25lZCBpbnQpLAogCXJldHVybiByYyA+PSAwID8gMCA6IHJjOwogfQogCi1z
dGF0aWMgaW50IHhlbl92Y3B1X3NldHVwX3Jlc3RvcmUoaW50IGNwdSkKK3N0YXRpYyBpbnQgeGVu
X3ZjcHVfc2V0dXBfcmVzdG9yZSh4ZW5ob3N0X3QgKnhoLCBpbnQgY3B1KQogewogCWludCByYyA9
IDA7CiAKIAkvKiBBbnkgcGVyX2NwdSh4ZW5fdmNwdSkgaXMgc3RhbGUsIHNvIHJlc2V0IGl0ICov
Ci0JeGVuX3ZjcHVfaW5mb19yZXNldChjcHUpOworCXhlbl92Y3B1X2luZm9fcmVzZXQoeGgsIGNw
dSk7CiAKIAkvKgogCSAqIEZvciBQVkggYW5kIFBWSFZNLCBzZXR1cCBvbmxpbmUgVkNQVXMgb25s
eS4gVGhlIHJlc3Qgd2lsbApAQCAtMTI1LDcgKzk2LDcgQEAgc3RhdGljIGludCB4ZW5fdmNwdV9z
ZXR1cF9yZXN0b3JlKGludCBjcHUpCiAJICovCiAJaWYgKHhlbl9wdl9kb21haW4oKSB8fAogCSAg
ICAoeGVuX2h2bV9kb21haW4oKSAmJiBjcHVfb25saW5lKGNwdSkpKSB7Ci0JCXJjID0geGVuX3Zj
cHVfc2V0dXAoY3B1KTsKKwkJcmMgPSB4ZW5fdmNwdV9zZXR1cCh4aCwgY3B1KTsKIAl9CiAKIAly
ZXR1cm4gcmM7CkBAIC0xMzgsMzAgKzEwOSw0MiBAQCBzdGF0aWMgaW50IHhlbl92Y3B1X3NldHVw
X3Jlc3RvcmUoaW50IGNwdSkKICAqLwogdm9pZCB4ZW5fdmNwdV9yZXN0b3JlKHZvaWQpCiB7Ci0J
aW50IGNwdSwgcmM7CisJaW50IGNwdSwgcmMgPSAwOwogCisJLyoKKwkgKiBWQ1BVIG1hbmFnZW1l
bnQgaXMgcHJpbWFyaWx5IHRoZSByZXNwb25zaWJpbGl0eSBvZiB4aF9kZWZhdWx0IGFuZAorCSAq
IHhoX3JlbW90ZSBvbmx5IG5lZWRzIFZDUFVPUF9yZWdpc3Rlcl92Y3B1X2luZm8uCisJICogU28s
IHdlIGRvIFZQVU9QX2Rvd24gYW5kIFZDUFVPUF91cCBvbmx5IG9uIHhoX2RlZmF1bHQuCisJICoK
KwkgKiAoQ3VycmVudGx5LCBob3dldmVyLCBWQ1BVT1BfcmVnaXN0ZXJfdmNwdV9pbmZvIGlzIGFs
bG93ZWQgb25seQorCSAqIG9uIFZDUFVzIHRoYXQgYXJlIHNlbGYgb3IgZG93biwgc28gd2UgbWln
aHQgbmVlZCBhIG5ldyBtb2RlbAorCSAqIHRoZXJlLikKKwkgKi8KIAlmb3JfZWFjaF9wb3NzaWJs
ZV9jcHUoY3B1KSB7CiAJCWJvb2wgb3RoZXJfY3B1ID0gKGNwdSAhPSBzbXBfcHJvY2Vzc29yX2lk
KCkpOwogCQlib29sIGlzX3VwOworCQl4ZW5ob3N0X3QgKip4aDsKIAotCQlpZiAoeGVuX3ZjcHVf
bnIoY3B1KSA9PSBYRU5fVkNQVV9JRF9JTlZBTElEKQorCQlpZiAoeGVuX3ZjcHVfbnIoeGhfZGVm
YXVsdCwgY3B1KSA9PSBYRU5fVkNQVV9JRF9JTlZBTElEKQogCQkJY29udGludWU7CiAKIAkJLyog
T25seSBYZW4gNC41IGFuZCBoaWdoZXIgc3VwcG9ydCB0aGlzLiAqLwogCQlpc191cCA9IEhZUEVS
VklTT1JfdmNwdV9vcChWQ1BVT1BfaXNfdXAsCi0JCQkJCSAgIHhlbl92Y3B1X25yKGNwdSksIE5V
TEwpID4gMDsKKwkJCQkJICAgeGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1KSwgTlVMTCkgPiAw
OwogCiAJCWlmIChvdGhlcl9jcHUgJiYgaXNfdXAgJiYKLQkJICAgIEhZUEVSVklTT1JfdmNwdV9v
cChWQ1BVT1BfZG93biwgeGVuX3ZjcHVfbnIoY3B1KSwgTlVMTCkpCisJCSAgICBIWVBFUlZJU09S
X3ZjcHVfb3AoVkNQVU9QX2Rvd24sIHhlbl92Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSksIE5VTEwp
KQogCQkJQlVHKCk7CiAKIAkJaWYgKHhlbl9wdl9kb21haW4oKSB8fCB4ZW5fZmVhdHVyZShYRU5G
RUFUX2h2bV9zYWZlX3B2Y2xvY2spKQogCQkJeGVuX3NldHVwX3J1bnN0YXRlX2luZm8oY3B1KTsK
IAotCQlyYyA9IHhlbl92Y3B1X3NldHVwX3Jlc3RvcmUoY3B1KTsKLQkJaWYgKHJjKQotCQkJcHJf
ZW1lcmdfb25jZSgidmNwdSByZXN0b3JlIGZhaWxlZCBmb3IgY3B1PSVkIGVycj0lZC4gIgotCQkJ
CQkiU3lzdGVtIHdpbGwgaGFuZy5cbiIsIGNwdSwgcmMpOworCQlmb3JfZWFjaF94ZW5ob3N0KHho
KSB7CisJCQlyYyA9IHhlbl92Y3B1X3NldHVwX3Jlc3RvcmUoKnhoLCBjcHUpOworCQkJaWYgKHJj
KQorCQkJCXByX2VtZXJnX29uY2UoInZjcHUgcmVzdG9yZSBmYWlsZWQgZm9yIGNwdT0lZCBlcnI9
JWQuICIKKwkJCQkJCSJTeXN0ZW0gd2lsbCBoYW5nLlxuIiwgY3B1LCByYyk7CisJCX0KIAkJLyoK
IAkJICogSW4gY2FzZSB4ZW5fdmNwdV9zZXR1cF9yZXN0b3JlKCkgZmFpbHMsIGRvIG5vdCBicmlu
ZyB1cCB0aGUKIAkJICogVkNQVS4gVGhpcyBoZWxwcyB1cyBhdm9pZCB0aGUgcmVzdWx0aW5nIE9P
UFMgd2hlbiB0aGUgVkNQVQpAQCAtMTcyLDI5ICsxNTUsMjkgQEAgdm9pZCB4ZW5fdmNwdV9yZXN0
b3JlKHZvaWQpCiAJCSAqIFZDUFVzIHRvIGNvbWUgdXAuCiAJCSAqLwogCQlpZiAob3RoZXJfY3B1
ICYmIGlzX3VwICYmIChyYyA9PSAwKSAmJgotCQkgICAgSFlQRVJWSVNPUl92Y3B1X29wKFZDUFVP
UF91cCwgeGVuX3ZjcHVfbnIoY3B1KSwgTlVMTCkpCisJCSAgICBIWVBFUlZJU09SX3ZjcHVfb3Ao
VkNQVU9QX3VwLCB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBjcHUpLCBOVUxMKSkKIAkJCUJVRygp
OwogCX0KIH0KIAotdm9pZCB4ZW5fdmNwdV9pbmZvX3Jlc2V0KGludCBjcHUpCit2b2lkIHhlbl92
Y3B1X2luZm9fcmVzZXQoeGVuaG9zdF90ICp4aCwgaW50IGNwdSkKIHsKLQlpZiAoeGVuX3ZjcHVf
bnIoY3B1KSA8IE1BWF9WSVJUX0NQVVMpIHsKLQkJcGVyX2NwdSh4ZW5fdmNwdSwgY3B1KSA9Ci0J
CQkmeGhfZGVmYXVsdC0+SFlQRVJWSVNPUl9zaGFyZWRfaW5mby0+dmNwdV9pbmZvW3hlbl92Y3B1
X25yKGNwdSldOworCWlmICh4ZW5fdmNwdV9ucih4aCwgY3B1KSA8IE1BWF9WSVJUX0NQVVMpIHsK
KwkJeGgtPnhlbl92Y3B1W2NwdV0gPQorCQkJJnhoLT5IWVBFUlZJU09SX3NoYXJlZF9pbmZvLT52
Y3B1X2luZm9beGVuX3ZjcHVfbnIoeGgsIGNwdSldOwogCX0gZWxzZSB7CiAJCS8qIFNldCB0byBO
VUxMIHNvIHRoYXQgaWYgc29tZWJvZHkgYWNjZXNzZXMgaXQgd2UgZ2V0IGFuIE9PUFMgKi8KLQkJ
cGVyX2NwdSh4ZW5fdmNwdSwgY3B1KSA9IE5VTEw7CisJCXhoLT54ZW5fdmNwdVtjcHVdID0gTlVM
TDsKIAl9CiB9CiAKLWludCB4ZW5fdmNwdV9zZXR1cChpbnQgY3B1KQoraW50IHhlbl92Y3B1X3Nl
dHVwKHhlbmhvc3RfdCAqeGgsIGludCBjcHUpCiB7CiAJc3RydWN0IHZjcHVfcmVnaXN0ZXJfdmNw
dV9pbmZvIGluZm87CiAJaW50IGVycjsKIAlzdHJ1Y3QgdmNwdV9pbmZvICp2Y3B1cDsKIAotCUJV
R19PTih4aF9kZWZhdWx0LT5IWVBFUlZJU09SX3NoYXJlZF9pbmZvID09ICZ4ZW5fZHVtbXlfc2hh
cmVkX2luZm8pOworCUJVR19PTih4aC0+SFlQRVJWSVNPUl9zaGFyZWRfaW5mbyA9PSAmeGVuX2R1
bW15X3NoYXJlZF9pbmZvKTsKIAogCS8qCiAJICogVGhpcyBwYXRoIGlzIGNhbGxlZCBvbiBQVkhW
TSBhdCBib290dXAgKHhlbl9odm1fc21wX3ByZXBhcmVfYm9vdF9jcHUpCkBAIC0yMDgsMTIgKzE5
MSwxMiBAQCBpbnQgeGVuX3ZjcHVfc2V0dXAoaW50IGNwdSkKIAkgKiB1c2UgdGhpcyBmdW5jdGlv
bi4KIAkgKi8KIAlpZiAoeGVuX2h2bV9kb21haW4oKSkgewotCQlpZiAocGVyX2NwdSh4ZW5fdmNw
dSwgY3B1KSA9PSAmcGVyX2NwdSh4ZW5fdmNwdV9pbmZvLCBjcHUpKQorCQlpZiAoeGgtPnhlbl92
Y3B1W2NwdV0gPT0gJnhoLT54ZW5fdmNwdV9pbmZvW2NwdV0pCiAJCQlyZXR1cm4gMDsKIAl9CiAK
IAlpZiAoeGVuX2hhdmVfdmNwdV9pbmZvX3BsYWNlbWVudCkgewotCQl2Y3B1cCA9ICZwZXJfY3B1
KHhlbl92Y3B1X2luZm8sIGNwdSk7CisJCXZjcHVwID0gJnhoLT54ZW5fdmNwdV9pbmZvW2NwdV07
CiAJCWluZm8ubWZuID0gYXJiaXRyYXJ5X3ZpcnRfdG9fbWZuKHZjcHVwKTsKIAkJaW5mby5vZmZz
ZXQgPSBvZmZzZXRfaW5fcGFnZSh2Y3B1cCk7CiAKQEAgLTIyNyw4ICsyMTAsOCBAQCBpbnQgeGVu
X3ZjcHVfc2V0dXAoaW50IGNwdSkKIAkJICogaHlwZXJjYWxsIGRvZXMgbm90IGFsbG93IHRvIG92
ZXItd3JpdGUgaW5mby5tZm4gYW5kCiAJCSAqIGluZm8ub2Zmc2V0LgogCQkgKi8KLQkJZXJyID0g
SFlQRVJWSVNPUl92Y3B1X29wKFZDUFVPUF9yZWdpc3Rlcl92Y3B1X2luZm8sCi0JCQkJCSB4ZW5f
dmNwdV9ucihjcHUpLCAmaW5mbyk7CisJCWVyciA9IGh5cGVydmlzb3JfdmNwdV9vcCh4aCwgVkNQ
VU9QX3JlZ2lzdGVyX3ZjcHVfaW5mbywKKwkJCQkJIHhlbl92Y3B1X25yKHhoLCBjcHUpLCAmaW5m
byk7CiAKIAkJaWYgKGVycikgewogCQkJcHJfd2Fybl9vbmNlKCJyZWdpc3Rlcl92Y3B1X2luZm8g
ZmFpbGVkOiBjcHU9JWQgZXJyPSVkXG4iLApAQCAtMjM5LDE0ICsyMjIsMTQgQEAgaW50IHhlbl92
Y3B1X3NldHVwKGludCBjcHUpCiAJCQkgKiBUaGlzIGNwdSBpcyB1c2luZyB0aGUgcmVnaXN0ZXJl
ZCB2Y3B1IGluZm8sIGV2ZW4gaWYKIAkJCSAqIGxhdGVyIG9uZXMgZmFpbCB0by4KIAkJCSAqLwot
CQkJcGVyX2NwdSh4ZW5fdmNwdSwgY3B1KSA9IHZjcHVwOworCQkJeGgtPnhlbl92Y3B1W2NwdV0g
PSB2Y3B1cDsKIAkJfQogCX0KIAogCWlmICgheGVuX2hhdmVfdmNwdV9pbmZvX3BsYWNlbWVudCkK
LQkJeGVuX3ZjcHVfaW5mb19yZXNldChjcHUpOworCQl4ZW5fdmNwdV9pbmZvX3Jlc2V0KHhoLCBj
cHUpOwogCi0JcmV0dXJuICgocGVyX2NwdSh4ZW5fdmNwdSwgY3B1KSA9PSBOVUxMKSA/IC1FTk9E
RVYgOiAwKTsKKwlyZXR1cm4gKCh4aC0+eGVuX3ZjcHVbY3B1XSA9PSBOVUxMKSA/IC1FTk9ERVYg
OiAwKTsKIH0KIAogdm9pZCB4ZW5fcmVib290KGludCByZWFzb24pCmRpZmYgLS1naXQgYS9hcmNo
L3g4Ni94ZW4vZW5saWdodGVuX2h2bS5jIGIvYXJjaC94ODYveGVuL2VubGlnaHRlbl9odm0uYwpp
bmRleCAwZTUzMzYzZjlkMWYuLmMxOTgxYTNlNDk4OSAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVu
L2VubGlnaHRlbl9odm0uYworKysgYi9hcmNoL3g4Ni94ZW4vZW5saWdodGVuX2h2bS5jCkBAIC01
LDYgKzUsNyBAQAogI2luY2x1ZGUgPGxpbnV4L2tleGVjLmg+CiAjaW5jbHVkZSA8bGludXgvbWVt
YmxvY2suaD4KIAorI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UveGVuLmg+CiAjaW5jbHVkZSA8eGVu
L3hlbmhvc3QuaD4KICNpbmNsdWRlIDx4ZW4vZmVhdHVyZXMuaD4KICNpbmNsdWRlIDx4ZW4vZXZl
bnRzLmg+CkBAIC03MiwyMiArNzMsMjIgQEAgc3RhdGljIHZvaWQgX19pbml0IHhlbl9odm1faW5p
dF9tZW1fbWFwcGluZyh2b2lkKQogewogCXhlbmhvc3RfdCAqKnhoOwogCi0JZm9yX2VhY2hfeGVu
aG9zdCh4aCkKKwlmb3JfZWFjaF94ZW5ob3N0KHhoKSB7CiAJCXhlbmhvc3RfcmVzZXRfc2hhcmVk
X2luZm8oKnhoKTsKIAotCS8qCi0JICogVGhlIHZpcnR1YWwgYWRkcmVzcyBvZiB0aGUgc2hhcmVk
X2luZm8gcGFnZSBoYXMgY2hhbmdlZCwgc28KLQkgKiB0aGUgdmNwdV9pbmZvIHBvaW50ZXIgZm9y
IFZDUFUgMCBpcyBub3cgc3RhbGUuCi0JICoKLQkgKiBUaGUgcHJlcGFyZV9ib290X2NwdSBjYWxs
YmFjayB3aWxsIHJlLWluaXRpYWxpemUgaXQgdmlhCi0JICogeGVuX3ZjcHVfc2V0dXAsIGJ1dCB3
ZSBjYW4ndCByZWx5IG9uIHRoYXQgdG8gYmUgY2FsbGVkIGZvcgotCSAqIG9sZCBYZW4gdmVyc2lv
bnMgKHhlbl9oYXZlX3ZlY3Rvcl9jYWxsYmFjayA9PSAwKS4KLQkgKgotCSAqIEl0IGlzLCBpbiBh
bnkgY2FzZSwgYmFkIHRvIGhhdmUgYSBzdGFsZSB2Y3B1X2luZm8gcG9pbnRlcgotCSAqIHNvIHJl
c2V0IGl0IG5vdy4KLQkgKiBGb3Igbm93LCB0aGlzIHVzZXMgeGhfZGVmYXVsdCBpbXBsaWN0bHku
Ci0JICovCi0JeGVuX3ZjcHVfaW5mb19yZXNldCgwKTsKKwkJLyoKKwkJICogVGhlIHZpcnR1YWwg
YWRkcmVzcyBvZiB0aGUgc2hhcmVkX2luZm8gcGFnZSBoYXMgY2hhbmdlZCwgc28KKwkJICogdGhl
IHZjcHVfaW5mbyBwb2ludGVyIGZvciBWQ1BVIDAgaXMgbm93IHN0YWxlLgorCQkgKgorCQkgKiBU
aGUgcHJlcGFyZV9ib290X2NwdSBjYWxsYmFjayB3aWxsIHJlLWluaXRpYWxpemUgaXQgdmlhCisJ
CSAqIHhlbl92Y3B1X3NldHVwLCBidXQgd2UgY2FuJ3QgcmVseSBvbiB0aGF0IHRvIGJlIGNhbGxl
ZCBmb3IKKwkJICogb2xkIFhlbiB2ZXJzaW9ucyAoeGVuX2hhdmVfdmVjdG9yX2NhbGxiYWNrID09
IDApLgorCQkgKgorCQkgKiBJdCBpcywgaW4gYW55IGNhc2UsIGJhZCB0byBoYXZlIGEgc3RhbGUg
dmNwdV9pbmZvIHBvaW50ZXIKKwkJICogc28gcmVzZXQgaXQgbm93LgorCQkgKi8KKwkJeGVuX3Zj
cHVfaW5mb19yZXNldCgqeGgsIDApOworCX0KIH0KIAogZXh0ZXJuIHVpbnQzMl90IHhlbl9wdl9j
cHVpZF9iYXNlKHhlbmhvc3RfdCAqeGgpOwpAQCAtMTAzLDExICsxMDQsMzIgQEAgdm9pZCB4ZW5f
aHZtX3NldHVwX2h5cGVyY2FsbF9wYWdlKHhlbmhvc3RfdCAqeGgpCiAJeGgtPmh5cGVyY2FsbF9w
YWdlID0geGVuX2h5cGVyY2FsbF9wYWdlOwogfQogCitzdGF0aWMgdm9pZCB4ZW5faHZtX3Byb2Jl
X3ZjcHVfaWQoeGVuaG9zdF90ICp4aCwgaW50IGNwdSkKK3sKKwl1aW50MzJfdCBlYXgsIGVieCwg
ZWN4LCBlZHgsIGJhc2U7CisKKwliYXNlID0geGVuaG9zdF9jcHVpZF9iYXNlKHhoKTsKKworCWlm
IChjcHUgPT0gMCkgeworCQljcHVpZChiYXNlICsgNCwgJmVheCwgJmVieCwgJmVjeCwgJmVkeCk7
CisJCWlmIChlYXggJiBYRU5fSFZNX0NQVUlEX1ZDUFVfSURfUFJFU0VOVCkKKwkJCXhoLT54ZW5f
dmNwdV9pZFtjcHVdID0gZWJ4OworCQllbHNlCisJCQl4aC0+eGVuX3ZjcHVfaWRbY3B1XSA9IHNt
cF9wcm9jZXNzb3JfaWQoKTsKKwl9IGVsc2UgeworCQlpZiAoY3B1X2FjcGlfaWQoY3B1KSAhPSBV
MzJfTUFYKQorCQkJeGgtPnhlbl92Y3B1X2lkW2NwdV0gPSBjcHVfYWNwaV9pZChjcHUpOworCQll
bHNlCisJCQl4aC0+eGVuX3ZjcHVfaWRbY3B1XSA9IGNwdTsKKwl9Cit9CisKIHhlbmhvc3Rfb3Bz
X3QgeGhfaHZtX29wcyA9IHsKIAkuY3B1aWRfYmFzZSA9IHhlbl9wdl9jcHVpZF9iYXNlLAogCS5z
ZXR1cF9oeXBlcmNhbGxfcGFnZSA9IHhlbl9odm1fc2V0dXBfaHlwZXJjYWxsX3BhZ2UsCiAJLnNl
dHVwX3NoYXJlZF9pbmZvID0geGVuX2h2bV9pbml0X3NoYXJlZF9pbmZvLAogCS5yZXNldF9zaGFy
ZWRfaW5mbyA9IHhlbl9odm1fcmVzZXRfc2hhcmVkX2luZm8sCisJLnByb2JlX3ZjcHVfaWQgPSB4
ZW5faHZtX3Byb2JlX3ZjcHVfaWQsCiB9OwogCiB4ZW5ob3N0X29wc190IHhoX2h2bV9uZXN0ZWRf
b3BzID0gewpAQCAtMTE2LDcgKzEzOCw3IEBAIHhlbmhvc3Rfb3BzX3QgeGhfaHZtX25lc3RlZF9v
cHMgPSB7CiBzdGF0aWMgdm9pZCBfX2luaXQgaW5pdF9odm1fcHZfaW5mbyh2b2lkKQogewogCWlu
dCBtYWpvciwgbWlub3I7Ci0JdWludDMyX3QgZWF4LCBlYngsIGVjeCwgZWR4LCBiYXNlOworCXVp
bnQzMl90IGVheCwgYmFzZTsKIAl4ZW5ob3N0X3QgKip4aDsKIAogCWJhc2UgPSB4ZW5ob3N0X2Nw
dWlkX2Jhc2UoeGhfZGVmYXVsdCk7CkBAIC0xNDcsMTEgKzE2OSw4IEBAIHN0YXRpYyB2b2lkIF9f
aW5pdCBpbml0X2h2bV9wdl9pbmZvKHZvaWQpCiAJaWYgKHhlbl92YWxpZGF0ZV9mZWF0dXJlcygp
ID09IGZhbHNlKQogCQlfX3hlbmhvc3RfdW5yZWdpc3Rlcih4ZW5ob3N0X3IyKTsKIAotCWNwdWlk
KGJhc2UgKyA0LCAmZWF4LCAmZWJ4LCAmZWN4LCAmZWR4KTsKLQlpZiAoZWF4ICYgWEVOX0hWTV9D
UFVJRF9WQ1BVX0lEX1BSRVNFTlQpCi0JCXRoaXNfY3B1X3dyaXRlKHhlbl92Y3B1X2lkLCBlYngp
OwotCWVsc2UKLQkJdGhpc19jcHVfd3JpdGUoeGVuX3ZjcHVfaWQsIHNtcF9wcm9jZXNzb3JfaWQo
KSk7CisJZm9yX2VhY2hfeGVuaG9zdCh4aCkKKwkJeGVuaG9zdF9wcm9iZV92Y3B1X2lkKCp4aCwg
c21wX3Byb2Nlc3Nvcl9pZCgpKTsKIH0KIAogI2lmZGVmIENPTkZJR19LRVhFQ19DT1JFCkBAIC0x
NzIsNiArMTkxLDcgQEAgc3RhdGljIHZvaWQgeGVuX2h2bV9jcmFzaF9zaHV0ZG93bihzdHJ1Y3Qg
cHRfcmVncyAqcmVncykKIHN0YXRpYyBpbnQgeGVuX2NwdV91cF9wcmVwYXJlX2h2bSh1bnNpZ25l
ZCBpbnQgY3B1KQogewogCWludCByYyA9IDA7CisJeGVuaG9zdF90ICoqeGg7CiAKIAkvKgogCSAq
IFRoaXMgY2FuIGhhcHBlbiBpZiBDUFUgd2FzIG9mZmxpbmVkIGVhcmxpZXIgYW5kCkBAIC0xODIs
MTMgKzIwMiwxMiBAQCBzdGF0aWMgaW50IHhlbl9jcHVfdXBfcHJlcGFyZV9odm0odW5zaWduZWQg
aW50IGNwdSkKIAkJeGVuX3VuaW5pdF9sb2NrX2NwdShjcHUpOwogCX0KIAotCWlmIChjcHVfYWNw
aV9pZChjcHUpICE9IFUzMl9NQVgpCi0JCXBlcl9jcHUoeGVuX3ZjcHVfaWQsIGNwdSkgPSBjcHVf
YWNwaV9pZChjcHUpOwotCWVsc2UKLQkJcGVyX2NwdSh4ZW5fdmNwdV9pZCwgY3B1KSA9IGNwdTsK
LQlyYyA9IHhlbl92Y3B1X3NldHVwKGNwdSk7Ci0JaWYgKHJjKQotCQlyZXR1cm4gcmM7CisJZm9y
X2VhY2hfeGVuaG9zdCh4aCkgeworCQl4ZW5ob3N0X3Byb2JlX3ZjcHVfaWQoKnhoLCBjcHUpOwor
CQlyYyA9IHhlbl92Y3B1X3NldHVwKCp4aCwgY3B1KTsKKwkJaWYgKHJjKQorCQkJcmV0dXJuIHJj
OworCX0KIAogCWlmICh4ZW5faGF2ZV92ZWN0b3JfY2FsbGJhY2sgJiYgeGVuX2ZlYXR1cmUoWEVO
RkVBVF9odm1fc2FmZV9wdmNsb2NrKSkKIAkJeGVuX3NldHVwX3RpbWVyKGNwdSk7CkBAIC0yMjks
MTUgKzI0OCwxNSBAQCBzdGF0aWMgdm9pZCBfX2luaXQgeGVuX2h2bV9ndWVzdF9pbml0KHZvaWQp
CiAJZm9yX2VhY2hfeGVuaG9zdCh4aCkgewogCQlyZXNlcnZlX3NoYXJlZF9pbmZvKCp4aCk7CiAJ
CXhlbmhvc3Rfc2V0dXBfc2hhcmVkX2luZm8oKnhoKTsKKworCQkvKgorCQkgKiB4ZW5fdmNwdSBp
cyBhIHBvaW50ZXIgdG8gdGhlIHZjcHVfaW5mbyBzdHJ1Y3QgaW4gdGhlCisJCSAqIHNoYXJlZF9p
bmZvIHBhZ2UsIHdlIHVzZSBpdCBpbiB0aGUgZXZlbnQgY2hhbm5lbCB1cGNhbGwKKwkJICogYW5k
IGluIHNvbWUgcHZjbG9jayByZWxhdGVkIGZ1bmN0aW9ucy4KKwkJICovCisJCXhlbl92Y3B1X2lu
Zm9fcmVzZXQoKnhoLCAwKTsKIAl9CiAKLQkvKgotCSAqIHhlbl92Y3B1IGlzIGEgcG9pbnRlciB0
byB0aGUgdmNwdV9pbmZvIHN0cnVjdCBpbiB0aGUgc2hhcmVkX2luZm8KLQkgKiBwYWdlLCB3ZSB1
c2UgaXQgaW4gdGhlIGV2ZW50IGNoYW5uZWwgdXBjYWxsIGFuZCBpbiBzb21lIHB2Y2xvY2sKLQkg
KiByZWxhdGVkIGZ1bmN0aW9ucy4KLQkgKiBGb3Igbm93LCB0aGlzIHVzZXMgeGhfZGVmYXVsdCBp
bXBsaWN0bHkuCi0JICovCi0JeGVuX3ZjcHVfaW5mb19yZXNldCgwKTsKIAogCXhlbl9wYW5pY19o
YW5kbGVyX2luaXQoKTsKIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYveGVuL2VubGlnaHRlbl9wdi5j
IGIvYXJjaC94ODYveGVuL2VubGlnaHRlbl9wdi5jCmluZGV4IDFhOWVkZWQ0Yjc2Yi4uNWY2YTE0
NzVlYzBjIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni94ZW4vZW5saWdodGVuX3B2LmMKKysrIGIvYXJj
aC94ODYveGVuL2VubGlnaHRlbl9wdi5jCkBAIC0zNiw4ICszNiw4IEBACiAKICNpbmNsdWRlIDx4
ZW4veGVuLmg+CiAjaW5jbHVkZSA8eGVuL2V2ZW50cy5oPgotI2luY2x1ZGUgPHhlbi94ZW5ob3N0
Lmg+CiAjaW5jbHVkZSA8eGVuL2ludGVyZmFjZS94ZW4uaD4KKyNpbmNsdWRlIDx4ZW4veGVuaG9z
dC5oPgogI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UvdmVyc2lvbi5oPgogI2luY2x1ZGUgPHhlbi9p
bnRlcmZhY2UvcGh5c2Rldi5oPgogI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UvdmNwdS5oPgpAQCAt
MTI2LDEyICsxMjYsMTIgQEAgc3RhdGljIHZvaWQgX19pbml0IHhlbl9wdl9pbml0X3BsYXRmb3Jt
KHZvaWQpCiAKIAlwb3B1bGF0ZV9leHRyYV9wdGUoZml4X3RvX3ZpcnQoRklYX1BBUkFWSVJUX0JP
T1RNQVApKTsKIAotCWZvcl9lYWNoX3hlbmhvc3QoeGgpCisJZm9yX2VhY2hfeGVuaG9zdCh4aCkg
ewogCQl4ZW5ob3N0X3NldHVwX3NoYXJlZF9pbmZvKCp4aCk7CiAKLQkvKiB4ZW4gY2xvY2sgdXNl
cyBwZXItY3B1IHZjcHVfaW5mbywgbmVlZCB0byBpbml0IGl0IGZvciBib290IGNwdSAqLwotCS8q
IEZvciBub3cgdGhpcyB1c2VzIHhoX2RlZmF1bHQgaW1wbGljaXRseS4gKi8KLQl4ZW5fdmNwdV9p
bmZvX3Jlc2V0KDApOworCQkvKiB4ZW4gY2xvY2sgdXNlcyBwZXItY3B1IHZjcHVfaW5mbywgbmVl
ZCB0byBpbml0IGl0IGZvciBib290IGNwdSAqLworCQl4ZW5fdmNwdV9pbmZvX3Jlc2V0KCp4aCwg
MCk7CisJfQogCiAJLyogcHZjbG9jayBpcyBpbiBzaGFyZWQgaW5mbyBhcmVhICovCiAJeGVuX2lu
aXRfdGltZV9vcHMoKTsKQEAgLTk3MywyOCArOTczLDMxIEBAIHN0YXRpYyB2b2lkIHhlbl93cml0
ZV9tc3IodW5zaWduZWQgaW50IG1zciwgdW5zaWduZWQgbG93LCB1bnNpZ25lZCBoaWdoKQogLyog
VGhpcyBpcyBjYWxsZWQgb25jZSB3ZSBoYXZlIHRoZSBjcHVfcG9zc2libGVfbWFzayAqLwogdm9p
ZCBfX2luaXQgeGVuX3NldHVwX3ZjcHVfaW5mb19wbGFjZW1lbnQodm9pZCkKIHsKKwl4ZW5ob3N0
X3QgKip4aDsKIAlpbnQgY3B1OwogCiAJZm9yX2VhY2hfcG9zc2libGVfY3B1KGNwdSkgewotCQkv
KiBTZXQgdXAgZGlyZWN0IHZDUFUgaWQgbWFwcGluZyBmb3IgUFYgZ3Vlc3RzLiAqLwotCQlwZXJf
Y3B1KHhlbl92Y3B1X2lkLCBjcHUpID0gY3B1OworCQlmb3JfZWFjaF94ZW5ob3N0KHhoKSB7CisJ
CQl4ZW5ob3N0X3Byb2JlX3ZjcHVfaWQoKnhoLCBjcHUpOwogCi0JCS8qCi0JCSAqIHhlbl92Y3B1
X3NldHVwKGNwdSkgY2FuIGZhaWwgIC0tIGluIHdoaWNoIGNhc2UgaXQKLQkJICogZmFsbHMgYmFj
ayB0byB0aGUgc2hhcmVkX2luZm8gdmVyc2lvbiBmb3IgY3B1cwotCQkgKiB3aGVyZSB4ZW5fdmNw
dV9ucihjcHUpIDwgTUFYX1ZJUlRfQ1BVUy4KLQkJICoKLQkJICogeGVuX2NwdV91cF9wcmVwYXJl
X3B2KCkgaGFuZGxlcyB0aGUgcmVzdCBieSBmYWlsaW5nCi0JCSAqIHRoZW0gaW4gaG90cGx1Zy4K
LQkJICovCi0JCSh2b2lkKSB4ZW5fdmNwdV9zZXR1cChjcHUpOworCQkJLyoKKwkJCSAqIHhlbl92
Y3B1X3NldHVwKGNwdSkgY2FuIGZhaWwgIC0tIGluIHdoaWNoIGNhc2UgaXQKKwkJCSAqIGZhbGxz
IGJhY2sgdG8gdGhlIHNoYXJlZF9pbmZvIHZlcnNpb24gZm9yIGNwdXMKKwkJCSAqIHdoZXJlIHhl
bl92Y3B1X25yKGNwdSkgPCBNQVhfVklSVF9DUFVTLgorCQkJICoKKwkJCSAqIHhlbl9jcHVfdXBf
cHJlcGFyZV9wdigpIGhhbmRsZXMgdGhlIHJlc3QgYnkgZmFpbGluZworCQkJICogdGhlbSBpbiBo
b3RwbHVnLgorCQkJICovCisJCQkodm9pZCkgeGVuX3ZjcHVfc2V0dXAoKnhoLCBjcHUpOworCQl9
CiAJfQogCiAJLyoKIAkgKiB4ZW5fdmNwdV9zZXR1cCBtYW5hZ2VkIHRvIHBsYWNlIHRoZSB2Y3B1
X2luZm8gd2l0aGluIHRoZQogCSAqIHBlcmNwdSBhcmVhIGZvciBhbGwgY3B1cywgc28gbWFrZSB1
c2Ugb2YgaXQuCiAJICovCi0JaWYgKHhlbl9oYXZlX3ZjcHVfaW5mb19wbGFjZW1lbnQpIHsKKwlp
ZiAoeGVuX2hhdmVfdmNwdV9pbmZvX3BsYWNlbWVudCAmJiBmYWxzZSkgeworCQkvKiBEaXNhYmxl
IGRpcmVjdCBhY2Nlc3MgdW50aWwgd2UgaGF2ZSBwcm9wZXIgcGNwdSBkYXRhIHN0cnVjdHVyZXMu
ICovCiAJCXB2X29wcy5pcnEuc2F2ZV9mbCA9IF9fUFZfSVNfQ0FMTEVFX1NBVkUoeGVuX3NhdmVf
ZmxfZGlyZWN0KTsKIAkJcHZfb3BzLmlycS5yZXN0b3JlX2ZsID0KIAkJCV9fUFZfSVNfQ0FMTEVF
X1NBVkUoeGVuX3Jlc3RvcmVfZmxfZGlyZWN0KTsKQEAgLTExMTAsNiArMTExMywxMSBAQCBzdGF0
aWMgdW5zaWduZWQgY2hhciB4ZW5fZ2V0X25taV9yZWFzb24odm9pZCkKIHsKIAl1bnNpZ25lZCBj
aGFyIHJlYXNvbiA9IDA7CiAKKwkvKgorCSAqIFdlIGNvdWxkIGdldCB0aGlzIGluZm9ybWF0aW9u
IGZyb20gYWxsIHRoZSB4ZW5ob3N0cyBhbmQgT1IgaXQuCisJICogQnV0LCB0aGUgcmVtb3RlIHhl
bmhvc3QgaXNuJ3QgcmVhbGx5IGV4cGVjdGVkIHRvIHNlbmQgdXMgTk1Jcy4KKwkgKi8KKwogCS8q
IENvbnN0cnVjdCBhIHZhbHVlIHdoaWNoIGxvb2tzIGxpa2UgaXQgY2FtZSBmcm9tIHBvcnQgMHg2
MS4gKi8KIAlpZiAodGVzdF9iaXQoX1hFTl9OTUlSRUFTT05faW9fZXJyb3IsCiAJCSAgICAgJnho
X2RlZmF1bHQtPkhZUEVSVklTT1Jfc2hhcmVkX2luZm8tPmFyY2gubm1pX3JlYXNvbikpCkBAIC0x
MjIyLDYgKzEyMzAsMTIgQEAgc3RhdGljIHZvaWQgeGVuX3B2X3Jlc2V0X3NoYXJlZF9pbmZvKHhl
bmhvc3RfdCAqeGgpCiAJCUJVRygpOwogfQogCit2b2lkIHhlbl9wdl9wcm9iZV92Y3B1X2lkKHhl
bmhvc3RfdCAqeGgsIGludCBjcHUpCit7CisJLyogU2V0IHVwIGRpcmVjdCB2Q1BVIGlkIG1hcHBp
bmcgZm9yIFBWIGd1ZXN0cy4gKi8KKwl4aC0+eGVuX3ZjcHVfaWRbY3B1XSA9IGNwdTsKK30KKwog
eGVuaG9zdF9vcHNfdCB4aF9wdl9vcHMgPSB7CiAJLmNwdWlkX2Jhc2UgPSB4ZW5fcHZfY3B1aWRf
YmFzZSwKIApAQCAtMTIyOSw2ICsxMjQzLDggQEAgeGVuaG9zdF9vcHNfdCB4aF9wdl9vcHMgPSB7
CiAKIAkuc2V0dXBfc2hhcmVkX2luZm8gPSB4ZW5fcHZfc2V0dXBfc2hhcmVkX2luZm8sCiAJLnJl
c2V0X3NoYXJlZF9pbmZvID0geGVuX3B2X3Jlc2V0X3NoYXJlZF9pbmZvLAorCisJLnByb2JlX3Zj
cHVfaWQgPSB4ZW5fcHZfcHJvYmVfdmNwdV9pZCwKIH07CiAKIHhlbmhvc3Rfb3BzX3QgeGhfcHZf
bmVzdGVkX29wcyA9IHsKQEAgLTEyODMsNyArMTI5OSw5IEBAIGFzbWxpbmthZ2UgX192aXNpYmxl
IHZvaWQgX19pbml0IHhlbl9zdGFydF9rZXJuZWwodm9pZCkKIAkgKiBEb24ndCBkbyB0aGUgZnVs
bCB2Y3B1X2luZm8gcGxhY2VtZW50IHN0dWZmIHVudGlsIHdlIGhhdmUKIAkgKiB0aGUgY3B1X3Bv
c3NpYmxlX21hc2sgYW5kIGEgbm9uLWR1bW15IHNoYXJlZF9pbmZvLgogCSAqLwotCXhlbl92Y3B1
X2luZm9fcmVzZXQoMCk7CisJZm9yX2VhY2hfeGVuaG9zdCh4aCkgeworCQl4ZW5fdmNwdV9pbmZv
X3Jlc2V0KCp4aCwgMCk7CisJfQogCiAJeDg2X3BsYXRmb3JtLmdldF9ubWlfcmVhc29uID0geGVu
X2dldF9ubWlfcmVhc29uOwogCkBAIC0xMzI4LDcgKzEzNDYsOSBAQCBhc21saW5rYWdlIF9fdmlz
aWJsZSB2b2lkIF9faW5pdCB4ZW5fc3RhcnRfa2VybmVsKHZvaWQpCiAJZ2V0X2NwdV9hZGRyZXNz
X3NpemVzKCZib290X2NwdV9kYXRhKTsKIAogCS8qIExldCdzIHByZXN1bWUgUFYgZ3Vlc3RzIGFs
d2F5cyBib290IG9uIHZDUFUgd2l0aCBpZCAwLiAqLwotCXBlcl9jcHUoeGVuX3ZjcHVfaWQsIDAp
ID0gMDsKKwkvKiBOb3RlOiB3ZSBzaG91bGQgYmUgZG9pbmcgdGhpcyBiZWZvcmUgeGVuX3ZjcHVf
aW5mb19yZXNldCBhYm92ZS4gKi8KKwlmb3JfZWFjaF94ZW5ob3N0KHhoKQorCQl4ZW5ob3N0X3By
b2JlX3ZjcHVfaWQoKnhoLCAwKTsKIAogCWlkdF9zZXR1cF9lYXJseV9oYW5kbGVyKCk7CiAKQEAg
LTE0ODUsNyArMTUwNSw3IEBAIHN0YXRpYyBpbnQgeGVuX2NwdV91cF9wcmVwYXJlX3B2KHVuc2ln
bmVkIGludCBjcHUpCiB7CiAJaW50IHJjOwogCi0JaWYgKHBlcl9jcHUoeGVuX3ZjcHUsIGNwdSkg
PT0gTlVMTCkKKwlpZiAoeGhfZGVmYXVsdC0+eGVuX3ZjcHVbY3B1XSA9PSBOVUxMKQogCQlyZXR1
cm4gLUVOT0RFVjsKIAogCXhlbl9zZXR1cF90aW1lcihjcHUpOwpkaWZmIC0tZ2l0IGEvYXJjaC94
ODYveGVuL2VubGlnaHRlbl9wdmguYyBiL2FyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHZoLmMKaW5k
ZXggNTAyNzdkZmJkZjMwLi4zZjk4NTI2ZGQwNDEgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9l
bmxpZ2h0ZW5fcHZoLmMKKysrIGIvYXJjaC94ODYveGVuL2VubGlnaHRlbl9wdmguYwpAQCAtMiwx
MyArMiwxNCBAQAogI2luY2x1ZGUgPGxpbnV4L2FjcGkuaD4KIAogI2luY2x1ZGUgPHhlbi9odmMt
Y29uc29sZS5oPgorI2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UveGVuLmg+CiAKICNpbmNsdWRlIDxh
c20vaW9fYXBpYy5oPgogI2luY2x1ZGUgPGFzbS9oeXBlcnZpc29yLmg+CiAjaW5jbHVkZSA8YXNt
L2U4MjAvYXBpLmg+CiAKLSNpbmNsdWRlIDx4ZW4veGVuLmg+CiAjaW5jbHVkZSA8eGVuL3hlbmhv
c3QuaD4KKyNpbmNsdWRlIDx4ZW4veGVuLmg+CiAjaW5jbHVkZSA8YXNtL3hlbi9pbnRlcmZhY2Uu
aD4KICNpbmNsdWRlIDxhc20veGVuL2h5cGVyY2FsbC5oPgogCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni94ZW4vaXJxLmMgYi9hcmNoL3g4Ni94ZW4vaXJxLmMKaW5kZXggODUwYzkzZjM0NmM3Li4zOGFk
MWExYzQ3NjMgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9pcnEuYworKysgYi9hcmNoL3g4Ni94
ZW4vaXJxLmMKQEAgLTI5LDcgKzI5LDcgQEAgYXNtbGlua2FnZSBfX3Zpc2libGUgdW5zaWduZWQg
bG9uZyB4ZW5fc2F2ZV9mbCh2b2lkKQogCXN0cnVjdCB2Y3B1X2luZm8gKnZjcHU7CiAJdW5zaWdu
ZWQgbG9uZyBmbGFnczsKIAotCXZjcHUgPSB0aGlzX2NwdV9yZWFkKHhlbl92Y3B1KTsKKwl2Y3B1
ID0geGhfZGVmYXVsdC0+eGVuX3ZjcHVbc21wX3Byb2Nlc3Nvcl9pZCgpXTsKIAogCS8qIGZsYWcg
aGFzIG9wcG9zaXRlIHNlbnNlIG9mIG1hc2sgKi8KIAlmbGFncyA9ICF2Y3B1LT5ldnRjaG5fdXBj
YWxsX21hc2s7CkBAIC01MSw3ICs1MSw3IEBAIF9fdmlzaWJsZSB2b2lkIHhlbl9yZXN0b3JlX2Zs
KHVuc2lnbmVkIGxvbmcgZmxhZ3MpCiAKIAkvKiBTZWUgeGVuX2lycV9lbmFibGUoKSBmb3Igd2h5
IHByZWVtcHRpb24gbXVzdCBiZSBkaXNhYmxlZC4gKi8KIAlwcmVlbXB0X2Rpc2FibGUoKTsKLQl2
Y3B1ID0gdGhpc19jcHVfcmVhZCh4ZW5fdmNwdSk7CisJdmNwdSA9IHhoX2RlZmF1bHQtPnhlbl92
Y3B1W3NtcF9wcm9jZXNzb3JfaWQoKV07CiAJdmNwdS0+ZXZ0Y2huX3VwY2FsbF9tYXNrID0gZmxh
Z3M7CiAKIAlpZiAoZmxhZ3MgPT0gMCkgewpAQCAtNzAsNyArNzAsNyBAQCBhc21saW5rYWdlIF9f
dmlzaWJsZSB2b2lkIHhlbl9pcnFfZGlzYWJsZSh2b2lkKQogCSAgIG1ha2Ugc3VyZSB3ZSdyZSBk
b24ndCBzd2l0Y2ggQ1BVcyBiZXR3ZWVuIGdldHRpbmcgdGhlIHZjcHUKIAkgICBwb2ludGVyIGFu
ZCB1cGRhdGluZyB0aGUgbWFzay4gKi8KIAlwcmVlbXB0X2Rpc2FibGUoKTsKLQl0aGlzX2NwdV9y
ZWFkKHhlbl92Y3B1KS0+ZXZ0Y2huX3VwY2FsbF9tYXNrID0gMTsKKwl4aF9kZWZhdWx0LT54ZW5f
dmNwdVtzbXBfcHJvY2Vzc29yX2lkKCldLT5ldnRjaG5fdXBjYWxsX21hc2sgPSAxOwogCXByZWVt
cHRfZW5hYmxlX25vX3Jlc2NoZWQoKTsKIH0KIFBWX0NBTExFRV9TQVZFX1JFR1NfVEhVTksoeGVu
X2lycV9kaXNhYmxlKTsKQEAgLTg2LDcgKzg2LDcgQEAgYXNtbGlua2FnZSBfX3Zpc2libGUgdm9p
ZCB4ZW5faXJxX2VuYWJsZSh2b2lkKQogCSAqLwogCXByZWVtcHRfZGlzYWJsZSgpOwogCi0JdmNw
dSA9IHRoaXNfY3B1X3JlYWQoeGVuX3ZjcHUpOworCXZjcHUgPSB4aF9kZWZhdWx0LT54ZW5fdmNw
dVtzbXBfcHJvY2Vzc29yX2lkKCldOwogCXZjcHUtPmV2dGNobl91cGNhbGxfbWFzayA9IDA7CiAK
IAkvKiBEb2Vzbid0IG1hdHRlciBpZiB3ZSBnZXQgcHJlZW1wdGVkIGhlcmUsIGJlY2F1c2UgYW55
CkBAIC0xMTEsNyArMTExLDcgQEAgc3RhdGljIHZvaWQgeGVuX2hhbHQodm9pZCkKIHsKIAlpZiAo
aXJxc19kaXNhYmxlZCgpKQogCQlIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX2Rvd24sCi0JCQkJ
ICAgeGVuX3ZjcHVfbnIoc21wX3Byb2Nlc3Nvcl9pZCgpKSwgTlVMTCk7CisJCQkJICAgeGVuX3Zj
cHVfbnIoeGhfZGVmYXVsdCwgc21wX3Byb2Nlc3Nvcl9pZCgpKSwgTlVMTCk7CiAJZWxzZQogCQl4
ZW5fc2FmZV9oYWx0KCk7CiB9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vbW11X3B2LmMgYi9h
cmNoL3g4Ni94ZW4vbW11X3B2LmMKaW5kZXggMGY0ZmUyMDZkY2MyLi5lOTlhZjUxYWI0ODEgMTAw
NjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9tbXVfcHYuYworKysgYi9hcmNoL3g4Ni94ZW4vbW11X3B2
LmMKQEAgLTEzMDQsMTcgKzEzMDQsMTcgQEAgc3RhdGljIHZvaWQgX19pbml0IHhlbl9wYWdldGFi
bGVfaW5pdCh2b2lkKQogfQogc3RhdGljIHZvaWQgeGVuX3dyaXRlX2NyMih1bnNpZ25lZCBsb25n
IGNyMikKIHsKLQl0aGlzX2NwdV9yZWFkKHhlbl92Y3B1KS0+YXJjaC5jcjIgPSBjcjI7CisJeGhf
ZGVmYXVsdC0+eGVuX3ZjcHVbc21wX3Byb2Nlc3Nvcl9pZCgpXS0+YXJjaC5jcjIgPSBjcjI7CiB9
CiAKIHN0YXRpYyB1bnNpZ25lZCBsb25nIHhlbl9yZWFkX2NyMih2b2lkKQogewotCXJldHVybiB0
aGlzX2NwdV9yZWFkKHhlbl92Y3B1KS0+YXJjaC5jcjI7CisJcmV0dXJuIHhoX2RlZmF1bHQtPnhl
bl92Y3B1W3NtcF9wcm9jZXNzb3JfaWQoKV0tPmFyY2guY3IyOwogfQogCiB1bnNpZ25lZCBsb25n
IHhlbl9yZWFkX2NyMl9kaXJlY3Qodm9pZCkKIHsKLQlyZXR1cm4gdGhpc19jcHVfcmVhZCh4ZW5f
dmNwdV9pbmZvLmFyY2guY3IyKTsKKwlyZXR1cm4geGhfZGVmYXVsdC0+eGVuX3ZjcHVfaW5mb1tz
bXBfcHJvY2Vzc29yX2lkKCldLmFyY2guY3IyOwogfQogCiBzdGF0aWMgbm9pbmxpbmUgdm9pZCB4
ZW5fZmx1c2hfdGxiKHZvaWQpCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vcGNpLXN3aW90bGIt
eGVuLmMgYi9hcmNoL3g4Ni94ZW4vcGNpLXN3aW90bGIteGVuLmMKaW5kZXggMzMyOTNjZTAxZDhk
Li4wNGY5YjJlOTJmMDYgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9wY2ktc3dpb3RsYi14ZW4u
YworKysgYi9hcmNoL3g4Ni94ZW4vcGNpLXN3aW90bGIteGVuLmMKQEAgLTQsNiArNCw3IEBACiAK
ICNpbmNsdWRlIDxsaW51eC9kbWEtbWFwcGluZy5oPgogI2luY2x1ZGUgPGxpbnV4L3BjaS5oPgor
I2luY2x1ZGUgPHhlbi9pbnRlcmZhY2UveGVuLmg+CiAjaW5jbHVkZSA8eGVuL3N3aW90bGIteGVu
Lmg+CiAKICNpbmNsdWRlIDxhc20veGVuL2h5cGVydmlzb3IuaD4KZGlmZiAtLWdpdCBhL2FyY2gv
eDg2L3hlbi9zZXR1cC5jIGIvYXJjaC94ODYveGVuL3NldHVwLmMKaW5kZXggZDVmMzAzYzBlNjU2
Li5lYzhmMjJhNTRmNmUgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9zZXR1cC5jCisrKyBiL2Fy
Y2gveDg2L3hlbi9zZXR1cC5jCkBAIC0xOSw2ICsxOSw3IEBACiAjaW5jbHVkZSA8YXNtL3NldHVw
Lmg+CiAjaW5jbHVkZSA8YXNtL2FjcGkuaD4KICNpbmNsdWRlIDxhc20vbnVtYS5oPgorI2luY2x1
ZGUgPHhlbi9pbnRlcmZhY2UveGVuLmg+CiAjaW5jbHVkZSA8YXNtL3hlbi9oeXBlcnZpc29yLmg+
CiAjaW5jbHVkZSA8YXNtL3hlbi9oeXBlcmNhbGwuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
eGVuL3NtcC5jIGIvYXJjaC94ODYveGVuL3NtcC5jCmluZGV4IDdhNDNiMmFlMTlmMS4uODY3NTI0
YmUwMDY1IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni94ZW4vc21wLmMKKysrIGIvYXJjaC94ODYveGVu
L3NtcC5jCkBAIC02LDYgKzYsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3BlcmNwdS5oPgogCiAjaW5j
bHVkZSA8eGVuL2V2ZW50cy5oPgorI2luY2x1ZGUgPHhlbi94ZW5ob3N0Lmg+CiAKICNpbmNsdWRl
IDx4ZW4vaHZjLWNvbnNvbGUuaD4KICNpbmNsdWRlICJ4ZW4tb3BzLmgiCkBAIC0xMjksNyArMTMw
LDEwIEBAIHZvaWQgX19pbml0IHhlbl9zbXBfY3B1c19kb25lKHVuc2lnbmVkIGludCBtYXhfY3B1
cykKIAkJcmV0dXJuOwogCiAJZm9yX2VhY2hfb25saW5lX2NwdShjcHUpIHsKLQkJaWYgKHhlbl92
Y3B1X25yKGNwdSkgPCBNQVhfVklSVF9DUFVTKQorCQl4ZW5ob3N0X3QgKip4aDsKKworCQlpZiAo
KHhlbl92Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSkgPCBNQVhfVklSVF9DUFVTKSAmJgorCQkJKCF4
aF9yZW1vdGUgfHwgKHhlbl92Y3B1X25yKHhoX3JlbW90ZSwgY3B1KSA8IE1BWF9WSVJUX0NQVVMp
KSkKIAkJCWNvbnRpbnVlOwogCiAJCXJjID0gY3B1X2Rvd24oY3B1KTsKQEAgLTEzOCw3ICsxNDIs
OCBAQCB2b2lkIF9faW5pdCB4ZW5fc21wX2NwdXNfZG9uZSh1bnNpZ25lZCBpbnQgbWF4X2NwdXMp
CiAJCQkvKgogCQkJICogUmVzZXQgdmNwdV9pbmZvIHNvIHRoaXMgY3B1IGNhbm5vdCBiZSBvbmxp
bmVkIGFnYWluLgogCQkJICovCi0JCQl4ZW5fdmNwdV9pbmZvX3Jlc2V0KGNwdSk7CisJCQlmb3Jf
ZWFjaF94ZW5ob3N0KHhoKQorCQkJCXhlbl92Y3B1X2luZm9fcmVzZXQoKnhoLCBjcHUpOwogCQkJ
Y291bnQrKzsKIAkJfSBlbHNlIHsKIAkJCXByX3dhcm4oIiVzOiBmYWlsZWQgdG8gYnJpbmcgQ1BV
ICVkIGRvd24sIGVycm9yICVkXG4iLApkaWZmIC0tZ2l0IGEvYXJjaC94ODYveGVuL3NtcF9odm0u
YyBiL2FyY2gveDg2L3hlbi9zbXBfaHZtLmMKaW5kZXggZjhkMzk0NDBiMjkyLi41ZTdmNTkxYmZk
ZDkgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9zbXBfaHZtLmMKKysrIGIvYXJjaC94ODYveGVu
L3NtcF9odm0uYwpAQCAtOSw2ICs5LDcgQEAKIAogc3RhdGljIHZvaWQgX19pbml0IHhlbl9odm1f
c21wX3ByZXBhcmVfYm9vdF9jcHUodm9pZCkKIHsKKwl4ZW5ob3N0X3QgKip4aDsKIAlCVUdfT04o
c21wX3Byb2Nlc3Nvcl9pZCgpICE9IDApOwogCW5hdGl2ZV9zbXBfcHJlcGFyZV9ib290X2NwdSgp
OwogCkBAIC0xNiw3ICsxNyw4IEBAIHN0YXRpYyB2b2lkIF9faW5pdCB4ZW5faHZtX3NtcF9wcmVw
YXJlX2Jvb3RfY3B1KHZvaWQpCiAJICogU2V0dXAgdmNwdV9pbmZvIGZvciBib290IENQVS4gU2Vj
b25kYXJ5IENQVXMgZ2V0IHRoZWlyIHZjcHVfaW5mbwogCSAqIGluIHhlbl9jcHVfdXBfcHJlcGFy
ZV9odm0oKS4KIAkgKi8KLQl4ZW5fdmNwdV9zZXR1cCgwKTsKKwlmb3JfZWFjaF94ZW5ob3N0KHho
KQorCQl4ZW5fdmNwdV9zZXR1cCgqeGgsIDApOwogCiAJLyoKIAkgKiBUaGUgYWx0ZXJuYXRpdmUg
bG9naWMgKHdoaWNoIHBhdGNoZXMgdGhlIHVubG9jay9sb2NrKSBydW5zIGJlZm9yZQpAQCAtMjks
NiArMzEsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgeGVuX2h2bV9zbXBfcHJlcGFyZV9ib290X2Nw
dSh2b2lkKQogCiBzdGF0aWMgdm9pZCBfX2luaXQgeGVuX2h2bV9zbXBfcHJlcGFyZV9jcHVzKHVu
c2lnbmVkIGludCBtYXhfY3B1cykKIHsKKwl4ZW5ob3N0X3QgKip4aDsKIAlpbnQgY3B1OwogCiAJ
bmF0aXZlX3NtcF9wcmVwYXJlX2NwdXMobWF4X2NwdXMpOwpAQCAtMzYsMTIgKzM5LDE0IEBAIHN0
YXRpYyB2b2lkIF9faW5pdCB4ZW5faHZtX3NtcF9wcmVwYXJlX2NwdXModW5zaWduZWQgaW50IG1h
eF9jcHVzKQogCiAJeGVuX2luaXRfbG9ja19jcHUoMCk7CiAKLQlmb3JfZWFjaF9wb3NzaWJsZV9j
cHUoY3B1KSB7Ci0JCWlmIChjcHUgPT0gMCkKLQkJCWNvbnRpbnVlOworCWZvcl9lYWNoX3hlbmhv
c3QoeGgpIHsKKwkJZm9yX2VhY2hfcG9zc2libGVfY3B1KGNwdSkgeworCQkJaWYgKGNwdSA9PSAw
KQorCQkJCWNvbnRpbnVlOwogCi0JCS8qIFNldCBkZWZhdWx0IHZjcHVfaWQgdG8gbWFrZSBzdXJl
IHRoYXQgd2UgZG9uJ3QgdXNlIGNwdS0wJ3MgKi8KLQkJcGVyX2NwdSh4ZW5fdmNwdV9pZCwgY3B1
KSA9IFhFTl9WQ1BVX0lEX0lOVkFMSUQ7CisJCQkvKiBTZXQgZGVmYXVsdCB2Y3B1X2lkIHRvIG1h
a2Ugc3VyZSB0aGF0IHdlIGRvbid0IHVzZSBjcHUtMCdzICovCisJCQkoKnhoKS0+eGVuX3ZjcHVf
aWRbY3B1XSA9IFhFTl9WQ1BVX0lEX0lOVkFMSUQ7CisJCX0KIAl9CiB9CiAKZGlmZiAtLWdpdCBh
L2FyY2gveDg2L3hlbi9zbXBfcHYuYyBiL2FyY2gveDg2L3hlbi9zbXBfcHYuYwppbmRleCAxNDU1
MDZmOWZkYmUuLjZkOWMzZTY2MTFlZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL3NtcF9wdi5j
CisrKyBiL2FyY2gveDg2L3hlbi9zbXBfcHYuYwpAQCAtMzUwLDcgKzM1MCw3IEBAIGNwdV9pbml0
aWFsaXplX2NvbnRleHQodW5zaWduZWQgaW50IGNwdSwgc3RydWN0IHRhc2tfc3RydWN0ICppZGxl
KQogCXBlcl9jcHUoeGVuX2NyMywgY3B1KSA9IF9fcGEoc3dhcHBlcl9wZ19kaXIpOwogCiAJY3R4
dC0+Y3RybHJlZ1szXSA9IHhlbl9wZm5fdG9fY3IzKHZpcnRfdG9fZ2ZuKHN3YXBwZXJfcGdfZGly
KSk7Ci0JaWYgKEhZUEVSVklTT1JfdmNwdV9vcChWQ1BVT1BfaW5pdGlhbGlzZSwgeGVuX3ZjcHVf
bnIoY3B1KSwgY3R4dCkpCisJaWYgKEhZUEVSVklTT1JfdmNwdV9vcChWQ1BVT1BfaW5pdGlhbGlz
ZSwgeGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1KSwgY3R4dCkpCiAJCUJVRygpOwogCiAJa2Zy
ZWUoY3R4dCk7CkBAIC0zNzQsNyArMzc0LDcgQEAgc3RhdGljIGludCB4ZW5fcHZfY3B1X3VwKHVu
c2lnbmVkIGludCBjcHUsIHN0cnVjdCB0YXNrX3N0cnVjdCAqaWRsZSkKIAkJcmV0dXJuIHJjOwog
CiAJLyogbWFrZSBzdXJlIGludGVycnVwdHMgc3RhcnQgYmxvY2tlZCAqLwotCXBlcl9jcHUoeGVu
X3ZjcHUsIGNwdSktPmV2dGNobl91cGNhbGxfbWFzayA9IDE7CisJeGhfZGVmYXVsdC0+eGVuX3Zj
cHVbY3B1XS0+ZXZ0Y2huX3VwY2FsbF9tYXNrID0gMTsKIAogCXJjID0gY3B1X2luaXRpYWxpemVf
Y29udGV4dChjcHUsIGlkbGUpOwogCWlmIChyYykKQEAgLTM4Miw3ICszODIsNyBAQCBzdGF0aWMg
aW50IHhlbl9wdl9jcHVfdXAodW5zaWduZWQgaW50IGNwdSwgc3RydWN0IHRhc2tfc3RydWN0ICpp
ZGxlKQogCiAJeGVuX3BtdV9pbml0KGNwdSk7CiAKLQlyYyA9IEhZUEVSVklTT1JfdmNwdV9vcChW
Q1BVT1BfdXAsIHhlbl92Y3B1X25yKGNwdSksIE5VTEwpOworCXJjID0gSFlQRVJWSVNPUl92Y3B1
X29wKFZDUFVPUF91cCwgeGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1KSwgTlVMTCk7CiAJQlVH
X09OKHJjKTsKIAogCXdoaWxlIChjcHVfcmVwb3J0X3N0YXRlKGNwdSkgIT0gQ1BVX09OTElORSkK
QEAgLTQwNyw3ICs0MDcsNyBAQCBzdGF0aWMgaW50IHhlbl9wdl9jcHVfZGlzYWJsZSh2b2lkKQog
c3RhdGljIHZvaWQgeGVuX3B2X2NwdV9kaWUodW5zaWduZWQgaW50IGNwdSkKIHsKIAl3aGlsZSAo
SFlQRVJWSVNPUl92Y3B1X29wKFZDUFVPUF9pc191cCwKLQkJCQkgIHhlbl92Y3B1X25yKGNwdSks
IE5VTEwpKSB7CisJCQkJICB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBjcHUpLCBOVUxMKSkgewog
CQlfX3NldF9jdXJyZW50X3N0YXRlKFRBU0tfVU5JTlRFUlJVUFRJQkxFKTsKIAkJc2NoZWR1bGVf
dGltZW91dChIWi8xMCk7CiAJfQpAQCAtNDIzLDcgKzQyMyw3IEBAIHN0YXRpYyB2b2lkIHhlbl9w
dl9jcHVfZGllKHVuc2lnbmVkIGludCBjcHUpCiBzdGF0aWMgdm9pZCB4ZW5fcHZfcGxheV9kZWFk
KHZvaWQpIC8qIHVzZWQgb25seSB3aXRoIEhPVFBMVUdfQ1BVICovCiB7CiAJcGxheV9kZWFkX2Nv
bW1vbigpOwotCUhZUEVSVklTT1JfdmNwdV9vcChWQ1BVT1BfZG93biwgeGVuX3ZjcHVfbnIoc21w
X3Byb2Nlc3Nvcl9pZCgpKSwgTlVMTCk7CisJSFlQRVJWSVNPUl92Y3B1X29wKFZDUFVPUF9kb3du
LCB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBzbXBfcHJvY2Vzc29yX2lkKCkpLCBOVUxMKTsKIAlj
cHVfYnJpbmd1cCgpOwogCS8qCiAJICogY29tbWl0IDRiMGMwZjI5NCAodGljazogQ2xlYW51cCBO
T0haIHBlciBjcHUgZGF0YSBvbiBjcHUgZG93bikKQEAgLTQ2NCw3ICs0NjQsNyBAQCBzdGF0aWMg
dm9pZCBzdG9wX3NlbGYodm9pZCAqdikKIAogCXNldF9jcHVfb25saW5lKGNwdSwgZmFsc2UpOwog
Ci0JSFlQRVJWSVNPUl92Y3B1X29wKFZDUFVPUF9kb3duLCB4ZW5fdmNwdV9ucihjcHUpLCBOVUxM
KTsKKwlIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX2Rvd24sIHhlbl92Y3B1X25yKHhoX2RlZmF1
bHQsIGNwdSksIE5VTEwpOwogCUJVRygpOwogfQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4v
dGltZS5jIGIvYXJjaC94ODYveGVuL3RpbWUuYwppbmRleCBkNGJiMWY4YjRmNTguLjIxN2JjNGRl
MDdlZSAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL3RpbWUuYworKysgYi9hcmNoL3g4Ni94ZW4v
dGltZS5jCkBAIC0xOCwxMiArMTgsMTIgQEAKICNpbmNsdWRlIDxsaW51eC90aW1la2VlcGVyX2lu
dGVybmFsLmg+CiAKICNpbmNsdWRlIDxhc20vcHZjbG9jay5oPgorI2luY2x1ZGUgPHhlbi9pbnRl
cmZhY2UveGVuLmg+CiAjaW5jbHVkZSA8YXNtL3hlbi9oeXBlcnZpc29yLmg+CiAjaW5jbHVkZSA8
YXNtL3hlbi9oeXBlcmNhbGwuaD4KIAogI2luY2x1ZGUgPHhlbi9ldmVudHMuaD4KICNpbmNsdWRl
IDx4ZW4vZmVhdHVyZXMuaD4KLSNpbmNsdWRlIDx4ZW4vaW50ZXJmYWNlL3hlbi5oPgogI2luY2x1
ZGUgPHhlbi9pbnRlcmZhY2UvdmNwdS5oPgogCiAjaW5jbHVkZSAieGVuLW9wcy5oIgpAQCAtNDgs
NyArNDgsNyBAQCBzdGF0aWMgdTY0IHhlbl9jbG9ja3NvdXJjZV9yZWFkKHZvaWQpCiAJdTY0IHJl
dDsKIAogCXByZWVtcHRfZGlzYWJsZV9ub3RyYWNlKCk7Ci0Jc3JjID0gJl9fdGhpc19jcHVfcmVh
ZCh4ZW5fdmNwdSktPnRpbWU7CisJc3JjID0gJnhoX2RlZmF1bHQtPnhlbl92Y3B1W3NtcF9wcm9j
ZXNzb3JfaWQoKV0tPnRpbWU7CiAJcmV0ID0gcHZjbG9ja19jbG9ja3NvdXJjZV9yZWFkKHNyYyk7
CiAJcHJlZW1wdF9lbmFibGVfbm90cmFjZSgpOwogCXJldHVybiByZXQ7CkBAIC03MCw5ICs3MCwx
MCBAQCBzdGF0aWMgdm9pZCB4ZW5fcmVhZF93YWxsY2xvY2soc3RydWN0IHRpbWVzcGVjNjQgKnRz
KQogCXN0cnVjdCBwdmNsb2NrX3dhbGxfY2xvY2sgKndhbGxfY2xvY2sgPSAmKHMtPndjKTsKICAg
ICAgICAgc3RydWN0IHB2Y2xvY2tfdmNwdV90aW1lX2luZm8gKnZjcHVfdGltZTsKIAotCXZjcHVf
dGltZSA9ICZnZXRfY3B1X3Zhcih4ZW5fdmNwdSktPnRpbWU7CisJcHJlZW1wdF9kaXNhYmxlX25v
dHJhY2UoKTsKKwl2Y3B1X3RpbWUgPSAmeGhfZGVmYXVsdC0+eGVuX3ZjcHVbc21wX3Byb2Nlc3Nv
cl9pZCgpXS0+dGltZTsKIAlwdmNsb2NrX3JlYWRfd2FsbGNsb2NrKHdhbGxfY2xvY2ssIHZjcHVf
dGltZSwgdHMpOwotCXB1dF9jcHVfdmFyKHhlbl92Y3B1KTsKKwlwcmVlbXB0X2VuYWJsZV9ub3Ry
YWNlKCk7CiB9CiAKIHN0YXRpYyB2b2lkIHhlbl9nZXRfd2FsbGNsb2NrKHN0cnVjdCB0aW1lc3Bl
YzY0ICpub3cpCkBAIC0yMzMsOSArMjM0LDkgQEAgc3RhdGljIGludCB4ZW5fdmNwdW9wX3NodXRk
b3duKHN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmV2dCkKIHsKIAlpbnQgY3B1ID0gc21wX3By
b2Nlc3Nvcl9pZCgpOwogCi0JaWYgKEhZUEVSVklTT1JfdmNwdV9vcChWQ1BVT1Bfc3RvcF9zaW5n
bGVzaG90X3RpbWVyLCB4ZW5fdmNwdV9ucihjcHUpLAorCWlmIChIWVBFUlZJU09SX3ZjcHVfb3Ao
VkNQVU9QX3N0b3Bfc2luZ2xlc2hvdF90aW1lciwgeGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1
KSwKIAkJCSAgICAgICBOVUxMKSB8fAotCSAgICBIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX3N0
b3BfcGVyaW9kaWNfdGltZXIsIHhlbl92Y3B1X25yKGNwdSksCisJICAgIEhZUEVSVklTT1JfdmNw
dV9vcChWQ1BVT1Bfc3RvcF9wZXJpb2RpY190aW1lciwgeGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwg
Y3B1KSwKIAkJCSAgICAgICBOVUxMKSkKIAkJQlVHKCk7CiAKQEAgLTI0Niw3ICsyNDcsNyBAQCBz
dGF0aWMgaW50IHhlbl92Y3B1b3Bfc2V0X29uZXNob3Qoc3RydWN0IGNsb2NrX2V2ZW50X2Rldmlj
ZSAqZXZ0KQogewogCWludCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CiAKLQlpZiAoSFlQRVJW
SVNPUl92Y3B1X29wKFZDUFVPUF9zdG9wX3BlcmlvZGljX3RpbWVyLCB4ZW5fdmNwdV9ucihjcHUp
LAorCWlmIChIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX3N0b3BfcGVyaW9kaWNfdGltZXIsIHhl
bl92Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSksCiAJCQkgICAgICAgTlVMTCkpCiAJCUJVRygpOwog
CkBAIC0yNjYsNyArMjY3LDcgQEAgc3RhdGljIGludCB4ZW5fdmNwdW9wX3NldF9uZXh0X2V2ZW50
KHVuc2lnbmVkIGxvbmcgZGVsdGEsCiAJLyogR2V0IGFuIGV2ZW50IGFueXdheSwgZXZlbiBpZiB0
aGUgdGltZW91dCBpcyBhbHJlYWR5IGV4cGlyZWQgKi8KIAlzaW5nbGUuZmxhZ3MgPSAwOwogCi0J
cmV0ID0gSFlQRVJWSVNPUl92Y3B1X29wKFZDUFVPUF9zZXRfc2luZ2xlc2hvdF90aW1lciwgeGVu
X3ZjcHVfbnIoY3B1KSwKKwlyZXQgPSBIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX3NldF9zaW5n
bGVzaG90X3RpbWVyLCB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBjcHUpLAogCQkJCSAmc2luZ2xl
KTsKIAlCVUdfT04ocmV0ICE9IDApOwogCkBAIC0zNjYsNyArMzY3LDcgQEAgdm9pZCB4ZW5fdGlt
ZXJfcmVzdW1lKHZvaWQpCiAKIAlmb3JfZWFjaF9vbmxpbmVfY3B1KGNwdSkgewogCQlpZiAoSFlQ
RVJWSVNPUl92Y3B1X29wKFZDUFVPUF9zdG9wX3BlcmlvZGljX3RpbWVyLAotCQkJCSAgICAgICB4
ZW5fdmNwdV9ucihjcHUpLCBOVUxMKSkKKwkJCQkgICAgICAgeGVuX3ZjcHVfbnIoeGhfZGVmYXVs
dCwgY3B1KSwgTlVMTCkpCiAJCQlCVUcoKTsKIAl9CiB9CkBAIC00ODIsNyArNDgzLDcgQEAgc3Rh
dGljIHZvaWQgX19pbml0IHhlbl90aW1lX2luaXQodm9pZCkKIAogCWNsb2Nrc291cmNlX3JlZ2lz
dGVyX2h6KCZ4ZW5fY2xvY2tzb3VyY2UsIE5TRUNfUEVSX1NFQyk7CiAKLQlpZiAoSFlQRVJWSVNP
Ul92Y3B1X29wKFZDUFVPUF9zdG9wX3BlcmlvZGljX3RpbWVyLCB4ZW5fdmNwdV9ucihjcHUpLAor
CWlmIChIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9QX3N0b3BfcGVyaW9kaWNfdGltZXIsIHhlbl92
Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSksCiAJCQkgICAgICAgTlVMTCkgPT0gMCkgewogCQkvKiBT
dWNjZXNzZnVsbHkgdHVybmVkIG9mZiAxMDBIeiB0aWNrLCBzbyB3ZSBoYXZlIHRoZQogCQkgICB2
Y3B1b3AtYmFzZWQgdGltZXIgaW50ZXJmYWNlICovCkBAIC01MDAsNyArNTAxLDcgQEAgc3RhdGlj
IHZvaWQgX19pbml0IHhlbl90aW1lX2luaXQodm9pZCkKIAkgKiBXZSBjaGVjayBhaGVhZCBvbiB0
aGUgcHJpbWFyeSB0aW1lIGluZm8gaWYgdGhpcwogCSAqIGJpdCBpcyBzdXBwb3J0ZWQgaGVuY2Ug
c3BlZWRpbmcgdXAgWGVuIGNsb2Nrc291cmNlLgogCSAqLwotCXB2dGkgPSAmX190aGlzX2NwdV9y
ZWFkKHhlbl92Y3B1KS0+dGltZTsKKwlwdnRpID0gJnhoX2RlZmF1bHQtPnhlbl92Y3B1W3NtcF9w
cm9jZXNzb3JfaWQoKV0tPnRpbWU7CiAJaWYgKHB2dGktPmZsYWdzICYgUFZDTE9DS19UU0NfU1RB
QkxFX0JJVCkgewogCQlwdmNsb2NrX3NldF9mbGFncyhQVkNMT0NLX1RTQ19TVEFCTEVfQklUKTsK
IAkJeGVuX3NldHVwX3ZzeXNjYWxsX3RpbWVfaW5mbygpOwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
eGVuL3hlbi1vcHMuaCBiL2FyY2gveDg2L3hlbi94ZW4tb3BzLmgKaW5kZXggNTA4NWNlODhhOGQ3
Li45NmZkN2VkZWE3ZTkgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi94ZW4tb3BzLmgKKysrIGIv
YXJjaC94ODYveGVuL3hlbi1vcHMuaApAQCAtMjIsNyArMjIsNiBAQCBleHRlcm4gdm9pZCAqeGVu
X2luaXRpYWxfZ2R0Owogc3RydWN0IHRyYXBfaW5mbzsKIHZvaWQgeGVuX2NvcHlfdHJhcF9pbmZv
KHN0cnVjdCB0cmFwX2luZm8gKnRyYXBzKTsKIAotREVDTEFSRV9QRVJfQ1BVKHN0cnVjdCB2Y3B1
X2luZm8sIHhlbl92Y3B1X2luZm8pOwogREVDTEFSRV9QRVJfQ1BVKHVuc2lnbmVkIGxvbmcsIHhl
bl9jcjMpOwogREVDTEFSRV9QRVJfQ1BVKHVuc2lnbmVkIGxvbmcsIHhlbl9jdXJyZW50X2NyMyk7
CiAKQEAgLTc2LDggKzc1LDggQEAgYm9vbCB4ZW5fdmNwdV9zdG9sZW4oaW50IHZjcHUpOwogCiBl
eHRlcm4gaW50IHhlbl9oYXZlX3ZjcHVfaW5mb19wbGFjZW1lbnQ7CiAKLWludCB4ZW5fdmNwdV9z
ZXR1cChpbnQgY3B1KTsKLXZvaWQgeGVuX3ZjcHVfaW5mb19yZXNldChpbnQgY3B1KTsKK2ludCB4
ZW5fdmNwdV9zZXR1cCh4ZW5ob3N0X3QgKnhoLCBpbnQgY3B1KTsKK3ZvaWQgeGVuX3ZjcHVfaW5m
b19yZXNldCh4ZW5ob3N0X3QgKnhoLCBpbnQgY3B1KTsKIHZvaWQgeGVuX3NldHVwX3ZjcHVfaW5m
b19wbGFjZW1lbnQodm9pZCk7CiAKICNpZmRlZiBDT05GSUdfU01QCmRpZmYgLS1naXQgYS9kcml2
ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2Jhc2UuYyBiL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNf
YmFzZS5jCmluZGV4IDExN2U3NmIyZjkzOS4uYWU0OTc4NzZmZTQxIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3hlbi9ldmVudHMvZXZlbnRzX2Jhc2UuYworKysgYi9kcml2ZXJzL3hlbi9ldmVudHMvZXZl
bnRzX2Jhc2UuYwpAQCAtODg0LDcgKzg4NCw3IEBAIHN0YXRpYyBpbnQgYmluZF9pcGlfdG9faXJx
KHVuc2lnbmVkIGludCBpcGksIHVuc2lnbmVkIGludCBjcHUpCiAJCWlycV9zZXRfY2hpcF9hbmRf
aGFuZGxlcl9uYW1lKGlycSwgJnhlbl9wZXJjcHVfY2hpcCwKIAkJCQkJICAgICAgaGFuZGxlX3Bl
cmNwdV9pcnEsICJpcGkiKTsKIAotCQliaW5kX2lwaS52Y3B1ID0geGVuX3ZjcHVfbnIoY3B1KTsK
KwkJYmluZF9pcGkudmNwdSA9IHhlbl92Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSk7CiAJCWlmIChI
WVBFUlZJU09SX2V2ZW50X2NoYW5uZWxfb3AoRVZUQ0hOT1BfYmluZF9pcGksCiAJCQkJCQkmYmlu
ZF9pcGkpICE9IDApCiAJCQlCVUcoKTsKQEAgLTkzNyw3ICs5MzcsNyBAQCBzdGF0aWMgaW50IGZp
bmRfdmlycSh1bnNpZ25lZCBpbnQgdmlycSwgdW5zaWduZWQgaW50IGNwdSkKIAkJCWNvbnRpbnVl
OwogCQlpZiAoc3RhdHVzLnN0YXR1cyAhPSBFVlRDSE5TVEFUX3ZpcnEpCiAJCQljb250aW51ZTsK
LQkJaWYgKHN0YXR1cy51LnZpcnEgPT0gdmlycSAmJiBzdGF0dXMudmNwdSA9PSB4ZW5fdmNwdV9u
cihjcHUpKSB7CisJCWlmIChzdGF0dXMudS52aXJxID09IHZpcnEgJiYgc3RhdHVzLnZjcHUgPT0g
eGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1KSkgewogCQkJcmMgPSBwb3J0OwogCQkJYnJlYWs7
CiAJCX0KQEAgLTk4MCw3ICs5ODAsNyBAQCBpbnQgYmluZF92aXJxX3RvX2lycSh1bnNpZ25lZCBp
bnQgdmlycSwgdW5zaWduZWQgaW50IGNwdSwgYm9vbCBwZXJjcHUpCiAJCQkJCQkgICAgICBoYW5k
bGVfZWRnZV9pcnEsICJ2aXJxIik7CiAKIAkJYmluZF92aXJxLnZpcnEgPSB2aXJxOwotCQliaW5k
X3ZpcnEudmNwdSA9IHhlbl92Y3B1X25yKGNwdSk7CisJCWJpbmRfdmlycS52Y3B1ID0geGVuX3Zj
cHVfbnIoeGhfZGVmYXVsdCwgY3B1KTsKIAkJcmV0ID0gSFlQRVJWSVNPUl9ldmVudF9jaGFubmVs
X29wKEVWVENITk9QX2JpbmRfdmlycSwKIAkJCQkJCSZiaW5kX3ZpcnEpOwogCQlpZiAocmV0ID09
IDApCkBAIC0xMjAwLDcgKzEyMDAsNyBAQCB2b2lkIHhlbl9zZW5kX0lQSV9vbmUodW5zaWduZWQg
aW50IGNwdSwgZW51bSBpcGlfdmVjdG9yIHZlY3RvcikKIAogI2lmZGVmIENPTkZJR19YODYKIAlp
ZiAodW5saWtlbHkodmVjdG9yID09IFhFTl9OTUlfVkVDVE9SKSkgewotCQlpbnQgcmMgPSAgSFlQ
RVJWSVNPUl92Y3B1X29wKFZDUFVPUF9zZW5kX25taSwgeGVuX3ZjcHVfbnIoY3B1KSwKKwkJaW50
IHJjID0gIEhZUEVSVklTT1JfdmNwdV9vcChWQ1BVT1Bfc2VuZF9ubWksIHhlbl92Y3B1X25yKHho
X2RlZmF1bHQsIGNwdSksCiAJCQkJCSAgICAgTlVMTCk7CiAJCWlmIChyYyA8IDApCiAJCQlwcmlu
dGsoS0VSTl9XQVJOSU5HICJTZW5kaW5nIG5taSB0byBDUFUlZCBmYWlsZWQgKHJjOiVkKVxuIiwg
Y3B1LCByYyk7CkBAIC0xMzA2LDcgKzEzMDYsNyBAQCBpbnQgeGVuX3JlYmluZF9ldnRjaG5fdG9f
Y3B1KGludCBldnRjaG4sIHVuc2lnbmVkIHRjcHUpCiAKIAkvKiBTZW5kIGZ1dHVyZSBpbnN0YW5j
ZXMgb2YgdGhpcyBpbnRlcnJ1cHQgdG8gb3RoZXIgdmNwdS4gKi8KIAliaW5kX3ZjcHUucG9ydCA9
IGV2dGNobjsKLQliaW5kX3ZjcHUudmNwdSA9IHhlbl92Y3B1X25yKHRjcHUpOworCWJpbmRfdmNw
dS52Y3B1ID0geGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgdGNwdSk7CiAKIAkvKgogCSAqIE1hc2sg
dGhlIGV2ZW50IHdoaWxlIGNoYW5naW5nIHRoZSBWQ1BVIGJpbmRpbmcgdG8gcHJldmVudApAQCAt
MTQ1MSw3ICsxNDUxLDcgQEAgc3RhdGljIHZvaWQgcmVzdG9yZV9jcHVfdmlycXModW5zaWduZWQg
aW50IGNwdSkKIAogCQkvKiBHZXQgYSBuZXcgYmluZGluZyBmcm9tIFhlbi4gKi8KIAkJYmluZF92
aXJxLnZpcnEgPSB2aXJxOwotCQliaW5kX3ZpcnEudmNwdSA9IHhlbl92Y3B1X25yKGNwdSk7CisJ
CWJpbmRfdmlycS52Y3B1ID0geGVuX3ZjcHVfbnIoeGhfZGVmYXVsdCwgY3B1KTsKIAkJaWYgKEhZ
UEVSVklTT1JfZXZlbnRfY2hhbm5lbF9vcChFVlRDSE5PUF9iaW5kX3ZpcnEsCiAJCQkJCQkmYmlu
ZF92aXJxKSAhPSAwKQogCQkJQlVHKCk7CkBAIC0xNDc1LDcgKzE0NzUsNyBAQCBzdGF0aWMgdm9p
ZCByZXN0b3JlX2NwdV9pcGlzKHVuc2lnbmVkIGludCBjcHUpCiAJCUJVR19PTihpcGlfZnJvbV9p
cnEoaXJxKSAhPSBpcGkpOwogCiAJCS8qIEdldCBhIG5ldyBiaW5kaW5nIGZyb20gWGVuLiAqLwot
CQliaW5kX2lwaS52Y3B1ID0geGVuX3ZjcHVfbnIoY3B1KTsKKwkJYmluZF9pcGkudmNwdSA9IHhl
bl92Y3B1X25yKHhoX2RlZmF1bHQsIGNwdSk7CiAJCWlmIChIWVBFUlZJU09SX2V2ZW50X2NoYW5u
ZWxfb3AoRVZUQ0hOT1BfYmluZF9pcGksCiAJCQkJCQkmYmluZF9pcGkpICE9IDApCiAJCQlCVUco
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfZmlmby5jIGIvZHJpdmVy
cy94ZW4vZXZlbnRzL2V2ZW50c19maWZvLmMKaW5kZXggNzZiMzE4ZTg4MzgyLi5lZWQ3NjYyMTlk
ZDAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMveGVuL2V2ZW50cy9ldmVudHNfZmlmby5jCisrKyBiL2Ry
aXZlcnMveGVuL2V2ZW50cy9ldmVudHNfZmlmby5jCkBAIC0xMTMsNyArMTEzLDcgQEAgc3RhdGlj
IGludCBpbml0X2NvbnRyb2xfYmxvY2soaW50IGNwdSwKIAogCWluaXRfY29udHJvbC5jb250cm9s
X2dmbiA9IHZpcnRfdG9fZ2ZuKGNvbnRyb2xfYmxvY2spOwogCWluaXRfY29udHJvbC5vZmZzZXQg
ICAgICA9IDA7Ci0JaW5pdF9jb250cm9sLnZjcHUgICAgICAgID0geGVuX3ZjcHVfbnIoY3B1KTsK
Kwlpbml0X2NvbnRyb2wudmNwdSAgICAgICAgPSB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBjcHUp
OwogCiAJcmV0dXJuIEhZUEVSVklTT1JfZXZlbnRfY2hhbm5lbF9vcChFVlRDSE5PUF9pbml0X2Nv
bnRyb2wsICZpbml0X2NvbnRyb2wpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy94ZW4vZXZ0Y2hu
LmMgYi9kcml2ZXJzL3hlbi9ldnRjaG4uYwppbmRleCA2ZDFhNWU1ODk2OGYuLjY2NjIyMTA5ZjJi
ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy94ZW4vZXZ0Y2huLmMKKysrIGIvZHJpdmVycy94ZW4vZXZ0
Y2huLmMKQEAgLTQ3NSw3ICs0NzUsNyBAQCBzdGF0aWMgbG9uZyBldnRjaG5faW9jdGwoc3RydWN0
IGZpbGUgKmZpbGUsCiAJCQlicmVhazsKIAogCQliaW5kX3ZpcnEudmlycSA9IGJpbmQudmlycTsK
LQkJYmluZF92aXJxLnZjcHUgPSB4ZW5fdmNwdV9ucigwKTsKKwkJYmluZF92aXJxLnZjcHUgPSB4
ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCAwKTsKIAkJcmMgPSBIWVBFUlZJU09SX2V2ZW50X2NoYW5u
ZWxfb3AoRVZUQ0hOT1BfYmluZF92aXJxLAogCQkJCQkJICZiaW5kX3ZpcnEpOwogCQlpZiAocmMg
IT0gMCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMveGVuL3RpbWUuYyBiL2RyaXZlcnMveGVuL3RpbWUu
YwppbmRleCAwOTY4ODU5YzI5ZDAuLmZlZWU3NGJiYWIwYSAxMDA2NDQKLS0tIGEvZHJpdmVycy94
ZW4vdGltZS5jCisrKyBiL2RyaXZlcnMveGVuL3RpbWUuYwpAQCAtMTY0LDcgKzE2NCw3IEBAIHZv
aWQgeGVuX3NldHVwX3J1bnN0YXRlX2luZm8oaW50IGNwdSkKIAlhcmVhLmFkZHIudiA9ICZwZXJf
Y3B1KHhlbl9ydW5zdGF0ZSwgY3B1KTsKIAogCWlmIChIWVBFUlZJU09SX3ZjcHVfb3AoVkNQVU9Q
X3JlZ2lzdGVyX3J1bnN0YXRlX21lbW9yeV9hcmVhLAotCQkJICAgICAgIHhlbl92Y3B1X25yKGNw
dSksICZhcmVhKSkKKwkJCSAgICAgICB4ZW5fdmNwdV9ucih4aF9kZWZhdWx0LCBjcHUpLCAmYXJl
YSkpCiAJCUJVRygpOwogfQogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3hlbi94ZW4tb3BzLmggYi9p
bmNsdWRlL3hlbi94ZW4tb3BzLmgKaW5kZXggNDk2OTgxNzEyNGE4Li43NWJlOTA1OTg5M2YgMTAw
NjQ0Ci0tLSBhL2luY2x1ZGUveGVuL3hlbi1vcHMuaAorKysgYi9pbmNsdWRlL3hlbi94ZW4tb3Bz
LmgKQEAgLTksMTIgKzksOSBAQAogI2luY2x1ZGUgPGFzbS94ZW4vaW50ZXJmYWNlLmg+CiAjaW5j
bHVkZSA8eGVuL2ludGVyZmFjZS92Y3B1Lmg+CiAKLURFQ0xBUkVfUEVSX0NQVShzdHJ1Y3QgdmNw
dV9pbmZvICosIHhlbl92Y3B1KTsKLQotREVDTEFSRV9QRVJfQ1BVKHVpbnQzMl90LCB4ZW5fdmNw
dV9pZCk7Ci1zdGF0aWMgaW5saW5lIHVpbnQzMl90IHhlbl92Y3B1X25yKGludCBjcHUpCitzdGF0
aWMgaW5saW5lIHVpbnQzMl90IHhlbl92Y3B1X25yKHhlbmhvc3RfdCAqeGgsIGludCBjcHUpCiB7
Ci0JcmV0dXJuIHBlcl9jcHUoeGVuX3ZjcHVfaWQsIGNwdSk7CisJcmV0dXJuIHhoLT54ZW5fdmNw
dV9pZFtjcHVdOwogfQogCiAjZGVmaW5lIFhFTl9WQ1BVX0lEX0lOVkFMSUQgVTMyX01BWApkaWZm
IC0tZ2l0IGEvaW5jbHVkZS94ZW4veGVuaG9zdC5oIGIvaW5jbHVkZS94ZW4veGVuaG9zdC5oCmlu
ZGV4IDdjMTljMzYxZDE2ZS4uZjYwOTJhODk4N2YxIDEwMDY0NAotLS0gYS9pbmNsdWRlL3hlbi94
ZW5ob3N0LmgKKysrIGIvaW5jbHVkZS94ZW4veGVuaG9zdC5oCkBAIC05MCw2ICs5MCwyOCBAQCB0
eXBlZGVmIHN0cnVjdCB7CiAJCXN0cnVjdCBzaGFyZWRfaW5mbyAqSFlQRVJWSVNPUl9zaGFyZWRf
aW5mbzsKIAkJdW5zaWduZWQgbG9uZyBzaGFyZWRfaW5mb19wZm47CiAJfTsKKworCXN0cnVjdCB7
CisJCS8qCisJCSAqIEV2ZW50cyBvbiB4ZW4tZXZ0Y2huIHBvcnRzIHNob3cgdXAgaW4gc3RydWN0
IHZjcHVfaW5mby4KKwkJICogV2l0aCBtdWx0aXBsZSB4ZW5ob3N0cywgdGhlIGV2dGNobi1wb3J0
IG51bWJlcmluZyBzcGFjZSB0aGF0CisJCSAqIHdhcyBnbG9iYWwgc28gZmFyIGlzIG5vdyBhdHRh
Y2hlZCB0byBhIHhlbmhvc3QuCisJCSAqCisJCSAqIFNvLCBub3cgd2UgYWxsb2NhdGUgdmNwdV9p
bmZvIGZvciBlYWNoIHByb2Nlc3NvciAod2UgaGFkIHNwYWNlCisJCSAqIGZvciBvbmx5IE1BWF9W
SVJUX0NQVVMgaW4gdGhlIHNoYXJlZF9pbmZvIGFib3ZlLikKKwkJICoKKwkJICogRklYTUUgd2Ug
c3RhdGljYWxseSBhbGxvY2F0ZSBmb3IgTlJfQ1BVUyBiZWNhdXNlIGFsbG9jX3BlcmNwdSgpCisJ
CSAqIGlzbid0IGF2YWlsYWJsZSBhdCBQViBib290IHRpbWUgYnV0IHRoaXMgaXMgc2xvdy4KKwkJ
ICovCisJCXN0cnVjdCB2Y3B1X2luZm8geGVuX3ZjcHVfaW5mb1tOUl9DUFVTXTsKKwkJc3RydWN0
IHZjcHVfaW5mbyAqeGVuX3ZjcHVbTlJfQ1BVU107CisKKwkJLyoKKwkJICogRGlmZmVyZW50IHhl
bmhvc3RzIG1pZ2h0IGhhdmUgZGlmZmVyZW50IExpbnV4IDwtPiBYZW4gdkNQVS1pZAorCQkgKiBt
YXBwaW5nLgorCQkgKi8KKwkJdWludDMyX3QgeGVuX3ZjcHVfaWRbTlJfQ1BVU107CisJfTsKIH0g
eGVuaG9zdF90OwogCiB0eXBlZGVmIHN0cnVjdCB4ZW5ob3N0X29wcyB7CkBAIC0xMzksNiArMTYx
LDI2IEBAIHR5cGVkZWYgc3RydWN0IHhlbmhvc3Rfb3BzIHsKIAkgKi8KIAl2b2lkICgqc2V0dXBf
c2hhcmVkX2luZm8pKHhlbmhvc3RfdCAqeGVuaG9zdCk7CiAJdm9pZCAoKnJlc2V0X3NoYXJlZF9p
bmZvKSh4ZW5ob3N0X3QgKnhlbmhvc3QpOworCisJLyoKKwkgKiB2Y3B1X2luZm8sIHZjcHVfaWQ6
IG5lZWRzIHRvIGJlIHNldHVwIGVhcmx5IC0tIGFsbCBJUlEgY29kZSBhY2Nlc3NlcworCSAqIHJl
bGV2YW50IGJpdHMuCisJICoKKwkgKiB2Y3B1X2lkIGlzIHByb2JlZCBvbiBQVkgvUFZIVk0gdmlh
IHhlbl9jcHVpZCgpLiBGb3IgUFYsIGl0cyBkaXJlY3QKKwkgKiBtYXBwZWQgdG8gc21wX3Byb2Nl
c3Nvcl9pZCgpLgorCSAqCisJICogVGhpcyBpcyBwYXJ0IG9mIHhlbmhvc3RfdCBiZWNhdXNlIHdl
IG1pZ2h0IGJlIHJlZ2lzdGVyZWQgd2l0aCB0d28KKwkgKiBkaWZmZXJlbnQgeGVuaG9zdHMgYW5k
IGJvdGggb2YgdGhvc2UgbWlnaHQgaGF2ZSB0aGVpciBvd24gdmNwdQorCSAqIG51bWJlcmluZy4K
KwkgKgorCSAqIEFmdGVyIHRoZSB2Y3B1IG51bWJlcmluZyBpcyBpZGVudGlmaWVkLCB3ZSBjYW4g
Z28gYWhlYWQgYW5kIHJlZ2lzdGVyCisJICogdmNwdV9pbmZvIHdpdGggdGhlIHhlbmhvc3Q7IG9u
IHRoZSBkZWZhdWx0IHhlbmhvc3QgdGhpcyBoYXBwZW5zIHZpYQorCSAqIHRoZSByZWdpc3Rlcl92
Y3B1X2luZm8gaHlwZXJjYWxsLgorCSAqCisJICogT25jZSB2Y3B1X2luZm8gaXMgc2V0dXAgKHRo
aXMgb3IgdGhlIHNoYXJlZF9pbmZvIHZlcnNpb24pLCBpdCB3b3VsZAorCSAqIGdldCBhY2Nlc3Nl
ZCB2aWEgcHZfb3BzLmlycS4qIGFuZCB0aGUgZXZ0Y2huIGxvZ2ljLgorCSAqLworCXZvaWQgKCpw
cm9iZV92Y3B1X2lkKSh4ZW5ob3N0X3QgKnhlbmhvc3QsIGludCBjcHUpOwogfSB4ZW5ob3N0X29w
c190OwogCiBleHRlcm4geGVuaG9zdF90ICp4aF9kZWZhdWx0LCAqeGhfcmVtb3RlOwpAQCAtMTg1
LDQgKzIyNyw5IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB4ZW5ob3N0X3Jlc2V0X3NoYXJlZF9pbmZv
KHhlbmhvc3RfdCAqeGgpCiAJKHhoLT5vcHMtPnJlc2V0X3NoYXJlZF9pbmZvKSh4aCk7CiB9CiAK
K3N0YXRpYyBpbmxpbmUgdm9pZCB4ZW5ob3N0X3Byb2JlX3ZjcHVfaWQoeGVuaG9zdF90ICp4aCwg
aW50IGNwdSkKK3sKKwkoeGgtPm9wcy0+cHJvYmVfdmNwdV9pZCkoeGgsIGNwdSk7Cit9CisKICNl
bmRpZiAvKiBfX1hFTkhPU1RfSCAqLwotLSAKMi4yMC4xCgoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxpbmcgbGlzdApYZW4tZGV2
ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5wcm9qZWN0Lm9yZy9tYWls
bWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

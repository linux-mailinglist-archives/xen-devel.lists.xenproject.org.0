Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id B4FC3D3F0D
	for <lists+xen-devel@lfdr.de>; Fri, 11 Oct 2019 13:54:57 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iItSG-0000PN-9A; Fri, 11 Oct 2019 11:51:32 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=inTA=YE=suse.cz=jslaby@srs-us1.protection.inumbo.net>)
 id 1iItSE-0000Og-Kn
 for xen-devel@lists.xenproject.org; Fri, 11 Oct 2019 11:51:30 +0000
X-Inumbo-ID: 743034d2-ec1d-11e9-bbab-bc764e2007e4
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id 743034d2-ec1d-11e9-bbab-bc764e2007e4;
 Fri, 11 Oct 2019 11:51:26 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id A16F1B498;
 Fri, 11 Oct 2019 11:51:25 +0000 (UTC)
From: Jiri Slaby <jslaby@suse.cz>
To: bp@alien8.de
Date: Fri, 11 Oct 2019 13:51:03 +0200
Message-Id: <20191011115108.12392-24-jslaby@suse.cz>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191011115108.12392-1-jslaby@suse.cz>
References: <20191011115108.12392-1-jslaby@suse.cz>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH v9 23/28] x86_64/asm: Change all ENTRY+END to
 SYM_CODE_*
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, Juergen Gross <jgross@suse.com>, x86@kernel.org,
 linux-kernel@vger.kernel.org, mingo@redhat.com, hpa@zytor.com,
 xen-devel@lists.xenproject.org, tglx@linutronix.de,
 Jiri Slaby <jslaby@suse.cz>, Boris Ostrovsky <boris.ostrovsky@oracle.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

SGVyZSwgYWxsIGFzc2VtYmx5IGNvZGUgd2hpY2ggaXMgbWFya2VkIHVzaW5nIEVORCAoYW5kIG5v
dCBFTkRQUk9DKSBpcwpjaGFuZ2VkLiBBbGwgdGhlc2UgYXJlIHN3aXRjaGVkIHRvIGFwcHJvcHJp
YXRlIG5ldyBtYXJraW5ncwpTWU1fQ09ERV9TVEFSVCBhbmQgU1lNX0NPREVfRU5ELgoKU2lnbmVk
LW9mZi1ieTogSmlyaSBTbGFieSA8anNsYWJ5QHN1c2UuY3o+ClJldmlld2VkLWJ5OiBCb3JpcyBP
c3Ryb3Zza3kgPGJvcmlzLm9zdHJvdnNreUBvcmFjbGUuY29tPiBbeGVuIGJpdHNdCkNjOiBCb3Jp
c2xhdiBQZXRrb3YgPGJwQGFsaWVuOC5kZT4KQ2M6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51
dHJvbml4LmRlPgpDYzogSW5nbyBNb2xuYXIgPG1pbmdvQHJlZGhhdC5jb20+CkNjOiAiSC4gUGV0
ZXIgQW52aW4iIDxocGFAenl0b3IuY29tPgpDYzogeDg2QGtlcm5lbC5vcmcKQ2M6IEJvcmlzIE9z
dHJvdnNreSA8Ym9yaXMub3N0cm92c2t5QG9yYWNsZS5jb20+CkNjOiBKdWVyZ2VuIEdyb3NzIDxq
Z3Jvc3NAc3VzZS5jb20+CkNjOiB4ZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKLS0tCiBh
cmNoL3g4Ni9lbnRyeS9lbnRyeV82NC5TICAgICAgICB8IDUyICsrKysrKysrKysrKysrKystLS0t
LS0tLS0tLS0tLS0tCiBhcmNoL3g4Ni9lbnRyeS9lbnRyeV82NF9jb21wYXQuUyB8ICA4ICsrLS0t
CiBhcmNoL3g4Ni9rZXJuZWwvZnRyYWNlXzY0LlMgICAgICB8ICA0ICstLQogYXJjaC94ODYva2Vy
bmVsL2hlYWRfNjQuUyAgICAgICAgfCAxMiArKysrLS0tLQogYXJjaC94ODYveGVuL3hlbi1hc21f
NjQuUyAgICAgICAgfCAgOCArKy0tLQogYXJjaC94ODYveGVuL3hlbi1oZWFkLlMgICAgICAgICAg
fCAgOCArKy0tLQogNiBmaWxlcyBjaGFuZ2VkLCA0NiBpbnNlcnRpb25zKCspLCA0NiBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9lbnRyeS9lbnRyeV82NC5TIGIvYXJjaC94ODYv
ZW50cnkvZW50cnlfNjQuUwppbmRleCAxNTY4ZGE2M2JmMTYuLjEzZTRmZTM3OGU1YSAxMDA2NDQK
LS0tIGEvYXJjaC94ODYvZW50cnkvZW50cnlfNjQuUworKysgYi9hcmNoL3g4Ni9lbnRyeS9lbnRy
eV82NC5TCkBAIC00NiwxMSArNDYsMTEgQEAKIC5zZWN0aW9uIC5lbnRyeS50ZXh0LCAiYXgiCiAK
ICNpZmRlZiBDT05GSUdfUEFSQVZJUlQKLUVOVFJZKG5hdGl2ZV91c2VyZ3Nfc3lzcmV0NjQpCitT
WU1fQ09ERV9TVEFSVChuYXRpdmVfdXNlcmdzX3N5c3JldDY0KQogCVVOV0lORF9ISU5UX0VNUFRZ
CiAJc3dhcGdzCiAJc3lzcmV0cQotRU5EKG5hdGl2ZV91c2VyZ3Nfc3lzcmV0NjQpCitTWU1fQ09E
RV9FTkQobmF0aXZlX3VzZXJnc19zeXNyZXQ2NCkKICNlbmRpZiAvKiBDT05GSUdfUEFSQVZJUlQg
Ki8KIAogLm1hY3JvIFRSQUNFX0lSUVNfRkxBR1MgZmxhZ3M6cmVxCkBAIC0xNDIsNyArMTQyLDcg
QEAgRU5EKG5hdGl2ZV91c2VyZ3Nfc3lzcmV0NjQpCiAgKiB3aXRoIHRoZW0gZHVlIHRvIGJ1Z3Mg
aW4gYm90aCBBTUQgYW5kIEludGVsIENQVXMuCiAgKi8KIAotRU5UUlkoZW50cnlfU1lTQ0FMTF82
NCkKK1NZTV9DT0RFX1NUQVJUKGVudHJ5X1NZU0NBTExfNjQpCiAJVU5XSU5EX0hJTlRfRU1QVFkK
IAkvKgogCSAqIEludGVycnVwdHMgYXJlIG9mZiBvbiBlbnRyeS4KQEAgLTI3MywxMyArMjczLDEz
IEBAIHN5c2NhbGxfcmV0dXJuX3ZpYV9zeXNyZXQ6CiAJcG9wcQklcmRpCiAJcG9wcQklcnNwCiAJ
VVNFUkdTX1NZU1JFVDY0Ci1FTkQoZW50cnlfU1lTQ0FMTF82NCkKK1NZTV9DT0RFX0VORChlbnRy
eV9TWVNDQUxMXzY0KQogCiAvKgogICogJXJkaTogcHJldiB0YXNrCiAgKiAlcnNpOiBuZXh0IHRh
c2sKICAqLwotRU5UUlkoX19zd2l0Y2hfdG9fYXNtKQorU1lNX0NPREVfU1RBUlQoX19zd2l0Y2hf
dG9fYXNtKQogCVVOV0lORF9ISU5UX0ZVTkMKIAkvKgogCSAqIFNhdmUgY2FsbGVlLXNhdmVkIHJl
Z2lzdGVycwpAQCAtMzIxLDcgKzMyMSw3IEBAIEVOVFJZKF9fc3dpdGNoX3RvX2FzbSkKIAlwb3Bx
CSVyYnAKIAogCWptcAlfX3N3aXRjaF90bwotRU5EKF9fc3dpdGNoX3RvX2FzbSkKK1NZTV9DT0RF
X0VORChfX3N3aXRjaF90b19hc20pCiAKIC8qCiAgKiBBIG5ld2x5IGZvcmtlZCBwcm9jZXNzIGRp
cmVjdGx5IGNvbnRleHQgc3dpdGNoZXMgaW50byB0aGlzIGFkZHJlc3MuCkBAIC0zMzAsNyArMzMw
LDcgQEAgRU5EKF9fc3dpdGNoX3RvX2FzbSkKICAqIHJieDoga2VybmVsIHRocmVhZCBmdW5jIChO
VUxMIGZvciB1c2VyIHRocmVhZCkKICAqIHIxMjoga2VybmVsIHRocmVhZCBhcmcKICAqLwotRU5U
UlkocmV0X2Zyb21fZm9yaykKK1NZTV9DT0RFX1NUQVJUKHJldF9mcm9tX2ZvcmspCiAJVU5XSU5E
X0hJTlRfRU1QVFkKIAltb3ZxCSVyYXgsICVyZGkKIAljYWxsCXNjaGVkdWxlX3RhaWwJCQkvKiBy
ZGk6ICdwcmV2JyB0YXNrIHBhcmFtZXRlciAqLwpAQCAtMzU3LDE0ICszNTcsMTQgQEAgRU5UUlko
cmV0X2Zyb21fZm9yaykKIAkgKi8KIAltb3ZxCSQwLCBSQVgoJXJzcCkKIAlqbXAJMmIKLUVORChy
ZXRfZnJvbV9mb3JrKQorU1lNX0NPREVfRU5EKHJldF9mcm9tX2ZvcmspCiAKIC8qCiAgKiBCdWls
ZCB0aGUgZW50cnkgc3R1YnMgd2l0aCBzb21lIGFzc2VtYmxlciBtYWdpYy4KICAqIFdlIHBhY2sg
MSBzdHViIGludG8gZXZlcnkgOC1ieXRlIGJsb2NrLgogICovCiAJLmFsaWduIDgKLUVOVFJZKGly
cV9lbnRyaWVzX3N0YXJ0KQorU1lNX0NPREVfU1RBUlQoaXJxX2VudHJpZXNfc3RhcnQpCiAgICAg
dmVjdG9yPUZJUlNUX0VYVEVSTkFMX1ZFQ1RPUgogICAgIC5yZXB0IChGSVJTVF9TWVNURU1fVkVD
VE9SIC0gRklSU1RfRVhURVJOQUxfVkVDVE9SKQogCVVOV0lORF9ISU5UX0lSRVRfUkVHUwpAQCAt
MzczLDEwICszNzMsMTAgQEAgRU5UUlkoaXJxX2VudHJpZXNfc3RhcnQpCiAJLmFsaWduCTgKIAl2
ZWN0b3I9dmVjdG9yKzEKICAgICAuZW5kcgotRU5EKGlycV9lbnRyaWVzX3N0YXJ0KQorU1lNX0NP
REVfRU5EKGlycV9lbnRyaWVzX3N0YXJ0KQogCiAJLmFsaWduIDgKLUVOVFJZKHNwdXJpb3VzX2Vu
dHJpZXNfc3RhcnQpCitTWU1fQ09ERV9TVEFSVChzcHVyaW91c19lbnRyaWVzX3N0YXJ0KQogICAg
IHZlY3Rvcj1GSVJTVF9TWVNURU1fVkVDVE9SCiAgICAgLnJlcHQgKE5SX1ZFQ1RPUlMgLSBGSVJT
VF9TWVNURU1fVkVDVE9SKQogCVVOV0lORF9ISU5UX0lSRVRfUkVHUwpAQCAtMzg1LDcgKzM4NSw3
IEBAIEVOVFJZKHNwdXJpb3VzX2VudHJpZXNfc3RhcnQpCiAJLmFsaWduCTgKIAl2ZWN0b3I9dmVj
dG9yKzEKICAgICAuZW5kcgotRU5EKHNwdXJpb3VzX2VudHJpZXNfc3RhcnQpCitTWU1fQ09ERV9F
TkQoc3B1cmlvdXNfZW50cmllc19zdGFydCkKIAogLm1hY3JvIERFQlVHX0VOVFJZX0FTU0VSVF9J
UlFTX09GRgogI2lmZGVmIENPTkZJR19ERUJVR19FTlRSWQpAQCAtNTExLDcgKzUxMSw3IEBAIEVO
RChzcHVyaW91c19lbnRyaWVzX3N0YXJ0KQogICogfCByZXR1cm4gYWRkcmVzcwkJCQkJfAogICog
Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCiAg
Ki8KLUVOVFJZKGludGVycnVwdF9lbnRyeSkKK1NZTV9DT0RFX1NUQVJUKGludGVycnVwdF9lbnRy
eSkKIAlVTldJTkRfSElOVF9GVU5DCiAJQVNNX0NMQUMKIAljbGQKQEAgLTU3OSw3ICs1NzksNyBA
QCBFTlRSWShpbnRlcnJ1cHRfZW50cnkpCiAJVFJBQ0VfSVJRU19PRkYKIAogCXJldAotRU5EKGlu
dGVycnVwdF9lbnRyeSkKK1NZTV9DT0RFX0VORChpbnRlcnJ1cHRfZW50cnkpCiBfQVNNX05PS1BS
T0JFKGludGVycnVwdF9lbnRyeSkKIAogCkBAIC03OTUsNyArNzk1LDcgQEAgX0FTTV9OT0tQUk9C
RShjb21tb25faW50ZXJydXB0KQogICogQVBJQyBpbnRlcnJ1cHRzLgogICovCiAubWFjcm8gYXBp
Y2ludGVycnVwdDMgbnVtIHN5bSBkb19zeW0KLUVOVFJZKFxzeW0pCitTWU1fQ09ERV9TVEFSVChc
c3ltKQogCVVOV0lORF9ISU5UX0lSRVRfUkVHUwogCXB1c2hxCSR+KFxudW0pCiAuTGNvbW1vbl9c
c3ltOgpAQCAtODAzLDcgKzgwMyw3IEBAIEVOVFJZKFxzeW0pCiAJVU5XSU5EX0hJTlRfUkVHUyBp
bmRpcmVjdD0xCiAJY2FsbAlcZG9fc3ltCS8qIHJkaSBwb2ludHMgdG8gcHRfcmVncyAqLwogCWpt
cAlyZXRfZnJvbV9pbnRyCi1FTkQoXHN5bSkKK1NZTV9DT0RFX0VORChcc3ltKQogX0FTTV9OT0tQ
Uk9CRShcc3ltKQogLmVuZG0KIApAQCAtOTY4LDcgKzk2OCw3IEBAIGFwaWNpbnRlcnJ1cHQgSVJR
X1dPUktfVkVDVE9SCQkJaXJxX3dvcmtfaW50ZXJydXB0CQlzbXBfaXJxX3dvcmtfaW50ZXJydXB0
CiAgKiAjREY6IGlmIHRoZSB0aHJlYWQgc3RhY2sgaXMgc29tZWhvdyB1bnVzYWJsZSwgd2UnbGwg
c3RpbGwgZ2V0IGEgdXNlZnVsIE9PUFMuCiAgKi8KIC5tYWNybyBpZHRlbnRyeSBzeW0gZG9fc3lt
IGhhc19lcnJvcl9jb2RlOnJlcSBwYXJhbm9pZD0wIHNoaWZ0X2lzdD0tMSBpc3Rfb2Zmc2V0PTAg
Y3JlYXRlX2dhcD0wIHJlYWRfY3IyPTAKLUVOVFJZKFxzeW0pCitTWU1fQ09ERV9TVEFSVChcc3lt
KQogCVVOV0lORF9ISU5UX0lSRVRfUkVHUyBvZmZzZXQ9XGhhc19lcnJvcl9jb2RlKjgKIAogCS8q
IFNhbml0eSBjaGVjayAqLwpAQCAtMTAxOCw3ICsxMDE4LDcgQEAgRU5UUlkoXHN5bSkKIAkuZW5k
aWYKIAogX0FTTV9OT0tQUk9CRShcc3ltKQotRU5EKFxzeW0pCitTWU1fQ09ERV9FTkQoXHN5bSkK
IC5lbmRtCiAKIGlkdGVudHJ5IGRpdmlkZV9lcnJvcgkJCWRvX2RpdmlkZV9lcnJvcgkJCWhhc19l
cnJvcl9jb2RlPTAKQEAgLTExMzUsNyArMTEzNSw3IEBAIFNZTV9DT0RFX0VORCh4ZW5fZG9faHlw
ZXJ2aXNvcl9jYWxsYmFjaykKICAqIFdlIGRpc3Rpbmd1aXNoIGJldHdlZW4gY2F0ZWdvcmllcyBi
eSBjb21wYXJpbmcgZWFjaCBzYXZlZCBzZWdtZW50IHJlZ2lzdGVyCiAgKiB3aXRoIGl0cyBjdXJy
ZW50IGNvbnRlbnRzOiBhbnkgZGlzY3JlcGFuY3kgbWVhbnMgd2UgaW4gY2F0ZWdvcnkgMS4KICAq
LwotRU5UUlkoeGVuX2ZhaWxzYWZlX2NhbGxiYWNrKQorU1lNX0NPREVfU1RBUlQoeGVuX2ZhaWxz
YWZlX2NhbGxiYWNrKQogCVVOV0lORF9ISU5UX0VNUFRZCiAJbW92bAklZHMsICVlY3gKIAljbXB3
CSVjeCwgMHgxMCglcnNwKQpAQCAtMTE2NSw3ICsxMTY1LDcgQEAgRU5UUlkoeGVuX2ZhaWxzYWZl
X2NhbGxiYWNrKQogCVBVU0hfQU5EX0NMRUFSX1JFR1MKIAlFTkNPREVfRlJBTUVfUE9JTlRFUgog
CWptcAllcnJvcl9leGl0Ci1FTkQoeGVuX2ZhaWxzYWZlX2NhbGxiYWNrKQorU1lNX0NPREVfRU5E
KHhlbl9mYWlsc2FmZV9jYWxsYmFjaykKICNlbmRpZiAvKiBDT05GSUdfWEVOX1BWICovCiAKICNp
ZmRlZiBDT05GSUdfWEVOX1BWSFZNCkBAIC0xMzg0LDcgKzEzODQsNyBAQCBTWU1fQ09ERV9FTkQo
ZXJyb3JfZXhpdCkKICAqCSVyMTQ6IFVzZWQgdG8gc2F2ZS9yZXN0b3JlIHRoZSBDUjMgb2YgdGhl
IGludGVycnVwdGVkIGNvbnRleHQKICAqCSAgICAgIHdoZW4gUEFHRV9UQUJMRV9JU09MQVRJT04g
aXMgaW4gdXNlLiAgRG8gbm90IGNsb2JiZXIuCiAgKi8KLUVOVFJZKG5taSkKK1NZTV9DT0RFX1NU
QVJUKG5taSkKIAlVTldJTkRfSElOVF9JUkVUX1JFR1MKIAogCS8qCkBAIC0xNzE5LDIxICsxNzE5
LDIxIEBAIG5taV9yZXN0b3JlOgogCSAqIGFib3V0IGVzcGZpeDY0IG9uIHRoZSB3YXkgYmFjayB0
byBrZXJuZWwgbW9kZS4KIAkgKi8KIAlpcmV0cQotRU5EKG5taSkKK1NZTV9DT0RFX0VORChubWkp
CiAKICNpZm5kZWYgQ09ORklHX0lBMzJfRU1VTEFUSU9OCiAvKgogICogVGhpcyBoYW5kbGVzIFNZ
U0NBTEwgZnJvbSAzMi1iaXQgY29kZS4gIFRoZXJlIGlzIG5vIHdheSB0byBwcm9ncmFtCiAgKiBN
U1JzIHRvIGZ1bGx5IGRpc2FibGUgMzItYml0IFNZU0NBTEwuCiAgKi8KLUVOVFJZKGlnbm9yZV9z
eXNyZXQpCitTWU1fQ09ERV9TVEFSVChpZ25vcmVfc3lzcmV0KQogCVVOV0lORF9ISU5UX0VNUFRZ
CiAJbW92CSQtRU5PU1lTLCAlZWF4CiAJc3lzcmV0Ci1FTkQoaWdub3JlX3N5c3JldCkKK1NZTV9D
T0RFX0VORChpZ25vcmVfc3lzcmV0KQogI2VuZGlmCiAKLUVOVFJZKHJld2luZF9zdGFja19kb19l
eGl0KQorU1lNX0NPREVfU1RBUlQocmV3aW5kX3N0YWNrX2RvX2V4aXQpCiAJVU5XSU5EX0hJTlRf
RlVOQwogCS8qIFByZXZlbnQgYW55IG5haXZlIGNvZGUgZnJvbSB0cnlpbmcgdG8gdW53aW5kIHRv
IG91ciBjYWxsZXIuICovCiAJeG9ybAklZWJwLCAlZWJwCkBAIC0xNzQzLDQgKzE3NDMsNCBAQCBF
TlRSWShyZXdpbmRfc3RhY2tfZG9fZXhpdCkKIAlVTldJTkRfSElOVF9GVU5DIHNwX29mZnNldD1Q
VFJFR1NfU0laRQogCiAJY2FsbAlkb19leGl0Ci1FTkQocmV3aW5kX3N0YWNrX2RvX2V4aXQpCitT
WU1fQ09ERV9FTkQocmV3aW5kX3N0YWNrX2RvX2V4aXQpCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9l
bnRyeS9lbnRyeV82NF9jb21wYXQuUyBiL2FyY2gveDg2L2VudHJ5L2VudHJ5XzY0X2NvbXBhdC5T
CmluZGV4IDVjN2U3MTY2OTIzOS4uZGEyOTY0MzU2NzZlIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9l
bnRyeS9lbnRyeV82NF9jb21wYXQuUworKysgYi9hcmNoL3g4Ni9lbnRyeS9lbnRyeV82NF9jb21w
YXQuUwpAQCAtMTk2LDcgKzE5Niw3IEBAIEVORFBST0MoZW50cnlfU1lTRU5URVJfY29tcGF0KQog
ICogZXNwICB1c2VyIHN0YWNrCiAgKiAwKCVlc3ApIGFyZzYKICAqLwotRU5UUlkoZW50cnlfU1lT
Q0FMTF9jb21wYXQpCitTWU1fQ09ERV9TVEFSVChlbnRyeV9TWVNDQUxMX2NvbXBhdCkKIAkvKiBJ
bnRlcnJ1cHRzIGFyZSBvZmYgb24gZW50cnkuICovCiAJc3dhcGdzCiAKQEAgLTMxMSw3ICszMTEs
NyBAQCBzeXNyZXQzMl9mcm9tX3N5c3RlbV9jYWxsOgogCXhvcmwJJXIxMGQsICVyMTBkCiAJc3dh
cGdzCiAJc3lzcmV0bAotRU5EKGVudHJ5X1NZU0NBTExfY29tcGF0KQorU1lNX0NPREVfRU5EKGVu
dHJ5X1NZU0NBTExfY29tcGF0KQogCiAvKgogICogMzItYml0IGxlZ2FjeSBzeXN0ZW0gY2FsbCBl
bnRyeS4KQEAgLTMzOSw3ICszMzksNyBAQCBFTkQoZW50cnlfU1lTQ0FMTF9jb21wYXQpCiAgKiBl
ZGkgIGFyZzUKICAqIGVicCAgYXJnNgogICovCi1FTlRSWShlbnRyeV9JTlQ4MF9jb21wYXQpCitT
WU1fQ09ERV9TVEFSVChlbnRyeV9JTlQ4MF9jb21wYXQpCiAJLyoKIAkgKiBJbnRlcnJ1cHRzIGFy
ZSBvZmYgb24gZW50cnkuCiAJICovCkBAIC00MTYsNCArNDE2LDQgQEAgRU5UUlkoZW50cnlfSU5U
ODBfY29tcGF0KQogCS8qIEdvIGJhY2sgdG8gdXNlciBtb2RlLiAqLwogCVRSQUNFX0lSUVNfT04K
IAlqbXAJc3dhcGdzX3Jlc3RvcmVfcmVnc19hbmRfcmV0dXJuX3RvX3VzZXJtb2RlCi1FTkQoZW50
cnlfSU5UODBfY29tcGF0KQorU1lNX0NPREVfRU5EKGVudHJ5X0lOVDgwX2NvbXBhdCkKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2tlcm5lbC9mdHJhY2VfNjQuUyBiL2FyY2gveDg2L2tlcm5lbC9mdHJh
Y2VfNjQuUwppbmRleCAzYWZhYWY1NTU2MzcuLjYwZjg5NGIwMThlMCAxMDA2NDQKLS0tIGEvYXJj
aC94ODYva2VybmVsL2Z0cmFjZV82NC5TCisrKyBiL2FyY2gveDg2L2tlcm5lbC9mdHJhY2VfNjQu
UwpAQCAtMjk2LDcgKzI5Niw3IEBAIEVOVFJZKGZ0cmFjZV9ncmFwaF9jYWxsZXIpCiAJcmV0cQog
RU5EUFJPQyhmdHJhY2VfZ3JhcGhfY2FsbGVyKQogCi1FTlRSWShyZXR1cm5fdG9faGFuZGxlcikK
K1NZTV9DT0RFX1NUQVJUKHJldHVybl90b19oYW5kbGVyKQogCVVOV0lORF9ISU5UX0VNUFRZCiAJ
c3VicSAgJDI0LCAlcnNwCiAKQEAgLTMxMiw1ICszMTIsNSBAQCBFTlRSWShyZXR1cm5fdG9faGFu
ZGxlcikKIAltb3ZxICglcnNwKSwgJXJheAogCWFkZHEgJDI0LCAlcnNwCiAJSk1QX05PU1BFQyAl
cmRpCi1FTkQocmV0dXJuX3RvX2hhbmRsZXIpCitTWU1fQ09ERV9FTkQocmV0dXJuX3RvX2hhbmRs
ZXIpCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2tlcm5lbC9oZWFkXzY0LlMgYi9hcmNo
L3g4Ni9rZXJuZWwvaGVhZF82NC5TCmluZGV4IDEwZjMwNmUzMTI0NC4uNGJiYzc3MGFmNjMyIDEw
MDY0NAotLS0gYS9hcmNoL3g4Ni9rZXJuZWwvaGVhZF82NC5TCisrKyBiL2FyY2gveDg2L2tlcm5l
bC9oZWFkXzY0LlMKQEAgLTkxLDcgKzkxLDcgQEAgU1lNX0NPREVfU1RBUlRfTk9BTElHTihzdGFy
dHVwXzY0KQogCWptcCAxZgogU1lNX0NPREVfRU5EKHN0YXJ0dXBfNjQpCiAKLUVOVFJZKHNlY29u
ZGFyeV9zdGFydHVwXzY0KQorU1lNX0NPREVfU1RBUlQoc2Vjb25kYXJ5X3N0YXJ0dXBfNjQpCiAJ
VU5XSU5EX0hJTlRfRU1QVFkKIAkvKgogCSAqIEF0IHRoaXMgcG9pbnQgdGhlIENQVSBydW5zIGlu
IDY0Yml0IG1vZGUgQ1MuTCA9IDEgQ1MuRCA9IDAsCkBAIC0yNDEsNyArMjQxLDcgQEAgRU5UUlko
c2Vjb25kYXJ5X3N0YXJ0dXBfNjQpCiAJcHVzaHEJJXJheAkJIyB0YXJnZXQgYWRkcmVzcyBpbiBu
ZWdhdGl2ZSBzcGFjZQogCWxyZXRxCiAuTGFmdGVyX2xyZXQ6Ci1FTkQoc2Vjb25kYXJ5X3N0YXJ0
dXBfNjQpCitTWU1fQ09ERV9FTkQoc2Vjb25kYXJ5X3N0YXJ0dXBfNjQpCiAKICNpbmNsdWRlICJ2
ZXJpZnlfY3B1LlMiCiAKQEAgLTI1MSwxMSArMjUxLDExIEBAIEVORChzZWNvbmRhcnlfc3RhcnR1
cF82NCkKICAqIHVwIGFscmVhZHkgZXhjZXB0IHN0YWNrLiBXZSBqdXN0IHNldCB1cCBzdGFjayBo
ZXJlLiBUaGVuIGNhbGwKICAqIHN0YXJ0X3NlY29uZGFyeSgpIHZpYSAuTGp1bXBfdG9fQ19jb2Rl
LgogICovCi1FTlRSWShzdGFydF9jcHUwKQorU1lNX0NPREVfU1RBUlQoc3RhcnRfY3B1MCkKIAlV
TldJTkRfSElOVF9FTVBUWQogCW1vdnEJaW5pdGlhbF9zdGFjayglcmlwKSwgJXJzcAogCWptcAku
TGp1bXBfdG9fQ19jb2RlCi1FTkQoc3RhcnRfY3B1MCkKK1NZTV9DT0RFX0VORChzdGFydF9jcHUw
KQogI2VuZGlmCiAKIAkvKiBCb3RoIFNNUCBib290dXAgYW5kIEFDUEkgc3VzcGVuZCBjaGFuZ2Ug
dGhlc2UgdmFyaWFibGVzICovCkBAIC0yNzIsNyArMjcyLDcgQEAgU1lNX0RBVEEoaW5pdGlhbF9z
dGFjaywgLnF1YWQgaW5pdF90aHJlYWRfdW5pb24gKyBUSFJFQURfU0laRSAtIFNJWkVPRl9QVFJF
R1MpCiAJX19GSU5JVERBVEEKIAogCV9fSU5JVAotRU5UUlkoZWFybHlfaWR0X2hhbmRsZXJfYXJy
YXkpCitTWU1fQ09ERV9TVEFSVChlYXJseV9pZHRfaGFuZGxlcl9hcnJheSkKIAlpID0gMAogCS5y
ZXB0IE5VTV9FWENFUFRJT05fVkVDVE9SUwogCS5pZiAoKEVYQ0VQVElPTl9FUlJDT0RFX01BU0sg
Pj4gaSkgJiAxKSA9PSAwCkBAIC0yODgsNyArMjg4LDcgQEAgRU5UUlkoZWFybHlfaWR0X2hhbmRs
ZXJfYXJyYXkpCiAJLmZpbGwgZWFybHlfaWR0X2hhbmRsZXJfYXJyYXkgKyBpKkVBUkxZX0lEVF9I
QU5ETEVSX1NJWkUgLSAuLCAxLCAweGNjCiAJLmVuZHIKIAlVTldJTkRfSElOVF9JUkVUX1JFR1Mg
b2Zmc2V0PTE2Ci1FTkQoZWFybHlfaWR0X2hhbmRsZXJfYXJyYXkpCitTWU1fQ09ERV9FTkQoZWFy
bHlfaWR0X2hhbmRsZXJfYXJyYXkpCiAKIFNZTV9DT0RFX1NUQVJUX0xPQ0FMKGVhcmx5X2lkdF9o
YW5kbGVyX2NvbW1vbikKIAkvKgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYveGVuL3hlbi1hc21fNjQu
UyBiL2FyY2gveDg2L3hlbi94ZW4tYXNtXzY0LlMKaW5kZXggYzIwOWM3MGZjNWU0Li4wMDYwMTIw
ZjUxZGQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi94ZW4tYXNtXzY0LlMKKysrIGIvYXJjaC94
ODYveGVuL3hlbi1hc21fNjQuUwpAQCAtMjAsMTEgKzIwLDExIEBACiAjaW5jbHVkZSA8bGludXgv
bGlua2FnZS5oPgogCiAubWFjcm8geGVuX3B2X3RyYXAgbmFtZQotRU5UUlkoeGVuX1xuYW1lKQor
U1lNX0NPREVfU1RBUlQoeGVuX1xuYW1lKQogCXBvcCAlcmN4CiAJcG9wICVyMTEKIAlqbXAgIFxu
YW1lCi1FTkQoeGVuX1xuYW1lKQorU1lNX0NPREVfRU5EKHhlbl9cbmFtZSkKIF9BU01fTk9LUFJP
QkUoeGVuX1xuYW1lKQogLmVuZG0KIApAQCAtNTcsNyArNTcsNyBAQCB4ZW5fcHZfdHJhcCBlbnRy
eV9JTlQ4MF9jb21wYXQKIHhlbl9wdl90cmFwIGh5cGVydmlzb3JfY2FsbGJhY2sKIAogCV9fSU5J
VAotRU5UUlkoeGVuX2Vhcmx5X2lkdF9oYW5kbGVyX2FycmF5KQorU1lNX0NPREVfU1RBUlQoeGVu
X2Vhcmx5X2lkdF9oYW5kbGVyX2FycmF5KQogCWkgPSAwCiAJLnJlcHQgTlVNX0VYQ0VQVElPTl9W
RUNUT1JTCiAJcG9wICVyY3gKQEAgLTY2LDcgKzY2LDcgQEAgRU5UUlkoeGVuX2Vhcmx5X2lkdF9o
YW5kbGVyX2FycmF5KQogCWkgPSBpICsgMQogCS5maWxsIHhlbl9lYXJseV9pZHRfaGFuZGxlcl9h
cnJheSArIGkqWEVOX0VBUkxZX0lEVF9IQU5ETEVSX1NJWkUgLSAuLCAxLCAweGNjCiAJLmVuZHIK
LUVORCh4ZW5fZWFybHlfaWR0X2hhbmRsZXJfYXJyYXkpCitTWU1fQ09ERV9FTkQoeGVuX2Vhcmx5
X2lkdF9oYW5kbGVyX2FycmF5KQogCV9fRklOSVQKIAogaHlwZXJjYWxsX2lyZXQgPSBoeXBlcmNh
bGxfcGFnZSArIF9fSFlQRVJWSVNPUl9pcmV0ICogMzIKZGlmZiAtLWdpdCBhL2FyY2gveDg2L3hl
bi94ZW4taGVhZC5TIGIvYXJjaC94ODYveGVuL3hlbi1oZWFkLlMKaW5kZXggYzFkOGI5MGFhNGUy
Li4xZDBjZWUzMTYzZTQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi94ZW4taGVhZC5TCisrKyBi
L2FyY2gveDg2L3hlbi94ZW4taGVhZC5TCkBAIC0yMiw3ICsyMiw3IEBACiAKICNpZmRlZiBDT05G
SUdfWEVOX1BWCiAJX19JTklUCi1FTlRSWShzdGFydHVwX3hlbikKK1NZTV9DT0RFX1NUQVJUKHN0
YXJ0dXBfeGVuKQogCVVOV0lORF9ISU5UX0VNUFRZCiAJY2xkCiAKQEAgLTUyLDEzICs1MiwxMyBA
QCBFTlRSWShzdGFydHVwX3hlbikKICNlbmRpZgogCiAJam1wIHhlbl9zdGFydF9rZXJuZWwKLUVO
RChzdGFydHVwX3hlbikKK1NZTV9DT0RFX0VORChzdGFydHVwX3hlbikKIAlfX0ZJTklUCiAjZW5k
aWYKIAogLnB1c2hzZWN0aW9uIC50ZXh0CiAJLmJhbGlnbiBQQUdFX1NJWkUKLUVOVFJZKGh5cGVy
Y2FsbF9wYWdlKQorU1lNX0NPREVfU1RBUlQoaHlwZXJjYWxsX3BhZ2UpCiAJLnJlcHQgKFBBR0Vf
U0laRSAvIDMyKQogCQlVTldJTkRfSElOVF9FTVBUWQogCQkuc2tpcCAzMgpAQCAtNjksNyArNjks
NyBAQCBFTlRSWShoeXBlcmNhbGxfcGFnZSkKIAkudHlwZSB4ZW5faHlwZXJjYWxsXyMjbiwgQGZ1
bmN0aW9uOyAuc2l6ZSB4ZW5faHlwZXJjYWxsXyMjbiwgMzIKICNpbmNsdWRlIDxhc20veGVuLWh5
cGVyY2FsbHMuaD4KICN1bmRlZiBIWVBFUkNBTEwKLUVORChoeXBlcmNhbGxfcGFnZSkKK1NZTV9D
T0RFX0VORChoeXBlcmNhbGxfcGFnZSkKIC5wb3BzZWN0aW9uCiAKIAlFTEZOT1RFKFhlbiwgWEVO
X0VMRk5PVEVfR1VFU1RfT1MsICAgICAgIC5hc2NpeiAibGludXgiKQotLSAKMi4yMy4wCgoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1h
aWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54
ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

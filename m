Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id ED512735C7
	for <lists+xen-devel@lfdr.de>; Wed, 24 Jul 2019 19:46:36 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hqLIE-0007jv-7o; Wed, 24 Jul 2019 17:43:10 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=ItzJ=VV=citrix.com=andrew.cooper3@srs-us1.protection.inumbo.net>)
 id 1hqLID-0007jf-1R
 for xen-devel@lists.xenproject.org; Wed, 24 Jul 2019 17:43:09 +0000
X-Inumbo-ID: 7d820db0-ae3a-11e9-a97c-53c606eea54a
Received: from esa3.hc3370-68.iphmx.com (unknown [216.71.145.155])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 7d820db0-ae3a-11e9-a97c-53c606eea54a;
 Wed, 24 Jul 2019 17:43:05 +0000 (UTC)
Authentication-Results: esa3.hc3370-68.iphmx.com;
 dkim=none (message not signed) header.i=none;
 spf=None smtp.pra=andrew.cooper3@citrix.com;
 spf=Pass smtp.mailfrom=Andrew.Cooper3@citrix.com;
 spf=None smtp.helo=postmaster@mail.citrix.com
Received-SPF: None (esa3.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 andrew.cooper3@citrix.com) identity=pra;
 client-ip=162.221.158.21; receiver=esa3.hc3370-68.iphmx.com;
 envelope-from="Andrew.Cooper3@citrix.com";
 x-sender="andrew.cooper3@citrix.com";
 x-conformance=sidf_compatible
Received-SPF: Pass (esa3.hc3370-68.iphmx.com: domain of
 Andrew.Cooper3@citrix.com designates 162.221.158.21 as
 permitted sender) identity=mailfrom;
 client-ip=162.221.158.21; receiver=esa3.hc3370-68.iphmx.com;
 envelope-from="Andrew.Cooper3@citrix.com";
 x-sender="Andrew.Cooper3@citrix.com";
 x-conformance=sidf_compatible; x-record-type="v=spf1";
 x-record-text="v=spf1 ip4:209.167.231.154 ip4:178.63.86.133
 ip4:195.66.111.40/30 ip4:85.115.9.32/28 ip4:199.102.83.4
 ip4:192.28.146.160 ip4:192.28.146.107 ip4:216.52.6.88
 ip4:216.52.6.188 ip4:162.221.158.21 ip4:162.221.156.83 ~all"
Received-SPF: None (esa3.hc3370-68.iphmx.com: no sender
 authenticity information available from domain of
 postmaster@mail.citrix.com) identity=helo;
 client-ip=162.221.158.21; receiver=esa3.hc3370-68.iphmx.com;
 envelope-from="Andrew.Cooper3@citrix.com";
 x-sender="postmaster@mail.citrix.com";
 x-conformance=sidf_compatible
IronPort-SDR: Z7r6putUKzAQFE0ZPcdflW8v8uurE2p6y/VjR5c6doNar6bYBdS0W52IjAkkLwLvJaa0c8Abx4
 LUyXeqYlkRd8OOv+i35XKZhRXEF3Cp5kQaBK50TfkmHFAA9qfesew8wMnHCpyNh3PgBEB1nlU0
 7mYiC1pjDTir5qzUa4b7XHKWSl5EILjShHv1MyBvtiqqNlKoziHWwnXP6sClX5HzuuxglmRCYa
 oYK/tuSCyx08TNV5kYXE0+0j8Utbf2N/kpKdc1lHq2wD5Bvyd3oNGddoeYRi6xvcdjh5CvpmnA
 WXs=
X-SBRS: 2.7
X-MesageID: 3400782
X-Ironport-Server: esa3.hc3370-68.iphmx.com
X-Remote-IP: 162.221.158.21
X-Policy: $RELAYED
X-IronPort-AV: E=Sophos;i="5.64,303,1559534400"; 
   d="scan'208";a="3400782"
From: Andrew Cooper <andrew.cooper3@citrix.com>
To: Xen-devel <xen-devel@lists.xenproject.org>
Date: Wed, 24 Jul 2019 18:42:56 +0100
Message-ID: <20190724174256.5295-4-andrew.cooper3@citrix.com>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20190724174256.5295-1-andrew.cooper3@citrix.com>
References: <20190724174256.5295-1-andrew.cooper3@citrix.com>
MIME-Version: 1.0
Subject: [Xen-devel] [PATCH 3/3] x86/dmi: Constify quirks data
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Andrew Cooper <andrew.cooper3@citrix.com>, Wei Liu <wl@xen.org>,
 Jan Beulich <JBeulich@suse.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

QWxsIERNSSBxdWlya3MgdGFibGVzIGFyZSBtdXRhYmxlLCBidXQgYXJlIG9ubHkgZXZlciByZWFk
LgoKVXBkYXRlIGRtaV9jaGVja19zeXN0ZW0oKSBhbmQgZG1pX3N5c3RlbV9pZC5jYWxsYmFjayB0
byBwYXNzIGEgY29uc3QgcG9pbnRlciwKYW5kIG1vdmUgYWxsIHF1aXJrcyB0YWJsZXMgaW50byBf
X2luaXRjb25zdC4KCk5vIGZ1bmN0aW9uYWwgY2hhbmdlLgoKU2lnbmVkLW9mZi1ieTogQW5kcmV3
IENvb3BlciA8YW5kcmV3LmNvb3BlcjNAY2l0cml4LmNvbT4KLS0tCkNDOiBKYW4gQmV1bGljaCA8
SkJldWxpY2hAc3VzZS5jb20+CkNDOiBXZWkgTGl1IDx3bEB4ZW4ub3JnPgpDQzogUm9nZXIgUGF1
IE1vbm7DqSA8cm9nZXIucGF1QGNpdHJpeC5jb20+Ci0tLQogeGVuL2FyY2gveDg2L2RtaV9zY2Fu
LmMgICAgICAgICAgICAgfCAxNiArKysrKysrKy0tLS0tLS0tCiB4ZW4vYXJjaC94ODYvZ2VuYXBp
Yy9iaWdzbXAuYyAgICAgICB8ICA0ICsrLS0KIHhlbi9hcmNoL3g4Ni9odm0vcXVpcmtzLmMgICAg
ICAgICAgIHwgIDQgKystLQogeGVuL2FyY2gveDg2L2lvcG9ydF9lbXVsYXRlLmMgICAgICAgfCAg
MiArLQogeGVuL2FyY2gveDg2L3NodXRkb3duLmMgICAgICAgICAgICAgfCAgNCArKy0tCiB4ZW4v
YXJjaC94ODYveDg2XzY0L21tY29uZi1mYW0xMGguYyB8ICAyICstCiB4ZW4vaW5jbHVkZS94ZW4v
ZG1pLmggICAgICAgICAgICAgICB8ICA0ICsrLS0KIDcgZmlsZXMgY2hhbmdlZCwgMTggaW5zZXJ0
aW9ucygrKSwgMTggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L2RtaV9z
Y2FuLmMgYi94ZW4vYXJjaC94ODYvZG1pX3NjYW4uYwppbmRleCA3MDYzYzJjNzk5Li44MDhmYTdm
MTBlIDEwMDY0NAotLS0gYS94ZW4vYXJjaC94ODYvZG1pX3NjYW4uYworKysgYi94ZW4vYXJjaC94
ODYvZG1pX3NjYW4uYwpAQCAtNDU5LDEzICs0NTksMTMgQEAgc3RhdGljIHZvaWQgX19pbml0IGRt
aV9zYXZlX2lkZW50KHN0cnVjdCBkbWlfaGVhZGVyICpkbSwgaW50IHNsb3QsIGludCBzdHJpbmcp
CiAgKiBUb3NoaWJhIGtleWJvYXJkIGxpa2VzIHRvIHJlcGVhdCBrZXlzIHdoZW4gdGhleSBhcmUg
bm90IHJlcGVhdGVkLgogICovCiAKLXN0YXRpYyBfX2luaXQgaW50IGJyb2tlbl90b3NoaWJhX2tl
eWJvYXJkKHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKQorc3RhdGljIF9faW5pdCBpbnQgYnJva2Vu
X3Rvc2hpYmFfa2V5Ym9hcmQoY29uc3Qgc3RydWN0IGRtaV9ibGFja2xpc3QgKmQpCiB7CiAJcHJp
bnRrKEtFUk5fV0FSTklORyAiVG9zaGliYSB3aXRoIGJyb2tlbiBrZXlib2FyZCBkZXRlY3RlZC4g
SWYgeW91ciBrZXlib2FyZCBzb21ldGltZXMgZ2VuZXJhdGVzIDMga2V5cHJlc3NlcyBpbnN0ZWFk
IG9mIG9uZSwgc2VlIGh0dHA6Ly9kYXZ5ZC51Y2MuYXNuLmF1L3Byb2plY3RzL3Rvc2hpYmEvUkVB
RE1FXG4iKTsKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBfX2luaXQgaWNoMTBfYmlvc19x
dWlyayhzdHJ1Y3QgZG1pX3N5c3RlbV9pZCAqZCkKK3N0YXRpYyBpbnQgX19pbml0IGljaDEwX2Jp
b3NfcXVpcmsoY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQgKmQpCiB7CiAgICAgdTMyIHBvcnQs
IHNtaWN0bDsKIApAQCAtNDg4LDE0ICs0ODgsMTQgQEAgc3RhdGljIGludCBfX2luaXQgaWNoMTBf
Ymlvc19xdWlyayhzdHJ1Y3QgZG1pX3N5c3RlbV9pZCAqZCkKICAgICByZXR1cm4gMDsKIH0KIAot
c3RhdGljIF9faW5pdCBpbnQgcmVzZXRfdmlkZW9tb2RlX2FmdGVyX3MzKHN0cnVjdCBkbWlfYmxh
Y2tsaXN0ICpkKQorc3RhdGljIF9faW5pdCBpbnQgcmVzZXRfdmlkZW9tb2RlX2FmdGVyX3MzKGNv
bnN0IHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKQogewogCS8qIFNlZSB3YWtldXAuUyAqLwogCWFj
cGlfdmlkZW9fZmxhZ3MgfD0gMjsKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIF9faW5pdCBpbnQg
ZG1pX2Rpc2FibGVfYWNwaShzdHJ1Y3QgZG1pX2JsYWNrbGlzdCAqZCkgCitzdGF0aWMgX19pbml0
IGludCBkbWlfZGlzYWJsZV9hY3BpKGNvbnN0IHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKQogeyAK
IAlpZiAoIWFjcGlfZm9yY2UpIHsgCiAJCXByaW50ayhLRVJOX05PVElDRSAiJXMgZGV0ZWN0ZWQ6
IGFjcGkgb2ZmXG4iLGQtPmlkZW50KTsKQEAgLTUxMCw3ICs1MTAsNyBAQCBzdGF0aWMgX19pbml0
IGludCBkbWlfZGlzYWJsZV9hY3BpKHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKQogLyoKICAqIExp
bWl0IEFDUEkgdG8gQ1BVIGVudW1lcmF0aW9uIGZvciBIVAogICovCi1zdGF0aWMgX19pbml0IGlu
dCBmb3JjZV9hY3BpX2h0KHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKSAKK3N0YXRpYyBfX2luaXQg
aW50IGZvcmNlX2FjcGlfaHQoY29uc3Qgc3RydWN0IGRtaV9ibGFja2xpc3QgKmQpCiB7IAogCWlm
ICghYWNwaV9mb3JjZSkgeyAKIAkJcHJpbnRrKEtFUk5fTk9USUNFICIlcyBkZXRlY3RlZDogZm9y
Y2UgdXNlIG9mIGFjcGk9aHRcbiIsIGQtPmlkZW50KTsKQEAgLTUzMyw3ICs1MzMsNyBAQCBzdGF0
aWMgX19pbml0IGludCBmb3JjZV9hY3BpX2h0KHN0cnVjdCBkbWlfYmxhY2tsaXN0ICpkKQogICoJ
aW50ZXJydXB0IG1hc2sgc2V0dGluZ3MgYWNjb3JkaW5nIHRvIHRoZSBsYXB0b3AKICAqLwogIAot
c3RhdGljIF9faW5pdGRhdGEgc3RydWN0IGRtaV9ibGFja2xpc3QgZG1pX2JsYWNrbGlzdFtdPXsK
K3N0YXRpYyBjb25zdCBzdHJ1Y3QgZG1pX2JsYWNrbGlzdCBfX2luaXRjb25zdCBkbWlfYmxhY2ts
aXN0W109ewogCiAJeyBicm9rZW5fdG9zaGliYV9rZXlib2FyZCwgIlRvc2hpYmEgU2F0ZWxsaXRl
IDQwMzBjZHQiLCB7IC8qIEtleWJvYXJkIGdlbmVyYXRlcyBzcHVyaW91cyByZXBlYXRzICovCiAJ
CQlNQVRDSChETUlfUFJPRFVDVF9OQU1FLCAiUzQwMzBDRFQvNC4zIiksCkBAIC03MDgsMTAgKzcw
OCwxMCBAQCB2b2lkIF9faW5pdCBkbWlfc2Nhbl9tYWNoaW5lKHZvaWQpCiAgKglyZXR1cm5zIG5v
biB6ZXJvIG9yIHdlIGhpdCB0aGUgZW5kLiBDYWxsYmFjayBmdW5jdGlvbiBpcyBjYWxsZWQgZm9y
CiAgKgllYWNoIHN1Y2Nlc3NmdWxsIG1hdGNoLiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgbWF0Y2hl
cy4KICAqLwotaW50IF9faW5pdCBkbWlfY2hlY2tfc3lzdGVtKHN0cnVjdCBkbWlfc3lzdGVtX2lk
ICpsaXN0KQoraW50IF9faW5pdCBkbWlfY2hlY2tfc3lzdGVtKGNvbnN0IHN0cnVjdCBkbWlfc3lz
dGVtX2lkICpsaXN0KQogewogCWludCBpLCBjb3VudCA9IDA7Ci0Jc3RydWN0IGRtaV9zeXN0ZW1f
aWQgKmQgPSBsaXN0OworCWNvbnN0IHN0cnVjdCBkbWlfc3lzdGVtX2lkICpkID0gbGlzdDsKIAog
CXdoaWxlIChkLT5pZGVudCkgewogCQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShkLT5tYXRj
aGVzKTsgaSsrKSB7CmRpZmYgLS1naXQgYS94ZW4vYXJjaC94ODYvZ2VuYXBpYy9iaWdzbXAuYyBi
L3hlbi9hcmNoL3g4Ni9nZW5hcGljL2JpZ3NtcC5jCmluZGV4IDkxYTk3M2FjMTYuLjJlZDFjYjhm
NDkgMTAwNjQ0Ci0tLSBhL3hlbi9hcmNoL3g4Ni9nZW5hcGljL2JpZ3NtcC5jCisrKyBiL3hlbi9h
cmNoL3g4Ni9nZW5hcGljL2JpZ3NtcC5jCkBAIC0xMSw3ICsxMSw3IEBACiAjaW5jbHVkZSA8YXNt
L21hY2gtZGVmYXVsdC9tYWNoX21wcGFyc2UuaD4KICNpbmNsdWRlIDxhc20vaW9fYXBpYy5oPgog
Ci1zdGF0aWMgX19pbml0IGludCBmb3JjZV9iaWdzbXAoc3RydWN0IGRtaV9zeXN0ZW1faWQgKmQp
CitzdGF0aWMgX19pbml0IGludCBmb3JjZV9iaWdzbXAoY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1f
aWQgKmQpCiB7CiAJcHJpbnRrKEtFUk5fTk9USUNFICIlcyBkZXRlY3RlZDogZm9yY2UgdXNlIG9m
IGFwaWM9Ymlnc21wXG4iLCBkLT5pZGVudCk7CiAJZGVmX3RvX2JpZ3NtcCA9IHRydWU7CkBAIC0x
OSw3ICsxOSw3IEBAIHN0YXRpYyBfX2luaXQgaW50IGZvcmNlX2JpZ3NtcChzdHJ1Y3QgZG1pX3N5
c3RlbV9pZCAqZCkKIH0KIAogCi1zdGF0aWMgc3RydWN0IGRtaV9zeXN0ZW1faWQgX19pbml0ZGF0
YSBiaWdzbXBfZG1pX3RhYmxlW10gPSB7CitzdGF0aWMgY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1f
aWQgX19pbml0Y29uc3QgYmlnc21wX2RtaV90YWJsZVtdID0gewogCXsgZm9yY2VfYmlnc21wLCAi
VU5JU1lTIEVTNzAwMC1PTkUiLCB7CiAJCURNSV9NQVRDSChETUlfUFJPRFVDVF9OQU1FLCAiRVM3
MDAwLU9ORSIpCiAJIH19LApkaWZmIC0tZ2l0IGEveGVuL2FyY2gveDg2L2h2bS9xdWlya3MuYyBi
L3hlbi9hcmNoL3g4Ni9odm0vcXVpcmtzLmMKaW5kZXggYTI5OGNjZGJiOS4uOTA2YmY4MGNjMyAx
MDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L2h2bS9xdWlya3MuYworKysgYi94ZW4vYXJjaC94ODYv
aHZtL3F1aXJrcy5jCkBAIC0yNCw3ICsyNCw3IEBACiBzOCBfX3JlYWRfbW9zdGx5IGh2bV9wb3J0
ODBfYWxsb3dlZCA9IC0xOwogYm9vbGVhbl9wYXJhbSgiaHZtX3BvcnQ4MCIsIGh2bV9wb3J0ODBf
YWxsb3dlZCk7CiAKLXN0YXRpYyBpbnQgX19pbml0IGRtaV9odm1fZGVueV9wb3J0ODAoLypjb25z
dCovIHN0cnVjdCBkbWlfc3lzdGVtX2lkICppZCkKK3N0YXRpYyBpbnQgX19pbml0IGRtaV9odm1f
ZGVueV9wb3J0ODAoY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQgKmlkKQogewogICAgIHByaW50
ayhYRU5MT0dfV0FSTklORyAiJXM6IHBvcnQgMHg4MCBhY2Nlc3MgJXMgYWxsb3dlZCBmb3IgSFZN
IGd1ZXN0c1xuIiwKICAgICAgICAgICAgaWQtPmlkZW50LCBodm1fcG9ydDgwX2FsbG93ZWQgPiAw
ID8gImZvcmNpYmx5IiA6ICJub3QiKTsKQEAgLTQxLDcgKzQxLDcgQEAgc3RhdGljIGludCBfX2lu
aXQgY2hlY2tfcG9ydDgwKHZvaWQpCiAgICAgICogUXVpcmsgdGFibGUgZm9yIHN5c3RlbXMgdGhh
dCBtaXNiZWhhdmUgKGxvY2sgdXAsIGV0Yy4pIGlmIHBvcnQKICAgICAgKiAweDgwIGlzIHVzZWQ6
CiAgICAgICovCi0gICAgc3RhdGljIHN0cnVjdCBkbWlfc3lzdGVtX2lkIF9faW5pdGRhdGEgaHZt
X25vX3BvcnQ4MF9kbWlfdGFibGVbXSA9CisgICAgc3RhdGljIGNvbnN0IHN0cnVjdCBkbWlfc3lz
dGVtX2lkIF9faW5pdGNvbnN0IGh2bV9ub19wb3J0ODBfZG1pX3RhYmxlW10gPQogICAgIHsKICAg
ICAgICAgewogICAgICAgICAgICAgLmNhbGxiYWNrID0gZG1pX2h2bV9kZW55X3BvcnQ4MCwKZGlm
ZiAtLWdpdCBhL3hlbi9hcmNoL3g4Ni9pb3BvcnRfZW11bGF0ZS5jIGIveGVuL2FyY2gveDg2L2lv
cG9ydF9lbXVsYXRlLmMKaW5kZXggNTA0YmM1MTNlMi4uNjI2NTMzYjY2YyAxMDA2NDQKLS0tIGEv
eGVuL2FyY2gveDg2L2lvcG9ydF9lbXVsYXRlLmMKKysrIGIveGVuL2FyY2gveDg2L2lvcG9ydF9l
bXVsYXRlLmMKQEAgLTM0LDcgKzM0LDcgQEAgc3RhdGljIGJvb2wgaW9lbXVsX2hhbmRsZV9wcm9s
aWFudF9xdWlyaygKIH0KIAogLyogVGhpcyB0YWJsZSBpcyB0aGUgc2V0IG9mIHN5c3RlbS1zcGVj
aWZpYyBJL08gZW11bGF0aW9uIGhvb2tzLiAqLwotc3RhdGljIHN0cnVjdCBkbWlfc3lzdGVtX2lk
IF9faW5pdGRhdGEgaW9wb3J0X3F1aXJrc190YmxbXSA9IHsKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qg
ZG1pX3N5c3RlbV9pZCBfX2luaXRjb25zdCBpb3BvcnRfcXVpcmtzX3RibFtdID0gewogICAgIC8q
CiAgICAgICogSS9PIGVtdWxhdGlvbiBob29rIGZvciBjZXJ0YWluIEhQIFByb0xpYW50IHNlcnZl
cnMgd2l0aAogICAgICAqICdzcGVjaWFsJyBTTU0gZ29vZG5lc3MuCmRpZmYgLS1naXQgYS94ZW4v
YXJjaC94ODYvc2h1dGRvd24uYyBiL3hlbi9hcmNoL3g4Ni9zaHV0ZG93bi5jCmluZGV4IDY5Yjgy
NTQyYjMuLjNhZjdiNWIwMjMgMTAwNjQ0Ci0tLSBhL3hlbi9hcmNoL3g4Ni9zaHV0ZG93bi5jCisr
KyBiL3hlbi9hcmNoL3g4Ni9zaHV0ZG93bi5jCkBAIC0xNTcsNyArMTU3LDcgQEAgc3RhdGljIHZv
aWQgZGVmYXVsdF9yZWJvb3RfdHlwZSh2b2lkKQogICAgICAgICByZWJvb3RfdHlwZSA9IEJPT1Rf
QUNQSTsKIH0KIAotc3RhdGljIGludCBfX2luaXQgb3ZlcnJpZGVfcmVib290KHN0cnVjdCBkbWlf
c3lzdGVtX2lkICpkKQorc3RhdGljIGludCBfX2luaXQgb3ZlcnJpZGVfcmVib290KGNvbnN0IHN0
cnVjdCBkbWlfc3lzdGVtX2lkICpkKQogewogICAgIGVudW0gcmVib290X3R5cGUgdHlwZSA9IChs
b25nKWQtPmRyaXZlcl9kYXRhOwogCkBAIC0xODEsNyArMTgxLDcgQEAgc3RhdGljIGludCBfX2lu
aXQgb3ZlcnJpZGVfcmVib290KHN0cnVjdCBkbWlfc3lzdGVtX2lkICpkKQogICAgIHJldHVybiAw
OwogfQogCi1zdGF0aWMgc3RydWN0IGRtaV9zeXN0ZW1faWQgX19pbml0ZGF0YSByZWJvb3RfZG1p
X3RhYmxlW10gPSB7CitzdGF0aWMgY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQgX19pbml0Y29u
c3QgcmVib290X2RtaV90YWJsZVtdID0gewogICAgIHsgICAgLyogSGFuZGxlIHByb2JsZW1zIHdp
dGggcmVib290aW5nIG9uIERlbGwgRTUyMCdzICovCiAgICAgICAgIC5jYWxsYmFjayA9IG92ZXJy
aWRlX3JlYm9vdCwKICAgICAgICAgLmRyaXZlcl9kYXRhID0gKHZvaWQgKikobG9uZylCT09UX0tC
RCwKZGlmZiAtLWdpdCBhL3hlbi9hcmNoL3g4Ni94ODZfNjQvbW1jb25mLWZhbTEwaC5jIGIveGVu
L2FyY2gveDg2L3g4Nl82NC9tbWNvbmYtZmFtMTBoLmMKaW5kZXggZmEyZjViNDg4MS4uNWFmNmYy
MmM5ZiAxMDA2NDQKLS0tIGEveGVuL2FyY2gveDg2L3g4Nl82NC9tbWNvbmYtZmFtMTBoLmMKKysr
IGIveGVuL2FyY2gveDg2L3g4Nl82NC9tbWNvbmYtZmFtMTBoLmMKQEAgLTE4NSw3ICsxODUsNyBA
QCB2b2lkIGZhbTEwaF9jaGVja19lbmFibGVfbW1jZmcodm9pZCkKIAl3cm1zcmwoTVNSX0ZBTTEw
SF9NTUlPX0NPTkZfQkFTRSwgdmFsKTsKIH0KIAotc3RhdGljIHN0cnVjdCBkbWlfc3lzdGVtX2lk
IF9faW5pdGRhdGEgbW1jb25mX2RtaV90YWJsZVtdID0geworc3RhdGljIGNvbnN0IHN0cnVjdCBk
bWlfc3lzdGVtX2lkIF9faW5pdGNvbnN0IG1tY29uZl9kbWlfdGFibGVbXSA9IHsKIAl7CiAJCS5p
ZGVudCA9ICJTdW4gTWljcm9zeXN0ZW1zIE1hY2hpbmUiLAogCQkubWF0Y2hlcyA9IHsKZGlmZiAt
LWdpdCBhL3hlbi9pbmNsdWRlL3hlbi9kbWkuaCBiL3hlbi9pbmNsdWRlL3hlbi9kbWkuaAppbmRl
eCBlYmEyYzI3YjJmLi5mYTI1ZjZjZDM4IDEwMDY0NAotLS0gYS94ZW4vaW5jbHVkZS94ZW4vZG1p
LmgKKysrIGIveGVuL2luY2x1ZGUveGVuL2RtaS5oCkBAIC0yNCw3ICsyNCw3IEBAIHN0cnVjdCBk
bWlfc3RybWF0Y2ggewogfTsKIAogc3RydWN0IGRtaV9zeXN0ZW1faWQgewotCWludCAoKmNhbGxi
YWNrKShzdHJ1Y3QgZG1pX3N5c3RlbV9pZCAqKTsKKwlpbnQgKCpjYWxsYmFjaykoY29uc3Qgc3Ry
dWN0IGRtaV9zeXN0ZW1faWQgKik7CiAJY2hhciAqaWRlbnQ7CiAJc3RydWN0IGRtaV9zdHJtYXRj
aCBtYXRjaGVzWzRdOwogCXZvaWQgKmRyaXZlcl9kYXRhOwpAQCAtMzIsNyArMzIsNyBAQCBzdHJ1
Y3QgZG1pX3N5c3RlbV9pZCB7CiAKICNkZWZpbmUgRE1JX01BVENIKGEsYikJeyBhLCBiIH0KIAot
ZXh0ZXJuIGludCBkbWlfY2hlY2tfc3lzdGVtKHN0cnVjdCBkbWlfc3lzdGVtX2lkICpsaXN0KTsK
K2V4dGVybiBpbnQgZG1pX2NoZWNrX3N5c3RlbShjb25zdCBzdHJ1Y3QgZG1pX3N5c3RlbV9pZCAq
bGlzdCk7CiBleHRlcm4gdm9pZCBkbWlfc2Nhbl9tYWNoaW5lKHZvaWQpOwogZXh0ZXJuIGNvbnN0
IGNoYXIgKmRtaV9nZXRfdGFibGUocGFkZHJfdCAqYmFzZSwgdTMyICpsZW4pOwogZXh0ZXJuIHZv
aWQgZG1pX2VmaV9nZXRfdGFibGUoY29uc3Qgdm9pZCAqc21iaW9zLCBjb25zdCB2b2lkICpzbWJp
b3MzKTsKLS0gCjIuMTEuMAoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhlbnByb2pl
Y3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5mby94ZW4t
ZGV2ZWw=

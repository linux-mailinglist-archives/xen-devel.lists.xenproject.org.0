Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id E567A130DDA
	for <lists+xen-devel@lfdr.de>; Mon,  6 Jan 2020 08:10:11 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1ioMTM-0004c2-8y; Mon, 06 Jan 2020 07:06:44 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=VEq/=23=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1ioMTK-0004bt-Lo
 for xen-devel@lists.xenproject.org; Mon, 06 Jan 2020 07:06:42 +0000
X-Inumbo-ID: ba230626-3052-11ea-b6f1-bc764e2007e4
Received: from mx2.suse.de (unknown [195.135.220.15])
 by us1-rack-iad1.inumbo.com (Halon) with ESMTPS
 id ba230626-3052-11ea-b6f1-bc764e2007e4;
 Mon, 06 Jan 2020 07:05:34 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 62C68B2B8;
 Mon,  6 Jan 2020 07:03:46 +0000 (UTC)
To: Lars Kurth <lars.kurth@xenproject.org>, xen-devel@lists.xenproject.org
References: <cover.1577733361.git.lars.kurth@citrix.com>
 <24bb87eccaaf8937443c42c69e215fc59b66741f.1577733361.git.lars.kurth@citrix.com>
From: =?UTF-8?B?SsO8cmdlbiBHcm/Dnw==?= <jgross@suse.com>
Message-ID: <a6b3d3d7-5c56-0a0c-dc8c-39c8ed4d1197@suse.com>
Date: Mon, 6 Jan 2020 08:03:45 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.2.1
MIME-Version: 1.0
In-Reply-To: <24bb87eccaaf8937443c42c69e215fc59b66741f.1577733361.git.lars.kurth@citrix.com>
Content-Language: en-US
Subject: Re: [Xen-devel] [PATCH v4 5/7] Add Code Review Guide
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Lars Kurth <lars.kurth@citrix.com>, xen-api@lists.xenproject.org,
 minios-devel@lists.xenproject.org, committers@xenproject.org,
 mirageos-devel@lists.xenproject.org, win-pv-devel@lists.xenproject.org
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

T24gMzAuMTIuMTkgMjA6MzIsIExhcnMgS3VydGggd3JvdGU6Cj4gRnJvbTogTGFycyBLdXJ0aCA8
bGFycy5rdXJ0aEBjaXRyaXguY29tPgo+IAo+IFRoaXMgZG9jdW1lbnQgaGlnaGxpZ2h0cyB3aGF0
IHJldmlld2VycyBzdWNoIGFzIG1haW50YWluZXJzIGFuZCBjb21taXR0ZXJzIGxvb2sKPiBmb3Ig
d2hlbiByZXZpZXdpbmcgY29kZS4gSXQgc2V0cyBleHBlY3RhdGlvbnMgZm9yIGNvZGUgYXV0aG9y
cyBhbmQgcHJvdmlkZXMKPiBhIGZyYW1ld29yayBmb3IgY29kZSByZXZpZXdlcnMuCj4gCj4gQ2hh
bmdlcyBzaW5jZSB2Mwo+ICogQWRkZWQgZXhhbXBsZSB1bmRlciAqV29ya2Zsb3cgZnJvbSBhIFJl
dmlld2VyJ3MgUGVyc3BlY3RpdmUqIHNlY3Rpb24KPiAqIEZpeGVkIHR5cG9zIGluIHRleHQgaW50
cm9kdWNlZCBpbiB2Mgo+IAo+IENoYW5nZXMgc2luY2UgdjIgKGludHJvZHVjZWQgaW4gdjIpCj4g
KiBFeHRlbmQgaW50cm9kdWN0aW9uCj4gKiBBZGQgIkNvZGUgUmV2aWV3IFdvcmtmbG93IiBjb3Zl
cmluZwo+ICAgIC0gIldvcmtmbG93IGZyb20gYSBSZXZpZXdlcidzIFBlcnNwZWN0aXZlIgo+ICAg
IC0gIldvcmtmbG93IGZyb20gYW4gQXV0aG9yJ3MgUGVyc3BlY3RpdmUiCj4gICAgLSAiUHJvYmxl
bWF0aWMgUGF0Y2ggUmV2aWV3cyIKPiAqIFdyYXAgdG8gODAgY2hhcmFjdGVycwo+ICogUmVwbGFj
ZSBpbmxpbmUgbGlua3Mgd2l0aCByZWZlcmVuY2UgbGlua3MgdG8gbWFrZQo+ICAgIHdyYXBwaW5n
IGVhc2llcgo+IAo+IFNpZ25lZC1vZmYtYnk6IExhcnMgS3VydGggPGxhcnMua3VydGhAY2l0cml4
LmNvbT4KPiAtLS0KPiBDYzogbWluaW9zLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCj4gQ2M6
IHhlbi1hcGlAbGlzdHMueGVucHJvamVjdC5vcmcKPiBDYzogd2luLXB2LWRldmVsQGxpc3RzLnhl
bnByb2plY3Qub3JnCj4gQ2M6IG1pcmFnZW9zLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCj4g
Q2M6IGNvbW1pdHRlcnNAeGVucHJvamVjdC5vcmcKPiAtLS0KPiAgIGNvZGUtcmV2aWV3LWd1aWRl
Lm1kIHwgMzEzICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKwo+ICAgMSBmaWxlIGNoYW5nZWQsIDMxMyBpbnNlcnRpb25zKCspCj4gICBjcmVhdGUgbW9k
ZSAxMDA2NDQgY29kZS1yZXZpZXctZ3VpZGUubWQKPiAKPiBkaWZmIC0tZ2l0IGEvY29kZS1yZXZp
ZXctZ3VpZGUubWQgYi9jb2RlLXJldmlldy1ndWlkZS5tZAo+IG5ldyBmaWxlIG1vZGUgMTAwNjQ0
Cj4gaW5kZXggMDAwMDAwMC4uYjJjMDhkMgo+IC0tLSAvZGV2L251bGwKPiArKysgYi9jb2RlLXJl
dmlldy1ndWlkZS5tZAo+IEBAIC0wLDAgKzEsMzEzIEBACj4gKyMgQ29kZSBSZXZpZXcgR3VpZGUK
PiArCj4gK1RoaXMgZG9jdW1lbnQgaGlnaGxpZ2h0cyB3aGF0IHJldmlld2VycyBzdWNoIGFzIG1h
aW50YWluZXJzIGFuZCBjb21taXR0ZXJzIGxvb2sKPiArZm9yIHdoZW4gcmV2aWV3aW5nIHlvdXIg
Y29kZS4gSXQgc2V0cyBleHBlY3RhdGlvbnMgZm9yIGNvZGUgYXV0aG9ycyBhbmQgcHJvdmlkZXMK
PiArYSBmcmFtZXdvcmsgZm9yIGNvZGUgcmV2aWV3ZXJzLgo+ICsKPiArQmVmb3JlIHdlIHN0YXJ0
LCBpdCBpcyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgdGhhdCB0aGUgcHJpbWFyeSBwdXJwb3NlIG9m
IGEKCmR1cGxpY2F0ZSAiYSIKCj4gK2EgY29kZSByZXZpZXcgaXMgdG8gaWRlbnRpZnkgYW55IGJ1
Z3Mgb3IgcG90ZW50aWFsIGJ1Z3MgaW4gdGhlIGNvZGUuIE1vc3QgY29kZQo+ICtyZXZpZXdzIGFy
ZSByZWxhdGl2ZWx5IHN0cmFpZ2h0LWZvcndhcmQgYW5kIGRvIG5vdCByZXF1aXJlIHJlLXdyaXRp
bmcgdGhlCj4gK3N1Ym1pdHRlZCBjb2RlIHN1YnN0YW50aWFsbHkuCj4gKwo+ICtUaGUgZG9jdW1l
bnQgcHJvdmlkZXMgYWR2aWNlIG9uIGhvdyB0byBzdHJ1Y3R1cmUgbGFyZ2VyIHBhdGNoIHNlcmll
cyBhbmQKPiArcHJvdmlkZXMgIHBvaW50ZXJzIG9uIGNvZGUgYXV0aG9yJ3MgYW5kIHJldmlld2Vy
J3Mgd29ya2Zsb3dzLgo+ICsKPiArU29tZXRpbWVzIGl0IGhhcHBlbnMgdGhhdCBhIHN1Ym1pdHRl
ZCBwYXRjaCBzZXJpZXMgbWFkZSB3cm9uZyBhc3N1bXB0aW9ucyBvciBoYXMKPiArYSBmbGF3ZWQg
ZGVzaWduIG9yIGFyY2hpdGVjdHVyZS4gVGhpcyBjYW4gYmUgZnJ1c3RyYXRpbmcgZm9yIGNvbnRy
aWJ1dG9ycyBhbmQKPiArY29kZSAgcmV2aWV3ZXJzLiBOb3RlIHRoYXQgdGhpcyBkb2N1bWVudCBk
b2VzIGNvbnRhaW4gW2Egc2VjdGlvbl0oI3Byb2JsZW1zKQo+ICt0aGF0IHByb3ZpZGVzICBzdWdn
ZXN0aW9ucyBvbiBob3cgdG8gbWluaW1pemUgdGhlIGltcGFjdCBmb3IgbW9zdCBzdGFrZS1ob2xk
ZXJzCj4gK2FuZCBhbHNvIG9uIGhvdyB0byBhdm9pZCBzdWNoIHNpdHVhdGlvbnMuCj4gKwo+ICtU
aGlzIGRvY3VtZW50IGRvZXMgKipub3QgY292ZXIqKiB0aGUgZm9sbG93aW5nIHRvcGljczoKPiAr
KiBbQ29tbXVuaWNhdGlvbiBCZXN0IFByYWN0aWNlXVsxXQo+ICsqIFtSZXNvbHZpbmcgRGlzYWdy
ZWVtZW50XVsyXQo+ICsqIFtQYXRjaCBTdWJtaXNzaW9uIFdvcmtmbG93XVszXQo+ICsqIFtNYW5h
Z2luZyBQYXRjaCBTdWJtaXNzaW9uIHdpdGggR2l0XVs0XQo+ICsKPiArIyMgV2hhdCB3ZSBsb29r
IGZvciBpbiBDb2RlIFJldmlld3MKPiArCj4gK1doZW4gcGVyZm9ybWluZyBhIGNvZGUgcmV2aWV3
LCByZXZpZXdlcnMgdHlwaWNhbGx5IGxvb2sgZm9yIHRoZSBmb2xsb3dpbmcgdGhpbmdzCj4gKwo+
ICsjIyMgSXMgdGhlIGNoYW5nZSBuZWNlc3NhcnkgdG8gYWNjb21wbGlzaCB0aGUgZ29hbHM/Cj4g
Kwo+ICsqIElzIGl0IGNsZWFyIHdoYXQgdGhlIGdvYWxzIGFyZT8KPiArKiBEbyB3ZSBuZWVkIHRv
IG1ha2UgYSBjaGFuZ2UsIG9yIGNhbiB0aGUgZ29hbHMgYmUgbWV0IHdpdGggZXhpc3RpbmcKPiAr
ICBmdW5jdGlvbmFsaXR5Pwo+ICsKPiArIyMjIEFyY2hpdGVjdHVyZSAvIEludGVyZmFjZQo+ICsK
PiArKiBJcyB0aGlzIHRoZSBiZXN0IHdheSB0byBzb2x2ZSB0aGUgcHJvYmxlbT8KPiArKiBJcyB0
aGlzIHRoZSByaWdodCBwYXJ0IG9mIHRoZSBjb2RlIHRvIG1vZGlmeT8KPiArKiBJcyB0aGlzIHRo
ZSByaWdodCBsZXZlbCBvZiBhYnN0cmFjdGlvbj8KPiArKiBJcyB0aGUgaW50ZXJmYWNlIGdlbmVy
YWwgZW5vdWdoPyBUb28gZ2VuZXJhbD8gRm9yd2FyZCBjb21wYXRpYmxlPwo+ICsKPiArIyMjIEZ1
bmN0aW9uYWxpdHkKPiArCj4gKyogRG9lcyBpdCBkbyB3aGF0IGl04oCZcyB0cnlpbmcgdG8gZG8/
Cj4gKyogSXMgaXQgZG9pbmcgaXQgaW4gdGhlIG1vc3QgZWbvrIFjaWVudCB3YXk/Cj4gKyogRG9l
cyBpdCBoYW5kbGUgYWxsIHRoZSBjb3JuZXIgLyBlcnJvciBjYXNlcyBjb3JyZWN0bHk/Cj4gKwo+
ICsjIyMgTWFpbnRhaW5hYmlsaXR5IC8gUm9idXN0bmVzcwo+ICsKPiArKiBJcyB0aGUgY29kZSBj
bGVhcj8gQXBwcm9wcmlhdGVseSBjb21tZW50ZWQ/Cj4gKyogRG9lcyBpdCBkdXBsaWNhdGUgYW5v
dGhlciBwaWVjZSBvZiBjb2RlPwo+ICsqIERvZXMgdGhlIGNvZGUgbWFrZSBoaWRkZW4gYXNzdW1w
dGlvbnM/Cj4gKyogRG9lcyBpdCBpbnRyb2R1Y2Ugc2VjdGlvbnMgd2hpY2ggbmVlZCB0byBiZSBr
ZXB0ICoqaW4gc3luYyoqIHdpdGggb3RoZXIKPiArICBzZWN0aW9ucz8KPiArKiBBcmUgdGhlcmUg
b3RoZXIgKip0cmFwcyoqIHNvbWVvbmUgbW9kaWZ5aW5nIHRoaXMgY29kZSBtaWdodCBmYWxsIGlu
dG8/Cj4gKwo+ICsqKk5vdGU6KiogU29tZXRpbWVzIHlvdSB3aWxsIHdvcmsgaW4gYXJlYXMgd2hp
Y2ggaGF2ZSBpZGVudGlmaWVkIG1haW50YWluYWJpbGl0eQo+ICthbmQvb3Igcm9idXN0bmVzcyBp
c3N1ZXMuIEluIHN1Y2ggY2FzZXMsIG1haW50YWluZXJzIG1heSBhc2sgeW91IHRvIG1ha2UKPiAr
YWRkaXRpb25hbCBjaGFuZ2VzLCBzdWNoIHRoYXQgeW91ciBzdWJtaXR0ZWQgY29kZSBkb2VzIG5v
dCBtYWtlIHRoaW5ncyB3b3JzZSBvcgo+ICtwb2ludCB5b3UgdG8gb3RoZXIgcGF0Y2hlcyBhcmUg
YWxyZWFkeSBiZWluZyB3b3JrZWQgb24uCj4gKwo+ICsjIyMgU3lzdGVtIHByb3BlcnRpZXMKPiAr
Cj4gK0luIHNvbWUgYXJlYXMgb2YgdGhlIGNvZGUsIHN5c3RlbSBwcm9wZXJ0aWVzIHN1Y2ggYXMK
PiArKiBDb2RlIHNpemUKPiArKiBQZXJmb3JtYW5jZQo+ICsqIFNjYWxhYmlsaXR5Cj4gKyogTGF0
ZW5jeQo+ICsqIENvbXBsZXhpdHkKPiArKiAmYwo+ICthcmUgYWxzbyBpbXBvcnRhbnQgZHVyaW5n
IGNvZGUgcmV2aWV3cy4KPiArCj4gKyMjIyBTdHlsZQo+ICsKPiArKiBDb21tZW50cywgY2Fycmlh
Z2UgcmV0dXJucywgKipzbnVnZ2x5IGJyYWNlcyoqLCAmYwo+ICsqIFNlZSBbQ09ESU5HX1NUWUxF
XVs1XSBhbmQgW3Rvb2xzL2xpYnhsL0NPRElOR19TVFlMRV1bNl0KPiArKiBObyBleHRyYW5lb3Vz
IHdoaXRlc3BhY2UgY2hhbmdlcwo+ICsKPiArIyMjIERvY3VtZW50YXRpb24gYW5kIHRlc3RpbmcK
PiArCj4gKyogSWYgdGhlcmUgaXMgcHJlLWV4aXN0aW5nIGRvY3VtZW50YXRpb24gaW4gdGhlIHRy
ZWUsIHN1Y2ggYXMgbWFuIHBhZ2VzLCBkZXNpZ24KPiArICBkb2N1bWVudHMsIGV0Yy4gYSBjb250
cmlidXRvciBtYXkgYmUgYXNrZWQgdG8gdXBkYXRlIHRoZSBkb2N1bWVudGF0aW9uCj4gKyAgYWxv
bmdzaWRlIHRoZSBjaGFuZ2UuIERvY3VtZW50YXRpb24gaXMgdHlwaWNhbGx5IHByZXNlbnQgaW4g
dGhlIFtkb2NzXVs3XQo+ICsgIGZvbGRlci4KPiArKiBXaGVuIGFkZGluZyBuZXcgZmVhdHVyZXMg
dGhhdCBoYXZlIGFuIGltcGFjdCBvbiB0aGUgZW5kLXVzZXIsCj4gKyAgYSBjb250cmlidXRvciBz
aG91bGQgaW5jbHVkZSBhbiB1cGRhdGUgdG8gdGhlIFtTVVBQT1JULm1kXVs4XSBmaWxlLgo+ICsg
IFR5cGljYWxseSwgbW9yZSBjb21wbGV4IGZlYXR1cmVzIHJlcXVpcmUgc2V2ZXJhbCBwYXRjaCBz
ZXJpZXMgYmVmb3JlIGl0IGlzCj4gKyAgcmVhZHkgdG8gYmUgYWR2ZXJ0aXNlZCBpbiBTVVBQT1JU
Lm1kCj4gKyogV2hlbiBhZGRpbmcgbmV3IGZlYXR1cmVzLCBhIGNvbnRyaWJ1dG9yIG1heSBiZSBh
c2tlZCB0byBwcm92aWRlIHRlc3RzIG9yCj4gKyAgZW5zdXJlIHRoYXQgZXhpc3RpbmcgdGVzdHMg
cGFzcwo+ICsKPiArIyMjIyBUZXN0aW5nIGZvciB0aGUgWGVuIFByb2plY3QgSHlwZXJ2aXNvcgo+
ICsKPiArVGVzdHMgYXJlIHR5cGljYWxseSBsb2NhdGVkIGluIG9uZSBvZiB0aGUgZm9sbG93aW5n
IGRpcmVjdG9yaWVzCj4gKyogKipVbml0IHRlc3RzKio6IFt0b29scy90ZXN0c11bOV0gb3IgW3hl
bi90ZXN0XVtBXTxicj4KPiArICBVbml0IHRlc3RpbmcgaXMgaGFyZCBmb3IgYSBzeXN0ZW0gbGlr
ZSBYZW4gYW5kIHR5cGljYWxseSByZXF1aXJlcyBidWlsZGluZyBhCj4gKyAgc3Vic3lzdGVtIG9m
IHlvdXIgdHJlZS4gSWYgeW91ciBjaGFuZ2UgY2FuIGJlIGVhc2lseSB1bml0IHRlc3RlZCwgeW91
IHNob3VsZAo+ICsgIGNvbnNpZGVyIHN1Ym1pdHRpbmcgdGVzdHMgd2l0aCB5b3VyIHBhdGNoLgo+
ICsqICoqQnVpbGQgYW5kIHNtb2tlIHRlc3QqKjogc2VlIFtYZW4gR2l0TGFiIENJXVtCXTxicj4K
PiArICBSdW5zIGJ1aWxkIHRlc3RzIGZvciBhIGNvbWJpbmF0aW9uIG9mIHZhcmlvdXMgZGlzdHJv
cyBhbmQgY29tcGlsZXJzIGFnYWluc3QKPiArICBjaGFuZ2VzIGNvbW1pdHRlZCB0byBzdGFnaW5n
LiBEZXZlbG9wZXJzIGNhbiBqb2luIGFzIG1lbWJlcnMgYW5kIHRlc3QgdGhlaXIKPiArICBkZXZl
bG9wbWVudCBicmFuY2hlcyAqKmJlZm9yZSoqIHN1Ym1pdHRpbmcgYSBwYXRjaC4KPiArKiAqKlhU
RiB0ZXN0cyoqIChtaWNyb2tlcm5lbC1iYXNlZCB0ZXN0cyk6IHNlZSBbWFRGXVtDXTxicj4KPiAr
ICBYVEYgaGFzIGJlZW4gZGVzaWduZWQgdG8gdGVzdCBpbnRlcmFjdGlvbnMgYmV0d2VlbiB5b3Vy
IHNvZnR3YXJlIGFuZCBoYXJkd2FyZS4KPiArICBJdCBpcyBhIHZlcnkgdXNlZnVsIHRvb2wgZm9y
IHRlc3RpbmcgbG93IGxldmVsIGZ1bmN0aW9uYWxpdHkgYW5kIGlzIGV4ZWN1dGVkCj4gKyAgYXMg
cGFydCBvZiB0aGUgcHJvamVjdCdzIENJIHN5c3RlbS4gWFRGIGNhbiBiZSBlYXNpbHkgZXhlY3V0
ZWQgbG9jYWxseSBvbgo+ICsgIHhlbi5naXQgdHJlZXMuCj4gKyogKipvc3N0ZXN0Kio6IHNlZSBb
UkVBRE1FXVtEXTxicj4KPiArICBPc3N0ZXN0IGlzIHRoZSBYZW4gUHJvamVjdHMgYXV0b21hdGVk
IHRlc3Qgc3lzdGVtLCB3aGljaCB0ZXN0cyBiYXNpYyBYZW4gdXNlCj4gKyAgY2FzZXMgb24gYSB2
YXJpZXR5IG9mIGRpZmZlcmVudCBoYXJkd2FyZS4gQmVmb3JlIGNoYW5nZXMgYXJlIGNvbW1pdHRl
ZCwgYnV0Cj4gKyAgKiphZnRlcioqIHRoZXkgaGF2ZSBiZWVuIHJldmlld2VkLiBBIGNvbnRyaWJ1
dG9y4oCZcyBjaGFuZ2VzICoqY2Fubm90IGJlCj4gKyAgYXBwbGllZCB0byBtYXN0ZXIqKiB1bmxl
c3MgdGhlIHRlc3RzIHBhc3MgdGhpcyB0ZXN0IHN1aXRlLiBOb3RlIHRoYXQgWFRGIGFuZAo+ICsg
IG90aGVyIHRlc3RzIGFyZSBhbHNvIGV4ZWN1dGVkIGFzIHBhcnQgb2Ygb3NzdGVzdC4KPiArCj4g
KyMjIyBQYXRjaCAvIFBhdGNoIHNlcmllcyBpbmZvcm1hdGlvbgo+ICsKPiArKiBJbmZvcm1hdGl2
ZSBvbmUtbGluZSBjaGFuZ2Vsb2cKPiArKiBGdWxsIGNoYW5nZWxvZwo+ICsqIE1vdGl2YXRpb24g
ZGVzY3JpYmVkCj4gKyogQWxsIGltcG9ydGFudCB0ZWNobmljYWwgY2hhbmdlcyBtZW50aW9uZWQK
PiArKiBDaGFuZ2VzIHNpbmNlIHByZXZpb3VzIHJldmlzaW9uIGxpc3RlZAo+ICsqIFJldmlld2Vk
LWJ54oCZcyBhbmQgQWNrZWQtYnnigJlzIGRyb3BwZWQgaWYgYXBwcm9wcmlhdGUKPiArCj4gK01v
cmUgaW5mb3JtYXRpb24gcmVsYXRlZCB0byB0aGVzZSBpdGVtcyBjYW4gYmUgZm91bmQgaW4gb3Vy
Cj4gK1tQYXRjaCBzdWJtaXNzaW9uIEd1aWRlXVtFXS4KPiArCj4gKyMjIENvZGUgUmV2aWV3IFdv
cmtmbG93Cj4gKwo+ICtUaGlzIHNlY3Rpb24gaXMgaW1wb3J0YW50IGZvciBjb2RlIGF1dGhvcnMg
YW5kIHJldmlld2Vycy4gV2UgcmVjb21tZW5kIHRoYXQgaW4KPiArcGFydGljdWxhciBuZXcgY29k
ZSBhdXRob3JzIGNhcmVmdWxseSByZWFkIHRoaXMgc2VjdGlvbi4KPiArCj4gKyMjIyBXb3JrZmxv
dyBmcm9tIGEgUmV2aWV3ZXIncyBQZXJzcGVjdGl2ZQo+ICsKPiArUGF0Y2ggc2VyaWVzIHR5cGlj
YWxseSBjb250YWluIG11bHRpcGxlIGNoYW5nZXMgdG8gdGhlIGNvZGViYXNlLCBzb21lCj4gK3Ry
YW5zZm9ybWluZyB0aGUgc2FtZSBzZWN0aW9uIG9mIHRoZSBjb2RlYmFzZSBtdWx0aXBsZSB0aW1l
cy4gSXQgaXMgcXVpdGUgY29tbW9uCj4gK2ZvciBwYXRjaGVzIGluIGEgcGF0Y2ggc2VyaWVzIHRv
IHJlbHkgb24gdGhlIHByZXZpb3VzIG9uZXMuIFRoaXMgbWVhbnMgdGhhdCBjb2RlCj4gK3Jldmll
d2VycyByZXZpZXcgIHBhdGNoZXMgYW5kIHBhdGNoIHNlcmllcyAqKnNlcXVlbnRpYWxseSoqIGFu
ZCAqKnRoZSBzdHJ1Y3R1cmUKPiArb2YgYSBwYXRjaCBzZXJpZXMgZ3VpZGVzIHRoZSBjb2RlIHJl
dmlldyBwcm9jZXNzKiouIFNvbWV0aW1lcyBpbiBhIGxvbmcgc2VyaWVzLAo+ICtwYXRjaGVzIHsx
LDJ9LzEwIHdpbGwgYmUgY2xlYW4tdXBzLCB7My02fS8xMCB3aWxsIGJlIGdlbmVyYWwgcmVvcmdh
bmlzYXRpb25zCj4gK3doaWNoIGRvbid0IHJlYWxseSBzZWVtIHRvIGRvIGFueXRoaW5nIGFuZCB0
aGVuIHs3LTEwfS8xMCB3aWxsIGJlIHRoZSBzdWJzdGFuY2UKPiArb2YgdGhlIHNlcmllcywgd2hp
Y2ggaGVscHMgdGhlIGNvZGUgcmV2aWV3ZXIgdW5kZXJzdGFuZCB3aGF0IHszLTZ9LzEwIHdlcmUK
PiArYWJvdXQuCj4gKwo+ICtHZW5lcmFsbHkgdGhlcmUgYXJlIG5vIGhhcmQgcnVsZXMgb24gaG93
IHRvIHN0cnVjdHVyZSBhIHNlcmllcywgYXMgdGhlIHN0cnVjdHVyZQo+ICtvZiBhIHNlcmllcyBp
cyB2ZXJ5IGNvZGUgc3BlY2lmaWMgYW5kIGl0IGlzIGhhcmQgdG8gZ2l2ZSBzcGVjaWZpYyBhZHZp
Y2UuIFRoZXJlCj4gK2FyZSBzb21lIGdlbmVyYWwgdGlwcyB3aGljaCAgaGVscCBhbmQgc29tZSBn
ZW5lcmFsIHBhdHRlcm5zLgo+ICsKPiArKipUaXBzOioqCj4gKwo+ICsqIE91dGxpbmUgdGhlIHRo
aW5raW5nIGJlaGluZCB0aGUgc3RydWN0dXJlIG9mIHRoZSBwYXRjaCBzZXJpZXMuIFRoaXMgY2Fu
IG1ha2UKPiArICBhIGh1Z2UgZGlmZmVyZW5jZSBhbmQgaGVscHMgZW5zdXJlIHRoYXQgdGhlIGNv
ZGUgcmV2aWV3ZXIgdW5kZXJzdGFuZHMgd2hhdCB0aGUKPiArICBzZXJpZXMgaXMgdHJ5aW5nIHRv
IGFjaGlldmUgYW5kIHdoaWNoIHBvcnRpb25zIGFyZSBhZGRyZXNzaW5nIHdoaWNoIHByb2JsZW1z
Lgo+ICsqIFRyeSBhbmQga2VlcCBjaGFuZ2VzIHRoYXQgYmVsb25nIHRvIGEgc3Vic3lzdGVtIHRv
Z2V0aGVyCj4gKyogRXhwZWN0IHRoYXQgdGhlIHN0cnVjdHVyZSBvZiBhIHBhdGNoIHNlcmllcyBz
b21ldGltZXMgbWF5IG5lZWQgdG8gY2hhbmdlCj4gKyAgYmV0d2VlbiBkaWZmZXJlbnQgdmVyc2lv
bnMgb2YgYSBwYXRjaCBzZXJpZXMKPiArKiAqKk1vc3QgaW1wb3J0YW50bHkqKjogU3RhcnQgc21h
bGwuIERvbid0IHN1Ym1pdCBhIGxhcmdlIGFuZCBjb21wbGV4IHBhdGNoCj4gKyAgc2VyaWVzIGFz
IHRoZSBmaXJzdCBpbnRlcmFjdGlvbiB3aXRoIHRoZSBjb21tdW5pdHkuIFRyeSBhbmQgcGljayBh
IHNtYWxsZXIKPiArICB0YXNrIGZpcnN0IChlLmcuIGEgYnVnLWZpeCwgYSBjbGVhbi11cCB0YXNr
LCBldGMuKSBzdWNoIHRoYXQgeW91IGRvbid0IGhhdmUKPiArICB0byBsZWFybiB0aGUgdG9vbHMs
IGNvZGUgYW5kIGRlYWwgd2l0aCBhIGxhcmdlIHBhdGNoIHNlcmllcyBhbGwgdG9nZXRoZXIgZm9y
Cj4gKyAgdGhlIGZpcnN0IHRpbWUuCj4gKwo+ICsqKkdlbmVyYWwgUGF0dGVybnM6KioKPiArCj4g
K0lmIHRoZXJlIGFyZSBtdWx0aXBsZSBzdWJzeXN0ZW1zIGludm9sdmVkIGluIHlvdXIgc2VyaWVz
LCB0aGVuIHRoZXNlIGFyZSBiZXN0Cj4gK3NlcGFyYXRlZCBvdXQgaW50byAqKnNldHMgb2YgcGF0
Y2hlcyoqLCB3aGljaCByb3VnaGx5IGZvbGxvdyB0aGUgZm9sbG93aW5nCj4gK3NldmVuIGNhdGVn
b3JpZXMuIEluIG90aGVyIHdvcmRzOiB5b3Ugd291bGQgZW5kIHVwIHdpdGggKio3IGNhdGVnb3Jp
ZXMgeCBOCj4gK3N1YnN5c3RlbXMqKi4gSW4gc29tZSBjYXNlcywgdGhlcmUgaXMgYSAqKmdsb2Jh
bCBzZXQgb2YgcGF0Y2hlcyoqIHRoYXQgYWZmZWN0Cj4gK2FsbCBzdWJzeXRlbXMgKGUuZy4gaGVh
ZGVycywgbWFjcm9zLCBkb2N1bWVudGF0aW9uKSBpbXBhY3RpbmcgYWxsIGNoYW5nZWQKPiArc3Vi
c3lzdGVtcyB3aGljaCBpZGVhbGx5IGNvbWVzICoqYmVmb3JlKiogc3Vic3lzdGVtIHNwZWNpZmlj
IGNoYW5nZXMuCj4gKwo+ICtUaGUgc2V2ZW4gY2F0ZWdvcmllcyB0eXBpY2FsbHkgbWFraW5nIHVw
IGEgbG9naWNhbCBzZXQgb2YgcGF0Y2hlcwo+ICsxLiBDbGVhbnVwcyBhbmQvb3IgbmV3IEluZGVw
ZW5kZW50IEhlbHBlciBGdW5jdGlvbnMKPiArMi4gUmVvcmdhbmlzYXRpb25zCj4gKzMuIEhlYWRl
cnMsIEFQSXMsIERvY3VtZW50YXRpb24gYW5kIGFueXRoaW5nIHdoaWNoIGhlbHBzIHVuZGVyc3Rh
bmQgdGhlCj4gKyAgIHN1YnN0YW5jZSBvZiBhIHNlcmllcwo+ICs0LiBUaGUgc3Vic3RhbmNlIG9m
IHRoZSBjaGFuZ2UKPiArNS4gQ2xlYW51cHMgb2YgYW55IGluZmVsaWNpdGllcyBpbnRyb2R1Y2Vk
IHRlbXBvcmFyaWx5Cj4gKzYuIERlbGV0aW5nIG9sZCBjb2RlCj4gKzcuIFRlc3QgY29kZQo+ICsK
PiArTm90ZSB0aGF0IGluIG1hbnkgY2FzZXMsIHNvbWUgb2YgdGhlIGxpc3RlZCBjYXRlZ29yaWVz
IGFyZSBub3QgYWx3YXlzIHByZXNlbnQKPiAraW4gZWFjaCBzZXQsIGFzIHRoZXkgYXJlIG5vdCBu
ZWVkZWQuIE9mIGNvdXJzZSwgc29tZXRpbWVzIHRoZXJlIGFyZSBzZXZlcmFsCj4gK3BhdGNoZXMg
ZGVzY3JpYmluZyAqKmNoYW5nZXMgb2Ygc3Vic3RhbmNlKiosIHdoaWNoIGNvdWxkIGJlIG9yZGVy
ZWQgaW4gZGlmZmVyZW50Cj4gK3dheXM6IGluIHN1Y2ggY2FzZXMgaXQgbWF5IGJlIG5lY2Vzc2Fy
eSB0byBwdXQgcmVvcmdhbmlzYXRpb25zIGluIGJldHdlZW4gdGhlc2UKPiArcGF0Y2hlcy4KPiAr
Cj4gK0lmIGEgc2VyaWVzIGlzIHN0cnVjdHVyZWQgdGhpcyB3YXksIGl0IGlzIG9mdGVuIHBvc3Np
YmxlIHRvIGFncmVlIGVhcmx5IG9uLAo+ICt0aGF0IGEgc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiB0
aGUgY2hhbmdlcyBhcmUgZmluZSBhbmQgdG8gY2hlY2sgdGhlc2UgaW4KPiAraW5kZXBlbmRlbnRs
eSBvZiB0aGUgcmVzdCBvZiB0aGUgcGF0Y2ggc2VyaWVzLiBUaGlzIG1lYW5zIHRoYXQgdGhlcmUg
aXMKPiArKiBMZXNzIHdvcmsgZm9yIGF1dGhvcnMgdG8gcmViYXNlCj4gKyogTGVzcyBjb2duaXRp
dmUgb3ZlcmhlYWQgZm9yIHJldmlld2VycyB0byByZXZpZXcgc3VjY2Vzc2l2ZSB2ZXJzaW9ucyBv
ZiBhCj4gKyAgc2VyaWVzCj4gKyogVGhlIHBvc3NpYmlsaXR5IGZvciBkaWZmZXJlbnQgY29kZSBy
ZXZpZXdlcnMgdG8gcmV2aWV3IHBvcnRpb25zIG9mIHN1Y2gKPiArICBsYXJnZSBjaGFuZ2VzIGlu
ZGVwZW5kZW50bHkKPiArCj4gKyoqVHJhZGUtT2ZmczoqKgo+ICsKPiArKiBJbiBzb21lIGNhc2Vz
LCBmb2xsb3dpbmcgdGhlIGdlbmVyYWwgcGF0dGVybiBhYm92ZSBtYXkgY3JlYXRlIGV4dHJhIHBh
dGNoZXMKPiArICBhbmQgbWF5IG1ha2UgYSBzZXJpZXMgbW9yZSBjb21wbGV4IGFuZCBoYXJkZXIg
dG8gdW5kZXJzdGFuZC4KPiArKiBDcmFmdGluZyBhIG1vcmUgZXh0ZW5zaXZlIGNvdmVyIGxldHRl
ciB3aWxsIGJlIGV4dHJhIGVmZm9ydDogaW4gbW9zdCBjYXNlcywKPiArICB0aGUgZXh0cmEgdGlt
ZSBpbnZlc3RtZW50IHdpbGwgYmUgc2F2aW5nIHRpbWUgZHVyaW5nIHRoZSBjb2RlIHJldmlldyBw
cm9jZXNzLgo+ICsgIFZlcmJvc2l0eSBpcyBub3QgdGhlIGdvYWwsIGJ1dCBjbGFyaXR5IGlzLiBC
ZWZvcmUgeW91IHNlbmQgYSBsYXJnZXIgc2VyaWVzCj4gKyAgaW4gcGFydGljdWxhcjogdHJ5IGFu
ZCBwdXQgeW91cnNlbGYgaW50byB0aGUgcG9zaXRpb24gb2YgYSBjb2RlIHJldmlld2VyIGFuZAo+
ICsgIHRyeSB0byBpZGVudGlmeSBpbmZvcm1hdGlvbiB0aGF0IGhlbHBzIGEgY29kZSByZXZpZXdl
ciBmb2xsb3cgdGhlIHBhdGNoCj4gKyAgc2VyaWVzLgo+ICsqIEluIGNhc2VzIHdoZXJlIGNoYW5n
ZXMgbmVlZCB0byBiZSBiYWNrLXBvcnRlZCB0byBvbGRlciByZWxlYXNlcywgbW92aW5nCj4gKyAg
Z2VuZXJhbCBjbGVhbnVwcyBsYXN0IGlzIG9mdGVuIHByZWZlcmFibGU6IGluIHN1Y2ggY2FzZXMg
dGhlICoqc3Vic3RhbmNlIG9mCj4gKyAgdGhlIGNoYW5nZSoqIGlzIGJhY2stcG9ydGVkLCB3aGVy
ZWFzIGdlbmVyYWwgY2xlYW51cHMgYW5kIGltcHJvdmVtZW50cyBhcmUKPiArICBub3QuCj4gKwo+
ICsqKkV4YW1wbGU6KioKPiArKiBbW1BBVENIIHYzIDAwLzE4XSBWTSBmb3JraW5nXVtIXSBpcyBh
IGNvbXBsZXggcGF0Y2ggc2VyaWVzIHdpdGggYW4gZXhlbXBsYXJ5Cj4gKyAgY292ZXIgbGV0dGVy
LiBOb3RhYmx5LCBpdCBjb250YWlucyB0aGUgZm9sbG93aW5nIGVsZW1lbnRzCj4gKyAgKiBJdCBw
cm92aWRlcyBhIGRlc2NyaXB0aW9uIG9mIHRoZSBkZXNpZ24gZ29hbHMgYW5kIGRldGFpbGVkIGRl
c2NyaXB0aW9uCj4gKyAgICBvZiB0aGUgc3RlcHMgcmVxdWlyZWQgdG8gZm9yayBhIFZNLgo+ICsg
ICogQSBkZXNjcmlwdGlvbiBvZiBjaGFuZ2VzIHRvIHRoZSB1c2VyIGludGVyZmFjZQo+ICsgICog
SXQgY29udGFpbnMgc29tZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGVzdCBzdGF0dXMgb2YgdGhl
IHNlcmllcyBpbmNsdWRpbmcKPiArICAgIHNvbWUgcGVyZm9ybWFuY2UgaW5mb3JtYXRpb24uCj4g
KyAgKiBJdCBtYXBzIHRoZSBzZXJpZXMgb250byB0aGUgY2F0ZWdvcmllcyBsaXN0ZWQgYWJvdmUu
IEFzIGV4cGVjdGVkLCBub3QKPiArICAgIGFsbCBjYXRlZ29yaWVzIGFyZSB1c2VkIGluIHRoaXMg
Y2FzZS4gSG93ZXZlciwgdGhlIHNlcmllcyBkb2VzIGNvbnRhaW4KPiArICAgIGVsZW1lbnRzIG9m
ICoqMSoqIChpbiB0aGlzIGNhc2UgcHJlcGFyYXRpb24gdG8gZW5hYmxlIHRoZSBmdW5jdGlvbmFs
aXR5KSwKPiArICAgICoqMioqIHJlb3JnYW5pc2F0aW9ucyBhbmQgb3RoZXIgbm9uLWZ1bmN0aW9u
YWwgY2hhbmdlcyB0aGF0IGVuYWJsZSB0aGUKPiArICAgIHJlc3Qgb2YgdGhlIHNlcmllcyBhbmQg
Kio0KiogdGhlIHN1YnN0YW5jZSBvZiB0aGUgc2VyaWVzIHdpdGggYWRkaXRpb25hbAo+ICsgICAg
aW5mb3JtYXRpb24gdG8gbWFrZSBpdCBlYXNpZXIgZm9yIHRoZSByZXZpZXdlciB0byBwYXJzZSB0
aGUgc2VyaWVzLgo+ICsKPiArIyMjIFdvcmtmbG93IGZyb20gYW4gQXV0aG9yJ3MgUGVyc3BlY3Rp
dmUKPiArCj4gK1doZW4gY29kZSBhdXRob3JzIHJlY2VpdmUgZmVlZGJhY2sgb24gdGhlaXIgcGF0
Y2hlcywgdGhleSB0eXBpY2FsbHkgZmlyc3QgdHJ5Cj4gK3RvIGNsYXJpZnkgZmVlZGJhY2sgdGhl
eSBkbyBub3QgdW5kZXJzdGFuZC4gRm9yIHNtYWxsZXIgcGF0Y2hlcyBvciBwYXRjaCBzZXJpZXMK
PiAraXQgbWFrZXMgc2Vuc2UgdG8gd2FpdCB1bnRpbCByZWNlaXZpbmcgZmVlZGJhY2sgb24gdGhl
IGVudGlyZSBzZXJpZXMgYmVmb3JlCj4gK3NlbmRpbmcgb3V0IGEgbmV3IHZlcnNpb24gYWRkcmVz
c2luZyB0aGUgY2hhbmdlcy4gRm9yIGxhcmdlciBzZXJpZXMsIGl0IG1heQo+ICttYWtlIHNlbnNl
IHRvIHNlbmQgb3V0IGEgbmV3IHJldmlzaW9uIGVhcmxpZXIuCj4gKwo+ICtBcyBhIHJldmlld2Vy
LCB5b3UgbmVlZCBzb21lIHN5c3RlbSB0aGF0IGhlbHBzIGVuc3VyZSB0aGF0IHlvdSBhZGRyZXNz
IGFsbAo+ICtyZXZpZXcgY29tbWVudHMuIFRoaXMgY2FuIGJlIHRlZGlvdXMgd2hlbiB0cnlpbmcg
dG8gbWFwIGEgaGllcmFyY2hpY2FsIGUtbWFpbAo+ICt0aHJlYWQgb250byBhIGNvZGUtYmFzZS4g
RGlmZmVyZW50IHBlb3BsZSB1c2UgZGlmZmVyZW50IHRlY2huaXF1ZXMgZnJvbSB1c2luZwo+ICsq
IEluLWNvZGUgVE9ETyBzdGF0ZW1lbnRzIHdpdGggY29tbWVudCBzbmlwcGV0cyBjb3BpZWQgaW50
byB0aGUgY29kZQo+ICsqIFRvIGtlZXBpbmcgYSBzZXBhcmF0ZSBUT0RPIGxpc3QKPiArKiBUbyBw
cmludGluZyBvdXQgdGhlIHJldmlldyBjb252ZXJzYXRpb24gdHJlZSBhbmQgdGlja2luZyBvZmYg
d2hhdCBoYXMgYmVlbgo+ICsgIGFkZHJlc3NlZAo+ICsqIEEgY29tYmluYXRpb24gb2YgdGhlIGFi
b3ZlCj4gKwo+ICsjIyMgPGEgbmFtZT0icHJvYmxlbXMiPjwvYT5Qcm9ibGVtYXRpYyBQYXRjaCBS
ZXZpZXdzCj4gKwo+ICtBIHR5cGljYWwgd2F0ZXJmYWxsIHNvZnR3YXJlIGRldmVsb3BtZW50IHBy
b2Nlc3MgaXMgc2VxdWVudGlhbCB3aXRoIHRoZQo+ICtmb2xsb3dpbmcgc3RlcHM6IGRlZmluZSBy
ZXF1aXJlbWVudHMsIGFuYWx5c2UsIGRlc2lnbiwgY29kZSwgdGVzdCBhbmQgZGVwbG95Lgo+ICtQ
cm9ibGVtcyB1bmNvdmVyZWQgYnkgY29kZSByZXZpZXcgb3IgdGVzdGluZyBhdCBzdWNoIGEgbGF0
ZSBzdGFnZSBjYW4gY2F1c2UKPiArY29zdGx5IHJlZGVzaWduIGFuZCBkZWxheXMuIFRoZSBwcmlu
Y2lwbGUgb2YgKipbU2hpZnQgTGVmdF1bRF0qKiBpcyB0byB0YWtlIGEKPiArdGFzayB0aGF0IGlz
IHRyYWRpdGlvbmFsbHkgcGVyZm9ybWVkIGF0IGEgbGF0ZSBzdGFnZSBpbiB0aGUgcHJvY2VzcyBh
bmQgcGVyZm9ybQo+ICt0aGF0IHRhc2sgYXQgZWFybGllciBzdGFnZXMuIFRoZSBnb2FsIGlzIHRv
IHNhdmUgdGltZSBieSBhdm9pZGluZyByZWZhY3RvcmluZy4KPiArCj4gK1R5cGljYWxseSwgcHJv
YmxlbWF0aWMgcGF0Y2ggcmV2aWV3cyB1bmNvdmVyIGlzc3VlcyBzdWNoIGFzIHdyb25nIG9yIG1p
c3NlZAo+ICthc3N1bXB0aW9ucywgYSBwcm9ibGVtYXRpYyBhcmNoaXRlY3R1cmUgb3IgZGVzaWdu
LCBvciBvdGhlciBidWdzIHRoYXQgcmVxdWlyZQo+ICtzaWduaWZpY2FudCByZS1pbXBsZW1lbnRh
dGlvbiBvZiBhIHBhdGNoIHNlcmllcyB0byBmaXggdGhlIGlzc3VlLgo+ICsKPiArVGhlIHByaW5j
aXBsZSBvZiAqKlNoaWZ0IExlZnQqKiBhbHNvIGFwcGxpZXMgaW4gY29kZSByZXZpZXdzLiBMZXQn
cyBhc3N1bWUgYQo+ICtzZXJpZXMgaGFzIGEgbWFqb3IgZmxhdzogaWRlYWxseSwgdGhpcyBmbGF3
IHdvdWxkIGJlIHBpY2tlZCB1cCBpbiB0aGUgKipmaXJzdAo+ICtvciBzZWNvbmQgaXRlcmF0aW9u
Kiogb2YgdGhlIGNvZGUgcmV2aWV3LiBBcyBzaWduaWZpY2FudCBwYXJ0cyBvZiB0aGUgY29kZSBt
YXkKPiAraGF2ZSB0byBiZSByZS13cml0dGVuLCBpdCBkb2VzIG5vdCBtYWtlIHNlbnNlIGZvciBy
ZXZpZXdlcnMgdG8gaGlnaGxpZ2h0IG1pbm9yCj4gK2lzc3VlcyAoc3VjaCBhcyBzdHlsZSBpc3N1
ZXMpIHVudGlsIG1ham9yIGZsYXdzIGhhdmUgYmVlbiBhZGRyZXNzZWQgb2YgdGhlCj4gK2FmZmVj
dGVkIHBhcnQgb2YgYSBwYXRjaCBzZXJpZXMuIEluIHN1Y2ggY2FzZXMsIHByb3ZpZGluZyBmZWVk
YmFjayBvbiBtaW5vcgo+ICtpc3N1ZXMgcmV2aWV3ZXJzIGNhdXNlIHRoZSBjb2RlIGF1dGhvciBh
bmQgdGhlbXNlbHZlcyBleHRyYSB3b3JrIGJ5IGFza2luZyBmb3IKPiArY2hhbmdlcyB0byBjb2Rl
LCB3aGljaCB1bHRpbWF0ZWx5IG1heSBiZSBjaGFuZ2VkIGxhdGVyLgo+ICsKPiArVG8gbWFrZSBp
dCBwb3NzaWJsZSBmb3IgY29kZSByZXZpZXdlcnMgdG8gaWRlbnRpZnkgbWFqb3IgaXNzdWVzIGVh
cmx5LCBpdCBpcwo+ICtpbXBvcnRhbnQgZm9yIGNvZGUtYXV0aG9ycyB0byBoaWdobGlnaHQgcG9z
c2libGUgaXNzdWVzIGluIGEgY292ZXIgbGV0dGVyIGFuZAo+ICt0byBzdHJ1Y3R1cmUgYSBwYXRj
aCBzZXJpZXMgaW4gc3VjaCBhIHdheSB0aGF0IG1ha2VzIGl0IGVhc3kgZm9yIHJldmlld2VycyB0
bwo+ICtzZXBhcmF0ZSBkaWZmaWN1bHQgYW5kIGVhc3kgcG9ydGlvbnMgb2YgYSBwYXRjaCBzZXJp
ZXMuIFRoaXMgd2lsbCBlbmFibGUKPiArcmV2aWV3ZXJzIHRvIHByb2dyZXNzIHVuY29udHJvdmVy
c2lhbCBwb3J0aW9ucyBvZiBhIHBhdGNoIGluZGVwZW5kZW50bHkgZnJvbQo+ICtjb250cm92ZXJz
aWFsIG9uZXMuCj4gKwo+ICsjIyMgUmV2aWV3aW5nIGZvciBQYXRjaCBBdXRob3JzCj4gKwo+ICtU
aGUgZm9sbG93aW5nIHByZXNlbnRhdGlvbiBieSBHZW9yZ2UgRHVubGFwLCBwcm92aWRlcyBhbiBl
eGNlbGxlbnQgb3ZlcnZpZXcgb24KPiAraG93IHdlIGRvIGNvZGUgcmV2aWV3cywgc3BlY2lmaWNh
bGx5IHRhcmdldGluZyBub24tbWFpbnRhaW5lcnMuCj4gKwo+ICtBcyBhIGNvbW11bml0eSwgd2Ug
d291bGQgbG92ZSB0byBoYXZlIG1vcmUgaGVscCByZXZpZXdpbmcsIGluY2x1ZGluZyBmcm9tICoq
bmV3Cj4gK2NvbW11bml0eSBtZW1iZXJzKiouIEJ1dCBtYW55IHBlb3BsZQo+ICsqIGRvIG5vdCBr
bm93IHdoZXJlIHRvIHN0YXJ0LCBvcgo+ICsqIGJlbGlldmUgdGhhdCB0aGVpciByZXZpZXcgd291
bGQgbm90IGNvbnRyaWJ1dGUgbXVjaCwgb3IKPiArKiBtYXkgZmVlbCBpbnRpbWlkYXRlZCByZXZp
ZXdpbmcgdGhlIGNvZGUgb2YgbW9yZSBlc3RhYmxpc2hlZCBjb21tdW5pdHkgbWVtYmVycwo+ICsK
PiArVGhlIHByZXNlbnRhdGlvbiBkZW1vbnN0cmF0ZXMgdGhhdCB5b3UgZG8gbm90IG5lZWQgdG8g
d29ycnkgYWJvdXQgYW55IG9mIHRoZXNlCj4gK2NvbmNlcm5zLiBJbiBhZGRpdGlvbiwgcmV2aWV3
aW5nIG90aGVyIHBlb3BsZSdzIHBhdGNoZXMgaGVscHMgeW91Cj4gKyogd3JpdGUgYmV0dGVyIHBh
dGNoZXMgYW5kIGV4cGVyaWVuY2UgdGhlIGNvZGUgcmV2aWV3IHByb2Nlc3MgZnJvbSB0aGUgb3Ro
ZXIKPiArICBzaWRlCj4gKyogYW5kIGJ1aWxkIG1vcmUgaW5mbHVlbmNlIHdpdGhpbiB0aGUgY29t
bXVuaXR5IG92ZXIgdGltZQo+ICsKPiArVGh1cywgd2UgcmVjb21tZW5kIHN0cm9uZ2x5IHRoYXQg
KipwYXRjaCBhdXRob3JzKiogcmVhZCB0aGUgd2F0Y2ggdGhlIHJlY29yZGluZwoKcy9yZWFkIHRo
ZS8vCgo+ICtvciByZWFkIHRoZSBzbGlkZXM6Cj4gKyogW1BhdGNoIFJldmlldyBmb3IgTm9uLU1h
aW50YWluZXJzIHNsaWRlc11bRl0KPiArKiBbUGF0Y2ggUmV2aWV3IGZvciBOb24tTWFpbnRhaW5l
cnMgcmVjb3JkaW5nIC0gMjAiXVtHXQo+ICsKPiArWzFdOiBjb21tdW5pY2F0aW9uLXByYWN0aWNl
Lm1kCj4gK1syXTogcmVzb2x2aW5nLWRpc2FncmVlbWVudC5tZAo+ICtbM106IGh0dHBzOi8vd2lr
aS54ZW5wcm9qZWN0Lm9yZy93aWtpL1N1Ym1pdHRpbmdfWGVuX1Byb2plY3RfUGF0Y2hlcwo+ICtb
NF06IGh0dHBzOi8vd2lraS54ZW5wcm9qZWN0Lm9yZy93aWtpL01hbmFnaW5nX1hlbl9QYXRjaGVz
X3dpdGhfR2l0Cj4gK1s1XTogaHR0cHM6Ly94ZW5iaXRzLnhlbnByb2plY3Qub3JnL2dpdHdlYi8/
cD14ZW4uZ2l0O2E9YmxvYjtmPUNPRElOR19TVFlMRQo+ICtbNl06IGh0dHBzOi8veGVuYml0cy54
ZW5wcm9qZWN0Lm9yZy9naXR3ZWIvP3A9eGVuLmdpdDthPWJsb2I7Zj10b29scy9saWJ4bC9DT0RJ
TkdfU1RZTEUKPiArWzddOiBodHRwczovL3hlbmJpdHMueGVucHJvamVjdC5vcmcvZ2l0d2ViLz9w
PXhlbi5naXQ7YT10cmVlO2Y9ZG9jcwo+ICtbOF06IGh0dHBzOi8veGVuYml0cy54ZW5wcm9qZWN0
Lm9yZy9naXR3ZWIvP3A9eGVuLmdpdDthPWJsb2I7Zj1TVVBQT1JULm1kCj4gK1s5XTogaHR0cHM6
Ly94ZW5iaXRzLnhlbnByb2plY3Qub3JnL2dpdHdlYi8/cD14ZW4uZ2l0O2E9dHJlZTtmPXRvb2xz
L3Rlc3RzCj4gK1tBXTogaHR0cHM6Ly94ZW5iaXRzLnhlbnByb2plY3Qub3JnL2dpdHdlYi8/cD14
ZW4uZ2l0O2E9dHJlZTtmPXhlbi90ZXN0Cj4gK1tCXTogaHR0cHM6Ly9naXRsYWIuY29tL3hlbi1w
cm9qZWN0L3hlbi9waXBlbGluZXMKPiArW0NdOiBodHRwczovL3hlbmJpdHMueGVucHJvamVjdC5v
cmcvZG9jcy94dGYvCj4gK1tEXTogaHR0cHM6Ly94ZW5iaXRzLnhlbnByb2plY3Qub3JnL2dpdHdl
Yi8/cD1vc3N0ZXN0LmdpdDthPWJsb2I7Zj1SRUFETUUKPiArW0VdOiBodHRwczovL3dpa2kueGVu
cHJvamVjdC5vcmcvd2lraS9TdWJtaXR0aW5nX1hlbl9Qcm9qZWN0X1BhdGNoZXMKPiArW0RdOiBo
dHRwczovL2Rldm9wZWRpYS5vcmcvc2hpZnQtbGVmdAo+ICtbRl06IGh0dHBzOi8vd3d3LnNsaWRl
c2hhcmUubmV0L3hlbl9jb21fbWdyL3hwZGRzMTkta2V5bm90ZS1wYXRjaC1yZXZpZXctZm9yLW5v
bm1haW50YWluZXJzLWdlb3JnZS1kdW5sYXAtY2l0cml4LXN5c3RlbXMtdWstbHRkCj4gK1tHXTog
aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1laFp2Qm1yTFJ3Zwo+ICtbSF06IGh0dHBz
Oi8vbGlzdHMueGVucHJvamVjdC5vcmcvYXJjaGl2ZXMvaHRtbC94ZW4tZGV2ZWwvMjAxOS0xMi90
aHJlYWRzLmh0bWwjMDIwOTcKCkp1ZXJnZW4KCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3Rz
LnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0
aW5mby94ZW4tZGV2ZWw=

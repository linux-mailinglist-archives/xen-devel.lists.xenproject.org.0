Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 70C9268849
	for <lists+xen-devel@lfdr.de>; Mon, 15 Jul 2019 13:40:39 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1hmzIl-00074H-LD; Mon, 15 Jul 2019 11:37:51 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=TQSl=VM=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1hmzIk-00073n-B3
 for xen-devel@lists.xenproject.org; Mon, 15 Jul 2019 11:37:50 +0000
X-Inumbo-ID: f6e2d254-a6f4-11e9-8980-bc764e045a96
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id f6e2d254-a6f4-11e9-8980-bc764e045a96;
 Mon, 15 Jul 2019 11:37:46 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 994F2AC58;
 Mon, 15 Jul 2019 11:37:44 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: xen-devel@lists.xenproject.org, x86@kernel.org,
 linux-kernel@vger.kernel.org
Date: Mon, 15 Jul 2019 13:37:38 +0200
Message-Id: <20190715113739.17694-2-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190715113739.17694-1-jgross@suse.com>
References: <20190715113739.17694-1-jgross@suse.com>
Subject: [Xen-devel] [PATCH 1/2] x86/xen: remove 32-bit Xen PV guest support
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>, Ingo Molnar <mingo@redhat.com>,
 Borislav Petkov <bp@alien8.de>, Andy Lutomirski <luto@kernel.org>,
 "H. Peter Anvin" <hpa@zytor.com>, Thomas Gleixner <tglx@linutronix.de>,
 Boris Ostrovsky <boris.ostrovsky@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

WGVuIGlzIHJlcXVpcmluZyA2NC1iaXQgbWFjaGluZXMgdG9kYXkuIFRoZXJlIGlzIG5vIG5lZWQg
dG8gY2FycnkgdGhlCmJ1cmRlbiBvZiAzMi1iaXQgUFYgZ3Vlc3Qgc3VwcG9ydCBpbiB0aGUga2Vy
bmVsIGFueSBsb25nZXIsIGFzIG5ldwpndWVzdHMgY2FuIGJlIGVpdGhlciBIVk0gb3IgUFZILCBv
ciB0aGV5IGNhbiB1c2UgYSA2NCBiaXQga2VybmVsLgoKUmVtb3ZlIHRoZSAzMi1iaXQgWGVuIFBW
IHN1cHBvcnQgZnJvbSB0aGUga2VybmVsLgoKU2lnbmVkLW9mZi1ieTogSnVlcmdlbiBHcm9zcyA8
amdyb3NzQHN1c2UuY29tPgotLS0KIGFyY2gveDg2L2VudHJ5L2VudHJ5XzMyLlMgICAgICB8ICA5
MyAtLS0tLS0tLS0tLS0KIGFyY2gveDg2L2luY2x1ZGUvYXNtL3Byb3RvLmggICB8ICAgMiArLQog
YXJjaC94ODYvaW5jbHVkZS9hc20vc2VnbWVudC5oIHwgICAyICstCiBhcmNoL3g4Ni9pbmNsdWRl
L2FzbS90cmFwcy5oICAgfCAgIDIgKy0KIGFyY2gveDg2L3hlbi9LY29uZmlnICAgICAgICAgICB8
ICAgMyArLQogYXJjaC94ODYveGVuL01ha2VmaWxlICAgICAgICAgIHwgICA0ICstCiBhcmNoL3g4
Ni94ZW4vYXBpYy5jICAgICAgICAgICAgfCAgMTcgLS0tCiBhcmNoL3g4Ni94ZW4vZW5saWdodGVu
X3B2LmMgICAgfCAgNDUgKy0tLS0tCiBhcmNoL3g4Ni94ZW4vbW11X3B2LmMgICAgICAgICAgfCAz
MjYgKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGFyY2gveDg2L3hl
bi9wMm0uYyAgICAgICAgICAgICB8ICAgNCAtCiBhcmNoL3g4Ni94ZW4vc2V0dXAuYyAgICAgICAg
ICAgfCAgNDQgKy0tLS0tCiBhcmNoL3g4Ni94ZW4vc21wX3B2LmMgICAgICAgICAgfCAgMTkgKy0t
CiBhcmNoL3g4Ni94ZW4veGVuLWFzbS5TICAgICAgICAgfCAgMTQgLS0KIGFyY2gveDg2L3hlbi94
ZW4tYXNtXzMyLlMgICAgICB8IDIwNyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogYXJjaC94
ODYveGVuL3hlbi1oZWFkLlMgICAgICAgIHwgICA2IC0KIGFyY2gveDg2L3hlbi94ZW4tb3BzLmgg
ICAgICAgICB8ICAgNSAtCiBkcml2ZXJzL3hlbi9LY29uZmlnICAgICAgICAgICAgfCAgIDQgKy0K
IDE3IGZpbGVzIGNoYW5nZWQsIDQyIGluc2VydGlvbnMoKyksIDc1NSBkZWxldGlvbnMoLSkKIGRl
bGV0ZSBtb2RlIDEwMDY0NCBhcmNoL3g4Ni94ZW4veGVuLWFzbV8zMi5TCgpkaWZmIC0tZ2l0IGEv
YXJjaC94ODYvZW50cnkvZW50cnlfMzIuUyBiL2FyY2gveDg2L2VudHJ5L2VudHJ5XzMyLlMKaW5k
ZXggN2IyMzQzMWJlNWNiLi5kNDQ2NGFmMjgyMTIgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2VudHJ5
L2VudHJ5XzMyLlMKKysrIGIvYXJjaC94ODYvZW50cnkvZW50cnlfMzIuUwpAQCAtNzg3LDE2ICs3
ODcsNiBAQCBHTE9CQUwoX19iZWdpbl9TWVNFTlRFUl9zaW5nbGVzdGVwX3JlZ2lvbikKICAqIHdp
bGwgaWdub3JlIGFsbCBvZiB0aGUgc2luZ2xlLXN0ZXAgdHJhcHMgZ2VuZXJhdGVkIGluIHRoaXMg
cmFuZ2UuCiAgKi8KIAotI2lmZGVmIENPTkZJR19YRU5fUFYKLS8qCi0gKiBYZW4gZG9lc24ndCBz
ZXQgJWVzcCB0byBiZSBwcmVjaXNlbHkgd2hhdCB0aGUgbm9ybWFsIFNZU0VOVEVSCi0gKiBlbnRy
eSBwb2ludCBleHBlY3RzLCBzbyBmaXggaXQgdXAgYmVmb3JlIHVzaW5nIHRoZSBub3JtYWwgcGF0
aC4KLSAqLwotRU5UUlkoeGVuX3N5c2VudGVyX3RhcmdldCkKLQlhZGRsCSQ1KjQsICVlc3AJCQkv
KiByZW1vdmUgeGVuLXByb3ZpZGVkIGZyYW1lICovCi0Jam1wCS5Mc3lzZW50ZXJfcGFzdF9lc3AK
LSNlbmRpZgotCiAvKgogICogMzItYml0IFNZU0VOVEVSIGVudHJ5LgogICoKQEAgLTEyNDksODkg
KzEyMzksNiBAQCBFTlRSWShzcHVyaW91c19pbnRlcnJ1cHRfYnVnKQogCWptcAljb21tb25fZXhj
ZXB0aW9uCiBFTkQoc3B1cmlvdXNfaW50ZXJydXB0X2J1ZykKIAotI2lmZGVmIENPTkZJR19YRU5f
UFYKLUVOVFJZKHhlbl9oeXBlcnZpc29yX2NhbGxiYWNrKQotCXB1c2hsCSQtMQkJCQkvKiBvcmln
X2F4ID0gLTEgPT4gbm90IGEgc3lzdGVtIGNhbGwgKi8KLQlTQVZFX0FMTAotCUVOQ09ERV9GUkFN
RV9QT0lOVEVSCi0JVFJBQ0VfSVJRU19PRkYKLQotCS8qCi0JICogQ2hlY2sgdG8gc2VlIGlmIHdl
IGdvdCB0aGUgZXZlbnQgaW4gdGhlIGNyaXRpY2FsCi0JICogcmVnaW9uIGluIHhlbl9pcmV0X2Rp
cmVjdCwgYWZ0ZXIgd2UndmUgcmVlbmFibGVkCi0JICogZXZlbnRzIGFuZCBjaGVja2VkIGZvciBw
ZW5kaW5nIGV2ZW50cy4gIFRoaXMgc2ltdWxhdGVzCi0JICogaXJldCBpbnN0cnVjdGlvbidzIGJl
aGF2aW91ciB3aGVyZSBpdCBkZWxpdmVycyBhCi0JICogcGVuZGluZyBpbnRlcnJ1cHQgd2hlbiBl
bmFibGluZyBpbnRlcnJ1cHRzOgotCSAqLwotCW1vdmwJUFRfRUlQKCVlc3ApLCAlZWF4Ci0JY21w
bAkkeGVuX2lyZXRfc3RhcnRfY3JpdCwgJWVheAotCWpiCTFmCi0JY21wbAkkeGVuX2lyZXRfZW5k
X2NyaXQsICVlYXgKLQlqYWUJMWYKLQotCWptcAl4ZW5faXJldF9jcml0X2ZpeHVwCi0KLUVOVFJZ
KHhlbl9kb191cGNhbGwpCi0xOgltb3YJJWVzcCwgJWVheAotCWNhbGwJeGVuX2V2dGNobl9kb191
cGNhbGwKLSNpZm5kZWYgQ09ORklHX1BSRUVNUFQKLQljYWxsCXhlbl9tYXliZV9wcmVlbXB0X2hj
YWxsCi0jZW5kaWYKLQlqbXAJcmV0X2Zyb21faW50cgotRU5EUFJPQyh4ZW5faHlwZXJ2aXNvcl9j
YWxsYmFjaykKLQotLyoKLSAqIEh5cGVydmlzb3IgdXNlcyB0aGlzIGZvciBhcHBsaWNhdGlvbiBm
YXVsdHMgd2hpbGUgaXQgZXhlY3V0ZXMuCi0gKiBXZSBnZXQgaGVyZSBmb3IgdHdvIHJlYXNvbnM6
Ci0gKiAgMS4gRmF1bHQgd2hpbGUgcmVsb2FkaW5nIERTLCBFUywgRlMgb3IgR1MKLSAqICAyLiBG
YXVsdCB3aGlsZSBleGVjdXRpbmcgSVJFVAotICogQ2F0ZWdvcnkgMSB3ZSBmaXggdXAgYnkgcmVh
dHRlbXB0aW5nIHRoZSBsb2FkLCBhbmQgemVyb2luZyB0aGUgc2VnbWVudAotICogcmVnaXN0ZXIg
aWYgdGhlIGxvYWQgZmFpbHMuCi0gKiBDYXRlZ29yeSAyIHdlIGZpeCB1cCBieSBqdW1waW5nIHRv
IGRvX2lyZXRfZXJyb3IuIFdlIGNhbm5vdCB1c2UgdGhlCi0gKiBub3JtYWwgTGludXggcmV0dXJu
IHBhdGggaW4gdGhpcyBjYXNlIGJlY2F1c2UgaWYgd2UgdXNlIHRoZSBJUkVUIGh5cGVyY2FsbAot
ICogdG8gcG9wIHRoZSBzdGFjayBmcmFtZSB3ZSBlbmQgdXAgaW4gYW4gaW5maW5pdGUgbG9vcCBv
ZiBmYWlsc2FmZSBjYWxsYmFja3MuCi0gKiBXZSBkaXN0aW5ndWlzaCBiZXR3ZWVuIGNhdGVnb3Jp
ZXMgYnkgbWFpbnRhaW5pbmcgYSBzdGF0dXMgdmFsdWUgaW4gRUFYLgotICovCi1FTlRSWSh4ZW5f
ZmFpbHNhZmVfY2FsbGJhY2spCi0JcHVzaGwJJWVheAotCW1vdmwJJDEsICVlYXgKLTE6CW1vdgk0
KCVlc3ApLCAlZHMKLTI6CW1vdgk4KCVlc3ApLCAlZXMKLTM6CW1vdgkxMiglZXNwKSwgJWZzCi00
Ogltb3YJMTYoJWVzcCksICVncwotCS8qIEVBWCA9PSAwID0+IENhdGVnb3J5IDEgKEJhZCBzZWdt
ZW50KQotCSAgIEVBWCAhPSAwID0+IENhdGVnb3J5IDIgKEJhZCBJUkVUKSAqLwotCXRlc3RsCSVl
YXgsICVlYXgKLQlwb3BsCSVlYXgKLQlsZWEJMTYoJWVzcCksICVlc3AKLQlqegk1ZgotCWptcAlp
cmV0X2V4YwotNToJcHVzaGwJJC0xCQkJCS8qIG9yaWdfYXggPSAtMSA9PiBub3QgYSBzeXN0ZW0g
Y2FsbCAqLwotCVNBVkVfQUxMCi0JRU5DT0RFX0ZSQU1FX1BPSU5URVIKLQlqbXAJcmV0X2Zyb21f
ZXhjZXB0aW9uCi0KLS5zZWN0aW9uIC5maXh1cCwgImF4IgotNjoJeG9ybAklZWF4LCAlZWF4Ci0J
bW92bAklZWF4LCA0KCVlc3ApCi0Jam1wCTFiCi03Ogl4b3JsCSVlYXgsICVlYXgKLQltb3ZsCSVl
YXgsIDgoJWVzcCkKLQlqbXAJMmIKLTg6CXhvcmwJJWVheCwgJWVheAotCW1vdmwJJWVheCwgMTIo
JWVzcCkKLQlqbXAJM2IKLTk6CXhvcmwJJWVheCwgJWVheAotCW1vdmwJJWVheCwgMTYoJWVzcCkK
LQlqbXAJNGIKLS5wcmV2aW91cwotCV9BU01fRVhUQUJMRSgxYiwgNmIpCi0JX0FTTV9FWFRBQkxF
KDJiLCA3YikKLQlfQVNNX0VYVEFCTEUoM2IsIDhiKQotCV9BU01fRVhUQUJMRSg0YiwgOWIpCi1F
TkRQUk9DKHhlbl9mYWlsc2FmZV9jYWxsYmFjaykKLSNlbmRpZiAvKiBDT05GSUdfWEVOX1BWICov
Ci0KICNpZmRlZiBDT05GSUdfWEVOX1BWSFZNCiBCVUlMRF9JTlRFUlJVUFQzKHhlbl9odm1fY2Fs
bGJhY2tfdmVjdG9yLCBIWVBFUlZJU09SX0NBTExCQUNLX1ZFQ1RPUiwKIAkJIHhlbl9ldnRjaG5f
ZG9fdXBjYWxsKQpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcHJvdG8uaCBiL2Fy
Y2gveDg2L2luY2x1ZGUvYXNtL3Byb3RvLmgKaW5kZXggNmU4MTc4OGEzMGMxLi5lNWExM2ExMzhi
MDEgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3Byb3RvLmgKKysrIGIvYXJjaC94
ODYvaW5jbHVkZS9hc20vcHJvdG8uaApAQCAtMjUsNyArMjUsNyBAQCB2b2lkIGVudHJ5X1NZU0VO
VEVSX2NvbXBhdCh2b2lkKTsKIHZvaWQgX19lbmRfZW50cnlfU1lTRU5URVJfY29tcGF0KHZvaWQp
Owogdm9pZCBlbnRyeV9TWVNDQUxMX2NvbXBhdCh2b2lkKTsKIHZvaWQgZW50cnlfSU5UODBfY29t
cGF0KHZvaWQpOwotI2lmIGRlZmluZWQoQ09ORklHX1g4Nl82NCkgJiYgZGVmaW5lZChDT05GSUdf
WEVOX1BWKQorI2lmIGRlZmluZWQoQ09ORklHX1hFTl9QVikKIHZvaWQgeGVuX2VudHJ5X0lOVDgw
X2NvbXBhdCh2b2lkKTsKICNlbmRpZgogI2VuZGlmCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNs
dWRlL2FzbS9zZWdtZW50LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9zZWdtZW50LmgKaW5kZXgg
YWMzODkyOTIwNDE5Li43ZjQ4NWZhZGZlNmUgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUv
YXNtL3NlZ21lbnQuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9zZWdtZW50LmgKQEAgLTI4
OSw3ICsyODksNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgdmRzb19yZWFkX2NwdW5vZGUodW5zaWdu
ZWQgKmNwdSwgdW5zaWduZWQgKm5vZGUpCiBleHRlcm4gY29uc3QgY2hhciBlYXJseV9pZHRfaGFu
ZGxlcl9hcnJheVtOVU1fRVhDRVBUSU9OX1ZFQ1RPUlNdW0VBUkxZX0lEVF9IQU5ETEVSX1NJWkVd
OwogZXh0ZXJuIHZvaWQgZWFybHlfaWdub3JlX2lycSh2b2lkKTsKIAotI2lmIGRlZmluZWQoQ09O
RklHX1g4Nl82NCkgJiYgZGVmaW5lZChDT05GSUdfWEVOX1BWKQorI2lmIGRlZmluZWQoQ09ORklH
X1hFTl9QVikKIGV4dGVybiBjb25zdCBjaGFyIHhlbl9lYXJseV9pZHRfaGFuZGxlcl9hcnJheVtO
VU1fRVhDRVBUSU9OX1ZFQ1RPUlNdW1hFTl9FQVJMWV9JRFRfSEFORExFUl9TSVpFXTsKICNlbmRp
ZgogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS90cmFwcy5oIGIvYXJjaC94ODYv
aW5jbHVkZS9hc20vdHJhcHMuaAppbmRleCA3ZDZmM2YzZmFkNzguLjJiMTQyZTU4NjU3ZSAxMDA2
NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdHJhcHMuaAorKysgYi9hcmNoL3g4Ni9pbmNs
dWRlL2FzbS90cmFwcy5oCkBAIC0zNiw3ICszNiw3IEBAIGFzbWxpbmthZ2Ugdm9pZCBtYWNoaW5l
X2NoZWNrKHZvaWQpOwogI2VuZGlmIC8qIENPTkZJR19YODZfTUNFICovCiBhc21saW5rYWdlIHZv
aWQgc2ltZF9jb3Byb2Nlc3Nvcl9lcnJvcih2b2lkKTsKIAotI2lmIGRlZmluZWQoQ09ORklHX1g4
Nl82NCkgJiYgZGVmaW5lZChDT05GSUdfWEVOX1BWKQorI2lmIGRlZmluZWQoQ09ORklHX1hFTl9Q
VikKIGFzbWxpbmthZ2Ugdm9pZCB4ZW5fZGl2aWRlX2Vycm9yKHZvaWQpOwogYXNtbGlua2FnZSB2
b2lkIHhlbl94ZW5ubWkodm9pZCk7CiBhc21saW5rYWdlIHZvaWQgeGVuX3hlbmRlYnVnKHZvaWQp
OwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYveGVuL0tjb25maWcgYi9hcmNoL3g4Ni94ZW4vS2NvbmZp
ZwppbmRleCBlMDdhYmVmZDNkMjYuLmRiZDdjZDM4YjkxNCAxMDA2NDQKLS0tIGEvYXJjaC94ODYv
eGVuL0tjb25maWcKKysrIGIvYXJjaC94ODYveGVuL0tjb25maWcKQEAgLTE4LDYgKzE4LDcgQEAg
Y29uZmlnIFhFTl9QVgogCWJvb2wgIlhlbiBQViBndWVzdCBzdXBwb3J0IgogCWRlZmF1bHQgeQog
CWRlcGVuZHMgb24gWEVOCisJZGVwZW5kcyBvbiBYODZfNjQKIAlzZWxlY3QgUEFSQVZJUlRfWFhM
CiAJc2VsZWN0IFhFTl9IQVZFX1BWTU1VCiAJc2VsZWN0IFhFTl9IQVZFX1ZQTVUKQEAgLTQ5LDcg
KzUwLDcgQEAgY29uZmlnIFhFTl9QVkhWTV9TTVAKIAogY29uZmlnIFhFTl81MTJHQgogCWJvb2wg
IkxpbWl0IFhlbiBwdi1kb21haW4gbWVtb3J5IHRvIDUxMkdCIgotCWRlcGVuZHMgb24gWEVOX1BW
ICYmIFg4Nl82NAorCWRlcGVuZHMgb24gWEVOX1BWCiAJZGVmYXVsdCB5CiAJaGVscAogCSAgTGlt
aXQgcGFyYXZpcnR1YWxpemVkIHVzZXIgZG9tYWlucyB0byA1MTJHQiBvZiBSQU0uCmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni94ZW4vTWFrZWZpbGUgYi9hcmNoL3g4Ni94ZW4vTWFrZWZpbGUKaW5kZXgg
MDg0ZGU3N2ExMDllLi5kNDI3MzdmMzEzMDQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9NYWtl
ZmlsZQorKysgYi9hcmNoL3g4Ni94ZW4vTWFrZWZpbGUKQEAgLTEsNSArMSw1IEBACiAjIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCi1PQkpFQ1RfRklMRVNfTk9OX1NUQU5EQVJEX3hl
bi1hc21fJChCSVRTKS5vIDo9IHkKK09CSkVDVF9GSUxFU19OT05fU1RBTkRBUkRfeGVuLWFzbV82
NC5vIDo9IHkKIAogaWZkZWYgQ09ORklHX0ZVTkNUSU9OX1RSQUNFUgogIyBEbyBub3QgcHJvZmls
ZSBkZWJ1ZyBhbmQgbG93bGV2ZWwgdXRpbGl0aWVzCkBAIC0zNCw3ICszNCw3IEBAIG9iai0kKENP
TkZJR19YRU5fUFYpCQkrPSBtbXVfcHYubwogb2JqLSQoQ09ORklHX1hFTl9QVikJCSs9IGlycS5v
CiBvYmotJChDT05GSUdfWEVOX1BWKQkJKz0gbXVsdGljYWxscy5vCiBvYmotJChDT05GSUdfWEVO
X1BWKQkJKz0geGVuLWFzbS5vCi1vYmotJChDT05GSUdfWEVOX1BWKQkJKz0geGVuLWFzbV8kKEJJ
VFMpLm8KK29iai0kKENPTkZJR19YRU5fUFYpCQkrPSB4ZW4tYXNtXzY0Lm8KIAogb2JqLSQoQ09O
RklHX1hFTl9QVkgpCQkrPSBlbmxpZ2h0ZW5fcHZoLm8KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
eGVuL2FwaWMuYyBiL2FyY2gveDg2L3hlbi9hcGljLmMKaW5kZXggNWU1M2JmYmU1ODIzLi5lYTZl
OWM1NGRhOWQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9hcGljLmMKKysrIGIvYXJjaC94ODYv
eGVuL2FwaWMuYwpAQCAtNTgsMTAgKzU4LDYgQEAgc3RhdGljIHUzMiB4ZW5fYXBpY19yZWFkKHUz
MiByZWcpCiAKIAlpZiAocmVnID09IEFQSUNfTFZSKQogCQlyZXR1cm4gMHgxNDsKLSNpZmRlZiBD
T05GSUdfWDg2XzMyCi0JaWYgKHJlZyA9PSBBUElDX0xEUikKLQkJcmV0dXJuIFNFVF9BUElDX0xP
R0lDQUxfSUQoMVVMIDw8IHNtcF9wcm9jZXNzb3JfaWQoKSk7Ci0jZW5kaWYKIAlpZiAocmVnICE9
IEFQSUNfSUQpCiAJCXJldHVybiAwOwogCkBAIC0xMjcsMTQgKzEyMyw2IEBAIHN0YXRpYyBpbnQg
eGVuX3BoeXNfcGtnX2lkKGludCBpbml0aWFsX2FwaWNfaWQsIGludCBpbmRleF9tc2IpCiAJcmV0
dXJuIGluaXRpYWxfYXBpY19pZCA+PiBpbmRleF9tc2I7CiB9CiAKLSNpZmRlZiBDT05GSUdfWDg2
XzMyCi1zdGF0aWMgaW50IHhlbl94ODZfMzJfZWFybHlfbG9naWNhbF9hcGljaWQoaW50IGNwdSkK
LXsKLQkvKiBNYXRjaCB3aXRoIEFQSUNfTERSIHJlYWQuIE90aGVyd2lzZSBzZXR1cF9sb2NhbF9B
UElDIGNvbXBsYWlucy4gKi8KLQlyZXR1cm4gMSA8PCBjcHU7Ci19Ci0jZW5kaWYKLQogc3RhdGlj
IHZvaWQgeGVuX25vb3Aodm9pZCkKIHsKIH0KQEAgLTE5NywxMSArMTg1LDYgQEAgc3RhdGljIHN0
cnVjdCBhcGljIHhlbl9wdl9hcGljID0gewogCS5pY3Jfd3JpdGUgCQkJPSB4ZW5fYXBpY19pY3Jf
d3JpdGUsCiAJLndhaXRfaWNyX2lkbGUgCQkJPSB4ZW5fbm9vcCwKIAkuc2FmZV93YWl0X2ljcl9p
ZGxlIAkJPSB4ZW5fc2FmZV9hcGljX3dhaXRfaWNyX2lkbGUsCi0KLSNpZmRlZiBDT05GSUdfWDg2
XzMyCi0JLyogZ2VuZXJpY19wcm9jZXNzb3JfaW5mbyBhbmQgc2V0dXBfbG9jYWxfQVBJQy4gKi8K
LQkueDg2XzMyX2Vhcmx5X2xvZ2ljYWxfYXBpY2lkCT0geGVuX3g4Nl8zMl9lYXJseV9sb2dpY2Fs
X2FwaWNpZCwKLSNlbmRpZgogfTsKIAogc3RhdGljIHZvaWQgX19pbml0IHhlbl9hcGljX2NoZWNr
KHZvaWQpCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vZW5saWdodGVuX3B2LmMgYi9hcmNoL3g4
Ni94ZW4vZW5saWdodGVuX3B2LmMKaW5kZXggNDcyMmJhMjk2NmFjLi5jYzE0YmY2MzU0YjYgMTAw
NjQ0Ci0tLSBhL2FyY2gveDg2L3hlbi9lbmxpZ2h0ZW5fcHYuYworKysgYi9hcmNoL3g4Ni94ZW4v
ZW5saWdodGVuX3B2LmMKQEAgLTU0NSwxMyArNTQ1LDggQEAgc3RhdGljIHZvaWQgeGVuX2xvYWRf
dGxzKHN0cnVjdCB0aHJlYWRfc3RydWN0ICp0LCB1bnNpZ25lZCBpbnQgY3B1KQogCSAqIGV4Y2Vw
dGlvbiBiZXR3ZWVuIHRoZSBuZXcgJWZzIGRlc2NyaXB0b3IgYmVpbmcgbG9hZGVkIGFuZAogCSAq
ICVmcyBiZWluZyBlZmZlY3RpdmVseSBjbGVhcmVkIGF0IF9fc3dpdGNoX3RvKCkuCiAJICovCi0J
aWYgKHBhcmF2aXJ0X2dldF9sYXp5X21vZGUoKSA9PSBQQVJBVklSVF9MQVpZX0NQVSkgewotI2lm
ZGVmIENPTkZJR19YODZfMzIKLQkJbGF6eV9sb2FkX2dzKDApOwotI2Vsc2UKKwlpZiAocGFyYXZp
cnRfZ2V0X2xhenlfbW9kZSgpID09IFBBUkFWSVJUX0xBWllfQ1BVKQogCQlsb2Fkc2VnbWVudChm
cywgMCk7Ci0jZW5kaWYKLQl9CiAKIAl4ZW5fbWNfYmF0Y2goKTsKIApAQCAtNTYyLDEzICs1NTcs
MTEgQEAgc3RhdGljIHZvaWQgeGVuX2xvYWRfdGxzKHN0cnVjdCB0aHJlYWRfc3RydWN0ICp0LCB1
bnNpZ25lZCBpbnQgY3B1KQogCXhlbl9tY19pc3N1ZShQQVJBVklSVF9MQVpZX0NQVSk7CiB9CiAK
LSNpZmRlZiBDT05GSUdfWDg2XzY0CiBzdGF0aWMgdm9pZCB4ZW5fbG9hZF9nc19pbmRleCh1bnNp
Z25lZCBpbnQgaWR4KQogewogCWlmIChIWVBFUlZJU09SX3NldF9zZWdtZW50X2Jhc2UoU0VHQkFT
RV9HU19VU0VSX1NFTCwgaWR4KSkKIAkJQlVHKCk7CiB9Ci0jZW5kaWYKIAogc3RhdGljIHZvaWQg
eGVuX3dyaXRlX2xkdF9lbnRyeShzdHJ1Y3QgZGVzY19zdHJ1Y3QgKmR0LCBpbnQgZW50cnludW0s
CiAJCQkJY29uc3Qgdm9pZCAqcHRyKQpAQCAtNTg3LDcgKzU4MCw2IEBAIHN0YXRpYyB2b2lkIHhl
bl93cml0ZV9sZHRfZW50cnkoc3RydWN0IGRlc2Nfc3RydWN0ICpkdCwgaW50IGVudHJ5bnVtLAog
CXByZWVtcHRfZW5hYmxlKCk7CiB9CiAKLSNpZmRlZiBDT05GSUdfWDg2XzY0CiBzdHJ1Y3QgdHJh
cF9hcnJheV9lbnRyeSB7CiAJdm9pZCAoKm9yaWcpKHZvaWQpOwogCXZvaWQgKCp4ZW4pKHZvaWQp
OwpAQCAtNjU3LDcgKzY0OSw2IEBAIHN0YXRpYyBib29sIF9fcmVmIGdldF90cmFwX2FkZHIodm9p
ZCAqKmFkZHIsIHVuc2lnbmVkIGludCBpc3QpCiAKIAlyZXR1cm4gdHJ1ZTsKIH0KLSNlbmRpZgog
CiBzdGF0aWMgaW50IGN2dF9nYXRlX3RvX3RyYXAoaW50IHZlY3RvciwgY29uc3QgZ2F0ZV9kZXNj
ICp2YWwsCiAJCQkgICAgc3RydWN0IHRyYXBfaW5mbyAqaW5mbykKQEAgLTY3MCwxMCArNjYxLDgg
QEAgc3RhdGljIGludCBjdnRfZ2F0ZV90b190cmFwKGludCB2ZWN0b3IsIGNvbnN0IGdhdGVfZGVz
YyAqdmFsLAogCWluZm8tPnZlY3RvciA9IHZlY3RvcjsKIAogCWFkZHIgPSBnYXRlX29mZnNldCh2
YWwpOwotI2lmZGVmIENPTkZJR19YODZfNjQKIAlpZiAoIWdldF90cmFwX2FkZHIoKHZvaWQgKiop
JmFkZHIsIHZhbC0+Yml0cy5pc3QpKQogCQlyZXR1cm4gMDsKLSNlbmRpZgkvKiBDT05GSUdfWDg2
XzY0ICovCiAJaW5mby0+YWRkcmVzcyA9IGFkZHI7CiAKIAlpbmZvLT5jcyA9IGdhdGVfc2VnbWVu
dCh2YWwpOwpAQCAtODc3LDcgKzg2Niw3IEBAIHN0YXRpYyB2b2lkIHhlbl93cml0ZV9jcjQodW5z
aWduZWQgbG9uZyBjcjQpCiAKIAluYXRpdmVfd3JpdGVfY3I0KGNyNCk7CiB9Ci0jaWZkZWYgQ09O
RklHX1g4Nl82NAorCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgeGVuX3JlYWRfY3I4KHZv
aWQpCiB7CiAJcmV0dXJuIDA7CkBAIC04ODYsNyArODc1LDYgQEAgc3RhdGljIGlubGluZSB2b2lk
IHhlbl93cml0ZV9jcjgodW5zaWduZWQgbG9uZyB2YWwpCiB7CiAJQlVHX09OKHZhbCk7CiB9Ci0j
ZW5kaWYKIAogc3RhdGljIHU2NCB4ZW5fcmVhZF9tc3Jfc2FmZSh1bnNpZ25lZCBpbnQgbXNyLCBp
bnQgKmVycikKIHsKQEAgLTkxMSw3ICs4OTksNiBAQCBzdGF0aWMgaW50IHhlbl93cml0ZV9tc3Jf
c2FmZSh1bnNpZ25lZCBpbnQgbXNyLCB1bnNpZ25lZCBsb3csIHVuc2lnbmVkIGhpZ2gpCiAJcmV0
ID0gMDsKIAogCXN3aXRjaCAobXNyKSB7Ci0jaWZkZWYgQ09ORklHX1g4Nl82NAogCQl1bnNpZ25l
ZCB3aGljaDsKIAkJdTY0IGJhc2U7CiAKQEAgLTkyNCw3ICs5MTEsNiBAQCBzdGF0aWMgaW50IHhl
bl93cml0ZV9tc3Jfc2FmZSh1bnNpZ25lZCBpbnQgbXNyLCB1bnNpZ25lZCBsb3csIHVuc2lnbmVk
IGhpZ2gpCiAJCWlmIChIWVBFUlZJU09SX3NldF9zZWdtZW50X2Jhc2Uod2hpY2gsIGJhc2UpICE9
IDApCiAJCQlyZXQgPSAtRUlPOwogCQlicmVhazsKLSNlbmRpZgogCiAJY2FzZSBNU1JfU1RBUjoK
IAljYXNlIE1TUl9DU1RBUjoKQEAgLTEwMDUsOSArOTkxLDcgQEAgdm9pZCBfX2luaXQgeGVuX3Nl
dHVwX3ZjcHVfaW5mb19wbGFjZW1lbnQodm9pZCkKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHZfaW5m
byB4ZW5faW5mbyBfX2luaXRjb25zdCA9IHsKIAkuc2hhcmVkX2tlcm5lbF9wbWQgPSAwLAogCi0j
aWZkZWYgQ09ORklHX1g4Nl82NAogCS5leHRyYV91c2VyXzY0Yml0X2NzID0gRkxBVF9VU0VSX0NT
NjQsCi0jZW5kaWYKIAkubmFtZSA9ICJYZW4iLAogfTsKIApAQCAtMTAyMiwxMCArMTAwNiw4IEBA
IHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHZfY3B1X29wcyB4ZW5fY3B1X29wcyBfX2luaXRjb25zdCA9
IHsKIAogCS53cml0ZV9jcjQgPSB4ZW5fd3JpdGVfY3I0LAogCi0jaWZkZWYgQ09ORklHX1g4Nl82
NAogCS5yZWFkX2NyOCA9IHhlbl9yZWFkX2NyOCwKIAkud3JpdGVfY3I4ID0geGVuX3dyaXRlX2Ny
OCwKLSNlbmRpZgogCiAJLndiaW52ZCA9IG5hdGl2ZV93YmludmQsCiAKQEAgLTEwMzgsMTggKzEw
MjAsMTQgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBwdl9jcHVfb3BzIHhlbl9jcHVfb3BzIF9faW5p
dGNvbnN0ID0gewogCS5yZWFkX3BtYyA9IHhlbl9yZWFkX3BtYywKIAogCS5pcmV0ID0geGVuX2ly
ZXQsCi0jaWZkZWYgQ09ORklHX1g4Nl82NAogCS51c2VyZ3Nfc3lzcmV0NjQgPSB4ZW5fc3lzcmV0
NjQsCi0jZW5kaWYKIAogCS5sb2FkX3RyX2Rlc2MgPSBwYXJhdmlydF9ub3AsCiAJLnNldF9sZHQg
PSB4ZW5fc2V0X2xkdCwKIAkubG9hZF9nZHQgPSB4ZW5fbG9hZF9nZHQsCiAJLmxvYWRfaWR0ID0g
eGVuX2xvYWRfaWR0LAogCS5sb2FkX3RscyA9IHhlbl9sb2FkX3RscywKLSNpZmRlZiBDT05GSUdf
WDg2XzY0CiAJLmxvYWRfZ3NfaW5kZXggPSB4ZW5fbG9hZF9nc19pbmRleCwKLSNlbmRpZgogCiAJ
LmFsbG9jX2xkdCA9IHhlbl9hbGxvY19sZHQsCiAJLmZyZWVfbGR0ID0geGVuX2ZyZWVfbGR0LApA
QCAtMTMxMiwxNSArMTI5MCw3IEBAIGFzbWxpbmthZ2UgX192aXNpYmxlIHZvaWQgX19pbml0IHhl
bl9zdGFydF9rZXJuZWwodm9pZCkKIAogCS8qIGtlZXAgdXNpbmcgWGVuIGdkdCBmb3Igbm93OyBu
byB1cmdlbnQgbmVlZCB0byBjaGFuZ2UgaXQgKi8KIAotI2lmZGVmIENPTkZJR19YODZfMzIKLQlw
dl9pbmZvLmtlcm5lbF9ycGwgPSAxOwotCWlmICh4ZW5fZmVhdHVyZShYRU5GRUFUX3N1cGVydmlz
b3JfbW9kZV9rZXJuZWwpKQotCQlwdl9pbmZvLmtlcm5lbF9ycGwgPSAwOwotI2Vsc2UKIAlwdl9p
bmZvLmtlcm5lbF9ycGwgPSAwOwotI2VuZGlmCi0JLyogc2V0IHRoZSBsaW1pdCBvZiBvdXIgYWRk
cmVzcyBzcGFjZSAqLwotCXhlbl9yZXNlcnZlX3RvcCgpOwogCiAJLyoKIAkgKiBXZSB1c2VkIHRv
IGRvIHRoaXMgaW4geGVuX2FyY2hfc2V0dXAsIGJ1dCB0aGF0IGlzIHRvbyBsYXRlCkBAIC0xMzMy
LDEzICsxMzAyLDYgQEAgYXNtbGlua2FnZSBfX3Zpc2libGUgdm9pZCBfX2luaXQgeGVuX3N0YXJ0
X2tlcm5lbCh2b2lkKQogCWlmIChyYyAhPSAwKQogCQl4ZW5fcmF3X3ByaW50aygicGh5c2Rldl9v
cCBmYWlsZWQgJWRcbiIsIHJjKTsKIAotI2lmZGVmIENPTkZJR19YODZfMzIKLQkvKiBzZXQgdXAg
YmFzaWMgQ1BVSUQgc3R1ZmYgKi8KLQljcHVfZGV0ZWN0KCZuZXdfY3B1X2RhdGEpOwotCXNldF9j
cHVfY2FwKCZuZXdfY3B1X2RhdGEsIFg4Nl9GRUFUVVJFX0ZQVSk7Ci0JbmV3X2NwdV9kYXRhLng4
Nl9jYXBhYmlsaXR5W0NQVUlEXzFfRURYXSA9IGNwdWlkX2VkeCgxKTsKLSNlbmRpZgotCiAJaWYg
KHhlbl9zdGFydF9pbmZvLT5tb2Rfc3RhcnQpIHsKIAkgICAgaWYgKHhlbl9zdGFydF9pbmZvLT5m
bGFncyAmIFNJRl9NT0RfU1RBUlRfUEZOKQogCQlpbml0cmRfc3RhcnQgPSBQRk5fUEhZUyh4ZW5f
c3RhcnRfaW5mby0+bW9kX3N0YXJ0KTsKQEAgLTE0MDYsMTIgKzEzNjksOCBAQCBhc21saW5rYWdl
IF9fdmlzaWJsZSB2b2lkIF9faW5pdCB4ZW5fc3RhcnRfa2VybmVsKHZvaWQpCiAJeGVuX2VmaV9p
bml0KCZib290X3BhcmFtcyk7CiAKIAkvKiBTdGFydCB0aGUgd29ybGQgKi8KLSNpZmRlZiBDT05G
SUdfWDg2XzMyCi0JaTM4Nl9zdGFydF9rZXJuZWwoKTsKLSNlbHNlCiAJY3I0X2luaXRfc2hhZG93
KCk7IC8qIDMyYiBrZXJuZWwgZG9lcyB0aGlzIGluIGkzODZfc3RhcnRfa2VybmVsKCkgKi8KIAl4
ODZfNjRfc3RhcnRfcmVzZXJ2YXRpb25zKChjaGFyICopX19wYV9zeW1ib2woJmJvb3RfcGFyYW1z
KSk7Ci0jZW5kaWYKIH0KIAogc3RhdGljIGludCB4ZW5fY3B1X3VwX3ByZXBhcmVfcHYodW5zaWdu
ZWQgaW50IGNwdSkKZGlmZiAtLWdpdCBhL2FyY2gveDg2L3hlbi9tbXVfcHYuYyBiL2FyY2gveDg2
L3hlbi9tbXVfcHYuYwppbmRleCBiZWI0NGUyMmFmZGYuLmQ2NzE4NzgyYjEyMyAxMDA2NDQKLS0t
IGEvYXJjaC94ODYveGVuL21tdV9wdi5jCisrKyBiL2FyY2gveDg2L3hlbi9tbXVfcHYuYwpAQCAt
ODYsMTkgKzg2LDggQEAKICNpbmNsdWRlICJtbXUuaCIKICNpbmNsdWRlICJkZWJ1Z2ZzLmgiCiAK
LSNpZmRlZiBDT05GSUdfWDg2XzMyCi0vKgotICogSWRlbnRpdHkgbWFwLCBpbiBhZGRpdGlvbiB0
byBwbGFpbiBrZXJuZWwgbWFwLiAgVGhpcyBuZWVkcyB0byBiZQotICogbGFyZ2UgZW5vdWdoIHRv
IGFsbG9jYXRlIHBhZ2UgdGFibGUgcGFnZXMgdG8gYWxsb2NhdGUgdGhlIHJlc3QuCi0gKiBFYWNo
IHBhZ2UgY2FuIG1hcCAyTUIuCi0gKi8KLSNkZWZpbmUgTEVWRUwxX0lERU5UX0VOVFJJRVMJKFBU
UlNfUEVSX1BURSAqIDQpCi1zdGF0aWMgUkVTRVJWRV9CUktfQVJSQVkocHRlX3QsIGxldmVsMV9p
ZGVudF9wZ3QsIExFVkVMMV9JREVOVF9FTlRSSUVTKTsKLSNlbmRpZgotI2lmZGVmIENPTkZJR19Y
ODZfNjQKIC8qIGwzIHB1ZCBmb3IgdXNlcnNwYWNlIHZzeXNjYWxsIG1hcHBpbmcgKi8KIHN0YXRp
YyBwdWRfdCBsZXZlbDNfdXNlcl92c3lzY2FsbFtQVFJTX1BFUl9QVURdIF9fcGFnZV9hbGlnbmVk
X2JzczsKLSNlbmRpZiAvKiBDT05GSUdfWDg2XzY0ICovCiAKIC8qCiAgKiBQcm90ZWN0cyBhdG9t
aWMgcmVzZXJ2YXRpb24gZGVjcmVhc2UvaW5jcmVhc2UgYWdhaW5zdCBjb25jdXJyZW50IGluY3Jl
YXNlcy4KQEAgLTQzOSwyNiArNDI4LDYgQEAgc3RhdGljIHZvaWQgeGVuX3NldF9wdWQocHVkX3Qg
KnB0ciwgcHVkX3QgdmFsKQogCXhlbl9zZXRfcHVkX2h5cGVyKHB0ciwgdmFsKTsKIH0KIAotI2lm
ZGVmIENPTkZJR19YODZfUEFFCi1zdGF0aWMgdm9pZCB4ZW5fc2V0X3B0ZV9hdG9taWMocHRlX3Qg
KnB0ZXAsIHB0ZV90IHB0ZSkKLXsKLQl0cmFjZV94ZW5fbW11X3NldF9wdGVfYXRvbWljKHB0ZXAs
IHB0ZSk7Ci0JX194ZW5fc2V0X3B0ZShwdGVwLCBwdGUpOwotfQotCi1zdGF0aWMgdm9pZCB4ZW5f
cHRlX2NsZWFyKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIGFkZHIsIHB0ZV90
ICpwdGVwKQotewotCXRyYWNlX3hlbl9tbXVfcHRlX2NsZWFyKG1tLCBhZGRyLCBwdGVwKTsKLQlf
X3hlbl9zZXRfcHRlKHB0ZXAsIG5hdGl2ZV9tYWtlX3B0ZSgwKSk7Ci19Ci0KLXN0YXRpYyB2b2lk
IHhlbl9wbWRfY2xlYXIocG1kX3QgKnBtZHApCi17Ci0JdHJhY2VfeGVuX21tdV9wbWRfY2xlYXIo
cG1kcCk7Ci0Jc2V0X3BtZChwbWRwLCBfX3BtZCgwKSk7Ci19Ci0jZW5kaWYJLyogQ09ORklHX1g4
Nl9QQUUgKi8KLQogX192aXNpYmxlIHBtZF90IHhlbl9tYWtlX3BtZChwbWR2YWxfdCBwbWQpCiB7
CiAJcG1kID0gcHRlX3Bmbl90b19tZm4ocG1kKTsKQEAgLTQ2Niw3ICs0MzUsNiBAQCBfX3Zpc2li
bGUgcG1kX3QgeGVuX21ha2VfcG1kKHBtZHZhbF90IHBtZCkKIH0KIFBWX0NBTExFRV9TQVZFX1JF
R1NfVEhVTksoeGVuX21ha2VfcG1kKTsKIAotI2lmZGVmIENPTkZJR19YODZfNjQKIF9fdmlzaWJs
ZSBwdWR2YWxfdCB4ZW5fcHVkX3ZhbChwdWRfdCBwdWQpCiB7CiAJcmV0dXJuIHB0ZV9tZm5fdG9f
cGZuKHB1ZC5wdWQpOwpAQCAtNTcxLDcgKzUzOSw2IEBAIF9fdmlzaWJsZSBwNGRfdCB4ZW5fbWFr
ZV9wNGQocDRkdmFsX3QgcDRkKQogfQogUFZfQ0FMTEVFX1NBVkVfUkVHU19USFVOSyh4ZW5fbWFr
ZV9wNGQpOwogI2VuZGlmICAvKiBDT05GSUdfUEdUQUJMRV9MRVZFTFMgPj0gNSAqLwotI2VuZGlm
CS8qIENPTkZJR19YODZfNjQgKi8KIAogc3RhdGljIGludCB4ZW5fcG1kX3dhbGsoc3RydWN0IG1t
X3N0cnVjdCAqbW0sIHBtZF90ICpwbWQsCiAJCWludCAoKmZ1bmMpKHN0cnVjdCBtbV9zdHJ1Y3Qg
Km1tLCBzdHJ1Y3QgcGFnZSAqLCBlbnVtIHB0X2xldmVsKSwKQEAgLTY1NCwxNCArNjIxLDEyIEBA
IHN0YXRpYyBpbnQgX194ZW5fcGdkX3dhbGsoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBnZF90ICpw
Z2QsCiAJbGltaXQtLTsKIAlCVUdfT04obGltaXQgPj0gRklYQUREUl9UT1ApOwogCi0jaWZkZWYg
Q09ORklHX1g4Nl82NAogCS8qCiAJICogNjQtYml0IGhhcyBhIGdyZWF0IGJpZyBob2xlIGluIHRo
ZSBtaWRkbGUgb2YgdGhlIGFkZHJlc3MKIAkgKiBzcGFjZSwgd2hpY2ggY29udGFpbnMgdGhlIFhl
biBtYXBwaW5ncy4KIAkgKi8KIAlob2xlX2xvdyA9IHBnZF9pbmRleChHVUFSRF9IT0xFX0JBU0Vf
QUREUik7CiAJaG9sZV9oaWdoID0gcGdkX2luZGV4KEdVQVJEX0hPTEVfRU5EX0FERFIpOwotI2Vu
ZGlmCiAKIAluciA9IHBnZF9pbmRleChsaW1pdCkgKyAxOwogCWZvciAoaSA9IDA7IGkgPCBucjsg
aSsrKSB7CkBAIC04MDAsNyArNzY1LDYgQEAgc3RhdGljIHZvaWQgX194ZW5fcGdkX3BpbihzdHJ1
Y3QgbW1fc3RydWN0ICptbSwgcGdkX3QgKnBnZCkKIAkJeGVuX21jX2JhdGNoKCk7CiAJfQogCi0j
aWZkZWYgQ09ORklHX1g4Nl82NAogCXsKIAkJcGdkX3QgKnVzZXJfcGdkID0geGVuX2dldF91c2Vy
X3BnZChwZ2QpOwogCkBAIC04MTIsMTQgKzc3Niw2IEBAIHN0YXRpYyB2b2lkIF9feGVuX3BnZF9w
aW4oc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBnZF90ICpwZ2QpCiAJCQkJICAgUEZOX0RPV04oX19w
YSh1c2VyX3BnZCkpKTsKIAkJfQogCX0KLSNlbHNlIC8qIENPTkZJR19YODZfMzIgKi8KLSNpZmRl
ZiBDT05GSUdfWDg2X1BBRQotCS8qIE5lZWQgdG8gbWFrZSBzdXJlIHVuc2hhcmVkIGtlcm5lbCBQ
TUQgaXMgcGlubmFibGUgKi8KLQl4ZW5fcGluX3BhZ2UobW0sIHBnZF9wYWdlKHBnZFtwZ2RfaW5k
ZXgoVEFTS19TSVpFKV0pLAotCQkgICAgIFBUX1BNRCk7Ci0jZW5kaWYKLQl4ZW5fZG9fcGluKE1N
VUVYVF9QSU5fTDNfVEFCTEUsIFBGTl9ET1dOKF9fcGEocGdkKSkpOwotI2VuZGlmIC8qIENPTkZJ
R19YODZfNjQgKi8KIAl4ZW5fbWNfaXNzdWUoMCk7CiB9CiAKQEAgLTg3MCw5ICs4MjYsNyBAQCBz
dGF0aWMgaW50IF9faW5pdCB4ZW5fbWFya19waW5uZWQoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHN0
cnVjdCBwYWdlICpwYWdlLAogc3RhdGljIHZvaWQgX19pbml0IHhlbl9hZnRlcl9ib290bWVtKHZv
aWQpCiB7CiAJc3RhdGljX2JyYW5jaF9lbmFibGUoJnhlbl9zdHJ1Y3RfcGFnZXNfcmVhZHkpOwot
I2lmZGVmIENPTkZJR19YODZfNjQKIAlTZXRQYWdlUGlubmVkKHZpcnRfdG9fcGFnZShsZXZlbDNf
dXNlcl92c3lzY2FsbCkpOwotI2VuZGlmCiAJeGVuX3BnZF93YWxrKCZpbml0X21tLCB4ZW5fbWFy
a19waW5uZWQsIEZJWEFERFJfVE9QKTsKIH0KIApAQCAtOTE5LDI5ICs4NzMsMTggQEAgc3RhdGlj
IGludCB4ZW5fdW5waW5fcGFnZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwgc3RydWN0IHBhZ2UgKnBh
Z2UsCiAvKiBSZWxlYXNlIGEgcGFnZXRhYmxlcyBwYWdlcyBiYWNrIGFzIG5vcm1hbCBSVyAqLwog
c3RhdGljIHZvaWQgX194ZW5fcGdkX3VucGluKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwZ2RfdCAq
cGdkKQogeworCXBnZF90ICp1c2VyX3BnZCA9IHhlbl9nZXRfdXNlcl9wZ2QocGdkKTsKKwogCXRy
YWNlX3hlbl9tbXVfcGdkX3VucGluKG1tLCBwZ2QpOwogCiAJeGVuX21jX2JhdGNoKCk7CiAKIAl4
ZW5fZG9fcGluKE1NVUVYVF9VTlBJTl9UQUJMRSwgUEZOX0RPV04oX19wYShwZ2QpKSk7CiAKLSNp
ZmRlZiBDT05GSUdfWDg2XzY0Ci0JewotCQlwZ2RfdCAqdXNlcl9wZ2QgPSB4ZW5fZ2V0X3VzZXJf
cGdkKHBnZCk7Ci0KLQkJaWYgKHVzZXJfcGdkKSB7Ci0JCQl4ZW5fZG9fcGluKE1NVUVYVF9VTlBJ
Tl9UQUJMRSwKLQkJCQkgICBQRk5fRE9XTihfX3BhKHVzZXJfcGdkKSkpOwotCQkJeGVuX3VucGlu
X3BhZ2UobW0sIHZpcnRfdG9fcGFnZSh1c2VyX3BnZCksIFBUX1BHRCk7Ci0JCX0KKwlpZiAodXNl
cl9wZ2QpIHsKKwkJeGVuX2RvX3BpbihNTVVFWFRfVU5QSU5fVEFCTEUsIFBGTl9ET1dOKF9fcGEo
dXNlcl9wZ2QpKSk7CisJCXhlbl91bnBpbl9wYWdlKG1tLCB2aXJ0X3RvX3BhZ2UodXNlcl9wZ2Qp
LCBQVF9QR0QpOwogCX0KLSNlbmRpZgotCi0jaWZkZWYgQ09ORklHX1g4Nl9QQUUKLQkvKiBOZWVk
IHRvIG1ha2Ugc3VyZSB1bnNoYXJlZCBrZXJuZWwgUE1EIGlzIHVucGlubmVkICovCi0JeGVuX3Vu
cGluX3BhZ2UobW0sIHBnZF9wYWdlKHBnZFtwZ2RfaW5kZXgoVEFTS19TSVpFKV0pLAotCQkgICAg
ICAgUFRfUE1EKTsKLSNlbmRpZgogCiAJX194ZW5fcGdkX3dhbGsobW0sIHBnZCwgeGVuX3VucGlu
X3BhZ2UsIFVTRVJfTElNSVQpOwogCkBAIC0xMDg5LDcgKzEwMzIsNiBAQCBzdGF0aWMgdm9pZCBf
X2luaXQgcGluX3BhZ2V0YWJsZV9wZm4odW5zaWduZWQgY21kLCB1bnNpZ25lZCBsb25nIHBmbikK
IAkJQlVHKCk7CiB9CiAKLSNpZmRlZiBDT05GSUdfWDg2XzY0CiBzdGF0aWMgdm9pZCBfX2luaXQg
eGVuX2NsZWFuaGlnaG1hcCh1bnNpZ25lZCBsb25nIHZhZGRyLAogCQkJCSAgICB1bnNpZ25lZCBs
b25nIHZhZGRyX2VuZCkKIHsKQEAgLTEyNzMsMTcgKzEyMTUsMTUgQEAgc3RhdGljIHZvaWQgX19p
bml0IHhlbl9wYWdldGFibGVfY2xlYW5oaWdobWFwKHZvaWQpCiAJeGVuX2NsZWFuaGlnaG1hcChh
ZGRyLCByb3VuZHVwKGFkZHIgKyBzaXplLCBQTURfU0laRSAqIDIpKTsKIAl4ZW5fc3RhcnRfaW5m
by0+cHRfYmFzZSA9ICh1bnNpZ25lZCBsb25nKV9fdmEoX19wYSh4ZW5fc3RhcnRfaW5mby0+cHRf
YmFzZSkpOwogfQotI2VuZGlmCiAKIHN0YXRpYyB2b2lkIF9faW5pdCB4ZW5fcGFnZXRhYmxlX3Ay
bV9zZXR1cCh2b2lkKQogewogCXhlbl92bWFsbG9jX3AybV90cmVlKCk7CiAKLSNpZmRlZiBDT05G
SUdfWDg2XzY0CiAJeGVuX3BhZ2V0YWJsZV9wMm1fZnJlZSgpOwogCiAJeGVuX3BhZ2V0YWJsZV9j
bGVhbmhpZ2htYXAoKTsKLSNlbmRpZgorCiAJLyogQW5kIHJldmVjdG9yISBCeWUgYnllIG9sZCBh
cnJheSAqLwogCXhlbl9zdGFydF9pbmZvLT5tZm5fbGlzdCA9ICh1bnNpZ25lZCBsb25nKXhlbl9w
Mm1fYWRkcjsKIH0KQEAgLTE0MzAsNiArMTM3MCw4IEBAIHN0YXRpYyB2b2lkIF9feGVuX3dyaXRl
X2NyMyhib29sIGtlcm5lbCwgdW5zaWduZWQgbG9uZyBjcjMpCiB9CiBzdGF0aWMgdm9pZCB4ZW5f
d3JpdGVfY3IzKHVuc2lnbmVkIGxvbmcgY3IzKQogeworCXBnZF90ICp1c2VyX3BnZCA9IHhlbl9n
ZXRfdXNlcl9wZ2QoX192YShjcjMpKTsKKwogCUJVR19PTihwcmVlbXB0aWJsZSgpKTsKIAogCXhl
bl9tY19iYXRjaCgpOyAgLyogZGlzYWJsZXMgaW50ZXJydXB0cyAqLwpAQCAtMTQ0MCwyMCArMTM4
MiwxNCBAQCBzdGF0aWMgdm9pZCB4ZW5fd3JpdGVfY3IzKHVuc2lnbmVkIGxvbmcgY3IzKQogCiAJ
X194ZW5fd3JpdGVfY3IzKHRydWUsIGNyMyk7CiAKLSNpZmRlZiBDT05GSUdfWDg2XzY0Ci0Jewot
CQlwZ2RfdCAqdXNlcl9wZ2QgPSB4ZW5fZ2V0X3VzZXJfcGdkKF9fdmEoY3IzKSk7Ci0JCWlmICh1
c2VyX3BnZCkKLQkJCV9feGVuX3dyaXRlX2NyMyhmYWxzZSwgX19wYSh1c2VyX3BnZCkpOwotCQll
bHNlCi0JCQlfX3hlbl93cml0ZV9jcjMoZmFsc2UsIDApOwotCX0KLSNlbmRpZgorCWlmICh1c2Vy
X3BnZCkKKwkJX194ZW5fd3JpdGVfY3IzKGZhbHNlLCBfX3BhKHVzZXJfcGdkKSk7CisJZWxzZQor
CQlfX3hlbl93cml0ZV9jcjMoZmFsc2UsIDApOwogCiAJeGVuX21jX2lzc3VlKFBBUkFWSVJUX0xB
WllfQ1BVKTsgIC8qIGludGVycnVwdHMgcmVzdG9yZWQgKi8KIH0KIAotI2lmZGVmIENPTkZJR19Y
ODZfNjQKIC8qCiAgKiBBdCB0aGUgc3RhcnQgb2YgdGhlIGRheSAtIHdoZW4gWGVuIGxhdW5jaGVz
IGEgZ3Vlc3QsIGl0IGhhcyBhbHJlYWR5CiAgKiBidWlsdCBwYWdldGFibGVzIGZvciB0aGUgZ3Vl
c3QuIFdlIGRpbGlnZW50bHkgbG9vayBvdmVyIHRoZW0KQEAgLTE0ODgsNDkgKzE0MjQsMzkgQEAg
c3RhdGljIHZvaWQgX19pbml0IHhlbl93cml0ZV9jcjNfaW5pdCh1bnNpZ25lZCBsb25nIGNyMykK
IAogCXhlbl9tY19pc3N1ZShQQVJBVklSVF9MQVpZX0NQVSk7ICAvKiBpbnRlcnJ1cHRzIHJlc3Rv
cmVkICovCiB9Ci0jZW5kaWYKIAogc3RhdGljIGludCB4ZW5fcGdkX2FsbG9jKHN0cnVjdCBtbV9z
dHJ1Y3QgKm1tKQogewogCXBnZF90ICpwZ2QgPSBtbS0+cGdkOwotCWludCByZXQgPSAwOworCWlu
dCByZXQgPSAtRU5PTUVNOworCXN0cnVjdCBwYWdlICpwYWdlID0gdmlydF90b19wYWdlKHBnZCk7
CisJcGdkX3QgKnVzZXJfcGdkOwogCiAJQlVHX09OKFBhZ2VQaW5uZWQodmlydF90b19wYWdlKHBn
ZCkpKTsKKwlCVUdfT04ocGFnZS0+cHJpdmF0ZSAhPSAwKTsKIAotI2lmZGVmIENPTkZJR19YODZf
NjQKLQl7Ci0JCXN0cnVjdCBwYWdlICpwYWdlID0gdmlydF90b19wYWdlKHBnZCk7Ci0JCXBnZF90
ICp1c2VyX3BnZDsKLQotCQlCVUdfT04ocGFnZS0+cHJpdmF0ZSAhPSAwKTsKLQotCQlyZXQgPSAt
RU5PTUVNOwotCi0JCXVzZXJfcGdkID0gKHBnZF90ICopX19nZXRfZnJlZV9wYWdlKEdGUF9LRVJO
RUwgfCBfX0dGUF9aRVJPKTsKLQkJcGFnZS0+cHJpdmF0ZSA9ICh1bnNpZ25lZCBsb25nKXVzZXJf
cGdkOworCXVzZXJfcGdkID0gKHBnZF90ICopX19nZXRfZnJlZV9wYWdlKEdGUF9LRVJORUwgfCBf
X0dGUF9aRVJPKTsKKwlwYWdlLT5wcml2YXRlID0gKHVuc2lnbmVkIGxvbmcpdXNlcl9wZ2Q7CiAK
LQkJaWYgKHVzZXJfcGdkICE9IE5VTEwpIHsKKwlpZiAodXNlcl9wZ2QgIT0gTlVMTCkgewogI2lm
ZGVmIENPTkZJR19YODZfVlNZU0NBTExfRU1VTEFUSU9OCi0JCQl1c2VyX3BnZFtwZ2RfaW5kZXgo
VlNZU0NBTExfQUREUildID0KLQkJCQlfX3BnZChfX3BhKGxldmVsM191c2VyX3ZzeXNjYWxsKSB8
IF9QQUdFX1RBQkxFKTsKKwkJdXNlcl9wZ2RbcGdkX2luZGV4KFZTWVNDQUxMX0FERFIpXSA9CisJ
CQlfX3BnZChfX3BhKGxldmVsM191c2VyX3ZzeXNjYWxsKSB8IF9QQUdFX1RBQkxFKTsKICNlbmRp
ZgotCQkJcmV0ID0gMDsKLQkJfQotCi0JCUJVR19PTihQYWdlUGlubmVkKHZpcnRfdG9fcGFnZSh4
ZW5fZ2V0X3VzZXJfcGdkKHBnZCkpKSk7CisJCXJldCA9IDA7CiAJfQotI2VuZGlmCisKKwlCVUdf
T04oUGFnZVBpbm5lZCh2aXJ0X3RvX3BhZ2UoeGVuX2dldF91c2VyX3BnZChwZ2QpKSkpOworCiAJ
cmV0dXJuIHJldDsKIH0KIAogc3RhdGljIHZvaWQgeGVuX3BnZF9mcmVlKHN0cnVjdCBtbV9zdHJ1
Y3QgKm1tLCBwZ2RfdCAqcGdkKQogewotI2lmZGVmIENPTkZJR19YODZfNjQKIAlwZ2RfdCAqdXNl
cl9wZ2QgPSB4ZW5fZ2V0X3VzZXJfcGdkKHBnZCk7CiAKIAlpZiAodXNlcl9wZ2QpCiAJCWZyZWVf
cGFnZSgodW5zaWduZWQgbG9uZyl1c2VyX3BnZCk7Ci0jZW5kaWYKIH0KIAogLyoKQEAgLTE1NDks
NyArMTQ3NSw2IEBAIHN0YXRpYyB2b2lkIHhlbl9wZ2RfZnJlZShzdHJ1Y3QgbW1fc3RydWN0ICpt
bSwgcGdkX3QgKnBnZCkKICAqLwogX192aXNpYmxlIHB0ZV90IHhlbl9tYWtlX3B0ZV9pbml0KHB0
ZXZhbF90IHB0ZSkKIHsKLSNpZmRlZiBDT05GSUdfWDg2XzY0CiAJdW5zaWduZWQgbG9uZyBwZm47
CiAKIAkvKgpAQCAtMTU2Myw3ICsxNDg4LDcgQEAgX192aXNpYmxlIHB0ZV90IHhlbl9tYWtlX3B0
ZV9pbml0KHB0ZXZhbF90IHB0ZSkKIAkgICAgcGZuID49IHhlbl9zdGFydF9pbmZvLT5maXJzdF9w
Mm1fcGZuICYmCiAJICAgIHBmbiA8IHhlbl9zdGFydF9pbmZvLT5maXJzdF9wMm1fcGZuICsgeGVu
X3N0YXJ0X2luZm8tPm5yX3AybV9mcmFtZXMpCiAJCXB0ZSAmPSB+X1BBR0VfUlc7Ci0jZW5kaWYK
KwogCXB0ZSA9IHB0ZV9wZm5fdG9fbWZuKHB0ZSk7CiAJcmV0dXJuIG5hdGl2ZV9tYWtlX3B0ZShw
dGUpOwogfQpAQCAtMTU3MSwxMyArMTQ5Niw2IEBAIFBWX0NBTExFRV9TQVZFX1JFR1NfVEhVTkso
eGVuX21ha2VfcHRlX2luaXQpOwogCiBzdGF0aWMgdm9pZCBfX2luaXQgeGVuX3NldF9wdGVfaW5p
dChwdGVfdCAqcHRlcCwgcHRlX3QgcHRlKQogewotI2lmZGVmIENPTkZJR19YODZfMzIKLQkvKiBJ
ZiB0aGVyZSdzIGFuIGV4aXN0aW5nIHB0ZSwgdGhlbiBkb24ndCBhbGxvdyBfUEFHRV9SVyB0byBi
ZSBzZXQgKi8KLQlpZiAocHRlX21mbihwdGUpICE9IElOVkFMSURfUDJNX0VOVFJZCi0JICAgICYm
IHB0ZV92YWxfbWEoKnB0ZXApICYgX1BBR0VfUFJFU0VOVCkKLQkJcHRlID0gX19wdGVfbWEoKChw
dGVfdmFsX21hKCpwdGVwKSAmIF9QQUdFX1JXKSB8IH5fUEFHRV9SVykgJgotCQkJICAgICAgIHB0
ZV92YWxfbWEocHRlKSk7Ci0jZW5kaWYKIAlfX3hlbl9zZXRfcHRlKHB0ZXAsIHB0ZSk7CiB9CiAK
QEAgLTE3MTIsNyArMTYzMCw2IEBAIHN0YXRpYyB2b2lkIHhlbl9yZWxlYXNlX3BtZCh1bnNpZ25l
ZCBsb25nIHBmbikKIAl4ZW5fcmVsZWFzZV9wdHBhZ2UocGZuLCBQVF9QTUQpOwogfQogCi0jaWZk
ZWYgQ09ORklHX1g4Nl82NAogc3RhdGljIHZvaWQgeGVuX2FsbG9jX3B1ZChzdHJ1Y3QgbW1fc3Ry
dWN0ICptbSwgdW5zaWduZWQgbG9uZyBwZm4pCiB7CiAJeGVuX2FsbG9jX3B0cGFnZShtbSwgcGZu
LCBQVF9QVUQpOwpAQCAtMTcyMiwyMCArMTYzOSw2IEBAIHN0YXRpYyB2b2lkIHhlbl9yZWxlYXNl
X3B1ZCh1bnNpZ25lZCBsb25nIHBmbikKIHsKIAl4ZW5fcmVsZWFzZV9wdHBhZ2UocGZuLCBQVF9Q
VUQpOwogfQotI2VuZGlmCi0KLXZvaWQgX19pbml0IHhlbl9yZXNlcnZlX3RvcCh2b2lkKQotewot
I2lmZGVmIENPTkZJR19YODZfMzIKLQl1bnNpZ25lZCBsb25nIHRvcCA9IEhZUEVSVklTT1JfVklS
VF9TVEFSVDsKLQlzdHJ1Y3QgeGVuX3BsYXRmb3JtX3BhcmFtZXRlcnMgcHA7Ci0KLQlpZiAoSFlQ
RVJWSVNPUl94ZW5fdmVyc2lvbihYRU5WRVJfcGxhdGZvcm1fcGFyYW1ldGVycywgJnBwKSA9PSAw
KQotCQl0b3AgPSBwcC52aXJ0X3N0YXJ0OwotCi0JcmVzZXJ2ZV90b3BfYWRkcmVzcygtdG9wKTsK
LSNlbmRpZgkvKiBDT05GSUdfWDg2XzMyICovCi19CiAKIC8qCiAgKiBMaWtlIF9fdmEoKSwgYnV0
IHJldHVybnMgYWRkcmVzcyBpbiB0aGUga2VybmVsIG1hcHBpbmcgKHdoaWNoIGlzCkBAIC0xNzQz
LDExICsxNjQ2LDcgQEAgdm9pZCBfX2luaXQgeGVuX3Jlc2VydmVfdG9wKHZvaWQpCiAgKi8KIHN0
YXRpYyB2b2lkICogX19pbml0IF9fa2EocGh5c19hZGRyX3QgcGFkZHIpCiB7Ci0jaWZkZWYgQ09O
RklHX1g4Nl82NAogCXJldHVybiAodm9pZCAqKShwYWRkciArIF9fU1RBUlRfS0VSTkVMX21hcCk7
Ci0jZWxzZQotCXJldHVybiBfX3ZhKHBhZGRyKTsKLSNlbmRpZgogfQogCiAvKiBDb252ZXJ0IGEg
bWFjaGluZSBhZGRyZXNzIHRvIHBoeXNpY2FsIGFkZHJlc3MgKi8KQEAgLTE3ODEsNTYgKzE2ODAs
NyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgc2V0X3BhZ2VfcHJvdCh2b2lkICphZGRyLCBwZ3Byb3Rf
dCBwcm90KQogewogCXJldHVybiBzZXRfcGFnZV9wcm90X2ZsYWdzKGFkZHIsIHByb3QsIFVWTUZf
Tk9ORSk7CiB9Ci0jaWZkZWYgQ09ORklHX1g4Nl8zMgotc3RhdGljIHZvaWQgX19pbml0IHhlbl9t
YXBfaWRlbnRpdHlfZWFybHkocG1kX3QgKnBtZCwgdW5zaWduZWQgbG9uZyBtYXhfcGZuKQotewot
CXVuc2lnbmVkIHBtZGlkeCwgcHRlaWR4OwotCXVuc2lnbmVkIGlkZW50X3B0ZTsKLQl1bnNpZ25l
ZCBsb25nIHBmbjsKLQotCWxldmVsMV9pZGVudF9wZ3QgPSBleHRlbmRfYnJrKHNpemVvZihwdGVf
dCkgKiBMRVZFTDFfSURFTlRfRU5UUklFUywKLQkJCQkgICAgICBQQUdFX1NJWkUpOwotCi0JaWRl
bnRfcHRlID0gMDsKLQlwZm4gPSAwOwotCWZvciAocG1kaWR4ID0gMDsgcG1kaWR4IDwgUFRSU19Q
RVJfUE1EICYmIHBmbiA8IG1heF9wZm47IHBtZGlkeCsrKSB7Ci0JCXB0ZV90ICpwdGVfcGFnZTsK
LQotCQkvKiBSZXVzZSBvciBhbGxvY2F0ZSBhIHBhZ2Ugb2YgcHRlcyAqLwotCQlpZiAocG1kX3By
ZXNlbnQocG1kW3BtZGlkeF0pKQotCQkJcHRlX3BhZ2UgPSBtMnYocG1kW3BtZGlkeF0ucG1kKTsK
LQkJZWxzZSB7Ci0JCQkvKiBDaGVjayBmb3IgZnJlZSBwdGUgcGFnZXMgKi8KLQkJCWlmIChpZGVu
dF9wdGUgPT0gTEVWRUwxX0lERU5UX0VOVFJJRVMpCi0JCQkJYnJlYWs7Ci0KLQkJCXB0ZV9wYWdl
ID0gJmxldmVsMV9pZGVudF9wZ3RbaWRlbnRfcHRlXTsKLQkJCWlkZW50X3B0ZSArPSBQVFJTX1BF
Ul9QVEU7Ci0KLQkJCXBtZFtwbWRpZHhdID0gX19wbWQoX19wYShwdGVfcGFnZSkgfCBfUEFHRV9U
QUJMRSk7Ci0JCX0KLQotCQkvKiBJbnN0YWxsIG1hcHBpbmdzICovCi0JCWZvciAocHRlaWR4ID0g
MDsgcHRlaWR4IDwgUFRSU19QRVJfUFRFOyBwdGVpZHgrKywgcGZuKyspIHsKLQkJCXB0ZV90IHB0
ZTsKLQotCQkJaWYgKHBmbiA+IG1heF9wZm5fbWFwcGVkKQotCQkJCW1heF9wZm5fbWFwcGVkID0g
cGZuOwotCi0JCQlpZiAoIXB0ZV9ub25lKHB0ZV9wYWdlW3B0ZWlkeF0pKQotCQkJCWNvbnRpbnVl
OwotCi0JCQlwdGUgPSBwZm5fcHRlKHBmbiwgUEFHRV9LRVJORUxfRVhFQyk7Ci0JCQlwdGVfcGFn
ZVtwdGVpZHhdID0gcHRlOwotCQl9Ci0JfQogCi0JZm9yIChwdGVpZHggPSAwOyBwdGVpZHggPCBp
ZGVudF9wdGU7IHB0ZWlkeCArPSBQVFJTX1BFUl9QVEUpCi0JCXNldF9wYWdlX3Byb3QoJmxldmVs
MV9pZGVudF9wZ3RbcHRlaWR4XSwgUEFHRV9LRVJORUxfUk8pOwotCi0Jc2V0X3BhZ2VfcHJvdChw
bWQsIFBBR0VfS0VSTkVMX1JPKTsKLX0KLSNlbmRpZgogdm9pZCBfX2luaXQgeGVuX3NldHVwX21h
Y2hwaHlzX21hcHBpbmcodm9pZCkKIHsKIAlzdHJ1Y3QgeGVuX21hY2hwaHlzX21hcHBpbmcgbWFw
cGluZzsKQEAgLTE4NDEsMTMgKzE2OTEsOCBAQCB2b2lkIF9faW5pdCB4ZW5fc2V0dXBfbWFjaHBo
eXNfbWFwcGluZyh2b2lkKQogCX0gZWxzZSB7CiAJCW1hY2hpbmVfdG9fcGh5c19uciA9IE1BQ0gy
UEhZU19OUl9FTlRSSUVTOwogCX0KLSNpZmRlZiBDT05GSUdfWDg2XzMyCi0JV0FSTl9PTigobWFj
aGluZV90b19waHlzX21hcHBpbmcgKyAobWFjaGluZV90b19waHlzX25yIC0gMSkpCi0JCTwgbWFj
aGluZV90b19waHlzX21hcHBpbmcpOwotI2VuZGlmCiB9CiAKLSNpZmRlZiBDT05GSUdfWDg2XzY0
CiBzdGF0aWMgdm9pZCBfX2luaXQgY29udmVydF9wZm5fbWZuKHZvaWQgKnYpCiB7CiAJcHRlX3Qg
KnB0ZSA9IHY7CkBAIC0yMTc4LDEwNSArMjAyMyw2IEBAIHZvaWQgX19pbml0IHhlbl9yZWxvY2F0
ZV9wMm0odm9pZCkKIAl4ZW5fc3RhcnRfaW5mby0+bnJfcDJtX2ZyYW1lcyA9IG5fZnJhbWVzOwog
fQogCi0jZWxzZQkvKiAhQ09ORklHX1g4Nl82NCAqLwotc3RhdGljIFJFU0VSVkVfQlJLX0FSUkFZ
KHBtZF90LCBpbml0aWFsX2tlcm5lbF9wbWQsIFBUUlNfUEVSX1BNRCk7Ci1zdGF0aWMgUkVTRVJW
RV9CUktfQVJSQVkocG1kX3QsIHN3YXBwZXJfa2VybmVsX3BtZCwgUFRSU19QRVJfUE1EKTsKLVJF
U0VSVkVfQlJLKGZpeHVwX2tlcm5lbF9wbWQsIFBBR0VfU0laRSk7Ci1SRVNFUlZFX0JSSyhmaXh1
cF9rZXJuZWxfcHRlLCBQQUdFX1NJWkUpOwotCi1zdGF0aWMgdm9pZCBfX2luaXQgeGVuX3dyaXRl
X2NyM19pbml0KHVuc2lnbmVkIGxvbmcgY3IzKQotewotCXVuc2lnbmVkIGxvbmcgcGZuID0gUEZO
X0RPV04oX19wYShzd2FwcGVyX3BnX2RpcikpOwotCi0JQlVHX09OKHJlYWRfY3IzX3BhKCkgIT0g
X19wYShpbml0aWFsX3BhZ2VfdGFibGUpKTsKLQlCVUdfT04oY3IzICE9IF9fcGEoc3dhcHBlcl9w
Z19kaXIpKTsKLQotCS8qCi0JICogV2UgYXJlIHN3aXRjaGluZyB0byBzd2FwcGVyX3BnX2RpciBm
b3IgdGhlIGZpcnN0IHRpbWUgKGZyb20KLQkgKiBpbml0aWFsX3BhZ2VfdGFibGUpIGFuZCB0aGVy
ZWZvcmUgbmVlZCB0byBtYXJrIHRoYXQgcGFnZQotCSAqIHJlYWQtb25seSBhbmQgdGhlbiBwaW4g
aXQuCi0JICoKLQkgKiBYZW4gZGlzYWxsb3dzIHNoYXJpbmcgb2Yga2VybmVsIFBNRHMgZm9yIFBB
RQotCSAqIGd1ZXN0cy4gVGhlcmVmb3JlIHdlIG11c3QgY29weSB0aGUga2VybmVsIFBNRCBmcm9t
Ci0JICogaW5pdGlhbF9wYWdlX3RhYmxlIGludG8gYSBuZXcga2VybmVsIFBNRCB0byBiZSB1c2Vk
IGluCi0JICogc3dhcHBlcl9wZ19kaXIuCi0JICovCi0Jc3dhcHBlcl9rZXJuZWxfcG1kID0KLQkJ
ZXh0ZW5kX2JyayhzaXplb2YocG1kX3QpICogUFRSU19QRVJfUE1ELCBQQUdFX1NJWkUpOwotCWNv
cHlfcGFnZShzd2FwcGVyX2tlcm5lbF9wbWQsIGluaXRpYWxfa2VybmVsX3BtZCk7Ci0Jc3dhcHBl
cl9wZ19kaXJbS0VSTkVMX1BHRF9CT1VOREFSWV0gPQotCQlfX3BnZChfX3BhKHN3YXBwZXJfa2Vy
bmVsX3BtZCkgfCBfUEFHRV9QUkVTRU5UKTsKLQlzZXRfcGFnZV9wcm90KHN3YXBwZXJfa2VybmVs
X3BtZCwgUEFHRV9LRVJORUxfUk8pOwotCi0Jc2V0X3BhZ2VfcHJvdChzd2FwcGVyX3BnX2Rpciwg
UEFHRV9LRVJORUxfUk8pOwotCXhlbl93cml0ZV9jcjMoY3IzKTsKLQlwaW5fcGFnZXRhYmxlX3Bm
bihNTVVFWFRfUElOX0wzX1RBQkxFLCBwZm4pOwotCi0JcGluX3BhZ2V0YWJsZV9wZm4oTU1VRVhU
X1VOUElOX1RBQkxFLAotCQkJICBQRk5fRE9XTihfX3BhKGluaXRpYWxfcGFnZV90YWJsZSkpKTsK
LQlzZXRfcGFnZV9wcm90KGluaXRpYWxfcGFnZV90YWJsZSwgUEFHRV9LRVJORUwpOwotCXNldF9w
YWdlX3Byb3QoaW5pdGlhbF9rZXJuZWxfcG1kLCBQQUdFX0tFUk5FTCk7Ci0KLQlwdl9vcHMubW11
LndyaXRlX2NyMyA9ICZ4ZW5fd3JpdGVfY3IzOwotfQotCi0vKgotICogRm9yIDMyIGJpdCBkb21h
aW5zIHhlbl9zdGFydF9pbmZvLT5wdF9iYXNlIGlzIHRoZSBwZ2QgYWRkcmVzcyB3aGljaCBtaWdo
dCBiZQotICogbm90IHRoZSBmaXJzdCBwYWdlIHRhYmxlIGluIHRoZSBwYWdlIHRhYmxlIHBvb2wu
Ci0gKiBJdGVyYXRlIHRocm91Z2ggdGhlIGluaXRpYWwgcGFnZSB0YWJsZXMgdG8gZmluZCB0aGUg
cmVhbCBwYWdlIHRhYmxlIGJhc2UuCi0gKi8KLXN0YXRpYyBwaHlzX2FkZHJfdCBfX2luaXQgeGVu
X2ZpbmRfcHRfYmFzZShwbWRfdCAqcG1kKQotewotCXBoeXNfYWRkcl90IHB0X2Jhc2UsIHBhZGRy
OwotCXVuc2lnbmVkIHBtZGlkeDsKLQotCXB0X2Jhc2UgPSBtaW4oX19wYSh4ZW5fc3RhcnRfaW5m
by0+cHRfYmFzZSksIF9fcGEocG1kKSk7Ci0KLQlmb3IgKHBtZGlkeCA9IDA7IHBtZGlkeCA8IFBU
UlNfUEVSX1BNRDsgcG1kaWR4KyspCi0JCWlmIChwbWRfcHJlc2VudChwbWRbcG1kaWR4XSkgJiYg
IXBtZF9sYXJnZShwbWRbcG1kaWR4XSkpIHsKLQkJCXBhZGRyID0gbTJwKHBtZFtwbWRpZHhdLnBt
ZCk7Ci0JCQlwdF9iYXNlID0gbWluKHB0X2Jhc2UsIHBhZGRyKTsKLQkJfQotCi0JcmV0dXJuIHB0
X2Jhc2U7Ci19Ci0KLXZvaWQgX19pbml0IHhlbl9zZXR1cF9rZXJuZWxfcGFnZXRhYmxlKHBnZF90
ICpwZ2QsIHVuc2lnbmVkIGxvbmcgbWF4X3BmbikKLXsKLQlwbWRfdCAqa2VybmVsX3BtZDsKLQot
CWtlcm5lbF9wbWQgPSBtMnYocGdkW0tFUk5FTF9QR0RfQk9VTkRBUlldLnBnZCk7Ci0KLQl4ZW5f
cHRfYmFzZSA9IHhlbl9maW5kX3B0X2Jhc2Uoa2VybmVsX3BtZCk7Ci0JeGVuX3B0X3NpemUgPSB4
ZW5fc3RhcnRfaW5mby0+bnJfcHRfZnJhbWVzICogUEFHRV9TSVpFOwotCi0JaW5pdGlhbF9rZXJu
ZWxfcG1kID0KLQkJZXh0ZW5kX2JyayhzaXplb2YocG1kX3QpICogUFRSU19QRVJfUE1ELCBQQUdF
X1NJWkUpOwotCi0JbWF4X3Bmbl9tYXBwZWQgPSBQRk5fRE9XTih4ZW5fcHRfYmFzZSArIHhlbl9w
dF9zaXplICsgNTEyICogMTAyNCk7Ci0KLQljb3B5X3BhZ2UoaW5pdGlhbF9rZXJuZWxfcG1kLCBr
ZXJuZWxfcG1kKTsKLQotCXhlbl9tYXBfaWRlbnRpdHlfZWFybHkoaW5pdGlhbF9rZXJuZWxfcG1k
LCBtYXhfcGZuKTsKLQotCWNvcHlfcGFnZShpbml0aWFsX3BhZ2VfdGFibGUsIHBnZCk7Ci0JaW5p
dGlhbF9wYWdlX3RhYmxlW0tFUk5FTF9QR0RfQk9VTkRBUlldID0KLQkJX19wZ2QoX19wYShpbml0
aWFsX2tlcm5lbF9wbWQpIHwgX1BBR0VfUFJFU0VOVCk7Ci0KLQlzZXRfcGFnZV9wcm90KGluaXRp
YWxfa2VybmVsX3BtZCwgUEFHRV9LRVJORUxfUk8pOwotCXNldF9wYWdlX3Byb3QoaW5pdGlhbF9w
YWdlX3RhYmxlLCBQQUdFX0tFUk5FTF9STyk7Ci0Jc2V0X3BhZ2VfcHJvdChlbXB0eV96ZXJvX3Bh
Z2UsIFBBR0VfS0VSTkVMX1JPKTsKLQotCXBpbl9wYWdldGFibGVfcGZuKE1NVUVYVF9VTlBJTl9U
QUJMRSwgUEZOX0RPV04oX19wYShwZ2QpKSk7Ci0KLQlwaW5fcGFnZXRhYmxlX3BmbihNTVVFWFRf
UElOX0wzX1RBQkxFLAotCQkJICBQRk5fRE9XTihfX3BhKGluaXRpYWxfcGFnZV90YWJsZSkpKTsK
LQl4ZW5fd3JpdGVfY3IzKF9fcGEoaW5pdGlhbF9wYWdlX3RhYmxlKSk7Ci0KLQltZW1ibG9ja19y
ZXNlcnZlKHhlbl9wdF9iYXNlLCB4ZW5fcHRfc2l6ZSk7Ci19Ci0jZW5kaWYJLyogQ09ORklHX1g4
Nl82NCAqLwotCiB2b2lkIF9faW5pdCB4ZW5fcmVzZXJ2ZV9zcGVjaWFsX3BhZ2VzKHZvaWQpCiB7
CiAJcGh5c19hZGRyX3QgcGFkZHI7CkBAIC0yMzEwLDEyICsyMDU2LDcgQEAgc3RhdGljIHZvaWQg
eGVuX3NldF9maXhtYXAodW5zaWduZWQgaWR4LCBwaHlzX2FkZHJfdCBwaHlzLCBwZ3Byb3RfdCBw
cm90KQogCiAJc3dpdGNoIChpZHgpIHsKIAljYXNlIEZJWF9CVE1BUF9FTkQgLi4uIEZJWF9CVE1B
UF9CRUdJTjoKLSNpZmRlZiBDT05GSUdfWDg2XzMyCi0JY2FzZSBGSVhfV1BfVEVTVDoKLSMgaWZk
ZWYgQ09ORklHX0hJR0hNRU0KLQljYXNlIEZJWF9LTUFQX0JFR0lOIC4uLiBGSVhfS01BUF9FTkQ6
Ci0jIGVuZGlmCi0jZWxpZiBkZWZpbmVkKENPTkZJR19YODZfVlNZU0NBTExfRU1VTEFUSU9OKQor
I2lmIGRlZmluZWQoQ09ORklHX1g4Nl9WU1lTQ0FMTF9FTVVMQVRJT04pCiAJY2FzZSBWU1lTQ0FM
TF9QQUdFOgogI2VuZGlmCiAJCS8qIEFsbCBsb2NhbCBwYWdlIG1hcHBpbmdzICovCkBAIC0yMzY3
LDkgKzIxMDgsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgeGVuX3Bvc3RfYWxsb2NhdG9yX2luaXQo
dm9pZCkKIAlwdl9vcHMubW11LnNldF9wdGUgPSB4ZW5fc2V0X3B0ZTsKIAlwdl9vcHMubW11LnNl
dF9wbWQgPSB4ZW5fc2V0X3BtZDsKIAlwdl9vcHMubW11LnNldF9wdWQgPSB4ZW5fc2V0X3B1ZDsK
LSNpZmRlZiBDT05GSUdfWDg2XzY0CiAJcHZfb3BzLm1tdS5zZXRfcDRkID0geGVuX3NldF9wNGQ7
Ci0jZW5kaWYKIAogCS8qIFRoaXMgd2lsbCB3b3JrIGFzIGxvbmcgYXMgcGF0Y2hpbmcgaGFzbid0
IGhhcHBlbmVkIHlldAogCSAgICh3aGljaCBpdCBoYXNuJ3QpICovCkBAIC0yMzc3LDE1ICsyMTE2
LDExIEBAIHN0YXRpYyB2b2lkIF9faW5pdCB4ZW5fcG9zdF9hbGxvY2F0b3JfaW5pdCh2b2lkKQog
CXB2X29wcy5tbXUuYWxsb2NfcG1kID0geGVuX2FsbG9jX3BtZDsKIAlwdl9vcHMubW11LnJlbGVh
c2VfcHRlID0geGVuX3JlbGVhc2VfcHRlOwogCXB2X29wcy5tbXUucmVsZWFzZV9wbWQgPSB4ZW5f
cmVsZWFzZV9wbWQ7Ci0jaWZkZWYgQ09ORklHX1g4Nl82NAogCXB2X29wcy5tbXUuYWxsb2NfcHVk
ID0geGVuX2FsbG9jX3B1ZDsKIAlwdl9vcHMubW11LnJlbGVhc2VfcHVkID0geGVuX3JlbGVhc2Vf
cHVkOwotI2VuZGlmCiAJcHZfb3BzLm1tdS5tYWtlX3B0ZSA9IFBWX0NBTExFRV9TQVZFKHhlbl9t
YWtlX3B0ZSk7CiAKLSNpZmRlZiBDT05GSUdfWDg2XzY0CiAJcHZfb3BzLm1tdS53cml0ZV9jcjMg
PSAmeGVuX3dyaXRlX2NyMzsKLSNlbmRpZgogfQogCiBzdGF0aWMgdm9pZCB4ZW5fbGVhdmVfbGF6
eV9tbXUodm9pZCkKQEAgLTI0MzAsMTcgKzIxNjUsMTEgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBw
dl9tbXVfb3BzIHhlbl9tbXVfb3BzIF9faW5pdGNvbnN0ID0gewogCS5tYWtlX3B0ZSA9IFBWX0NB
TExFRV9TQVZFKHhlbl9tYWtlX3B0ZV9pbml0KSwKIAkubWFrZV9wZ2QgPSBQVl9DQUxMRUVfU0FW
RSh4ZW5fbWFrZV9wZ2QpLAogCi0jaWZkZWYgQ09ORklHX1g4Nl9QQUUKLQkuc2V0X3B0ZV9hdG9t
aWMgPSB4ZW5fc2V0X3B0ZV9hdG9taWMsCi0JLnB0ZV9jbGVhciA9IHhlbl9wdGVfY2xlYXIsCi0J
LnBtZF9jbGVhciA9IHhlbl9wbWRfY2xlYXIsCi0jZW5kaWYJLyogQ09ORklHX1g4Nl9QQUUgKi8K
IAkuc2V0X3B1ZCA9IHhlbl9zZXRfcHVkX2h5cGVyLAogCiAJLm1ha2VfcG1kID0gUFZfQ0FMTEVF
X1NBVkUoeGVuX21ha2VfcG1kKSwKIAkucG1kX3ZhbCA9IFBWX0NBTExFRV9TQVZFKHhlbl9wbWRf
dmFsKSwKIAotI2lmZGVmIENPTkZJR19YODZfNjQKIAkucHVkX3ZhbCA9IFBWX0NBTExFRV9TQVZF
KHhlbl9wdWRfdmFsKSwKIAkubWFrZV9wdWQgPSBQVl9DQUxMRUVfU0FWRSh4ZW5fbWFrZV9wdWQp
LAogCS5zZXRfcDRkID0geGVuX3NldF9wNGRfaHlwZXIsCkBAIC0yNDUyLDcgKzIxODEsNiBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IHB2X21tdV9vcHMgeGVuX21tdV9vcHMgX19pbml0Y29uc3QgPSB7
CiAJLnA0ZF92YWwgPSBQVl9DQUxMRUVfU0FWRSh4ZW5fcDRkX3ZhbCksCiAJLm1ha2VfcDRkID0g
UFZfQ0FMTEVFX1NBVkUoeGVuX21ha2VfcDRkKSwKICNlbmRpZgotI2VuZGlmCS8qIENPTkZJR19Y
ODZfNjQgKi8KIAogCS5hY3RpdmF0ZV9tbSA9IHhlbl9hY3RpdmF0ZV9tbSwKIAkuZHVwX21tYXAg
PSB4ZW5fZHVwX21tYXAsCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vcDJtLmMgYi9hcmNoL3g4
Ni94ZW4vcDJtLmMKaW5kZXggOTVjZTliNWJlNDExLi5hNmNkMjkzNmQyMTQgMTAwNjQ0Ci0tLSBh
L2FyY2gveDg2L3hlbi9wMm0uYworKysgYi9hcmNoL3g4Ni94ZW4vcDJtLmMKQEAgLTM3OSwxMiAr
Mzc5LDggQEAgc3RhdGljIHZvaWQgX19pbml0IHhlbl9yZWJ1aWxkX3AybV9saXN0KHVuc2lnbmVk
IGxvbmcgKnAybSkKIAogCQlpZiAodHlwZSA9PSBQMk1fVFlQRV9QRk4gfHwgaSA8IGNodW5rKSB7
CiAJCQkvKiBVc2UgaW5pdGlhbCBwMm0gcGFnZSBjb250ZW50cy4gKi8KLSNpZmRlZiBDT05GSUdf
WDg2XzY0CiAJCQltZm5zID0gYWxsb2NfcDJtX3BhZ2UoKTsKIAkJCWNvcHlfcGFnZShtZm5zLCB4
ZW5fcDJtX2FkZHIgKyBwZm4pOwotI2Vsc2UKLQkJCW1mbnMgPSB4ZW5fcDJtX2FkZHIgKyBwZm47
Ci0jZW5kaWYKIAkJCXB0ZXAgPSBwb3B1bGF0ZV9leHRyYV9wdGUoKHVuc2lnbmVkIGxvbmcpKHAy
bSArIHBmbikpOwogCQkJc2V0X3B0ZShwdGVwLAogCQkJCXBmbl9wdGUoUEZOX0RPV04oX19wYSht
Zm5zKSksIFBBR0VfS0VSTkVMKSk7CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4vc2V0dXAuYyBi
L2FyY2gveDg2L3hlbi9zZXR1cC5jCmluZGV4IDU0OGQxZTBhNWJhMS4uZmY0MDEwMjZhZDg0IDEw
MDY0NAotLS0gYS9hcmNoL3g4Ni94ZW4vc2V0dXAuYworKysgYi9hcmNoL3g4Ni94ZW4vc2V0dXAu
YwpAQCAtNTQ0LDEzICs1NDQsMTAgQEAgc3RhdGljIHVuc2lnbmVkIGxvbmcgX19pbml0IHhlbl9n
ZXRfcGFnZXNfbGltaXQodm9pZCkKIHsKIAl1bnNpZ25lZCBsb25nIGxpbWl0OwogCi0jaWZkZWYg
Q09ORklHX1g4Nl8zMgotCWxpbWl0ID0gR0IoNjQpIC8gUEFHRV9TSVpFOwotI2Vsc2UKIAlsaW1p
dCA9IE1BWE1FTSAvIFBBR0VfU0laRTsKIAlpZiAoIXhlbl9pbml0aWFsX2RvbWFpbigpICYmIHhl
bl81MTJnYl9saW1pdCkKIAkJbGltaXQgPSBHQig1MTIpIC8gUEFHRV9TSVpFOwotI2VuZGlmCisK
IAlyZXR1cm4gbGltaXQ7CiB9CiAKQEAgLTcyMSwxNyArNzE4LDggQEAgc3RhdGljIHZvaWQgX19p
bml0IHhlbl9yZXNlcnZlX3hlbl9tZm5saXN0KHZvaWQpCiAJaWYgKCF4ZW5faXNfZTgyMF9yZXNl
cnZlZChzdGFydCwgc2l6ZSkpCiAJCXJldHVybjsKIAotI2lmZGVmIENPTkZJR19YODZfMzIKLQkv
KgotCSAqIFJlbG9jYXRpbmcgdGhlIHAybSBvbiAzMiBiaXQgc3lzdGVtIHRvIGFuIGFyYml0cmFy
eSB2aXJ0dWFsIGFkZHJlc3MKLQkgKiBpcyBub3Qgc3VwcG9ydGVkLCBzbyBqdXN0IGdpdmUgdXAu
Ci0JICovCi0JeGVuX3Jhd19jb25zb2xlX3dyaXRlKCJYZW4gaHlwZXJ2aXNvciBhbGxvY2F0ZWQg
cDJtIGxpc3QgY29uZmxpY3RzIHdpdGggRTgyMCBtYXBcbiIpOwotCUJVRygpOwotI2Vsc2UKIAl4
ZW5fcmVsb2NhdGVfcDJtKCk7CiAJbWVtYmxvY2tfZnJlZShzdGFydCwgc2l6ZSk7Ci0jZW5kaWYK
IH0KIAogLyoqCkBAIC05MjAsMjAgKzkwOCw2IEBAIGNoYXIgKiBfX2luaXQgeGVuX21lbW9yeV9z
ZXR1cCh2b2lkKQogCXJldHVybiAiWGVuIjsKIH0KIAotLyoKLSAqIFNldCB0aGUgYml0IGluZGlj
YXRpbmcgIm5vc2VnbmVnIiBsaWJyYXJ5IHZhcmlhbnRzIHNob3VsZCBiZSB1c2VkLgotICogV2Ug
b25seSBuZWVkIHRvIGJvdGhlciBpbiBwdXJlIDMyLWJpdCBtb2RlOyBjb21wYXQgMzItYml0IHBy
b2Nlc3NlcwotICogY2FuIGhhdmUgdW4tdHJ1bmNhdGVkIHNlZ21lbnRzLCBzbyB3cmFwcGluZyBh
cm91bmQgaXMgYWxsb3dlZC4KLSAqLwotc3RhdGljIHZvaWQgX19pbml0IGZpZGRsZV92ZHNvKHZv
aWQpCi17Ci0jaWZkZWYgQ09ORklHX1g4Nl8zMgotCXUzMiAqbWFzayA9IHZkc29faW1hZ2VfMzIu
ZGF0YSArCi0JCXZkc29faW1hZ2VfMzIuc3ltX1ZEU08zMl9OT1RFX01BU0s7Ci0JKm1hc2sgfD0g
MSA8PCBWRFNPX05PVEVfTk9ORUdTRUdfQklUOwotI2VuZGlmCi19Ci0KIHN0YXRpYyBpbnQgcmVn
aXN0ZXJfY2FsbGJhY2sodW5zaWduZWQgdHlwZSwgY29uc3Qgdm9pZCAqZnVuYykKIHsKIAlzdHJ1
Y3QgY2FsbGJhY2tfcmVnaXN0ZXIgY2FsbGJhY2sgPSB7CkBAIC05NDgsMjUgKzkyMiwxNyBAQCBz
dGF0aWMgaW50IHJlZ2lzdGVyX2NhbGxiYWNrKHVuc2lnbmVkIHR5cGUsIGNvbnN0IHZvaWQgKmZ1
bmMpCiB2b2lkIHhlbl9lbmFibGVfc3lzZW50ZXIodm9pZCkKIHsKIAlpbnQgcmV0OwotCXVuc2ln
bmVkIHN5c2VudGVyX2ZlYXR1cmU7Ci0KLSNpZmRlZiBDT05GSUdfWDg2XzMyCi0Jc3lzZW50ZXJf
ZmVhdHVyZSA9IFg4Nl9GRUFUVVJFX1NFUDsKLSNlbHNlCi0Jc3lzZW50ZXJfZmVhdHVyZSA9IFg4
Nl9GRUFUVVJFX1NZU0VOVEVSMzI7Ci0jZW5kaWYKIAotCWlmICghYm9vdF9jcHVfaGFzKHN5c2Vu
dGVyX2ZlYXR1cmUpKQorCWlmICghYm9vdF9jcHVfaGFzKFg4Nl9GRUFUVVJFX1NZU0VOVEVSMzIp
KQogCQlyZXR1cm47CiAKIAlyZXQgPSByZWdpc3Rlcl9jYWxsYmFjayhDQUxMQkFDS1RZUEVfc3lz
ZW50ZXIsIHhlbl9zeXNlbnRlcl90YXJnZXQpOwotCWlmKHJldCAhPSAwKQotCQlzZXR1cF9jbGVh
cl9jcHVfY2FwKHN5c2VudGVyX2ZlYXR1cmUpOworCWlmIChyZXQgIT0gMCkKKwkJc2V0dXBfY2xl
YXJfY3B1X2NhcChYODZfRkVBVFVSRV9TWVNFTlRFUjMyKTsKIH0KIAogdm9pZCB4ZW5fZW5hYmxl
X3N5c2NhbGwodm9pZCkKIHsKLSNpZmRlZiBDT05GSUdfWDg2XzY0CiAJaW50IHJldDsKIAogCXJl
dCA9IHJlZ2lzdGVyX2NhbGxiYWNrKENBTExCQUNLVFlQRV9zeXNjYWxsLCB4ZW5fc3lzY2FsbF90
YXJnZXQpOwpAQCAtOTgyLDcgKzk0OCw2IEBAIHZvaWQgeGVuX2VuYWJsZV9zeXNjYWxsKHZvaWQp
CiAJCWlmIChyZXQgIT0gMCkKIAkJCXNldHVwX2NsZWFyX2NwdV9jYXAoWDg2X0ZFQVRVUkVfU1lT
Q0FMTDMyKTsKIAl9Ci0jZW5kaWYgLyogQ09ORklHX1g4Nl82NCAqLwogfQogCiB2b2lkIF9faW5p
dCB4ZW5fcHZtbXVfYXJjaF9zZXR1cCh2b2lkKQpAQCAtMTAyMiw3ICs5ODcsNiBAQCB2b2lkIF9f
aW5pdCB4ZW5fYXJjaF9zZXR1cCh2b2lkKQogCWRpc2FibGVfY3B1aWRsZSgpOwogCWRpc2FibGVf
Y3B1ZnJlcSgpOwogCVdBUk5fT04oeGVuX3NldF9kZWZhdWx0X2lkbGUoKSk7Ci0JZmlkZGxlX3Zk
c28oKTsKICNpZmRlZiBDT05GSUdfTlVNQQogCW51bWFfb2ZmID0gMTsKICNlbmRpZgpkaWZmIC0t
Z2l0IGEvYXJjaC94ODYveGVuL3NtcF9wdi5jIGIvYXJjaC94ODYveGVuL3NtcF9wdi5jCmluZGV4
IDU5MGZjZjg2MzAwNi4uMjA5NzdhMjQyMDAzIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni94ZW4vc21w
X3B2LmMKKysrIGIvYXJjaC94ODYveGVuL3NtcF9wdi5jCkBAIC0yMDgsMTUgKzIwOCw2IEBAIHN0
YXRpYyB2b2lkIF9faW5pdCB4ZW5fcHZfc21wX3ByZXBhcmVfYm9vdF9jcHUodm9pZCkKIAkJICog
c3VyZSB0aGUgb2xkIG1lbW9yeSBjYW4gYmUgcmVjeWNsZWQuICovCiAJCW1ha2VfbG93bWVtX3Bh
Z2VfcmVhZHdyaXRlKHhlbl9pbml0aWFsX2dkdCk7CiAKLSNpZmRlZiBDT05GSUdfWDg2XzMyCi0J
LyoKLQkgKiBYZW4gc3RhcnRzIHVzIHdpdGggWEVOX0ZMQVRfUklORzFfRFMsIGJ1dCBsaW51eCBj
b2RlCi0JICogZXhwZWN0cyBfX1VTRVJfRFMKLQkgKi8KLQlsb2Fkc2VnbWVudChkcywgX19VU0VS
X0RTKTsKLQlsb2Fkc2VnbWVudChlcywgX19VU0VSX0RTKTsKLSNlbmRpZgotCiAJeGVuX2ZpbHRl
cl9jcHVfbWFwcygpOwogCXhlbl9zZXR1cF92Y3B1X2luZm9fcGxhY2VtZW50KCk7CiAKQEAgLTI5
NiwxMCArMjg3LDYgQEAgY3B1X2luaXRpYWxpemVfY29udGV4dCh1bnNpZ25lZCBpbnQgY3B1LCBz
dHJ1Y3QgdGFza19zdHJ1Y3QgKmlkbGUpCiAKIAlnZHQgPSBnZXRfY3B1X2dkdF9ydyhjcHUpOwog
Ci0jaWZkZWYgQ09ORklHX1g4Nl8zMgotCWN0eHQtPnVzZXJfcmVncy5mcyA9IF9fS0VSTkVMX1BF
UkNQVTsKLQljdHh0LT51c2VyX3JlZ3MuZ3MgPSBfX0tFUk5FTF9TVEFDS19DQU5BUlk7Ci0jZW5k
aWYKIAltZW1zZXQoJmN0eHQtPmZwdV9jdHh0LCAwLCBzaXplb2YoY3R4dC0+ZnB1X2N0eHQpKTsK
IAogCS8qCkBAIC0zMzcsMTIgKzMyNCw4IEBAIGNwdV9pbml0aWFsaXplX2NvbnRleHQodW5zaWdu
ZWQgaW50IGNwdSwgc3RydWN0IHRhc2tfc3RydWN0ICppZGxlKQogCWN0eHQtPmtlcm5lbF9zcyA9
IF9fS0VSTkVMX0RTOwogCWN0eHQtPmtlcm5lbF9zcCA9IHRhc2tfdG9wX29mX3N0YWNrKGlkbGUp
OwogCi0jaWZkZWYgQ09ORklHX1g4Nl8zMgotCWN0eHQtPmV2ZW50X2NhbGxiYWNrX2NzICAgICA9
IF9fS0VSTkVMX0NTOwotCWN0eHQtPmZhaWxzYWZlX2NhbGxiYWNrX2NzICA9IF9fS0VSTkVMX0NT
OwotI2Vsc2UKIAljdHh0LT5nc19iYXNlX2tlcm5lbCA9IHBlcl9jcHVfb2Zmc2V0KGNwdSk7Ci0j
ZW5kaWYKKwogCWN0eHQtPmV2ZW50X2NhbGxiYWNrX2VpcCAgICA9CiAJCSh1bnNpZ25lZCBsb25n
KXhlbl9oeXBlcnZpc29yX2NhbGxiYWNrOwogCWN0eHQtPmZhaWxzYWZlX2NhbGxiYWNrX2VpcCA9
CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4veGVuLWFzbS5TIGIvYXJjaC94ODYveGVuL3hlbi1h
c20uUwppbmRleCA4MDE5ZWRkMDEyNWMuLjU0ZTFlOWNhMzVhNCAxMDA2NDQKLS0tIGEvYXJjaC94
ODYveGVuL3hlbi1hc20uUworKysgYi9hcmNoL3g4Ni94ZW4veGVuLWFzbS5TCkBAIC03NSwxMSAr
NzUsNyBAQCBFTlRSWSh4ZW5fc2F2ZV9mbF9kaXJlY3QpCiAgKi8KIEVOVFJZKHhlbl9yZXN0b3Jl
X2ZsX2RpcmVjdCkKIAlGUkFNRV9CRUdJTgotI2lmZGVmIENPTkZJR19YODZfNjQKIAl0ZXN0dyAk
WDg2X0VGTEFHU19JRiwgJWRpCi0jZWxzZQotCXRlc3RiICRYODZfRUZMQUdTX0lGPj44LCAlYWgK
LSNlbmRpZgogCXNldHogUEVSX0NQVV9WQVIoeGVuX3ZjcHVfaW5mbykgKyBYRU5fdmNwdV9pbmZv
X21hc2sKIAkvKgogCSAqIFByZWVtcHQgaGVyZSBkb2Vzbid0IG1hdHRlciBiZWNhdXNlIHRoYXQg
d2lsbCBkZWFsIHdpdGggYW55CkBAIC0xMDMsMTUgKzk5LDYgQEAgRU5UUlkoeGVuX3Jlc3RvcmVf
ZmxfZGlyZWN0KQogICovCiBFTlRSWShjaGVja19ldmVudHMpCiAJRlJBTUVfQkVHSU4KLSNpZmRl
ZiBDT05GSUdfWDg2XzMyCi0JcHVzaCAlZWF4Ci0JcHVzaCAlZWN4Ci0JcHVzaCAlZWR4Ci0JY2Fs
bCB4ZW5fZm9yY2VfZXZ0Y2huX2NhbGxiYWNrCi0JcG9wICVlZHgKLQlwb3AgJWVjeAotCXBvcCAl
ZWF4Ci0jZWxzZQogCXB1c2ggJXJheAogCXB1c2ggJXJjeAogCXB1c2ggJXJkeApAQCAtMTMxLDcg
KzExOCw2IEBAIEVOVFJZKGNoZWNrX2V2ZW50cykKIAlwb3AgJXJkeAogCXBvcCAlcmN4CiAJcG9w
ICVyYXgKLSNlbmRpZgogCUZSQU1FX0VORAogCXJldAogRU5EUFJPQyhjaGVja19ldmVudHMpCmRp
ZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4veGVuLWFzbV8zMi5TIGIvYXJjaC94ODYveGVuL3hlbi1h
c21fMzIuUwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggYzE1ZGIwNjBhMjQyLi4wMDAw
MDAwMDAwMDAKLS0tIGEvYXJjaC94ODYveGVuL3hlbi1hc21fMzIuUworKysgL2Rldi9udWxsCkBA
IC0xLDIwNyArMCwwIEBACi0vKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAqLwot
LyoKLSAqIEFzbSB2ZXJzaW9ucyBvZiBYZW4gcHYtb3BzLCBzdWl0YWJsZSBmb3IgZGlyZWN0IHVz
ZS4KLSAqCi0gKiBXZSBvbmx5IGJvdGhlciB3aXRoIGRpcmVjdCBmb3JtcyAoaWUsIHZjcHUgaW4g
cGRhKSBvZiB0aGUKLSAqIG9wZXJhdGlvbnMgaGVyZTsgdGhlIGluZGlyZWN0IGZvcm1zIGFyZSBi
ZXR0ZXIgaGFuZGxlZCBpbiBDLgotICovCi0KLSNpbmNsdWRlIDxhc20vdGhyZWFkX2luZm8uaD4K
LSNpbmNsdWRlIDxhc20vcHJvY2Vzc29yLWZsYWdzLmg+Ci0jaW5jbHVkZSA8YXNtL3NlZ21lbnQu
aD4KLSNpbmNsdWRlIDxhc20vYXNtLmg+Ci0KLSNpbmNsdWRlIDx4ZW4vaW50ZXJmYWNlL3hlbi5o
PgotCi0jaW5jbHVkZSA8bGludXgvbGlua2FnZS5oPgotCi0vKiBQc2V1ZG8tZmxhZyB1c2VkIGZv
ciB2aXJ0dWFsIE5NSSwgd2hpY2ggd2UgZG9uJ3QgaW1wbGVtZW50IHlldCAqLwotI2RlZmluZSBY
RU5fRUZMQUdTX05NSSAgMHg4MDAwMDAwMAotCi0vKgotICogVGhpcyBpcyBydW4gd2hlcmUgYSBu
b3JtYWwgaXJldCB3b3VsZCBiZSBydW4sIHdpdGggdGhlIHNhbWUgc3RhY2sgc2V0dXA6Ci0gKgk4
OiBlZmxhZ3MKLSAqCTQ6IGNzCi0gKgllc3AtPiAwOiBlaXAKLSAqCi0gKiBUaGlzIGF0dGVtcHRz
IHRvIG1ha2Ugc3VyZSB0aGF0IGFueSBwZW5kaW5nIGV2ZW50cyBhcmUgZGVhbHQgd2l0aAotICog
b24gcmV0dXJuIHRvIHVzZXJtb2RlLCBidXQgdGhlcmUgaXMgYSBzbWFsbCB3aW5kb3cgaW4gd2hp
Y2ggYW4KLSAqIGV2ZW50IGNhbiBoYXBwZW4ganVzdCBiZWZvcmUgZW50ZXJpbmcgdXNlcm1vZGUu
ICBJZiB0aGUgbmVzdGVkCi0gKiBpbnRlcnJ1cHQgZW5kcyB1cCBzZXR0aW5nIG9uZSBvZiB0aGUg
VElGX1dPUktfTUFTSyBwZW5kaW5nIHdvcmsKLSAqIGZsYWdzLCB0aGV5IHdpbGwgbm90IGJlIHRl
c3RlZCBhZ2FpbiBiZWZvcmUgcmV0dXJuaW5nIHRvCi0gKiB1c2VybW9kZS4gVGhpcyBtZWFucyB0
aGF0IGEgcHJvY2VzcyBjYW4gZW5kIHVwIHdpdGggcGVuZGluZyB3b3JrLAotICogd2hpY2ggd2ls
bCBiZSB1bnByb2Nlc3NlZCB1bnRpbCB0aGUgcHJvY2VzcyBlbnRlcnMgYW5kIGxlYXZlcyB0aGUK
LSAqIGtlcm5lbCBhZ2Fpbiwgd2hpY2ggY291bGQgYmUgYW4gdW5ib3VuZGVkIGFtb3VudCBvZiB0
aW1lLiAgVGhpcwotICogbWVhbnMgdGhhdCBhIHBlbmRpbmcgc2lnbmFsIG9yIHJlc2NoZWR1bGUg
ZXZlbnQgY291bGQgYmUKLSAqIGluZGVmaW5pdGVseSBkZWxheWVkLgotICoKLSAqIFRoZSBmaXgg
aXMgdG8gbm90aWNlIGEgbmVzdGVkIGludGVycnVwdCBpbiB0aGUgY3JpdGljYWwgd2luZG93LCBh
bmQKLSAqIGlmIG9uZSBvY2N1cnMsIHRoZW4gZm9sZCB0aGUgbmVzdGVkIGludGVycnVwdCBpbnRv
IHRoZSBjdXJyZW50Ci0gKiBpbnRlcnJ1cHQgc3RhY2sgZnJhbWUsIGFuZCByZS1wcm9jZXNzIGl0
IGl0ZXJhdGl2ZWx5IHJhdGhlciB0aGFuCi0gKiByZWN1cnNpdmVseS4gIFRoaXMgbWVhbnMgdGhh
dCBpdCB3aWxsIGV4aXQgdmlhIHRoZSBub3JtYWwgcGF0aCwgYW5kCi0gKiBhbGwgcGVuZGluZyB3
b3JrIHdpbGwgYmUgZGVhbHQgd2l0aCBhcHByb3ByaWF0ZWx5LgotICoKLSAqIEJlY2F1c2UgdGhl
IG5lc3RlZCBpbnRlcnJ1cHQgaGFuZGxlciBuZWVkcyB0byBkZWFsIHdpdGggdGhlIGN1cnJlbnQK
LSAqIHN0YWNrIHN0YXRlIGluIHdoYXRldmVyIGZvcm0gaXRzIGluLCB3ZSBrZWVwIHRoaW5ncyBz
aW1wbGUgYnkgb25seQotICogdXNpbmcgYSBzaW5nbGUgcmVnaXN0ZXIgd2hpY2ggaXMgcHVzaGVk
L3BvcHBlZCBvbiB0aGUgc3RhY2suCi0gKi8KLQotLm1hY3JvIFBPUF9GUwotMToKLQlwb3B3ICVm
cwotLnB1c2hzZWN0aW9uIC5maXh1cCwgImF4IgotMjoJbW92dyAkMCwgKCVlc3ApCi0Jam1wIDFi
Ci0ucG9wc2VjdGlvbgotCV9BU01fRVhUQUJMRSgxYiwyYikKLS5lbmRtCi0KLUVOVFJZKHhlbl9p
cmV0KQotCS8qIHRlc3QgZWZsYWdzIGZvciBzcGVjaWFsIGNhc2VzICovCi0JdGVzdGwgJChYODZf
RUZMQUdTX1ZNIHwgWEVOX0VGTEFHU19OTUkpLCA4KCVlc3ApCi0Jam56IGh5cGVyX2lyZXQKLQot
CXB1c2ggJWVheAotCUVTUF9PRkZTRVQ9NAkjIGJ5dGVzIHB1c2hlZCBvbnRvIHN0YWNrCi0KLQkv
KiBTdG9yZSB2Y3B1X2luZm8gcG9pbnRlciBmb3IgZWFzeSBhY2Nlc3MgKi8KLSNpZmRlZiBDT05G
SUdfU01QCi0JcHVzaHcgJWZzCi0JbW92bCAkKF9fS0VSTkVMX1BFUkNQVSksICVlYXgKLQltb3Zs
ICVlYXgsICVmcwotCW1vdmwgJWZzOnhlbl92Y3B1LCAlZWF4Ci0JUE9QX0ZTCi0jZWxzZQotCW1v
dmwgJXNzOnhlbl92Y3B1LCAlZWF4Ci0jZW5kaWYKLQotCS8qIGNoZWNrIElGIHN0YXRlIHdlJ3Jl
IHJlc3RvcmluZyAqLwotCXRlc3RiICRYODZfRUZMQUdTX0lGPj44LCA4KzErRVNQX09GRlNFVCgl
ZXNwKQotCi0JLyoKLQkgKiBNYXliZSBlbmFibGUgZXZlbnRzLiAgT25jZSB0aGlzIGhhcHBlbnMg
d2UgY291bGQgZ2V0IGEKLQkgKiByZWN1cnNpdmUgZXZlbnQsIHNvIHRoZSBjcml0aWNhbCByZWdp
b24gc3RhcnRzIGltbWVkaWF0ZWx5Ci0JICogYWZ0ZXJ3YXJkcy4gIEhvd2V2ZXIsIGlmIHRoYXQg
aGFwcGVucyB3ZSBkb24ndCBlbmQgdXAKLQkgKiByZXN1bWluZyB0aGUgY29kZSwgc28gd2UgZG9u
J3QgaGF2ZSB0byBiZSB3b3JyaWVkIGFib3V0Ci0JICogYmVpbmcgcHJlZW1wdGVkIHRvIGFub3Ro
ZXIgQ1BVLgotCSAqLwotCXNldHogJXNzOlhFTl92Y3B1X2luZm9fbWFzayglZWF4KQoteGVuX2ly
ZXRfc3RhcnRfY3JpdDoKLQotCS8qIGNoZWNrIGZvciB1bm1hc2tlZCBhbmQgcGVuZGluZyAqLwot
CWNtcHcgJDB4MDAwMSwgJXNzOlhFTl92Y3B1X2luZm9fcGVuZGluZyglZWF4KQotCi0JLyoKLQkg
KiBJZiB0aGVyZSdzIHNvbWV0aGluZyBwZW5kaW5nLCBtYXNrIGV2ZW50cyBhZ2FpbiBzbyB3ZSBj
YW4KLQkgKiBqdW1wIGJhY2sgaW50byB4ZW5faHlwZXJ2aXNvcl9jYWxsYmFjay4gT3RoZXJ3aXNl
IGRvIG5vdAotCSAqIHRvdWNoIFhFTl92Y3B1X2luZm9fbWFzay4KLQkgKi8KLQlqbmUgMWYKLQlt
b3ZiICQxLCAlc3M6WEVOX3ZjcHVfaW5mb19tYXNrKCVlYXgpCi0KLTE6CXBvcGwgJWVheAotCi0J
LyoKLQkgKiBGcm9tIHRoaXMgcG9pbnQgb24gdGhlIHJlZ2lzdGVycyBhcmUgcmVzdG9yZWQgYW5k
IHRoZSBzdGFjawotCSAqIHVwZGF0ZWQsIHNvIHdlIGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQg
aXQgaWYgd2UncmUKLQkgKiBwcmVlbXB0ZWQKLQkgKi8KLWlyZXRfcmVzdG9yZV9lbmQ6Ci0KLQkv
KgotCSAqIEp1bXAgdG8gaHlwZXJ2aXNvcl9jYWxsYmFjayBhZnRlciBmaXhpbmcgdXAgdGhlIHN0
YWNrLgotCSAqIEV2ZW50cyBhcmUgbWFza2VkLCBzbyBqdW1waW5nIG91dCBvZiB0aGUgY3JpdGlj
YWwgcmVnaW9uIGlzCi0JICogT0suCi0JICovCi0JamUgeGVuX2h5cGVydmlzb3JfY2FsbGJhY2sK
LQotMToJaXJldAoteGVuX2lyZXRfZW5kX2NyaXQ6Ci0JX0FTTV9FWFRBQkxFKDFiLCBpcmV0X2V4
YykKLQotaHlwZXJfaXJldDoKLQkvKiBwdXQgdGhpcyBvdXQgb2YgbGluZSBzaW5jZSBpdHMgdmVy
eSByYXJlbHkgdXNlZCAqLwotCWptcCBoeXBlcmNhbGxfcGFnZSArIF9fSFlQRVJWSVNPUl9pcmV0
ICogMzIKLQotCS5nbG9ibCB4ZW5faXJldF9zdGFydF9jcml0LCB4ZW5faXJldF9lbmRfY3JpdAot
Ci0vKgotICogVGhpcyBpcyBjYWxsZWQgYnkgeGVuX2h5cGVydmlzb3JfY2FsbGJhY2sgaW4gZW50
cnkuUyB3aGVuIGl0IHNlZXMKLSAqIHRoYXQgdGhlIEVJUCBhdCB0aGUgdGltZSBvZiBpbnRlcnJ1
cHQgd2FzIGJldHdlZW4KLSAqIHhlbl9pcmV0X3N0YXJ0X2NyaXQgYW5kIHhlbl9pcmV0X2VuZF9j
cml0LiAgV2UncmUgcGFzc2VkIHRoZSBFSVAgaW4KLSAqICVlYXggc28gd2UgY2FuIGRvIGEgbW9y
ZSByZWZpbmVkIGRldGVybWluYXRpb24gb2Ygd2hhdCB0byBkby4KLSAqCi0gKiBUaGUgc3RhY2sg
Zm9ybWF0IGF0IHRoaXMgcG9pbnQgaXM6Ci0gKgktLS0tLS0tLS0tLS0tLS0tCi0gKgkgc3MJCTog
KHNzL2VzcCBtYXkgYmUgcHJlc2VudCBpZiB3ZSBjYW1lIGZyb20gdXNlcm1vZGUpCi0gKgkgZXNw
CQk6Ci0gKgkgZWZsYWdzCQl9ICBvdXRlciBleGNlcHRpb24gaW5mbwotICoJIGNzCQl9Ci0gKgkg
ZWlwCQl9Ci0gKgktLS0tLS0tLS0tLS0tLS0tIDwtIGVkaSAoY29weSBkZXN0KQotICoJIGVheAkJ
OiAgb3V0ZXIgZWF4IGlmIGl0IGhhc24ndCBiZWVuIHJlc3RvcmVkCi0gKgktLS0tLS0tLS0tLS0t
LS0tCi0gKgkgZWZsYWdzCQl9ICBuZXN0ZWQgZXhjZXB0aW9uIGluZm8KLSAqCSBjcwkJfSAgIChu
byBzcy9lc3AgYmVjYXVzZSB3ZSdyZSBuZXN0ZWQKLSAqCSBlaXAJCX0gICAgZnJvbSB0aGUgc2Ft
ZSByaW5nKQotICoJIG9yaWdfZWF4CX08LSBlc2kgKGNvcHkgc3JjKQotICoJIC0gLSAtIC0gLSAt
IC0gLQotICoJIGZzCQl9Ci0gKgkgZXMJCX0KLSAqCSBkcwkJfSAgU0FWRV9BTEwgc3RhdGUKLSAq
CSBlYXgJCX0KLSAqCSAgOgkJOgotICoJIGVieAkJfTwtIGVzcAotICoJLS0tLS0tLS0tLS0tLS0t
LQotICoKLSAqIEluIG9yZGVyIHRvIGRlbGl2ZXIgdGhlIG5lc3RlZCBleGNlcHRpb24gcHJvcGVy
bHksIHdlIG5lZWQgdG8gc2hpZnQKLSAqIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgcmV0dXJuIGFkZHIg
dXAgdG8gdGhlIGVycm9yIGNvZGUgc28gaXQgc2l0cwotICoganVzdCB1bmRlciB0aGUgb3V0ZXIg
ZXhjZXB0aW9uIGluZm8uICBUaGlzIG1lYW5zIHRoYXQgd2hlbiB3ZQotICogaGFuZGxlIHRoZSBl
eGNlcHRpb24sIHdlIGRvIGl0IGluIHRoZSBjb250ZXh0IG9mIHRoZSBvdXRlcgotICogZXhjZXB0
aW9uIHJhdGhlciB0aGFuIHN0YXJ0aW5nIGEgbmV3IG9uZS4KLSAqCi0gKiBUaGUgb25seSBjYXZl
YXQgaXMgdGhhdCBpZiB0aGUgb3V0ZXIgZWF4IGhhc24ndCBiZWVuIHJlc3RvcmVkIHlldAotICog
KGllLCBpdCdzIHN0aWxsIG9uIHN0YWNrKSwgd2UgbmVlZCB0byBpbnNlcnQgaXRzIHZhbHVlIGlu
dG8gdGhlCi0gKiBTQVZFX0FMTCBzdGF0ZSBiZWZvcmUgZ29pbmcgb24sIHNpbmNlIGl0J3MgdXNl
cm1vZGUgc3RhdGUgd2hpY2ggd2UKLSAqIGV2ZW50dWFsbHkgbmVlZCB0byByZXN0b3JlLgotICov
Ci1FTlRSWSh4ZW5faXJldF9jcml0X2ZpeHVwKQotCS8qCi0JICogUGFyYW5vaWE6IE1ha2Ugc3Vy
ZSB3ZSdyZSByZWFsbHkgY29taW5nIGZyb20ga2VybmVsIHNwYWNlLgotCSAqIE9uZSBjb3VsZCBp
bWFnaW5lIGEgY2FzZSB3aGVyZSB1c2Vyc3BhY2UganVtcHMgaW50byB0aGUKLQkgKiBjcml0aWNh
bCByYW5nZSBhZGRyZXNzLCBidXQganVzdCBiZWZvcmUgdGhlIENQVSBkZWxpdmVycyBhCi0JICog
R1AsIGl0IGRlY2lkZXMgdG8gZGVsaXZlciBhbiBpbnRlcnJ1cHQgaW5zdGVhZC4gIFVubGlrZWx5
PwotCSAqIERlZmluaXRlbHkuICBFYXN5IHRvIGF2b2lkPyAgWWVzLiAgVGhlIEludGVsIGRvY3Vt
ZW50cwotCSAqIGV4cGxpY2l0bHkgc2F5IHRoYXQgdGhlIHJlcG9ydGVkIEVJUCBmb3IgYSBiYWQg
anVtcCBpcyB0aGUKLQkgKiBqdW1wIGluc3RydWN0aW9uIGl0c2VsZiwgbm90IHRoZSBkZXN0aW5h
dGlvbiwgYnV0IHNvbWUKLQkgKiB2aXJ0dWFsIGVudmlyb25tZW50cyBnZXQgdGhpcyB3cm9uZy4K
LQkgKi8KLQltb3ZsIFBUX0NTKCVlc3ApLCAlZWN4Ci0JYW5kbCAkU0VHTUVOVF9SUExfTUFTSywg
JWVjeAotCWNtcGwgJFVTRVJfUlBMLCAlZWN4Ci0JamUgMmYKLQotCWxlYSBQVF9PUklHX0VBWCgl
ZXNwKSwgJWVzaQotCWxlYSBQVF9FRkxBR1MoJWVzcCksICVlZGkKLQotCS8qCi0JICogSWYgZWlw
IGlzIGJlZm9yZSBpcmV0X3Jlc3RvcmVfZW5kIHRoZW4gc3RhY2sKLQkgKiBoYXNuJ3QgYmVlbiBy
ZXN0b3JlZCB5ZXQuCi0JICovCi0JY21wICRpcmV0X3Jlc3RvcmVfZW5kLCAlZWF4Ci0JamFlIDFm
Ci0KLQltb3ZsIDArNCglZWRpKSwgJWVheAkJLyogY29weSBFQVggKGp1c3QgYWJvdmUgdG9wIG9m
IGZyYW1lKSAqLwotCW1vdmwgJWVheCwgUFRfRUFYKCVlc3ApCi0KLQlsZWEgRVNQX09GRlNFVCgl
ZWRpKSwgJWVkaQkvKiBtb3ZlIGRlc3QgdXAgb3ZlciBzYXZlZCByZWdzICovCi0KLQkvKiBzZXQg
dXAgdGhlIGNvcHkgKi8KLTE6CXN0ZAotCW1vdiAkUFRfRUlQIC8gNCwgJWVjeAkJLyogc2F2ZWQg
cmVncyB1cCB0byBvcmlnX2VheCAqLwotCXJlcCBtb3ZzbAotCWNsZAotCi0JbGVhIDQoJWVkaSks
ICVlc3AJCS8qIHBvaW50IGVzcCB0byBuZXcgZnJhbWUgKi8KLTI6CWptcCB4ZW5fZG9fdXBjYWxs
Ci0KZGlmZiAtLWdpdCBhL2FyY2gveDg2L3hlbi94ZW4taGVhZC5TIGIvYXJjaC94ODYveGVuL3hl
bi1oZWFkLlMKaW5kZXggYzFkOGI5MGFhNGUyLi4wM2E3YWY2Yjc0NTMgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L3hlbi94ZW4taGVhZC5TCisrKyBiL2FyY2gveDg2L3hlbi94ZW4taGVhZC5TCkBAIC0z
Nyw3ICszNyw2IEBAIEVOVFJZKHN0YXJ0dXBfeGVuKQogCW1vdiAlX0FTTV9TSSwgeGVuX3N0YXJ0
X2luZm8KIAltb3YgJGluaXRfdGhyZWFkX3VuaW9uK1RIUkVBRF9TSVpFLCAlX0FTTV9TUAogCi0j
aWZkZWYgQ09ORklHX1g4Nl82NAogCS8qIFNldCB1cCAlZ3MuCiAJICoKIAkgKiBUaGUgYmFzZSBv
ZiAlZ3MgYWx3YXlzIHBvaW50cyB0byBmaXhlZF9wZXJjcHVfZGF0YS4gIElmIHRoZQpAQCAtNDks
NyArNDgsNiBAQCBFTlRSWShzdGFydHVwX3hlbikKIAltb3ZxCSRJTklUX1BFUl9DUFVfVkFSKGZp
eGVkX3BlcmNwdV9kYXRhKSwlcmF4CiAJY2RxCiAJd3Jtc3IKLSNlbmRpZgogCiAJam1wIHhlbl9z
dGFydF9rZXJuZWwKIEVORChzdGFydHVwX3hlbikKQEAgLTc1LDEzICs3Myw5IEBAIEVORChoeXBl
cmNhbGxfcGFnZSkKIAlFTEZOT1RFKFhlbiwgWEVOX0VMRk5PVEVfR1VFU1RfT1MsICAgICAgIC5h
c2NpeiAibGludXgiKQogCUVMRk5PVEUoWGVuLCBYRU5fRUxGTk9URV9HVUVTVF9WRVJTSU9OLCAg
LmFzY2l6ICIyLjYiKQogCUVMRk5PVEUoWGVuLCBYRU5fRUxGTk9URV9YRU5fVkVSU0lPTiwgICAg
LmFzY2l6ICJ4ZW4tMy4wIikKLSNpZmRlZiBDT05GSUdfWDg2XzMyCi0JRUxGTk9URShYZW4sIFhF
Tl9FTEZOT1RFX1ZJUlRfQkFTRSwgICAgICBfQVNNX1BUUiBfX1BBR0VfT0ZGU0VUKQotI2Vsc2UK
IAlFTEZOT1RFKFhlbiwgWEVOX0VMRk5PVEVfVklSVF9CQVNFLCAgICAgIF9BU01fUFRSIF9fU1RB
UlRfS0VSTkVMX21hcCkKIAkvKiBNYXAgdGhlIHAybSB0YWJsZSB0byBhIDUxMkdCLWFsaWduZWQg
dXNlciBhZGRyZXNzLiAqLwogCUVMRk5PVEUoWGVuLCBYRU5fRUxGTk9URV9JTklUX1AyTSwgICAg
ICAgLnF1YWQgKFBVRF9TSVpFICogUFRSU19QRVJfUFVEKSkKLSNlbmRpZgogI2lmZGVmIENPTkZJ
R19YRU5fUFYKIAlFTEZOT1RFKFhlbiwgWEVOX0VMRk5PVEVfRU5UUlksICAgICAgICAgIF9BU01f
UFRSIHN0YXJ0dXBfeGVuKQogI2VuZGlmCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni94ZW4veGVuLW9w
cy5oIGIvYXJjaC94ODYveGVuL3hlbi1vcHMuaAppbmRleCAyZjExMWY0N2JhOTguLmNmZTkxNzBl
Mzk3MCAxMDA2NDQKLS0tIGEvYXJjaC94ODYveGVuL3hlbi1vcHMuaAorKysgYi9hcmNoL3g4Ni94
ZW4veGVuLW9wcy5oCkBAIC0xMiwxMCArMTIsOCBAQCBleHRlcm4gY29uc3QgY2hhciB4ZW5faHlw
ZXJ2aXNvcl9jYWxsYmFja1tdOwogZXh0ZXJuIGNvbnN0IGNoYXIgeGVuX2ZhaWxzYWZlX2NhbGxi
YWNrW107CiAKIHZvaWQgeGVuX3N5c2VudGVyX3RhcmdldCh2b2lkKTsKLSNpZmRlZiBDT05GSUdf
WDg2XzY0CiB2b2lkIHhlbl9zeXNjYWxsX3RhcmdldCh2b2lkKTsKIHZvaWQgeGVuX3N5c2NhbGwz
Ml90YXJnZXQodm9pZCk7Ci0jZW5kaWYKIAogZXh0ZXJuIHZvaWQgKnhlbl9pbml0aWFsX2dkdDsK
IApAQCAtMzQsMTUgKzMyLDEyIEBAIHZvaWQgeGVuX3NldHVwX21mbl9saXN0X2xpc3Qodm9pZCk7
CiB2b2lkIHhlbl9idWlsZF9tZm5fbGlzdF9saXN0KHZvaWQpOwogdm9pZCB4ZW5fc2V0dXBfbWFj
aHBoeXNfbWFwcGluZyh2b2lkKTsKIHZvaWQgeGVuX3NldHVwX2tlcm5lbF9wYWdldGFibGUocGdk
X3QgKnBnZCwgdW5zaWduZWQgbG9uZyBtYXhfcGZuKTsKLXZvaWQgeGVuX3Jlc2VydmVfdG9wKHZv
aWQpOwogdm9pZCBfX2luaXQgeGVuX3Jlc2VydmVfc3BlY2lhbF9wYWdlcyh2b2lkKTsKIHZvaWQg
X19pbml0IHhlbl9wdF9jaGVja19lODIwKHZvaWQpOwogCiB2b2lkIHhlbl9tbV9waW5fYWxsKHZv
aWQpOwogdm9pZCB4ZW5fbW1fdW5waW5fYWxsKHZvaWQpOwotI2lmZGVmIENPTkZJR19YODZfNjQK
IHZvaWQgX19pbml0IHhlbl9yZWxvY2F0ZV9wMm0odm9pZCk7Ci0jZW5kaWYKIAogYm9vbCBfX2lu
aXQgeGVuX2lzX2U4MjBfcmVzZXJ2ZWQocGh5c19hZGRyX3Qgc3RhcnQsIHBoeXNfYWRkcl90IHNp
emUpOwogdW5zaWduZWQgbG9uZyBfX3JlZiB4ZW5fY2hrX2V4dHJhX21lbSh1bnNpZ25lZCBsb25n
IHBmbik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3hlbi9LY29uZmlnIGIvZHJpdmVycy94ZW4vS2Nv
bmZpZwppbmRleCBlYzY1NThiNzllOWQuLmMzNTlhMmMwNGQ4MCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy94ZW4vS2NvbmZpZworKysgYi9kcml2ZXJzL3hlbi9LY29uZmlnCkBAIC02Myw5ICs2Myw3IEBA
IGNvbmZpZyBYRU5fQkFMTE9PTl9NRU1PUllfSE9UUExVRwogCiBjb25maWcgWEVOX0JBTExPT05f
TUVNT1JZX0hPVFBMVUdfTElNSVQKIAlpbnQgIkhvdHBsdWdnZWQgbWVtb3J5IGxpbWl0IChpbiBH
aUIpIGZvciBhIFBWIGd1ZXN0IgotCWRlZmF1bHQgNTEyIGlmIFg4Nl82NAotCWRlZmF1bHQgNCBp
ZiBYODZfMzIKLQlyYW5nZSAwIDY0IGlmIFg4Nl8zMgorCWRlZmF1bHQgNTEyCiAJZGVwZW5kcyBv
biBYRU5fSEFWRV9QVk1NVQogCWRlcGVuZHMgb24gWEVOX0JBTExPT05fTUVNT1JZX0hPVFBMVUcK
IAloZWxwCi0tIAoyLjE2LjQKCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBsaXN0cy54ZW5wcm9q
ZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8veGVu
LWRldmVs

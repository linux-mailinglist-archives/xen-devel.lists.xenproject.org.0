Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 39CA6179307
	for <lists+xen-devel@lfdr.de>; Wed,  4 Mar 2020 16:13:07 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1j9VfU-00011P-6S; Wed, 04 Mar 2020 15:10:40 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <SRS0=/75R=4V=gmail.com=julien.grall.oss@srs-us1.protection.inumbo.net>)
 id 1j9VfT-00011K-3i
 for xen-devel@lists.xenproject.org; Wed, 04 Mar 2020 15:10:39 +0000
X-Inumbo-ID: 4d82521e-5e2a-11ea-a418-12813bfff9fa
Received: from mail-wm1-f65.google.com (unknown [209.85.128.65])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 4d82521e-5e2a-11ea-a418-12813bfff9fa;
 Wed, 04 Mar 2020 15:10:37 +0000 (UTC)
Received: by mail-wm1-f65.google.com with SMTP id a141so2237132wme.2
 for <xen-devel@lists.xenproject.org>; Wed, 04 Mar 2020 07:10:37 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:subject:to:cc:references:from:message-id:date
 :user-agent:mime-version:in-reply-to:content-language
 :content-transfer-encoding;
 bh=Dot1sOSu755DnbAQZdsT4VcDtJn5kgLBe6vLL2dHteI=;
 b=XMfDkMEN7yEqsOAgd2pjfQK0mbHFn1AYCQ+3Ssvs1WgcRWsHJySTmHOh2RMQmSNXXe
 de+g5doGhxyfrHCulMLeGtnXfyESNrmyIOngcQRKxpenKDq2+AuQXGbxcCahQ4AcwiGB
 wA0Vw7UbLS+IBONPxZM+75hr2DwVIu64EnfYDFD4JZZ/er+b6fpKMiJB+3uAOuMYzUhX
 rNoVHM6CrqYvkjqLSvG+JiPTmT/fq9gPserdU5/6QrrRY0CFQDhlhzEqtQJVxgRWqsxC
 AJcnZUJzEuhGDjDiHM8vErrzpgTru5wUtc0g9v+vy9ZgYHq0fvn/jJ9VbrKMn9TDatV8
 GCiA==
X-Gm-Message-State: ANhLgQ0SzzJ6xTT6/S/Ydl7Dnk0E/lRTMAlX6Zgk3aI+vBq5h/zVmNgh
 tgrwVgf0dPUyTnx+nldFwfs=
X-Google-Smtp-Source: ADFU+vtpqcLcIj048YQqt0nJLIblaL9gnDd/F3qvyqyFoNnuK+pg2jQ7A005tiiyFSfscTyrrGKoiw==
X-Received: by 2002:a7b:cb97:: with SMTP id m23mr3901386wmi.37.1583334636528; 
 Wed, 04 Mar 2020 07:10:36 -0800 (PST)
Received: from a483e7b01a66.ant.amazon.com (54-240-197-232.amazon.com.
 [54.240.197.232])
 by smtp.gmail.com with ESMTPSA id c4sm4675310wml.7.2020.03.04.07.10.35
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Wed, 04 Mar 2020 07:10:35 -0800 (PST)
To: Paul Durrant <pdurrant@amazon.com>, xen-devel@lists.xenproject.org
References: <20200213105325.3022-1-pdurrant@amazon.com>
 <20200213105325.3022-2-pdurrant@amazon.com>
From: Julien Grall <julien@xen.org>
Message-ID: <d5051ee2-23b3-5df8-f734-8269c40824b6@xen.org>
Date: Wed, 4 Mar 2020 15:10:34 +0000
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:68.0)
 Gecko/20100101 Thunderbird/68.5.0
MIME-Version: 1.0
In-Reply-To: <20200213105325.3022-2-pdurrant@amazon.com>
Content-Language: en-GB
Subject: Re: [Xen-devel] [PATCH v5 1/2] docs/designs: Add a design document
 for non-cooperative live migration
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wl@xen.org>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Jan Beulich <jbeulich@suse.com>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

SGkgUGF1bCwKClRoZSBwcm9wb3NhbCBsb29rcyBzZW5zaWJsZSB0byBtZS4gU29tZSBOSVRwaWNr
aW5nIGJlbG93LgoKT24gMTMvMDIvMjAyMCAxMDo1MywgUGF1bCBEdXJyYW50IHdyb3RlOgo+IEl0
IGhhcyBiZWNvbWUgYXBwYXJlbnQgdG8gc29tZSBsYXJnZSBjbG91ZCBwcm92aWRlcnMgdGhhdCB0
aGUgY3VycmVudAo+IG1vZGVsIG9mIGNvb3BlcmF0aXZlIG1pZ3JhdGlvbiBvZiBndWVzdHMgdW5k
ZXIgWGVuIGlzIG5vdCB1c2FibGUgYXMgaXQKPiByZWxpZXMgb24gc29mdHdhcmUgcnVubmluZyBp
bnNpZGUgdGhlIGd1ZXN0LCB3aGljaCBpcyBsaWtlbHkgYmV5b25kIHRoZQo+IHByb3ZpZGVyJ3Mg
Y29udHJvbC4KPiBUaGlzIHBhdGNoIGludHJvZHVjZXMgYSBwcm9wb3NhbCBmb3Igbm9uLWNvb3Bl
cmF0aXZlIGxpdmUgbWlncmF0aW9uLAo+IGRlc2lnbmVkIG5vdCB0byByZWx5IG9uIGFueSBndWVz
dC1zaWRlIHNvZnR3YXJlLgo+IAo+IFNpZ25lZC1vZmYtYnk6IFBhdWwgRHVycmFudCA8cGR1cnJh
bnRAYW1hem9uLmNvbT4KPiAtLS0KPiBDYzogQW5kcmV3IENvb3BlciA8YW5kcmV3LmNvb3BlcjNA
Y2l0cml4LmNvbT4KPiBDYzogR2VvcmdlIER1bmxhcCA8R2VvcmdlLkR1bmxhcEBldS5jaXRyaXgu
Y29tPgo+IENjOiBJYW4gSmFja3NvbiA8aWFuLmphY2tzb25AZXUuY2l0cml4LmNvbT4KPiBDYzog
SmFuIEJldWxpY2ggPGpiZXVsaWNoQHN1c2UuY29tPgo+IENjOiBKdWxpZW4gR3JhbGwgPGp1bGll
bkB4ZW4ub3JnPgo+IENjOiBLb25yYWQgUnplc3p1dGVrIFdpbGsgPGtvbnJhZC53aWxrQG9yYWNs
ZS5jb20+Cj4gQ2M6IFN0ZWZhbm8gU3RhYmVsbGluaSA8c3N0YWJlbGxpbmlAa2VybmVsLm9yZz4K
PiBDYzogV2VpIExpdSA8d2xAeGVuLm9yZz4KPiAKPiB2NToKPiAgIC0gTm90ZSB0aGF0IFBWIGRv
bWFpbiBhcmUgbm90IGp1c3QgZXhwZWN0ZWQgdG8gY28tb3BlcmF0ZSwgdGhleSBhcmUKPiAgICAg
cmVxdWlyZWQgdG8KPiAKPiB2NDoKPiAgIC0gRml4IGlzc3VlcyByYWlzZWQgYnkgV2VpCj4gCj4g
djI6Cj4gICAtIFVzZSB0aGUgdGVybSAnbm9uLWNvb3BlcmF0aXZlJyBpbnN0ZWFkIG9mICd0cmFu
c3BhcmVudCcKPiAgIC0gUmVwbGFjZSAndHJ1c3QgaW4nIHdpdGggJ3JlbGlhbmNlIG9uJyB3aGVu
IHJlZmVycmluZyB0byBndWVzdC1zaWRlCj4gICAgIHNvZnR3YXJlCj4gLS0tCj4gICBkb2NzL2Rl
c2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZCB8IDI3MiArKysrKysrKysrKysrKysr
KysrKysrCj4gICAxIGZpbGUgY2hhbmdlZCwgMjcyIGluc2VydGlvbnMoKykKPiAgIGNyZWF0ZSBt
b2RlIDEwMDY0NCBkb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZAo+IAo+
IGRpZmYgLS1naXQgYS9kb2NzL2Rlc2lnbnMvbm9uLWNvb3BlcmF0aXZlLW1pZ3JhdGlvbi5tZCBi
L2RvY3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCj4gbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKPiBpbmRleCAwMDAwMDAwMDAwLi4wOWY3NGM4YzBkCj4gLS0tIC9kZXYvbnVsbAo+
ICsrKyBiL2RvY3MvZGVzaWducy9ub24tY29vcGVyYXRpdmUtbWlncmF0aW9uLm1kCj4gQEAgLTAs
MCArMSwyNzIgQEAKPiArIyBOb24tQ29vcGVyYXRpdmUgTWlncmF0aW9uIG9mIEd1ZXN0cyBvbiBY
ZW4KPiArCj4gKyMjIEJhY2tncm91bmQKPiArCj4gK1RoZSBub3JtYWwgbW9kZWwgb2YgbWlncmF0
aW9uIGluIFhlbiBpcyBkcml2ZW4gYnkgdGhlIGd1ZXN0IGJlY2F1c2UgaXQgd2FzCj4gK29yaWdp
bmFsbHkgaW1wbGVtZW50ZWQgZm9yIFBWIGd1ZXN0cywgd2hlcmUgdGhlIGd1ZXN0IG11c3QgYmUg
YXdhcmUgaXQgaXMKPiArcnVubmluZyB1bmRlciBYZW4gYW5kIGlzIGhlbmNlIGV4cGVjdGVkIHRv
IGNvLW9wZXJhdGUuIFRoaXMgbW9kZWwgZGF0ZXMgZnJvbQo+ICthbiBlcmEgd2hlbiBpdCB3YXMg
YXNzdW1lZCB0aGF0IHRoZSBob3N0IGFkbWluaXN0cmF0b3IgaGFkIGNvbnRyb2wgb2YgYXQgbGVh
c3QKPiArdGhlIHByaXZpbGVnZWQgc29mdHdhcmUgcnVubmluZyBpbiB0aGUgZ3Vlc3QgKGkuZS4g
dGhlIGd1ZXN0IGtlcm5lbCkgd2hpY2ggbWF5Cj4gK3N0aWxsIGJlIHRydWUgaW4gYW4gZW50ZXJw
cmlzZSBkZXBsb3ltZW50IGJ1dCBpcyBub3QgZ2VuZXJhbGx5IHRydWUgaW4gYSBjbG91ZAo+ICtl
bnZpcm9ubWVudC4gVGhlIGFpbSBvZiB0aGlzIGRlc2lnbiBpcyB0byBwcm92aWRlIGEgbW9kZWwg
d2hpY2ggaXMgcHVyZWx5IGhvc3QKPiArZHJpdmVuLCByZXF1aXJpbmcgbm8gY28tb3BlcmF0aW9u
IGZyb20gdGhlIHNvZnR3YXJlIHJ1bm5pbmcgaW4gdGhlCj4gK2d1ZXN0LCBhbmQgaXMgdGh1cyBz
dWl0YWJsZSBmb3IgY2xvdWQgc2NlbmFyaW9zLgo+ICsKPiArUFYgZ3Vlc3RzIGFyZSBvdXQgb2Yg
c2NvcGUgZm9yIHRoaXMgcHJvamVjdCBiZWNhdXNlLCBhcyBpcyBvdXRsaW5lZCBhYm92ZSwgdGhl
eQo+ICtoYXZlIGEgc3ltYmlvdGljIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBoeXBlcnZpc29yIGFu
ZCB0aGVyZWZvcmUgYSBjZXJ0YWluIGxldmVsCj4gK29mIGNvLW9wZXJhdGlvbiBpcyByZXF1aXJl
ZC4KPiArCj4gK0hWTSBndWVzdHMgY2FuIGFscmVhZHkgYmUgbWlncmF0ZWQgb24gWGVuIHdpdGhv
dXQgZ3Vlc3QgY28tb3BlcmF0aW9uIGJ1dCBvbmx5Cj4gK2lmIHRoZXkgZG9u4oCZdCBoYXZlIFBW
IGRyaXZlcnMgaW5zdGFsbGVkWzFdIG9yIGFyZSBpbiBwb3dlciBzdGF0ZSBTMy4gVGhlCgpTMyBp
cyB2ZXJ5IEFDUEkgY2VudHJpYywgc28gSSB3b3VsZCBwcmVmZXIgaWYgd2UgYXZvaWQgdGhlIHRl
cm0uIEkgdGhpbmsgCnRoZSBub24tQUNQSSBkZXNjcmlwdGlvbiBpcyAic3VzcGVuZCB0byBSQU0i
LiBJIHdvdWxkIGJlIE9LIGlzIHlvdSAKbWVudGlvbiBTMyBpbiBwYXJlbnRoZXNpcy4KCj4gK3Jl
YXNvbiBmb3Igbm90IGV4cGVjdGluZyBjby1vcGVyYXRpb24gaWYgdGhlIGd1ZXN0IGlzIGluIFMz
IGlzIG9idmlvdXMsIGJ1dCB0aGUKPiArcmVhc29uIGNvLW9wZXJhdGlvbiBpcyBleHBlY3RlZCBp
ZiBQViBkcml2ZXJzIGFyZSBpbnN0YWxsZWQgaXMgZHVlIHRvIHRoZQo+ICtuYXR1cmUgb2YgUFYg
cHJvdG9jb2xzLgo+ICsKPiArIyMgWGVuc3RvcmUgTm9kZXMgYW5kIERvbWFpbiBJRAo+ICsKPiAr
VGhlIFBWIGRyaXZlciBtb2RlbCBjb25zaXN0cyBvZiBhICpmcm9udGVuZCogYW5kIGEgKmJhY2tl
bmQqLiBUaGUgZnJvbnRlbmQgcnVucwo+ICtpbnNpZGUgdGhlIGd1ZXN0IGRvbWFpbiBhbmQgdGhl
IGJhY2tlbmQgcnVucyBpbnNpZGUgYSAqc2VydmljZSBkb21haW4qIHdoaWNoCj4gK21heSBvciBt
YXkgbm90IGJlIGRvbWFpbiAwLiBUaGUgZnJvbnRlbmQgYW5kIGJhY2tlbmQgdHlwaWNhbGx5IHBh
c3MgZGF0YSB2aWEKPiArbWVtb3J5IHBhZ2VzIHdoaWNoIGFyZSBzaGFyZWQgYmV0d2VlbiB0aGUg
dHdvIGRvbWFpbnMsIGJ1dCB0aGlzIGNoYW5uZWwgb2YKPiArY29tbXVuaWNhdGlvbiBpcyBnZW5l
cmFsbHkgZXN0YWJsaXNoZWQgdXNpbmcgeGVuc3RvcmUgKHRoZSBzdG9yZSBwcm90b2NvbAo+ICtp
dHNlbGYgYmVpbmcgYW4gZXhjZXB0aW9uIHRvIHRoaXMgZm9yIG9idmlvdXMgY2hpY2tlbi1hbmQt
ZWdnIHJlYXNvbnMpLgo+ICsKPiArVHlwaWNhbCBwcm90b2NvbCBlc3RhYmxpc2htZW50IGlzIGJh
c2VkIG9uIHVzZSBvZiB0d28gc2VwYXJhdGUgeGVuc3RvcmUKPiArKmFyZWFzKi4gSWYgd2UgY29u
c2lkZXIgUFYgZHJpdmVycyBmb3IgdGhlICpuZXRpZiogcHJvdG9jb2wgKGkuZS4gY2xhc3Mgdmlm
KQo+ICthbmQgYXNzdW1lIHRoZSBndWVzdCBoYXMgZG9taWQgWCwgdGhlIHNlcnZpY2UgZG9tYWlu
IGhhcyBkb21pZCBZLCBhbmQgdGhlIHZpZgo+ICtoYXMgaW5kZXggWiB0aGVuIHRoZSBmcm9udGVu
ZCBhcmVhIHdpbGwgcmVzaWRlIHVuZGVyIHRoZSBwYXJlbnQgbm9kZToKPiArCj4gK2AvbG9jYWwv
ZG9tYWluL1kvZGV2aWNlL3ZpZi9aYAo+ICsKPiArQWxsIGJhY2tlbmRzLCBieSBjb252ZW50aW9u
LCB0eXBpY2FsbHkgcmVzaWRlIHVuZGVyIHBhcmVudCBub2RlOgo+ICsKPiArYC9sb2NhbC9kb21h
aW4vWC9iYWNrZW5kYAo+ICsKPiArYW5kIHRoZSBub3JtYWwgYmFja2VuZCBhcmVhIGZvciB2aWYg
WiB3b3VsZCBiZToKPiArCj4gK2AvbG9jYWwvZG9tYWluL1gvYmFja2VuZC92aWYvWS9aYAo+ICsK
PiArYnV0IHRoaXMgc2hvdWxkIG5vdCBiZSBhc3N1bWVkLgo+ICsKPiArVGhlIHRvb2xzdGFjayB3
aWxsIHBsYWNlIHR3byBub2RlcyBpbiB0aGUgZnJvbnRlbmQgYXJlYSB0byBleHBsaWNpdGx5IGxv
Y2F0ZQo+ICt0aGUgYmFja2VuZDoKPiArCj4gKyAgICAqIGBiYWNrZW5kYDogdGhlIGZ1bGx5IHF1
YWxpZmllZCB4ZW5zdG9yZSBwYXRoIG9mIHRoZSBiYWNrZW5kIGFyZWEKPiArICAgICogYGJhY2tl
bmQtaWRgOiB0aGUgZG9taWQgb2YgdGhlIHNlcnZpY2UgZG9tYWluCj4gKwo+ICthbmQgc2ltaWxh
cmx5IHR3byBub2RlcyBpbiB0aGUgYmFja2VuZCBhcmVhIHRvIGxvY2F0ZSB0aGUgZnJvbnRlbmQg
YXJlYToKPiArCj4gKyAgICAqIGBmcm9udGVuZGA6IHRoZSBmdWxseSBxdWFsaWZpZWQgeGVuc3Rv
cmUgcGF0aCBvZiB0aGUgZnJvbnRlbmQgYXJlYQo+ICsgICAgKiBgZnJvbnRlbmQtaWRgOiB0aGUg
ZG9taWQgb2YgdGhlIGd1ZXN0IGRvbWFpbgo+ICsKPiArCj4gK1RoZSBndWVzdCBkb21haW4gb25s
eSBoYXMgd3JpdGUgcGVybWlzc2lvbiB0byB0aGUgZnJvbnRlbmQgYXJlYSBhbmQgc2ltaWxhcmx5
Cj4gK3RoZSBzZXJ2aWNlIGRvbWFpbiBvbmx5IGhhcyB3cml0ZSBwZXJtaXNzaW9uIHRvIHRoZSBi
YWNrZW5kIGFyZWEsIGJ1dCBib3RoIGVuZHMKPiAraGF2ZSByZWFkIHBlcm1pc3Npb24gdG8gYm90
aCBhcmVhcy4KPiArCj4gK1VuZGVyIGJvdGggZnJvbnRlbmQgYW5kIGJhY2tlbmQgYXJlYXMgaXMg
YSBub2RlIGNhbGxlZCAqc3RhdGUqLiBUaGlzIGlzIGtleSB0bwo+ICtwcm90b2NvbCBlc3RhYmxp
c2htZW50LiBVcG9uIFBWIGRldmljZSBjcmVhdGlvbiB0aGUgdG9vbHN0YWNrIHdpbGwgc2V0IHRo
ZQo+ICt2YWx1ZSBvZiBib3RoIHN0YXRlIG5vZGVzIHRvIDEgKFhlbmJ1c1N0YXRlSW5pdGlhbGlz
aW5nWzJdKS4gVGhpcyBzaG91bGQgY2F1c2UKPiArZW51bWVyYXRpb24gb2YgYXBwcm9wcmlhdGUg
ZGV2aWNlcyBpbiBib3RoIHRoZSBndWVzdCBhbmQgc2VydmljZSBkb21haW5zLiBUaGUKPiArYmFj
a2VuZCBkZXZpY2UsIG9uY2UgaXQgaGFzIHdyaXR0ZW4gYW55IG5lY2Vzc2FyeSBwcm90b2NvbCBz
cGVjaWZpYyBpbmZvcm1hdGlvbgo+ICtpbnRvIHRoZSB4ZW5zdG9yZSBiYWNrZW5kIGFyZWEgKHRv
IGJlIHJlYWQgYnkgdGhlIGZyb250ZW5kIGRyaXZlcikgd2lsbCB1cGRhdGUKPiArdGhlIGJhY2tl
bmQgc3RhdGUgbm9kZSB0byAyIChYZW5idXNTdGF0ZUluaXRXYWl0KS4gRnJvbSB0aGlzIHBvaW50
IG9uIFBWCj4gK3Byb3RvY29scyBkaWZmZXIgc2xpZ2h0bHk7IHRoZSBmb2xsb3dpbmcgaWxsdXN0
cmF0aW9uIGlzIHRydWUgb2YgdGhlIG5ldGlmCj4gK3Byb3RvY29sLgo+ICsKPiArVXBvbiBzZWVp
bmcgYSBiYWNrZW5kIHN0YXRlIHZhbHVlIG9mIDIsIHRoZSBmcm9udGVuZCBkcml2ZXIgd2lsbCB0
aGVuIHJlYWQgdGhlCj4gK3Byb3RvY29sIHNwZWNpZmljIGluZm9ybWF0aW9uLCB3cml0ZSBkZXRh
aWxzIG9mIGdyYW50IHJlZmVyZW5jZXMgKGZvciBzaGFyZWQKPiArcGFnZXMpIGFuZCBldmVudCBj
aGFubmVsIHBvcnRzIChmb3Igc2lnbmFsbGluZykgdGhhdCBpdCBoYXMgY3JlYXRlZCwgYW5kIHNl
dAo+ICt0aGUgc3RhdGUgbm9kZSBpbiB0aGUgZnJvbnRlbmQgYXJlYSB0byA0IChYZW5idXNTdGF0
ZUNvbm5lY3RlZCkuIFVwb24gc2VlIHRoaXMKPiArZnJvbnRlbmQgc3RhdGUsIHRoZSBiYWNrZW5k
IGRyaXZlciB3aWxsIHRoZW4gcmVhZCB0aGUgZ3JhbnQgcmVmZXJlbmNlcyAobWFwcGluZwo+ICt0
aGUgc2hhcmVkIHBhZ2VzKSBhbmQgZXZlbnQgY2hhbm5lbCBwb3J0cyAob3BlbmluZyBpdHMgZW5k
IG9mIHRoZW0pIGFuZCBzZXQgdGhlCj4gK3N0YXRlIG5vZGUgaW4gdGhlIGJhY2tlbmQgYXJlYSB0
byA0LiBQcm90b2NvbCBlc3RhYmxpc2htZW50IGlzIG5vdyBjb21wbGV0ZSBhbmQKPiArdGhlIGZy
b250ZW5kIGFuZCBiYWNrZW5kIHN0YXJ0IHRvIHBhc3MgZGF0YS4KPiArCj4gK0JlY2F1c2UgdGhl
IGRvbWlkIG9mIGJvdGggZW5kcyBvZiBhIFBWIHByb3RvY29sIGZvcm1zIGEga2V5IHBhcnQgb2Yg
bmVnb3RpYXRpbmcKPiArdGhlIGRhdGEgcGxhbmUgZm9yIHRoYXQgcHJvdG9jb2wgKGJlY2F1c2Ug
aXQgaXMgZW5jb2RlZCBpbnRvIGJvdGggeGVuc3RvcmUKPiArbm9kZXMgYW5kIG5vZGUgcGF0aHMp
LCBhbmQgYmVjYXVzZSBndWVzdOKAmXMgb3duIGRvbWlkIGFuZCB0aGUgZG9taWQgb2YgdGhlCj4g
K3NlcnZpY2UgZG9tYWluIGFyZSB2aXNpYmxlIHRvIHRoZSBndWVzdCBpbiB4ZW5zdG9yZSAoYW5k
IGhlbmNlIG1heSBjYWNoZWQKPiAraW50ZXJuYWxseSksIGFuZCBuZWl0aGVyIGFyZSBuZWNlc3Nh
cmlseSBwcmVzZXJ2ZWQgZHVyaW5nIG1pZ3JhdGlvbiwgaXQgaXMKPiAraGVuY2UgbmVjZXNzYXJ5
IHRvIGhhdmUgdGhlIGNvLW9wZXJhdGlvbiBvZiB0aGUgZnJvbnRlbmQgaW4gcmUtbmVnb3RpYXRp
bmcgdGhlCj4gK3Byb3RvY29sIHVzaW5nIHRoZSBuZXcgZG9taWQgYWZ0ZXIgbWlncmF0aW9uLgo+
ICsKPiArTW9yZW92ZXIgdGhlIGJhY2tlbmQtaWQgdmFsdWUgd2lsbCBiZSB1c2VkIGJ5IHRoZSBm
cm9udGVuZCBkcml2ZXIgaW4gc2V0dGluZyB1cAo+ICtncmFudCB0YWJsZSBlbnRyaWVzIGFuZCBl
dmVudCBjaGFubmVscyB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBzZXJ2aWNlIGRvbWFpbiwKPiAr
c28gdGhlIGNvLW9wZXJhdGlvbiBvZiB0aGUgZ3Vlc3QgaXMgcmVxdWlyZWQgdG8gcmUtZXN0YWJs
aXNoIHRoZXNlIGluIHRoZSBuZXcKPiAraG9zdCBlbnZpcm9ubWVudCBhZnRlciBtaWdyYXRpb24u
Cj4gKwo+ICtUaHVzIGlmIHdlIGFyZSB0byBjaGFuZ2UgdGhlIG1vZGVsIGFuZCBzdXBwb3J0IG1p
Z3JhdGlvbiBvZiBhIGd1ZXN0IHdpdGggUFYKPiArZHJpdmVycywgd2l0aG91dCB0aGUgY28tb3Bl
cmF0aW9uIG9mIHRoZSBmcm9udGVuZCBkcml2ZXIgY29kZSwgdGhlIHBhdGhzIGFuZAo+ICt2YWx1
ZXMgaW4gYm90aCB0aGUgZnJvbnRlbmQgYW5kIGJhY2tlbmQgeGVuc3RvcmUgYXJlYXMgbXVzdCBy
ZW1haW4gdW5jaGFuZ2VkCj4gK2FuZCB2YWxpZCBpbiB0aGUgbmV3IGhvc3QgZW52aXJvbm1lbnQs
IGFuZCB0aGUgZ3JhbnQgdGFibGUgZW50cmllcyBhbmQgZXZlbnQKPiArY2hhbm5lbHMgbXVzdCBi
ZSBwcmVzZXJ2ZWQgKGFuZCByZW1haW4gb3BlcmF0aW9uYWwgb25jZSBndWVzdCBleGVjdXRpb24g
aXMKPiArcmVzdW1lZCkuCj4gKwo+ICtCZWNhdXNlIHRoZSBzZXJ2aWNlIGRvbWFpbuKAmXMgZG9t
aWQgaXMgdXNlZCBkaXJlY3RseSBieSB0aGUgZ3Vlc3QgaW4gc2V0dGluZwo+ICt1cCBncmFudCBl
bnRyaWVzIGFuZCBldmVudCBjaGFubmVscywgdGhlIGJhY2tlbmQgZHJpdmVycyBpbiB0aGUgbmV3
IGhvc3QKPiArZW52aXJvbm1lbnQgbXVzdCBiZSBwcm92aWRlZCBieSBzZXJ2aWNlIGRvbWFpbiB3
aXRoIHRoZSBzYW1lIGRvbWlkLiBBbHNvLAo+ICtiZWNhdXNlIHRoZSBndWVzdCBjYW4gc2FtcGxl
IGl0cyBvd24gZG9taWQgZnJvbSB0aGUgZnJvbnRlbmQgYXJlYSBhbmQgdXNlIGl0IGluCj4gK2h5
cGVyY2FsbHMgKGUuZy4gSFZNT1Bfc2V0X3BhcmFtKSByYXRoZXIgdGhhbiBET01JRF9TRUxGLCB0
aGUgZ3Vlc3QgZG9taWQgbXVzdAo+ICthbHNvIGJlIHByZXNlcnZlZCB0byBtYWludGFpbiB0aGUg
QUJJLgo+ICsKPiArRnVydGhlcm1vcmUsIGl0IHdpbGwgbmVjZXNzYXJ5IHRvIG1vZGlmeSBiYWNr
ZW5kIGRyaXZlcnMgdG8gcmUtZXN0YWJsaXNoCj4gK2NvbW11bmljYXRpb24gd2l0aCBmcm9udGVu
ZCBkcml2ZXJzIHdpdGhvdXQgcGVydHVyYmluZyB0aGUgY29udGVudCBvZiB0aGUKPiArYmFja2Vu
ZCBhcmVhIG9yIHJlcXVpcmluZyBhbnkgY2hhbmdlcyB0byB0aGUgdmFsdWVzIG9mIHRoZSB4ZW5z
dG9yZSBzdGF0ZSBub2Rlcy4KPiArCj4gKyMjIE90aGVyIFBhcmEtVmlydHVhbCBTdGF0ZQo+ICsK
PiArIyMjIFNoYXJlZCBSaW5ncwo+ICsKPiArQmVjYXVzZSB0aGUgY29uc29sZSBhbmQgc3RvcmUg
cHJvdG9jb2wgc2hhcmVkIHBhZ2VzIGFyZSBhY3R1YWxseSBwYXJ0IG9mIHRoZQo+ICtndWVzdCBt
ZW1vcnkgaW1hZ2UgKGluIGFuIEU4MjAgcmVzZXJ2ZWQgcmVnaW9uIGp1c3QgYmVsb3cgNEcpIHRo
ZW4gdGhlIGNvbnRlbnQKCldoaWxlIEFybSBkb2VzIG5vdCB5ZXQgc3VwcG9ydCBtaWdyYXRpb24s
IHRoZSBjb25jZXB0IG9mIG5vbi1jb29wZXJhdGl2ZSAKbGl2ZSBtaWdyYXRpb24gaXMgbm90IHg4
NiBzcGVjaWZpYy4gSSBhbSBPSyB3aXRoIGdpdmluZyBhcmNoLXNwZWNpZmljIApleGFtcGxlLCBi
dXQgaXQgc2hvdWxkIGJlIGNsZWFyIG9uIHdoaWNoIGFyY2hpdGVjdHVyZSB0aGlzIGlzIHZhbGlk
LgoKPiArd2lsbCBnZXQgbWlncmF0ZWQgYXMgcGFydCBvZiB0aGUgZ3Vlc3QgbWVtb3J5IGltYWdl
LiBIZW5jZSBubyBhZGRpdGlvbmFsIGNvZGUKPiAraXMgcmVxdWlyZSB0byBwcmV2ZW50IGFueSBn
dWVzdCB2aXNpYmxlIGNoYW5nZSBpbiB0aGUgY29udGVudC4KPiArCj4gKyMjIyBTaGFyZWQgSW5m
bwo+ICsKPiArVGhlcmUgaXMgYWxyZWFkeSBhIHJlY29yZCBkZWZpbmVkIGluICpsaWJ4ZW5jdHJs
IERvbWFpbiBJbWFnZSBGb3JtYXQqIFszXQo+ICtjYWxsZWQgYFNIQVJFRF9JTkZPYCB3aGljaCBz
aW1wbHkgY29udGFpbnMgYSBjb21wbGV0ZSBjb3B5IG9mIHRoZSBkb21haW7igJlzCj4gK3NoYXJl
ZCBpbmZvIHBhZ2UuIEl0IGlzIG5vdCBjdXJyZW50bHkgaW5jdWRlZCBpbiBhbiBIVk0gKHR5cGUg
YDB4MDAwMmApCj4gK21pZ3JhdGlvbiBzdHJlYW0uIEl0IG1heSBiZSBmZWFzaWJsZSB0byBpbmNs
dWRlIGl0IGFzIGFuIG9wdGlvbmFsIHJlY29yZAo+ICtidXQgaXQgaXMgbm90IGNsZWFyIHRoYXQg
dGhlIGNvbnRlbnQgb2YgdGhlIHNoYXJlZCBpbmZvIHBhZ2UgZXZlciBuZWVkcwo+ICt0byBiZSBw
cmVzZXJ2ZWQgZm9yIGFuIEhWTSBndWVzdC4KPiArCj4gK0ZvciBhIFBWIGd1ZXN0IHRoZSBgYXJj
aF9zaGFyZWRfaW5mb2Agc3ViLXN0cnVjdHVyZSBjb250YWlucyBpbXBvcnRhbnQKPiAraW5mb3Jt
YXRpb24gYWJvdXQgdGhlIGd1ZXN04oCZcyBQMk0sIGJ1dCB0aGlzIGluZm9ybWF0aW9uIGlzIG5v
dCByZWxldmFudCBmb3IKPiArYW4gSFZNIGd1ZXN0IHdoZXJlIHRoZSBQMk0gaXMgbm90IGRpcmVj
dGx5IG1hbmlwdWxhdGVkIHZpYSB0aGUgZ3Vlc3QuIFRoZSBvdGhlcgo+ICtzdGF0ZSBjb250YWlu
ZWQgaW4gdGhlIGBzaGFyZWRfaW5mb2Agc3RydWN0dXJlIHJlbGF0ZXMgdGhlIGRvbWFpbiB3YWxs
LWNsb2NrCj4gKyh0aGUgc3RhdGUgb2Ygd2hpY2ggc2hvdWxkIGFscmVhZHkgYmUgdHJhbnNmZXJy
ZWQgYnkgdGhlIGBSVENgIEhWTSBjb250ZXh0Cj4gK2luZm9ybWF0aW9uIHdoaWNoIGNvbnRhaW5l
ZCBpbiB0aGUgYEhWTV9DT05URVhUYCBzYXZlIHJlY29yZCkgYW5kIHNvbWUgZXZlbnQKPiArY2hh
bm5lbCBzdGF0ZSAocGFydGljdWxhcmx5IGlmIHVzaW5nIHRoZSAqMmwqIHByb3RvY29sKS4gRXZl
bnQgY2hhbm5lbCBzdGF0ZQo+ICt3aWxsIG5lZWQgdG8gYmUgZnVsbHkgdHJhbnNmZXJyZWQgaWYg
d2UgYXJlIG5vdCBnb2luZyB0byByZXF1aXJlIHRoZSBndWVzdAo+ICtjby1vcGVyYXRpb24gdG8g
cmUtb3BlbiB0aGUgY2hhbm5lbHMgYW5kIHNvIGl0IHNob3VsZCBiZSBwb3NzaWJsZSB0byByZS1i
dWlsZCBhCj4gK3NoYXJlZCBpbmZvIHBhZ2UgZm9yIGFuIEhWTSBndWVzdCBmcm9tIHN1Y2ggb3Ro
ZXIgc3RhdGUuCj4gKwo+ICtOb3RlIHRoYXQgdGhlIHNoYXJlZCBpbmZvIHBhZ2UgYWxzbyBjb250
YWlucyBhbiBhcnJheSBvZiBgWEVOX0xFR0FDWV9NQVhfVkNQVVNgCj4gKygzMikgYHZjcHVfaW5m
b2Agc3RydWN0dXJlcy4gQSBkb21haW4gbWF5IG5vbWluYXRlIGEgZGlmZmVyZW50IGd1ZXN0IHBo
eXNpY2FsCj4gK2FkZHJlc3MgdG8gdXNlIGZvciB0aGUgdmNwdSBpbmZvLiBUaGlzIGlzIG1hbmRh
dG9yeSBmb3IgaWYgYSBkb21haW4gd2FudHMgdG8KPiArdXNlIG1vcmUgdGhhbiAzMiB2Q1BVcyBh
bmQgb3B0aW9uYWwgZm9yIGxlZ2FjeSB2Q1BVcy4gVGhpcyBtYXBwaW5nIGlzIG5vdAoKU2ltaWxh
ciB0byBhYm92ZSwgdGhvc2UgdmFsdWVzIGFyZSB4ODYgc3BlY2lmaWMuIE9uIEFybSwgb25seSBD
UFUwIGlzIApkZXNjcmliZWQgaW4gc2hhcmVkX2luZm8uCgo+ICtjdXJyZW50bHkgdHJhbnNmZXJy
ZWQgaW4gdGhlIG1pZ3JhdGlvbiBzdGF0ZSBzbyB0aGlzIHdpbGwgZWl0aGVyIG5lZWQgdG8gYmUK
PiArYWRkZWQgaW50byBhbiBleGlzdGluZyBzYXZlIHJlY29yZCwgb3IgYW4gYWRkaXRpb25hbCB0
eXBlIG9mIHNhdmUgcmVjb3JkIHdpbGwKPiArYmUgbmVlZGVkLgo+ICsKPiArIyMjIFhlbnN0b3Jl
IFdhdGNoZXMKPiArCj4gK0FzIG1lbnRpb25lZCBhYm92ZSwgbm8gZG9tYWluIFhlbnN0b3JlIHN0
YXRlIGlzIGN1cnJlbnRseSB0cmFuc2ZlcnJlZCBpbiB0aGUKPiArbWlncmF0aW9uIHN0cmVhbS4g
VGhlcmUgaXMgYSByZWNvcmQgZGVmaW5lZCBpbiAqbGlieGVubGlnaHQgRG9tYWluIEltYWdlCj4g
K0Zvcm1hdCogWzRdIGNhbGxlZCBgRU1VTEFUT1JfWEVOU1RPUkVfREFUQWAgZm9yIHRyYW5zZmVy
cmluZyBYZW5zdG9yZSBub2Rlcwo+ICtyZWxhdGluZyB0byBlbXVsYXRvcnMgYnV0IG5vIHJlY29y
ZCB0eXBlIGlzIGRlZmluZWQgZm9yIG5vZGVzIHJlbGF0aW5nIHRvIHRoZQo+ICtkb21haW4gaXRz
ZWxmLCBub3IgZm9yIHJlZ2lzdGVyZWQgKndhdGNoZXMqLiBBIFhlblN0b3JlIHdhdGNoIGlzIGEg
bWVjaGFuaXNtCj4gK3VzZWQgYnkgUFYgZnJvbnRlbmQgYW5kIGJhY2tlbmQgZHJpdmVycyB0byBy
ZXF1ZXN0IGEgbm90aWZpY2F0aW9uIGlmIHRoZSB2YWx1ZQo+ICtvZiBhIHBhcnRpY3VsYXIgbm9k
ZSAoZS5nLiB0aGUgb3RoZXIgZW5k4oCZcyBzdGF0ZSBub2RlKSBjaGFuZ2VzLCBzbyBpdCBpcwo+
ICtpbXBvcnRhbnQgdGhhdCB3YXRjaGVzIGNvbnRpbnVlIHRvIGZ1bmN0aW9uIGFmdGVyIGEgbWln
cmF0aW9uLiBPbmUgb3IgbW9yZSBuZXcKPiArc2F2ZSByZWNvcmRzIHdpbGwgdGhlcmVmb3JlIGJl
IHJlcXVpcmVkIHRvIHRyYW5zZmVyIFhlbnN0b3JlIHN0YXRlLiBJdCB3aWxsCj4gK2Fsc28gYmUg
bmVjZXNzYXJ5IHRvIGV4dGVuZCB0aGUgKnN0b3JlKiBwcm90b2NvbFs1XSB3aXRoIG1lY2hhbmlz
bXMgdG8gYWxsb3cKPiArdGhlIHRvb2xzdGFjayB0byBhY3F1aXJlIHRoZSBsaXN0IG9mIHdhdGNo
ZXMgdGhhdCB0aGUgZ3Vlc3QgaGFzIHJlZ2lzdGVyZWQgYW5kCj4gK2ZvciB0aGUgdG9vbHN0YWNr
IHRvIHJlZ2lzdGVyIGEgd2F0Y2ggb24gYmVoYWxmIG9mIGEgZG9tYWluLgo+ICsKPiArIyMjIEV2
ZW50IGNoYW5uZWxzCj4gKwo+ICtFdmVudCBjaGFubmVscyBhcmUgZXNzZW50aWFsbHkgdGhlIHBh
cmEtdmlydHVhbCBlcXVpdmFsZW50IG9mIGludGVycnVwdHMuIFRoZXkKPiArYXJlIGFuIGltcG9y
dGFudCBwYXJ0IG9mIHBvc3QgUFYgcHJvdG9jb2xzLiBOb3JtYWxseSBhIGZyb250ZW5kIGRyaXZl
ciBjcmVhdGVzCj4gK2FuICppbnRlci1kb21haW4qIGV2ZW50IGNoYW5uZWwgYmV0d2VlbiBpdHMg
b3duIGRvbWFpbiBhbmQgdGhlIGRvbWFpbiBydW5uaW5nCj4gK3RoZSBiYWNrZW5kLCB3aGljaCBp
dCBkaXNjb3ZlcnMgdXNpbmcgdGhlIGBiYWNrZW5kLWlkYCBub2RlIGluIFhlbnN0b3JlIChzZWUK
PiArYWJvdmUpLCBieSBtYWtpbmcgYSBgRVZUQ0hOT1BfYWxsb2NfdW5ib3VuZGAgaHlwZXJjYWxs
LiBUaGlzIGh5cGVyY2FsbAo+ICthbGxvY2F0ZXMgYW4gZXZlbnQgY2hhbm5lbCBvYmplY3QgaW4g
dGhlIGh5cGVydmlzb3IgYW5kIGFzc2lnbnMgYSAqbG9jYWwgcG9ydCoKPiArbnVtYmVyIHdoaWNo
IGlzIHRoZW4gd3JpdHRlbiBpbnRvIHRoZSBmcm9udGVuZCBhcmVhIGluIFhlbnN0b3JlLiBUaGUg
YmFja2VuZAo+ICtkcml2ZXIgdGhlbiByZWFkcyB0aGlzIHBvcnQgbnVtYmVyIGFuZCAqYmluZHMq
IHRvIHRoZSBldmVudCBjaGFubmVsIGJ5Cj4gK3NwZWNpZnlpbmcgaXQsIGFuZCB0aGUgdmFsdWUg
b2YgYGZyb250ZW5kLWlkYCwgYXMgKnJlbW90ZSBkb21haW4qIGFuZCAqcmVtb3RlCj4gK3BvcnQq
IChyZXNwZWN0aXZlbHkpIHRvIGEgYEVWVENITk9QX2JpbmRfaW50ZXJkb21haW5gIGh5cGVyY2Fs
bC4gT25jZQo+ICtjb25uZWN0aW9uIGlzIGVzdGFibGlzaGVkIGluIHRoaXMgZmFzaGlvbiBmcm9u
dGVuZCBhbmQgYmFja2VuZCBkcml2ZXJzIGNhbiB1c2UKPiArdGhlIGV2ZW50IGNoYW5uZWwgYXMg
YSAqbWFpbGJveCogdG8gbm90aWZ5IGVhY2ggb3RoZXIgd2hlbiBhIHNoYXJlZCByaW5nIGhhcwo+
ICtiZWVuIHVwZGF0ZWQgd2l0aCBuZXcgcmVxdWVzdHMgb3IgcmVzcG9uc2Ugc3RydWN0dXJlcy4K
PiArCj4gK0N1cnJlbnRseSBubyBldmVudCBjaGFubmVsIHN0YXRlIGlzIHByZXNlcnZlZCBvbiBt
aWdyYXRpb24sIHJlcXVpcmluZyBmcm9udGVuZAo+ICthbmQgYmFja2VuZCBkcml2ZXJzIHRvIGNy
ZWF0ZSBhbmQgYmluZCBhIGNvbXBsZXRlIG5ldyBzZXQgb2YgZXZlbnQgY2hhbm5lbHMgaW4KPiAr
b3JkZXIgdG8gcmUtZXN0YWJsaXNoIGEgcHJvdG9jb2wgY29ubmVjdGlvbi4gSGVuY2UsIG9uZSBv
ciBtb3JlIG5ldyBzYXZlCj4gK3JlY29yZHMgd2lsbCBiZSByZXF1aXJlZCB0byB0cmFuc2ZlciBl
dmVudCBjaGFubmVsIHN0YXRlIGluIG9yZGVyIHRvIGF2b2lkIHRoZQo+ICtuZWVkIGZvciBleHBs
aWNpdCBhY3Rpb24gYnkgZnJvbnRlbmQgZHJpdmVycyBydW5uaW5nIGluIHRoZSBndWVzdC4gTm90
ZSB0aGF0Cj4gK3RoZSBsb2NhbCBwb3J0IG51bWJlcnMgbmVlZCB0byBwcmVzZXJ2ZWQgaW4gdGhp
cyBzdGF0ZSBhcyB0aGV5IGFyZSB0aGUgb25seQo+ICtjb250ZXh0IHRoZSBndWVzdCBoYXMgdG8g
cmVmZXIgdG8gdGhlIGh5cGVydmlzb3IgZXZlbnQgY2hhbm5lbCBvYmplY3RzLgo+ICsgTm90ZSBh
bHNvIHRoYXQgdGhlIFBWICpzdG9yZSogKFhlbnN0b3JlIGFjY2VzcykgYW5kICpjb25zb2xlKiBw
cm90b2NvbHMgYWxzbwo+ICtyZWx5IG9uIGV2ZW50IGNoYW5uZWxzIHdoaWNoIGFyZSBzZXQgdXAg
YnkgdGhlIHRvb2xzdGFjay4gTm9ybWFsbHksIGVhcmx5IGluCj4gK21pZ3JhdGlvbiwgdGhlIHRv
b2xzdGFjayBydW5uaW5nIG9uIHRoZSByZW1vdGUgaG9zdCB3b3VsZCBzZXQgdXAgYSBuZXcgcGFp
ciBvZgo+ICtldmVudCBjaGFubmVscyBmb3IgdGhlc2UgcHJvdG9jb2xzIGluIHRoZSBkZXN0aW5h
dGlvbiBkb21haW4uIFRoZXNlIG1heSBub3QgYmUKPiArYXNzaWduZWQgdGhlIHNhbWUgbG9jYWwg
cG9ydCBudW1iZXJzIGFzIHRoZSBwcm90b2NvbHMgcnVubmluZyBpbiB0aGUgc291cmNlCj4gK2Rv
bWFpbi4gRm9yIG5vbi1jb29wZXJhdGl2ZSBtaWdyYXRpb24gdGhlc2UgY2hhbm5lbHMgbXVzdCBl
aXRoZXIgYmUgY3JlYXRlZCB3aXRoCj4gK2ZpeGVkIHBvcnQgbnVtYmVycywgb3IgdGhlaXIgY3Jl
YXRpb24gbXVzdCBiZSBhdm9pZGVkIGFuZCBpbnN0ZWFkIGJlIGluY2x1ZGVkCj4gK2luIHRoZSBn
ZW5lcmFsIGV2ZW50IGNoYW5uZWwgc3RhdGUgcmVjb3JkKHMpLgo+ICsKPiArIyMjIEdyYW50IHRh
YmxlCj4gKwo+ICtUaGUgZ3JhbnQgdGFibGUgaXMgZXNzZW50aWFsbHkgdGhlIHBhcmEtdmlydHVh
bCBlcXVpdmFsZW50IG9mIGFuIElPTU1VLiBGb3IKPiArZXhhbXBsZSwgdGhlIHNoYXJlZCByaW5n
cyBvZiBhIFBWIHByb3RvY29sIGFyZSAqZ3JhbnRlZCogYnkgYSBmcm9udGVuZCBkcml2ZXIKPiAr
dG8gdGhlIGJhY2tlbmQgZHJpdmVyIGJ5IGFsbG9jYXRpbmcgKmdyYW50IGVudHJpZXMqIGluIHRo
ZSBndWVzdOKAmXMgdGFibGUsCj4gK2ZpbGxpbmcgaW4gZGV0YWlscyBvZiB0aGUgbWVtb3J5IHBh
Z2VzIGFuZCB0aGVuIHdyaXRpbmcgdGhlICpncmFudCByZWZlcmVuY2VzKgo+ICsodGhlIGluZGV4
IHZhbHVlcyBvZiB0aGUgZ3JhbnQgZW50cmllcykgaW50byBYZW5zdG9yZS4gVGhlIGdyYW50IHJl
ZmVyZW5jZXMgb2YKPiArdGhlIHByb3RvY29sIGJ1ZmZlcnMgdGhlbXNlbHZlcyBhcmUgdHlwaWNh
bGx5IHdyaXR0ZW4gZGlyZWN0bHkgaW50byB0aGUgcmVxdWVzdAo+ICtzdHJ1Y3R1cmVzIHBhc3Nl
ZCB2aWEgYSBzaGFyZWQgcmluZy4KPiArCj4gK1RoZSBndWVzdCBpcyByZXNwb25zaWJsZSBmb3Ig
bWFuYWdpbmcgaXRzIG93biBncmFudCB0YWJsZS4gTm8gaHlwZXJjYWxsIGlzCj4gK3JlcXVpcmVk
IHRvIGdyYW50IGEgbWVtb3J5IHBhZ2UgdG8gYW5vdGhlciBkb21haW4uIEl0IGlzIHN1ZmZpY2ll
bnQgdG8gZmluZCBhbgo+ICt1bnVzZWQgZ3JhbnQgZW50cnkgYW5kIHNldCBiaXRzIGluIHRoZSBl
bnRyeSB0byBnaXZlIHJlYWQgYW5kL29yIHdyaXRlIGFjY2Vzcwo+ICt0byBhIHJlbW90ZSBkb21h
aW4gYWxzbyBzcGVjaWZpZWQgaW4gdGhlIGVudHJ5IGFsb25nIHdpdGggdGhlIHBhZ2UgZnJhbWUK
PiArbnVtYmVyLiBUaHVzIHRoZSBsYXlvdXQgYW5kIGNvbnRlbnQgb2YgdGhlIGdyYW50IHRhYmxl
IGxvZ2ljYWxseSBmb3JtcyBwYXJ0IG9mCj4gK3RoZSBndWVzdCBzdGF0ZS4KPiArCj4gK0N1cnJl
bnRseSBubyBncmFudCB0YWJsZSBzdGF0ZSBpcyBtaWdyYXRlZCwgcmVxdWlyaW5nIGEgZ3Vlc3Qg
dG8gc2VwYXJhdGVseQo+ICttYWludGFpbiBhbnkgc3RhdGUgdGhhdCBpdCB3aXNoZXMgdG8gcGVy
c2lzdCBlbHNld2hlcmUgaW4gaXRzIG1lbW9yeSBpbWFnZSBhbmQKPiArdGhlbiByZXN0b3JlIGl0
IGFmdGVyIG1pZ3JhdGlvbi4gVGh1cyB0byBhdm9pZCB0aGUgbmVlZCBmb3Igc3VjaCBleHBsaWNp
dAo+ICthY3Rpb24gYnkgdGhlIGd1ZXN0LCBvbmUgb3IgbW9yZSBuZXcgc2F2ZSByZWNvcmRzIHdp
bGwgYmUgcmVxdWlyZWQgdG8gbWlncmF0ZQo+ICt0aGUgY29udGVudHMgb2YgdGhlIGdyYW50IHRh
YmxlLgo+ICsKPiArIyBPdXRsaW5lIFByb3Bvc2FsCj4gKwo+ICsqIFBWIGJhY2tlbmQgZHJpdmVy
cyB3aWxsIGJlIG1vZGlmaWVkIHRvIHVuaWxhdGVyYWxseSByZS1lc3RhYmxpc2ggY29ubmVjdGlv
bgo+ICt0byBhIGZyb250ZW5kIGlmIHRoZSBiYWNrZW5kIHN0YXRlIG5vZGUgaXMgcmVzdG9yZWQg
d2l0aCB2YWx1ZSA0Cj4gKyhYZW5idXNTdGF0ZUNvbm5lY3RlZClbNl0uCj4gKwo+ICsqIFRoZSB0
b29sc3RhY2sgc2hvdWxkIGJlIG1vZGlmaWVkIHRvIGFsbG93IGRvbWlkIHRvIGJlIHJhbmRvbWl6
ZWQgb24gaW5pdGlhbAo+ICtjcmVhdGlvbiBvciBkZWZhdWx0IG1pZ3JhdGlvbiwgYnV0IG1ha2Ug
aXQgaWRlbnRpY2FsIHRvIHRoZSBzb3VyY2UgZG9tYWluIG9uCj4gK25vbi1jb29wZXJhdGl2ZSBt
aWdyYXRpb24uIE5vbi1Db29wZXJhdGl2ZSBtaWdyYXRpb24gd2lsbCBoYXZlIHRvIGJlIGRlbmll
ZCBpZiB0aGUKPiArZG9taWQgaXMgdW5hdmFpbGFibGUgb24gdGhlIHRhcmdldCBob3N0LCBidXQg
cmFuZG9taXphdGlvbiBvZiBkb21pZCBvbiBjcmVhdGlvbgo+ICtzaG91bGQgaG9wZWZ1bGx5IG1p
bmltaXplIHRoZSBsaWtlbGlob29kIG9mIHRoaXMuIE5vbi1Db29wZXJhdGl2ZSBtaWdyYXRpb24g
dG8KPiArbG9jYWxob3N0IHdpbGwgY2xlYXJseSBub3QgYmUgcG9zc2libGUuIFBhdGNoZXMgaGF2
ZSBhbHJlYWR5IGJlZW4gc2VudCB0bwo+ICtgeGVuLWRldmVsYCB0byBtYWtlIHRoaXMgY2hhbmdl
WzddLgoKSUlSQywgdGhlIHBhdGNoIGlzIG1lcmdlZCBub3cuIFlvdSBtYXkgd2FudCB0byB1cGRh
dGUgdGhlIGxhc3Qgc2VudGVuY2UuCgo+ICsKPiArKiBgeGVuc3RvcmVkYCBzaG91bGQgYmUgbW9k
aWZpZWQgdG8gaW1wbGVtZW50IHRoZSBuZXcgbWVjaGFuaXNtcyBuZWVkZWQuIFNlZQo+ICsqT3Ro
ZXIgUGFyYS1WaXJ0dWFsIFN0YXRlKiBhYm92ZS4gQSBmdXJ0aGVyIGRlc2lnbiBkb2N1bWVudCB3
aWxsIHByb3Bvc2UKPiArYWRkaXRpb25hbCBwcm90b2NvbCBtZXNzYWdlcy4KPiArCj4gKyogV2l0
aGluIHRoZSBtaWdyYXRpb24gc3RyZWFtIGV4dHJhIHNhdmUgcmVjb3JkcyB3aWxsIGJlIGRlZmlu
ZWQgYXMgcmVxdWlyZWQuCj4gK1NlZSAqT3RoZXIgUGFyYS1WaXJ0dWFsIFN0YXRlKiBhYm92ZS4g
QSBmdXJ0aGVyIGRlc2lnbiBkb2N1bWVudCB3aWxsIHByb3Bvc2UKPiArbW9kaWZpY2F0aW9ucyB0
byB0aGUgbGlieGVubGlnaHQgYW5kIGxpYnhlbmN0cmwgRG9tYWluIEltYWdlIEZvcm1hdHMuCj4g
Kwo+ICsqIEFuIG9wdGlvbiBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIHRvb2xzdGFjayB0byBpbml0
aWF0ZSBhIG5vbi1jb29wZXJhdGl2ZQo+ICttaWdyYXRpb24sIGluc3RlYWQgb2YgdGhlIChkZWZh
dWx0KSBwb3RlbnRpYWxseSBjby1vcGVyYXRpdmUgbWlncmF0aW9uLgo+ICtFc3NlbnRpYWxseSB0
aGlzIHNob3VsZCBza2lwIHRoZSBjaGVjayB0byBzZWUgaWYgUFYgZHJpdmVycyBhbmQgbWlncmF0
ZSBhcyBpZgo+ICt0aGVyZSBhcmUgbm9uZSBwcmVzZW50LCBidXQgYWxzbyBlbmFibGluZyB0aGUg
ZXh0cmEgc2F2ZSByZWNvcmRzLiBOb3RlIHRoYXQgYXQKPiArbGVhc3Qgc29tZSBvZiB0aGUgZXh0
cmEgcmVjb3JkcyBzaG91bGQgb25seSBmb3JtIHBhcnQgb2YgYSBub24tY29vcGVyYXRpdmUKPiAr
bWlncmF0aW9uIHN0cmVhbS4gRm9yIGV4YW1wbGUsIG1pZ3JhdGluZyBldmVudCBjaGFubmVsIHN0
YXRlIHdvdWxkIGJlIGNvdW50ZXIKPiArcHJvZHVjdGl2ZSBpbiBhIG5vcm1hbCBtaWdyYXRpb24g
YXMgdGhpcyB3aWxsIGVzc2VudGlhbGx5IGxlYWsgZXZlbnQgY2hhbm5lbAo+ICtvYmplY3RzIGF0
IHRoZSByZWNlaXZpbmcgZW5kLiBPdGhlcnMsIHN1Y2ggYXMgZ3JhbnQgdGFibGUgc3RhdGUsIGNv
dWxkCj4gK3BvdGVudGlhbGx5IGhhcm1sZXNzbHkgZm9ybSBwYXJ0IG9mIGEgbm9ybWFsIG1pZ3Jh
dGlvbiBzdHJlYW0uCj4gKwo+ICsqICogKgo+ICtbMV0gUFYgZHJpdmVycyBhcmUgZGVlbWVkIHRv
IGJlIGluc3RhbGxlZCBpZiB0aGUgSFZNIHBhcmFtZXRlcgo+ICsqSFZNX1BBUkFNX0NBTExCQUNL
X0lSUSogaGFzIGJlZW4gc2V0IHRvIGEgbm9uLXplcm8gdmFsdWUuCj4gKwo+ICtbMl0gU2VlIGh0
dHBzOi8veGVuYml0cy54ZW4ub3JnL2dpdHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPXhlbi9pbmNs
dWRlL3B1YmxpYy9pby94ZW5idXMuaAo+ICsKPiArWzNdIFNlZSBodHRwczovL3hlbmJpdHMueGVu
Lm9yZy9naXR3ZWIvP3A9eGVuLmdpdDthPWJsb2I7Zj1kb2NzL3NwZWNzL2xpYnhjLW1pZ3JhdGlv
bi1zdHJlYW0ucGFuZG9jCj4gKwo+ICtbNF0gU2VlIGh0dHBzOi8veGVuYml0cy54ZW4ub3JnL2dp
dHdlYi8/cD14ZW4uZ2l0O2E9YmxvYjtmPWRvY3Mvc3BlY3MvbGlieGwtbWlncmF0aW9uLXN0cmVh
bS5wYW5kb2MKPiArCj4gK1s1XSBTZWUgaHR0cHM6Ly94ZW5iaXRzLnhlbi5vcmcvZ2l0d2ViLz9w
PXhlbi5naXQ7YT1ibG9iO2Y9ZG9jcy9taXNjL3hlbnN0b3JlLnR4dAo+ICsKPiArWzZdIGB4ZW4t
YmxrYmFja2AgYW5kIGB4ZW4tbmV0YmFja2AgaGF2ZSBhbHJlYWR5IGJlZW4gbW9kaWZpZWQgaW4g
TGludXggdG8gZG8KPiArdGhpcy4KPiArCj4gK1s3XSBTZWUgaHR0cHM6Ly9saXN0cy54ZW5wcm9q
ZWN0Lm9yZy9hcmNoaXZlcy9odG1sL3hlbi1kZXZlbC8yMDIwLTAxL21zZzAwNjMyLmh0bWwKPiAr
Cj4gCgpDaGVlcnMsCgotLSAKSnVsaWVuIEdyYWxsCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpYZW4tZGV2ZWwgbWFpbGluZyBsaXN0Clhlbi1kZXZlbEBs
aXN0cy54ZW5wcm9qZWN0Lm9yZwpodHRwczovL2xpc3RzLnhlbnByb2plY3Qub3JnL21haWxtYW4v
bGlzdGluZm8veGVuLWRldmVs

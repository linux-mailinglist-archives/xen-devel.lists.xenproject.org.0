Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 1CE1A1696E5
	for <lists+xen-devel@lfdr.de>; Sun, 23 Feb 2020 09:58:43 +0100 (CET)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1j5n3N-0007K5-Nv; Sun, 23 Feb 2020 08:55:57 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=gD8m=4L=redhat.com=armbru@srs-us1.protection.inumbo.net>)
 id 1j5n3L-0007K0-SO
 for xen-devel@lists.xenproject.org; Sun, 23 Feb 2020 08:55:55 +0000
X-Inumbo-ID: 4d2bb193-561a-11ea-89e2-12813bfff9fa
Received: from us-smtp-1.mimecast.com (unknown [205.139.110.120])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTP
 id 4d2bb193-561a-11ea-89e2-12813bfff9fa;
 Sun, 23 Feb 2020 08:55:55 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1582448155;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=iD8dLw9qomGN6w1NHtW9KjOAj02GgFIgkJJercvcAPE=;
 b=LRnCLGHMHyYV9QsA27kMccLY1fOZiHkci/1QpBzstTfStygnD9DTalg55VFgJv4VfjFAMW
 8g+REtFYgmLifrN7rm5PgNlRJbTJ1c4OFlH6+g1V38Gqx1NrGy8XB+P0laKXFkrYitQXPk
 GNVgyP7o8h/zkNDmEDcpx82JL4iN9ZY=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-144-HNaFP9EAOsGTkhIbjq0DfQ-1; Sun, 23 Feb 2020 03:55:49 -0500
X-MC-Unique: HNaFP9EAOsGTkhIbjq0DfQ-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 1281A1007269;
 Sun, 23 Feb 2020 08:55:48 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-129.ams2.redhat.com
 [10.36.116.129])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id 7BC231001902;
 Sun, 23 Feb 2020 08:55:38 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
 id F0F7411386A6; Sun, 23 Feb 2020 09:55:36 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
References: <20200131130118.1716-1-vsementsov@virtuozzo.com>
 <20200131130118.1716-4-vsementsov@virtuozzo.com>
Date: Sun, 23 Feb 2020 09:55:36 +0100
In-Reply-To: <20200131130118.1716-4-vsementsov@virtuozzo.com> (Vladimir
 Sementsov-Ogievskiy's message of "Fri, 31 Jan 2020 16:01:10 +0300")
Message-ID: <87v9nxwulz.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.3 (gnu/linux)
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Subject: Re: [Xen-devel] [PATCH v7 03/11] scripts: add coccinelle script to
 use auto propagated errp
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Stefano Stabellini <sstabellini@kernel.org>,
 Michael Roth <mdroth@linux.vnet.ibm.com>, qemu-block@nongnu.org,
 Paul Durrant <paul@xen.org>, Laszlo Ersek <lersek@redhat.com>,
 qemu-devel@nongnu.org, Greg Kurz <groug@kaod.org>,
 Gerd Hoffmann <kraxel@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 Anthony Perard <anthony.perard@citrix.com>, xen-devel@lists.xenproject.org,
 Max Reitz <mreitz@redhat.com>,
 Philippe =?utf-8?Q?Mathieu-Daud=C3=A9?= <philmd@redhat.com>, armbru@redhat.com,
 Stefan Berger <stefanb@linux.ibm.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

VmxhZGltaXIgU2VtZW50c292LU9naWV2c2tpeSA8dnNlbWVudHNvdkB2aXJ0dW96em8uY29tPiB3
cml0ZXM6Cgo+IFNjcmlwdCBhZGRzIEVSUlBfQVVUT19QUk9QQUdBVEUgbWFjcm8gaW52b2NhdGlv
biB3aGVyZSBhcHByb3ByaWF0ZSBhbmQKPiBkb2VzIGNvcnJlc3BvbmRpbmcgY2hhbmdlcyBpbiBj
b2RlIChsb29rIGZvciBkZXRhaWxzIGluCj4gaW5jbHVkZS9xYXBpL2Vycm9yLmgpCj4KPiBVc2Fn
ZSBleGFtcGxlOgo+IHNwYXRjaCAtLXNwLWZpbGUgc2NyaXB0cy9jb2NjaW5lbGxlL2F1dG8tcHJv
cGFnYXRlZC1lcnJwLmNvY2NpIFwKPiAgLS1tYWNyby1maWxlIHNjcmlwdHMvY29jY2ktbWFjcm8t
ZmlsZS5oIC0taW4tcGxhY2UgLS1uby1zaG93LWRpZmYgXAo+ICBibG9ja2Rldi1uYmQuYyBxZW11
LW5iZC5jIHtibG9jay9uYmQqLG5iZC8qLGluY2x1ZGUvYmxvY2svbmJkKn0uW2hjXQo+Cj4gU2ln
bmVkLW9mZi1ieTogVmxhZGltaXIgU2VtZW50c292LU9naWV2c2tpeSA8dnNlbWVudHNvdkB2aXJ0
dW96em8uY29tPgo+IC0tLQo+Cj4gQ0M6IEVyaWMgQmxha2UgPGVibGFrZUByZWRoYXQuY29tPgo+
IENDOiBLZXZpbiBXb2xmIDxrd29sZkByZWRoYXQuY29tPgo+IENDOiBNYXggUmVpdHogPG1yZWl0
ekByZWRoYXQuY29tPgo+IENDOiBHcmVnIEt1cnogPGdyb3VnQGthb2Qub3JnPgo+IENDOiBTdGVm
YW5vIFN0YWJlbGxpbmkgPHNzdGFiZWxsaW5pQGtlcm5lbC5vcmc+Cj4gQ0M6IEFudGhvbnkgUGVy
YXJkIDxhbnRob255LnBlcmFyZEBjaXRyaXguY29tPgo+IENDOiBQYXVsIER1cnJhbnQgPHBhdWxA
eGVuLm9yZz4KPiBDQzogU3RlZmFuIEhham5vY3ppIDxzdGVmYW5oYUByZWRoYXQuY29tPgo+IEND
OiAiUGhpbGlwcGUgTWF0aGlldS1EYXVkw6kiIDxwaGlsbWRAcmVkaGF0LmNvbT4KPiBDQzogTGFz
emxvIEVyc2VrIDxsZXJzZWtAcmVkaGF0LmNvbT4KPiBDQzogR2VyZCBIb2ZmbWFubiA8a3JheGVs
QHJlZGhhdC5jb20+Cj4gQ0M6IFN0ZWZhbiBCZXJnZXIgPHN0ZWZhbmJAbGludXguaWJtLmNvbT4K
PiBDQzogTWFya3VzIEFybWJydXN0ZXIgPGFybWJydUByZWRoYXQuY29tPgo+IENDOiBNaWNoYWVs
IFJvdGggPG1kcm90aEBsaW51eC52bmV0LmlibS5jb20+Cj4gQ0M6IHFlbXUtYmxvY2tAbm9uZ251
Lm9yZwo+IENDOiB4ZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKPgo+ICBpbmNsdWRlL3Fh
cGkvZXJyb3IuaCAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDMgKwo+ICBzY3JpcHRzL2Nv
Y2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAuY29jY2kgfCAxNTggKysrKysrKysrKysrKysr
KysrCj4gIDIgZmlsZXMgY2hhbmdlZCwgMTYxIGluc2VydGlvbnMoKykKPiAgY3JlYXRlIG1vZGUg
MTAwNjQ0IHNjcmlwdHMvY29jY2luZWxsZS9hdXRvLXByb3BhZ2F0ZWQtZXJycC5jb2NjaQo+Cj4g
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvcWFwaS9lcnJvci5oIGIvaW5jbHVkZS9xYXBpL2Vycm9yLmgK
PiBpbmRleCBiOTQ1MmQ0ODA2Li43OWY4ZTk1MjE0IDEwMDY0NAo+IC0tLSBhL2luY2x1ZGUvcWFw
aS9lcnJvci5oCj4gKysrIGIvaW5jbHVkZS9xYXBpL2Vycm9yLmgKPiBAQCAtMTQxLDYgKzE0MSw5
IEBACj4gICAqICAgICAgICAgLi4uCj4gICAqICAgICB9Cj4gICAqCj4gKyAqIEZvciBtYXNzIGNv
bnZlcnNpb24gdXNlIHNjcmlwdAo+ICsgKiAgIHNjcmlwdHMvY29jY2luZWxsZS9hdXRvLXByb3Bh
Z2F0ZWQtZXJycC5jb2NjaQo+ICsgKgo+ICAgKgo+ICAgKiBSZWNlaXZlIGFuZCBhY2N1bXVsYXRl
IG11bHRpcGxlIGVycm9ycyAoZmlyc3Qgb25lIHdpbnMpOgo+ICAgKiAgICAgRXJyb3IgKmVyciA9
IE5VTEwsICpsb2NhbF9lcnIgPSBOVUxMOwoKRXh0cmEgYmxhbmsgbGluZS4KCj4gZGlmZiAtLWdp
dCBhL3NjcmlwdHMvY29jY2luZWxsZS9hdXRvLXByb3BhZ2F0ZWQtZXJycC5jb2NjaSBiL3Njcmlw
dHMvY29jY2luZWxsZS9hdXRvLXByb3BhZ2F0ZWQtZXJycC5jb2NjaQo+IG5ldyBmaWxlIG1vZGUg
MTAwNjQ0Cj4gaW5kZXggMDAwMDAwMDAwMC4uZmIwM2M4NzFjYgo+IC0tLSAvZGV2L251bGwKPiAr
KysgYi9zY3JpcHRzL2NvY2NpbmVsbGUvYXV0by1wcm9wYWdhdGVkLWVycnAuY29jY2kKPiBAQCAt
MCwwICsxLDE1OCBAQAo+ICsvLyBVc2UgRVJSUF9BVVRPX1BST1BBR0FURSAoc2VlIGluY2x1ZGUv
cWFwaS9lcnJvci5oKQo+ICsvLwo+ICsvLyBDb3B5cmlnaHQgKGMpIDIwMjAgVmlydHVvenpvIElu
dGVybmF0aW9uYWwgR21iSC4KPiArLy8KPiArLy8gVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdh
cmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKPiArLy8gaXQgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQg
YnkKPiArLy8gdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBv
ZiB0aGUgTGljZW5zZSwgb3IKPiArLy8gKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lv
bi4KPiArLy8KPiArLy8gVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRo
YXQgaXQgd2lsbCBiZSB1c2VmdWwsCj4gKy8vIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0
aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCj4gKy8vIE1FUkNIQU5UQUJJTElUWSBv
ciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUKPiArLy8gR05VIEdl
bmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KPiArLy8KPiArLy8gWW91IHNo
b3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vu
c2UKPiArLy8gYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3
dy5nbnUub3JnL2xpY2Vuc2VzLz4uCj4gKy8vCj4gKy8vIFVzYWdlIGV4YW1wbGU6Cj4gKy8vIHNw
YXRjaCAtLXNwLWZpbGUgc2NyaXB0cy9jb2NjaW5lbGxlL2F1dG8tcHJvcGFnYXRlZC1lcnJwLmNv
Y2NpIFwKPiArLy8gIC0tbWFjcm8tZmlsZSBzY3JpcHRzL2NvY2NpLW1hY3JvLWZpbGUuaCAtLWlu
LXBsYWNlIC0tbm8tc2hvdy1kaWZmIFwKPiArLy8gIGJsb2NrZGV2LW5iZC5jIHFlbXUtbmJkLmMg
e2Jsb2NrL25iZCosbmJkLyosaW5jbHVkZS9ibG9jay9uYmQqfS5baGNdCj4gKwo+ICtAcnVsZTBA
Cj4gKy8vIEFkZCBpbnZvY2F0aW9uIHRvIGVycnAtZnVuY3Rpb25zIHdoZXJlIG5lY2Vzc2FyeQo+
ICsvLyBXZSBzaG91bGQgc2tpcCBmdW5jdGlvbnMgd2l0aCAiRXJyb3IgKmNvbnN0ICplcnJwIgo+
ICsvLyBwYXJhbWV0ZXIsIGJ1dCBob3cgdG8gZG8gaXQgd2l0aCBjb2NjaW5lbGxlPwo+ICsvLyBJ
IGRvbid0IGtub3csIHNvLCBJIHNraXAgdGhlbSBieSBmdW5jdGlvbiBuYW1lIHJlZ2V4Lgo+ICsv
LyBJdCdzIHNhZmU6IGlmIHdlIGRpZCBub3Qgc2tpcCBzb21lIGZ1bmN0aW9ucyB3aXRoCj4gKy8v
ICJFcnJvciAqY29uc3QgKmVycnAiLCBFUlJQX0FVVE9fUFJPUEFHQVRFIGludm9jYXRpb24KPiAr
Ly8gd2lsbCBmYWlsIHRvIGNvbXBpbGUsIGJlY2F1c2Ugb2YgY29uc3QgdmlvbGF0aW9uLgoKTm90
IHNraXBwaW5nIGEgZnVuY3Rpb24gd2Ugc2hvdWxkIHNraXAgZmFpbHMgdG8gY29tcGlsZS4KCldo
YXQgYWJvdXQgc2tpcHBpbmcgYSBmdW5jdGlvbiB3ZSBzaG91bGQgbm90IHNraXA/Cgo+ICtpZGVu
dGlmaWVyIGZuICF+ICJlcnJvcl9hcHBlbmRfLipfaGludCI7Cj4gK2lkZW50aWZpZXIgbG9jYWxf
ZXJyLCBFUlJQOwoKQSBmZXcgb2Ygb3VyIGNvY2NpbmVsbGUgc2NyaXB0cyB1c2UgQUxMX0NBUFMg
Zm9yIG1ldGEtdmFyaWFibGVzLiAgTW9zdApkb24ndC4gIEVpdGhlciBpcyBmaW5lIHdpdGggbWUu
ICBNaXhpbmcgdGhlIHR3byBzdHlsZXMgZmVlbHMgYSBiaXQKY29uZnVzaW5nLCB0aG91Z2guCgo+
ICtAQAo+ICsKPiArIGZuKC4uLiwgRXJyb3IgKipFUlJQLCAuLi4pCj4gKyB7Cj4gKysgICBFUlJQ
X0FVVE9fUFJPUEFHQVRFKCk7Cj4gKyAgICA8Ky4uLgo+ICsgICAgICAgIHdoZW4gIT0gRVJSUF9B
VVRPX1BST1BBR0FURSgpOwo+ICsoCj4gKyAgICBlcnJvcl9hcHBlbmRfaGludChFUlJQLCAuLi4p
Owo+ICt8Cj4gKyAgICBlcnJvcl9wcmVwZW5kKEVSUlAsIC4uLik7Cj4gK3wKPiArICAgIEVycm9y
ICpsb2NhbF9lcnIgPSBOVUxMOwo+ICspCj4gKyAgICAuLi4rPgo+ICsgfQoKTWlzc2VzIGVycm9y
X3ZwcmVwZW5kKCkuICBDdXJyZW50bHkgaGFybWxlc3MsIGJ1dCBhcyBsb25nIGFzIHdlIGNvbW1p
dAp0aGUgc2NyaXB0LCB3ZSBiZXR0ZXIgbWFrZSBpdCBhcyByb2J1c3QgYXMgd2UgcmVhc29uYWJs
eSBjYW4uCgpUaGUgcHJldmlvdXMgcGF0Y2ggZXhwbGFpbnMgdGhpcyBDb2NjaW5lbGxlIHNjcmlw
dCdzIGludGVudDoKCiAgVG8gYWNoaWV2ZSB0aGVzZSBnb2FscywgbGF0ZXIgcGF0Y2hlcyB3aWxs
IGFkZCBpbnZvY2F0aW9ucwogIG9mIHRoaXMgbWFjcm8gYXQgdGhlIHN0YXJ0IG9mIGZ1bmN0aW9u
cyB3aXRoIGVpdGhlciB1c2UKICBlcnJvcl9wcmVwZW5kL2Vycm9yX2FwcGVuZF9oaW50IChzb2x2
aW5nIDEpIG9yIHdoaWNoIHVzZQogIGxvY2FsX2VycitlcnJvcl9wcm9wYWdhdGUgdG8gY2hlY2sg
ZXJyb3JzLCBzd2l0Y2hpbmcgdGhvc2UKICBmdW5jdGlvbnMgdG8gdXNlICplcnJwIGluc3RlYWQg
KHNvbHZpbmcgMiBhbmQgMykuCgpUaGlzIHJ1bGUgbWF0Y2hlcyAidXNlIGVycm9yX3ByZXBlbmQv
ZXJyb3JfYXBwZW5kX2hpbnQiIGRpcmVjdGx5LiAgSXQKYXBwZWFycyB0byB1c2UgcHJlc2VuY2Ug
b2YgYSBsb2NhbCBFcnJvciAqIHZhcmlhYmxlIGFzIHByb3h5IGZvciAidXNlCmxvY2FsX2Vycitl
cnJvcl9wcm9wYWdhdGUgdG8gY2hlY2sgZXJyb3JzIi4gIEhtbS4KCldlIG9idmlvdXNseSBoYXZl
IHN1Y2ggYSB2YXJpYWJsZSB3aGVuIHdlIHVzZSAibG9jYWxfZXJyK2Vycm9yX3Byb3BhZ2F0ZQp0
byBjaGVjayBlcnJvcnMiLiAgQnV0IHdlIGNvdWxkIGFsc28gaGF2ZSBzdWNoIHZhcmlhYmxlcyB3
aXRob3V0IHVzZSBvZgplcnJvcl9wcm9wYWdhdGUoKS4gIEluIGZhY3QsIGVycm9yLmggZG9jdW1l
bnRzIHN1Y2ggdXNlOgoKICogQ2FsbCBhIGZ1bmN0aW9uIGFuZCByZWNlaXZlIGFuIGVycm9yIGZy
b20gaXQ6CiAqICAgICBFcnJvciAqZXJyID0gTlVMTDsKICogICAgIGZvbyhhcmcsICZlcnIpOwog
KiAgICAgaWYgKGVycikgewogKiAgICAgICAgIGhhbmRsZSB0aGUgZXJyb3IuLi4KICogICAgIH0K
CndoZXJlICJoYW5kbGUgdGhlIGVycm9yIiBmcmVlcyBpdC4KCkkgZmlndXJlIHN1Y2ggdXNlcyB0
eXBpY2FsbHkgb2NjdXIgaW4gZnVuY3Rpb25zIHdpdGhvdXQgYW4gRXJyb3IgKiplcnJwCnBhcmFt
ZXRlci4gIFRoaXMgcnVsZSBkb2Vzbid0IGFwcGx5IHRoZW4uICBCdXQgdGhleSBjb3VsZCBvY2N1
ciBldmVuIGluCmZ1bmN0aW9ucyB3aXRoIHN1Y2ggYSBwYXJhbWV0ZXIuICBDb25zaWRlcjoKCiAg
ICB2b2lkIGZvbyhFcnJvciAqKmVycnApCiAgICB7CiAgICAgICAgRXJyb3IgKmVyciA9IE5VTEw7
CgogICAgICAgIGJhcigmZXJyKTsKICAgICAgICBpZiAoZXJyKSB7CiAgICAgICAgICAgIGVycm9y
X2ZyZWUoZXJyKTsKICAgICAgICAgICAgZXJyb3Jfc2V0ZyhlcnJwLCAiY29tcGxldGVseSBkaWZm
ZXJlbnQgZXJyb3IiKTsKICAgICAgICB9CiAgICB9CgpSZWFzb25hYmxlIGVub3VnaCB3aGVuIGJh
cigpIGdpdmVzIHVzIGFuIGVycm9yIHRoYXQncyBtaXNsZWFkaW5nIGluIHRoaXMKY29udGV4dCwg
aXNuJ3QgaXQ/CgpUaGUgc2NyaXB0IHRyYW5zZm9ybXMgaXQgbGlrZSB0aGlzOgoKICAgIHZvaWQg
Zm9vKEVycm9yICoqZXJycCkKICAgIHsKICAgLSAgICBFcnJvciAqZXJyID0gTlVMTDsKICAgKyAg
ICBFUlJQX0FVVE9fUFJPUEFHQVRFKCk7CgogICAtICAgIGJhcigmZXJyKTsKICAgLSAgICBpZiAo
ZXJyKSB7CiAgIC0gICAgICAgIGVycm9yX2ZyZWUoZXJyKTsKICAgKyAgICBiYXIoZXJycCk7CiAg
ICsgICAgaWYgKCplcnJwKSB7CiAgICsgICAgICAgIGVycm9yX2ZyZWVfZXJycChlcnJwKTsKICAg
ICAgICAgICAgZXJyb3Jfc2V0ZyhlcnJwLCAiY29tcGxldGVseSBkaWZmZXJlbnQgZXJyb3IiKTsK
ICAgICAgICB9CiAgICB9CgpVbndhbnRlZC4KCk5vdywgaWYgdGhpcyBzY3JpcHQgYXBwbGllZCBp
biBqdXN0IGEgZmV3IGRvemVuIHBsYWNlcywgd2UgY291bGQgcmVseSBvbgpleWViYWxsaW5nIGl0
cyBvdXRwdXQgdG8gY2F0Y2ggdW53YW50ZWQgdHJhbnNmb3JtYXRpb25zLiAgU2luY2UgaXQKYXBw
bGllcyBpbiBzbyBtYW55IG1vcmUsIEkgZG9uJ3QgZmVlbCBjb21mb3J0YWJsZSByZWx5aW5nIG9u
IHJldmlld2VyCmV5ZWJhbGxzLgoKQ2FuIHdlIG1ha2UgcnVsZTAgZGlyZWN0bHkgbWF0Y2ggZXJy
b3JfcHJvcGFnYXRlKGVycnAsIGxvY2FsX2VycikKc29tZWhvdz8KCkFub3RoZXIgb2JzZXJ2YXRp
b246IHRoZSBydWxlIGRvZXMgbm90IG1hdGNoIGVycm9yX3JlcG9ydGZfZXJyKCkgYW5kCndhcm5f
cmVwb3J0Zl9lcnIoKS4gIFRoZXNlIGNvbWJpbmUgZXJyb3JfcHJlcGVuZCgpLAplcnJvcl9yZXBv
cnQoKS93YXJuX3JlcG9ydCgpIGFuZCBlcnJvcl9mcmVlKCksIGZvciBjb252ZW5pZW5jZS4gIERv
bid0CnRoZWlyIHVzZXJzIG5lZWQgRVJSUF9BVVRPX1BST1BBR0FURSgpIGp1c3QgbGlrZSBlcnJv
cl9wcmVwZW5kKCkncwp1c2Vycz8KCj4gKwo+ICtAQAo+ICsvLyBTd2l0Y2ggdW51c3VhbCAoRXJy
b3IgKiopIHBhcmFtZXRlciBuYW1lcyB0byBlcnJwCj4gKy8vICh0aGlzIGlzIG5lY2Vzc2FyeSB0
byB1c2UgRVJSUF9BVVRPX1BST1BBR0FURSkuCgpQbGVhc2UgcHV0IHlvdXIgcnVsZSBjb21tZW50
cyByaWdodCBiZWZvcmUgdGhlIHJ1bGUsIGkuZS4gYmVmb3JlIHRoZQpALWxpbmUgaW50cm9kdWNp
bmcgbWV0YXZhcmlhYmxlIGRlY2xhcmF0aW9ucywgbm90IGFmdGVyLiAgU2FtZQplbHNld2hlcmUu
Cgo+ICtpZGVudGlmaWVyIHJ1bGUwLmZuOwo+ICtpZGVudGlmaWVyIHJ1bGUwLkVSUlAgIT0gZXJy
cDsKPiArQEAKPiArCj4gKyBmbiguLi4sCj4gKy0gICBFcnJvciAqKkVSUlAKPiArKyAgIEVycm9y
ICoqZXJycAo+ICsgICAgLC4uLikKPiArIHsKPiArICAgICA8Li4uCj4gKy0gICAgRVJSUAo+ICsr
ICAgIGVycnAKPiArICAgICAuLi4+Cj4gKyB9CgpUaGlzIG5vcm1hbGl6ZXMgZXJycCBwYXJhbWV0
ZXIgbmFtaW5nLiAgSXQgbWF0Y2hlcyBleGFjdGx5IHdoZW4gcnVsZTAKbWF0Y2hlcyAoYW5kIGlu
c2VydHMgRVJSUF9BVVRPX1BST1BBR0FURSgpKSBhbmQgdGhlIEVycm9yICoqIHBhcmFtZXRlcgpp
cyB1bnVzdWFsLiAgR29vZC4KCj4gKwo+ICtAcnVsZTFACj4gKy8vIFdlIHdhbnQgdG8gcGF0Y2gg
ZXJyb3IgcHJvcGFnYXRpb24gaW4gZnVuY3Rpb25zIHJlZ2FyZGxlc3Mgb2YKPiArLy8gd2hldGhl
ciB0aGUgZnVuY3Rpb24gYWxyZWFkeSB1c2VzIEVSUlBfQVVUT19QUk9QQUdBVEUgcHJpb3IgdG8K
PiArLy8gYXBwbHlpbmcgcnVsZTAsIGhlbmNlIHRoaXMgb25lIGRvZXMgbm90IGluaGVyaXQgZnJv
bSBpdC4KCkknbSBub3Qgc3VyZSBJIGdldCB0aGlzIGNvbW1lbnQuICBMZXQncyBzZWUgd2hhdCB0
aGUgcnVsZSBkb2VzLgoKPiAraWRlbnRpZmllciBmbiAhfiAiZXJyb3JfYXBwZW5kXy4qX2hpbnQi
Owo+ICtpZGVudGlmaWVyIGxvY2FsX2VycjsKPiArc3ltYm9sIGVycnA7Cj4gK0BACj4gKwo+ICsg
Zm4oLi4uLCBFcnJvciAqKmVycnAsIC4uLikKPiArIHsKPiArICAgICA8Li4uCj4gKy0gICAgRXJy
b3IgKmxvY2FsX2VyciA9IE5VTEw7Cj4gKyAgICAgLi4uPgo+ICsgfQoKcnVsZTEgbWF0Y2hlcyBs
aWtlIHJ1bGUwLCBleGNlcHQgdGhlIEVycm9yICoqIHBhcmFtZXRlciBtYXRjaCBpcwp0aWdodGVu
ZWQgZnJvbSBhbnkgQyBpZGVudGlmaWVyIHRvIHRoZSBDIGlkZW50aWZpZXIgZXJycCwgYW5kIHRo
ZQpmdW5jdGlvbiBib2R5IG1hdGNoIHRpZ2h0ZW5lZCBmcm9tICJlaXRoZXIgdXNlCmVycm9yX3By
ZXBlbmQvZXJyb3JfYXBwZW5kX2hpbnQgb3Igd2hpY2ggdXNlIGxvY2FsX2VycitlcnJvcl9wcm9w
YWdhdGUKdG8gY2hlY2sgZXJyb3JzIiB0byBqdXN0IHRoZSBsYXR0ZXIuCgpJIGZpZ3VyZSB0aWdo
dGVuaW5nIHRoZSBFcnJvciAqKiBwYXJhbWV0ZXIgbWF0Y2ggaGFzIG5vIGVmZmVjdCwgYmVjYXVz
ZQp3ZSBhbHJlYWR5IG5vcm1hbGl6ZWQgdGhlIHBhcmFtZXRlciBuYW1lLgoKU28gcnVsZTEgZGVs
ZXRlcyB2YXJpYWJsZSBsb2NhbF9lcnIgd2hlcmUgcnVsZTAgYXBwbGllZC4gIENvcnJlY3Q/Cgo+
ICsKPiArQEAKPiArLy8gSGFuZGxlIHBhdHRlcm4gd2l0aCBnb3RvLCBvdGhlcndpc2Ugd2UnbGwg
ZmluaXNoIHVwCj4gKy8vIHdpdGggbGFiZWxzIGF0IGZ1bmN0aW9uIGVuZCB3aGljaCB3aWxsIG5v
dCBjb21waWxlLgo+ICtpZGVudGlmaWVyIHJ1bGUxLmZuLCBydWxlMS5sb2NhbF9lcnI7Cj4gK2lk
ZW50aWZpZXIgT1VUOwo+ICtAQAo+ICsKPiArIGZuKC4uLikKPiArIHsKPiArICAgICA8Li4uCj4g
Ky0gICAgZ290byBPVVQ7Cj4gKysgICAgcmV0dXJuOwo+ICsgICAgIC4uLj4KPiArLSBPVVQ6Cj4g
Ky0gICAgZXJyb3JfcHJvcGFnYXRlKGVycnAsIGxvY2FsX2Vycik7Cj4gKyB9CgpUaGlzIGlzIG9u
ZSBzcGVjaWFsIGNhc2Ugb2YgZXJyb3JfcHJvcGFnYXRlKCkgZGVsZXRpb24uICBJdCBhZGRpdGlv
bmFsbHkKZ2V0cyByaWQgb2YgYSBnb3RvIHdlIG5vIGxvbmdlciB3YW50LiAgRm9yIHRoZSBnZW5l
cmFsIGNhc2UsIHNlZSBiZWxvdy4KClRoZSBydWxlIGFwcGxpZXMgb25seSB3aGVyZSBydWxlMSBq
dXN0IGRlbGV0ZWQgdGhlIHZhcmlhYmxlLiAgVGh1cywgdGhlCnR3byBydWxlcyB3b3JrIGluIHRh
bmRlbS4gIE1ha2VzIHNlbnNlLgoKPiArCj4gK0BACj4gK2lkZW50aWZpZXIgcnVsZTEuZm4sIHJ1
bGUxLmxvY2FsX2VycjsKClRoaXMgcnVsZSBhbHNvIHdvcmtzIGluIHRhbmRlbSB3aXRoIHJ1bGUx
LgoKPiArZXhwcmVzc2lvbiBsaXN0IGFyZ3M7IC8vIHRvIHJlaW5kZW50IGVycm9yX3Byb3BhZ2F0
ZV9wcmVwZW5kCgpXaGF0IGlzIHRoZSBjb21tZW50IHRyeWluZyB0byB0ZWxsIG1lPwoKPiArQEAK
PiArCj4gKyBmbiguLi4pCj4gKyB7Cj4gKyAgICAgPC4uLgo+ICsoCj4gKy0gICAgZXJyb3JfZnJl
ZShsb2NhbF9lcnIpOwo+ICstICAgIGxvY2FsX2VyciA9IE5VTEw7Cj4gKysgICAgZXJyb3JfZnJl
ZV9lcnJwKGVycnApOwoKUmVtaW5kZXI6CgogICAgc3RhdGljIGlubGluZSB2b2lkIGVycm9yX2Zy
ZWVfZXJycChFcnJvciAqKmVycnApCiAgICB7CiAgICAgICAgYXNzZXJ0KGVycnAgJiYgKmVycnAp
OwogICAgICAgIGVycm9yX2ZyZWUoKmVycnApOwogICAgICAgICplcnJwID0gTlVMTDsKICAgIH0K
Ck5vdyBsZXQncyBleGFtaW5lIHRoZSBhY3R1YWwgY2hhbmdlLgoKVGhlIGFzc2VydGlvbidzIGZp
cnN0IGhhbGYgdHJpdmlhbGx5IGhvbGRzLCBFUlJQX0FVVE9fUFJPUEFHQVRFKCkKZW5zdXJlcyBp
dC4KClRoZSBzZWNvbmQgaGFsZiBpcyBuZXcuICBXZSBub3cgY3Jhc2ggd2hlbiB3ZSBoYXZlbid0
IHNldCBhbiBlcnJvci4gIFdoeQppcyB0aGlzIHNhZmU/ICBOb3RlIHRoYXQgZXJyb3JfZnJlZShs
b2NhbF9lcnIpIGRvZXMgbm90aGluZyB3aGVuCiFsb2NhbF9lcnIuCgpUaGUgemFwcGluZyBvZiB0
aGUgdmFyaWFibGUgcG9pbnRpbmcgdG8gdGhlIEVycm9yIGp1c3QgZnJlZWQgaXMKdW5jaGFuZ2Vk
LgoKPiArfAo+ICstICAgIGVycm9yX2ZyZWUobG9jYWxfZXJyKTsKPiArKyAgICBlcnJvcl9mcmVl
X2VycnAoZXJycCk7CgpIZXJlLCB0aGUgemFwcGluZyBpcyBuZXcuICBaYXBwaW5nIGRhbmdsaW5n
IHBvaW50ZXJzIGlzIG9idmlvdXNseSBzYWZlLgpOZWVkZWQsIG9yIGVsc2UgdGhlIGF1dG9tYXRp
YyBlcnJvcl9wcm9wYWdhdGUoKSBkdWUgdG8KRVJSUF9BVVRPX1BST1BBR0FURSgpIHdvdWxkIHBy
b3BhZ2F0ZSB0aGUgZGFuZ2xpbmcgcG9pbnRlci4KCj4gK3wKPiArLSAgICBlcnJvcl9yZXBvcnRf
ZXJyKGxvY2FsX2Vycik7Cj4gKysgICAgZXJyb3JfcmVwb3J0X2VycnAoZXJycCk7CgpUaGUgb25s
eSBkaWZmZXJlbmNlIHRvIHRoZSBwcmV2aW91cyBjYXNlIGlzIHRoYXQgd2UgYWxzbyByZXBvcnQg
dGhlCmVycm9yLgoKVGhlIHByZXZpb3VzIGNhc2UgaGFzIGEgYnVkZHkgdGhhdCBhZGRpdGlvbmFs
bHkgbWF0Y2hlcyAqZXJycCA9IE5VTEwuCldoeSBub3QgdGhpcyBvbmU/Cgo+ICt8Cj4gKy0gICAg
d2Fybl9yZXBvcnRfZXJyKGxvY2FsX2Vycik7Cj4gKysgICAgd2Fybl9yZXBvcnRfZXJycChlcnJw
KTsKCkxpa2V3aXNlLgoKV2hhdCBhYm91dCBlcnJvcl9yZXBvcnRmX2VycigpLCB3YXJuX3JlcG9y
dGZfZXJyKCk/CgpVcCB0byBoZXJlLCB0aGlzIHJ1bGUgdHJhbnNmb3JtcyB0aGUgdmFyaW91cyBm
b3JtcyBvZiBlcnJvcl9mcmVlKCkuCk5leHQ6IGVycm9yX3Byb3BhZ2F0ZSgpLgoKPiArfAo+ICst
ICAgIGVycm9yX3Byb3BhZ2F0ZV9wcmVwZW5kKGVycnAsIGxvY2FsX2VyciwgYXJncyk7Cj4gKysg
ICAgZXJyb3JfcHJlcGVuZChlcnJwLCBhcmdzKTsKPiArfAo+ICstICAgIGVycm9yX3Byb3BhZ2F0
ZShlcnJwLCBsb2NhbF9lcnIpOwoKcnVsZTAncyBhZGRpbmcgb2YgRVJSUF9BVVRPX1BST1BBR0FU
RSgpIG1hZGUgZXJyb3JfcHJvcGFnYXRlKCkKcmVkdW5kYW50LgoKVGhpcyBpcyB0aGUgZ2VuZXJh
bCBjYXNlIG9mIGVycm9yX3Byb3BhZ2F0ZSgpIGRlbGV0aW9uLgoKSSdkIHB1dCB0aGUgcGxhaW4g
ZXJyb3JfcHJvcGFnYXRlKCkgZmlyc3QsIHZhcmlhdGlvbnMgc2Vjb25kLCBsaWtlIHlvdQpkbyB3
aXRoIGVycm9yX2ZyZWUoKS4KCklmIG5laXRoZXIgb2YgdGhlc2UgdHdvIHBhdHRlcm5zIG1hdGNo
IG9uIGEgcGF0aCBmcm9tCkVSUlBfQVVUT19QUk9QQUdBVEUoKSB0byByZXR1cm4sIHdlIGVmZmVj
dGl2ZWx5IGluc2VydCBlcnJvcl9wcm9wYWdhdGUoKQp3aGVyZSBpdCB3YXNuJ3QgYmVmb3JlLiAg
RG9lcyBub3RoaW5nIHdoZW4gdGhlIGxvY2FsIGVycm9yIGlzIG51bGwKdGhlcmUuICBCdWcgZml4
IHdoZW4gaXQgaXNuJ3Q6IGl0J3MgYXQgbGVhc3QgYSBtZW1vcnkgbGVhaywgYW5kIHF1aXRlCnBv
c3NpYmx5IHdvcnNlLgoKSWRlbnRpZnlpbmcgdGhlc2UgYnVnIGZpeGVzIHdvdWxkIGJlIG5pY2Us
IGJ1dCBJIGRvbid0IGhhdmUgcHJhY3RpY2FsCmlkZWFzIG9uIGhvdyB0byBkbyB0aGF0LgoKQ2Fu
IHdlIGV4cGxhaW4gdGhpcyBpbiB0aGUgY29tbWl0IG1lc3NhZ2U/Cgo+ICspCj4gKyAgICAgLi4u
Pgo+ICsgfQo+ICsKPiArQEAKPiAraWRlbnRpZmllciBydWxlMS5mbiwgcnVsZTEubG9jYWxfZXJy
Owo+ICtAQAo+ICsKPiArIGZuKC4uLikKPiArIHsKPiArICAgICA8Li4uCj4gKygKPiArLSAgICAm
bG9jYWxfZXJyCj4gKysgICAgZXJycAo+ICt8Cj4gKy0gICAgbG9jYWxfZXJyCj4gKysgICAgKmVy
cnAKPiArKQo+ICsgICAgIC4uLj4KPiArIH0KCkFsc28gaW4gdGFuZGVtIHdpdGggcnVsZTEsIGZp
eGVzIHVwIHVzZXMgb2YgbG9jYWxfZXJyLiAgR29vZC4KCj4gKwo+ICtAQAo+ICtpZGVudGlmaWVy
IHJ1bGUxLmZuOwo+ICtAQAo+ICsKPiArIGZuKC4uLikKPiArIHsKPiArICAgICA8Li4uCj4gKy0g
KmVycnAgIT0gTlVMTAo+ICsrICplcnJwCj4gKyAgICAgLi4uPgo+ICsgfQoKU3RpbGwgaW4gdGFu
ZGVtIHdpdGggcnVsZTEsIG5vcm1hbGl6ZXMgc3R5bGUuICBHb29kLgoKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QK
WGVuLWRldmVsQGxpc3RzLnhlbnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5v
cmcvbWFpbG1hbi9saXN0aW5mby94ZW4tZGV2ZWw=

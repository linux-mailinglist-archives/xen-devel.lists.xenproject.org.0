Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 193B9B29F9
	for <lists+xen-devel@lfdr.de>; Sat, 14 Sep 2019 07:22:12 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1i90TU-0006Tp-7G; Sat, 14 Sep 2019 05:19:56 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=rDpt=XJ=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1i90TS-0006Tb-Qk
 for xen-devel@lists.xenproject.org; Sat, 14 Sep 2019 05:19:54 +0000
X-Inumbo-ID: 447be93c-d6af-11e9-95c0-12813bfff9fa
Received: from mx1.suse.de (unknown [195.135.220.15])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id 447be93c-d6af-11e9-95c0-12813bfff9fa;
 Sat, 14 Sep 2019 05:19:48 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 25355AF2A;
 Sat, 14 Sep 2019 05:19:47 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: xen-devel@lists.xenproject.org
Date: Sat, 14 Sep 2019 07:19:43 +0200
Message-Id: <20190914051944.21409-4-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190914051944.21409-1-jgross@suse.com>
References: <20190914051944.21409-1-jgross@suse.com>
Subject: [Xen-devel] [PATCH v4 3/4] xen/sched: add minimalistic idle
 scheduler for free cpus
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>,
 George Dunlap <george.dunlap@eu.citrix.com>,
 Dario Faggioli <dfaggioli@suse.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

SW5zdGVhZCBvZiBoYXZpbmcgYSBmdWxsIGJsb3duIHNjaGVkdWxlciBydW5uaW5nIGZvciB0aGUg
ZnJlZSBjcHVzCmFkZCBhIHZlcnkgbWluaW1hbGlzdGljIHNjaGVkdWxlciBmb3IgdGhhdCBwdXJw
b3NlIG9ubHkgZXZlciBzY2hlZHVsaW5nCnRoZSByZWxhdGVkIGlkbGUgdmNwdS4gVGhpcyBoYXMg
dGhlIGJpZyBhZHZhbnRhZ2Ugb2Ygbm90IG5lZWRpbmcgYW55CnBlci1jcHUsIHBlci1kb21haW4g
b3IgcGVyLXNjaGVkdWxpbmcgdW5pdCBkYXRhIGZvciBmcmVlIGNwdXMgYW5kIGluCnR1cm4gc2lt
cGxpZnlpbmcgbW92aW5nIGNwdXMgdG8gYW5kIGZyb20gY3B1cG9vbHMgYSBsb3QuCgpSaWdodCBu
b3csIENQVXMgdGhhdCBhcmUgbm90IGluIGFueSBwb29sLCBzdGlsbCBiZWxvbmcgdG8gUG9vbC0w
J3MKc2NoZWR1bGVyLiBUaGlzIGZvcmNlcyB1cyB0byBtYWtlLCB3aXRoaW4gdGhlIHNjaGVkdWxl
ciwgZXh0cmEgZWZmb3J0CnRvIGF2b2lkIGFjdHVhbGx5IHJ1bm5pbmcgdkNQVXMgb24gdGhvc2Uu
CgpJbiB0aGUgY2FzZSBvZiBDcmVkaXQxLCB0aGlzIGFsc28gY2F1c2UgaXNzdWUgdG8gd2VpZ2h0
cwoocmUpZGlzdHJpYnV0aW9uLCBhcyB0aGUgbnVtYmVyIG9mIENQVXMgYXZhaWxhYmxlIHRvIHRo
ZSBzY2hlZHVsZXIgaXMKd3JvbmcuCgpUaGlzIGlzIGRlc2NyaWJlZCBpbiB0aGUgY2hhbmdlbG9n
IG9mIGNvbW1pdCBlNzE5MTkyMDI2MWQgKCJ4ZW46CmNyZWRpdDI6IG5ldmVyIGNvbnNpZGVyIENQ
VXMgb3V0c2lkZSBvZiBvdXIgY3B1cG9vbCIpLgoKVGhpcyBuZXcgc2NoZWR1bGVyIHdpbGwganVz
dCB1c2UgYSBjb21tb24gbG9jayBmb3IgYWxsIGZyZWUgY3B1cy4KCkFzIHRoaXMgbmV3IHNjaGVk
dWxlciBpcyBub3QgdXNlciBzZWxlY3RhYmxlIGRvbid0IHJlZ2lzdGVyIGl0IGFzIGFuCm9mZmlj
aWFsIHNjaGVkdWxlciwgYnV0IGp1c3QgaW5jbHVkZSBpdCBpbiBzY2hlZHVsZS5jLgoKU2lnbmVk
LW9mZi1ieTogSnVlcmdlbiBHcm9zcyA8amdyb3NzQHN1c2UuY29tPgpBY2tlZC1ieTogRGFyaW8g
RmFnZ2lvbGkgPGRmYWdnaW9saUBzdXNlLmNvbT4KLS0tClYzOgotIHVzZSBaRVJPX0JMT0NLX1BU
UiBpbnN0ZWFkIG9mICh2b2lkICopMSAoSmFuIEJldWxpY2gsIEFuZHJldyBDb29wZXIpCi0tLQog
eGVuL2NvbW1vbi9zY2hlZF9jcmVkaXQuYyB8ICAgOSAtLS0KIHhlbi9jb21tb24vc2NoZWRfbnVs
bC5jICAgfCAgIDcgLS0tCiB4ZW4vY29tbW9uL3NjaGVkdWxlLmMgICAgIHwgMTUzICsrKysrKysr
KysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDMgZmlsZXMgY2hhbmdlZCwg
NzUgaW5zZXJ0aW9ucygrKSwgOTQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEveGVuL2NvbW1v
bi9zY2hlZF9jcmVkaXQuYyBiL3hlbi9jb21tb24vc2NoZWRfY3JlZGl0LmMKaW5kZXggODFkZWU1
ZTQ3Mi4uNzBmZTcxODEyNyAxMDA2NDQKLS0tIGEveGVuL2NvbW1vbi9zY2hlZF9jcmVkaXQuYwor
KysgYi94ZW4vY29tbW9uL3NjaGVkX2NyZWRpdC5jCkBAIC02MTcsMTUgKzYxNyw2IEBAIGNzY2hl
ZF9pbml0X3BkYXRhKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgdm9pZCAqcGRhdGEsIGlu
dCBjcHUpCiB7CiAgICAgdW5zaWduZWQgbG9uZyBmbGFnczsKICAgICBzdHJ1Y3QgY3NjaGVkX3By
aXZhdGUgKnBydiA9IENTQ0hFRF9QUklWKG9wcyk7Ci0gICAgc3RydWN0IHNjaGVkdWxlX2RhdGEg
KnNkID0gJnBlcl9jcHUoc2NoZWR1bGVfZGF0YSwgY3B1KTsKLQotICAgIC8qCi0gICAgICogVGhp
cyBpcyBjYWxsZWQgZWl0aGVyIGR1cmluZyBkdXJpbmcgYm9vdCwgcmVzdW1lIG9yIGhvdHBsdWcs
IGluCi0gICAgICogY2FzZSBDcmVkaXQxIGlzIHRoZSBzY2hlZHVsZXIgY2hvc2VuIGF0IGJvb3Qu
IEluIHN1Y2ggY2FzZXMsIHRoZQotICAgICAqIHNjaGVkdWxlciBsb2NrIGZvciBjcHUgaXMgYWxy
ZWFkeSBwb2ludGluZyB0byB0aGUgZGVmYXVsdCBwZXItY3B1Ci0gICAgICogc3BpbmxvY2ssIGFz
IENyZWRpdDEgbmVlZHMgaXQsIHNvIHRoZXJlIGlzIG5vIHJlbWFwcGluZyB0byBiZSBkb25lLgot
ICAgICAqLwotICAgIEFTU0VSVChzZC0+c2NoZWR1bGVfbG9jayA9PSAmc2QtPl9sb2NrICYmICFz
cGluX2lzX2xvY2tlZCgmc2QtPl9sb2NrKSk7CiAKICAgICBzcGluX2xvY2tfaXJxc2F2ZSgmcHJ2
LT5sb2NrLCBmbGFncyk7CiAgICAgaW5pdF9wZGF0YShwcnYsIHBkYXRhLCBjcHUpOwpkaWZmIC0t
Z2l0IGEveGVuL2NvbW1vbi9zY2hlZF9udWxsLmMgYi94ZW4vY29tbW9uL3NjaGVkX251bGwuYwpp
bmRleCAyNmM2ZjBmMTI5Li42NzgyZWNkYTVjIDEwMDY0NAotLS0gYS94ZW4vY29tbW9uL3NjaGVk
X251bGwuYworKysgYi94ZW4vY29tbW9uL3NjaGVkX251bGwuYwpAQCAtMTY3LDE3ICsxNjcsMTAg
QEAgc3RhdGljIHZvaWQgaW5pdF9wZGF0YShzdHJ1Y3QgbnVsbF9wcml2YXRlICpwcnYsIHVuc2ln
bmVkIGludCBjcHUpCiBzdGF0aWMgdm9pZCBudWxsX2luaXRfcGRhdGEoY29uc3Qgc3RydWN0IHNj
aGVkdWxlciAqb3BzLCB2b2lkICpwZGF0YSwgaW50IGNwdSkKIHsKICAgICBzdHJ1Y3QgbnVsbF9w
cml2YXRlICpwcnYgPSBudWxsX3ByaXYob3BzKTsKLSAgICBzdHJ1Y3Qgc2NoZWR1bGVfZGF0YSAq
c2QgPSAmcGVyX2NwdShzY2hlZHVsZV9kYXRhLCBjcHUpOwogCiAgICAgLyogYWxsb2NfcGRhdGEg
aXMgbm90IGltcGxlbWVudGVkLCBzbyB3ZSB3YW50IHRoaXMgdG8gYmUgTlVMTC4gKi8KICAgICBB
U1NFUlQoIXBkYXRhKTsKIAotICAgIC8qCi0gICAgICogVGhlIHNjaGVkdWxlciBsb2NrIHBvaW50
cyBhbHJlYWR5IHRvIHRoZSBkZWZhdWx0IHBlci1jcHUgc3BpbmxvY2ssCi0gICAgICogc28gdGhl
cmUgaXMgbm8gcmVtYXBwaW5nIHRvIGJlIGRvbmUuCi0gICAgICovCi0gICAgQVNTRVJUKHNkLT5z
Y2hlZHVsZV9sb2NrID09ICZzZC0+X2xvY2sgJiYgIXNwaW5faXNfbG9ja2VkKCZzZC0+X2xvY2sp
KTsKLQogICAgIGluaXRfcGRhdGEocHJ2LCBjcHUpOwogfQogCmRpZmYgLS1naXQgYS94ZW4vY29t
bW9uL3NjaGVkdWxlLmMgYi94ZW4vY29tbW9uL3NjaGVkdWxlLmMKaW5kZXggOTMxNjRjNjRmNi4u
ZmRlZWMxMGMzYiAxMDA2NDQKLS0tIGEveGVuL2NvbW1vbi9zY2hlZHVsZS5jCisrKyBiL3hlbi9j
b21tb24vc2NoZWR1bGUuYwpAQCAtNTQsNiArNTQsMTAgQEAgYm9vbGVhbl9wYXJhbSgic2NoZWRf
c210X3Bvd2VyX3NhdmluZ3MiLCBzY2hlZF9zbXRfcG93ZXJfc2F2aW5ncyk7CiAgKiAqLwogaW50
IHNjaGVkX3JhdGVsaW1pdF91cyA9IFNDSEVEX0RFRkFVTFRfUkFURUxJTUlUX1VTOwogaW50ZWdl
cl9wYXJhbSgic2NoZWRfcmF0ZWxpbWl0X3VzIiwgc2NoZWRfcmF0ZWxpbWl0X3VzKTsKKworLyog
Q29tbW9uIGxvY2sgZm9yIGZyZWUgY3B1cy4gKi8KK3N0YXRpYyBERUZJTkVfU1BJTkxPQ0soc2No
ZWRfZnJlZV9jcHVfbG9jayk7CisKIC8qIFZhcmlvdXMgdGltZXIgaGFuZGxlcnMuICovCiBzdGF0
aWMgdm9pZCBzX3RpbWVyX2ZuKHZvaWQgKnVudXNlZCk7CiBzdGF0aWMgdm9pZCB2Y3B1X3Blcmlv
ZGljX3RpbWVyX2ZuKHZvaWQgKmRhdGEpOwpAQCAtNzMsNiArNzcsNTggQEAgZXh0ZXJuIGNvbnN0
IHN0cnVjdCBzY2hlZHVsZXIgKl9fc3RhcnRfc2NoZWR1bGVyc19hcnJheVtdLCAqX19lbmRfc2No
ZWR1bGVyc19hcnIKIAogc3RhdGljIHN0cnVjdCBzY2hlZHVsZXIgX19yZWFkX21vc3RseSBvcHM7
CiAKK3N0YXRpYyBzcGlubG9ja190ICoKK3NjaGVkX2lkbGVfc3dpdGNoX3NjaGVkKHN0cnVjdCBz
Y2hlZHVsZXIgKm5ld19vcHMsIHVuc2lnbmVkIGludCBjcHUsCisgICAgICAgICAgICAgICAgICAg
ICAgICB2b2lkICpwZGF0YSwgdm9pZCAqdmRhdGEpCit7CisgICAgaWRsZV92Y3B1W2NwdV0tPnNj
aGVkX3ByaXYgPSBOVUxMOworCisgICAgcmV0dXJuICZzY2hlZF9mcmVlX2NwdV9sb2NrOworfQor
CitzdGF0aWMgaW50CitzY2hlZF9pZGxlX2NwdV9waWNrKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIg
Km9wcywgc3RydWN0IHZjcHUgKnYpCit7CisgICAgcmV0dXJuIHYtPnByb2Nlc3NvcjsKK30KKwor
c3RhdGljIHZvaWQgKgorc2NoZWRfaWRsZV9hbGxvY192ZGF0YShjb25zdCBzdHJ1Y3Qgc2NoZWR1
bGVyICpvcHMsIHN0cnVjdCB2Y3B1ICp2LAorICAgICAgICAgICAgICAgICAgICAgICB2b2lkICpk
ZCkKK3sKKyAgICAvKiBBbnkgbm9uLU5VTEwgcG9pbnRlciBpcyBmaW5lIGhlcmUuICovCisgICAg
cmV0dXJuIFpFUk9fQkxPQ0tfUFRSOworfQorCitzdGF0aWMgdm9pZAorc2NoZWRfaWRsZV9mcmVl
X3ZkYXRhKGNvbnN0IHN0cnVjdCBzY2hlZHVsZXIgKm9wcywgdm9pZCAqcHJpdikKK3sKK30KKwor
c3RhdGljIHN0cnVjdCB0YXNrX3NsaWNlIHNjaGVkX2lkbGVfc2NoZWR1bGUoCisgICAgY29uc3Qg
c3RydWN0IHNjaGVkdWxlciAqb3BzLCBzX3RpbWVfdCBub3csCisgICAgYm9vbCB0YXNrbGV0X3dv
cmtfc2NoZWR1bGVkKQoreworICAgIGNvbnN0IHVuc2lnbmVkIGludCBjcHUgPSBzbXBfcHJvY2Vz
c29yX2lkKCk7CisgICAgc3RydWN0IHRhc2tfc2xpY2UgcmV0ID0geyAudGltZSA9IC0xIH07CisK
KyAgICByZXQudGFzayA9IGlkbGVfdmNwdVtjcHVdOworICAgIHJldHVybiByZXQ7Cit9CisKK3N0
YXRpYyBzdHJ1Y3Qgc2NoZWR1bGVyIHNjaGVkX2lkbGVfb3BzID0geworICAgIC5uYW1lICAgICAg
ICAgICA9ICJJZGxlIFNjaGVkdWxlciIsCisgICAgLm9wdF9uYW1lICAgICAgID0gImlkbGUiLAor
ICAgIC5zY2hlZF9kYXRhICAgICA9IE5VTEwsCisKKyAgICAucGlja19jcHUgICAgICAgPSBzY2hl
ZF9pZGxlX2NwdV9waWNrLAorICAgIC5kb19zY2hlZHVsZSAgICA9IHNjaGVkX2lkbGVfc2NoZWR1
bGUsCisKKyAgICAuYWxsb2NfdmRhdGEgICAgPSBzY2hlZF9pZGxlX2FsbG9jX3ZkYXRhLAorICAg
IC5mcmVlX3ZkYXRhICAgICA9IHNjaGVkX2lkbGVfZnJlZV92ZGF0YSwKKyAgICAuc3dpdGNoX3Nj
aGVkICAgPSBzY2hlZF9pZGxlX3N3aXRjaF9zY2hlZCwKK307CisKIHN0YXRpYyBpbmxpbmUgc3Ry
dWN0IHNjaGVkdWxlciAqZG9tX3NjaGVkdWxlcihjb25zdCBzdHJ1Y3QgZG9tYWluICpkKQogewog
ICAgIGlmICggbGlrZWx5KGQtPmNwdXBvb2wgIT0gTlVMTCkgKQpAQCAtMTU4NywxMiArMTY0Mywx
MCBAQCBzdGF0aWMgdm9pZCBwb2xsX3RpbWVyX2ZuKHZvaWQgKmRhdGEpCiBzdGF0aWMgaW50IGNw
dV9zY2hlZHVsZV91cCh1bnNpZ25lZCBpbnQgY3B1KQogewogICAgIHN0cnVjdCBzY2hlZHVsZV9k
YXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxlX2RhdGEsIGNwdSk7Ci0gICAgdm9pZCAqc2NoZWRf
cHJpdjsKIAotICAgIHBlcl9jcHUoc2NoZWR1bGVyLCBjcHUpID0gJm9wczsKKyAgICBwZXJfY3B1
KHNjaGVkdWxlciwgY3B1KSA9ICZzY2hlZF9pZGxlX29wczsKICAgICBzcGluX2xvY2tfaW5pdCgm
c2QtPl9sb2NrKTsKLSAgICBzZC0+c2NoZWR1bGVfbG9jayA9ICZzZC0+X2xvY2s7Ci0gICAgc2Qt
PmN1cnIgPSBpZGxlX3ZjcHVbY3B1XTsKKyAgICBzZC0+c2NoZWR1bGVfbG9jayA9ICZzY2hlZF9m
cmVlX2NwdV9sb2NrOwogICAgIGluaXRfdGltZXIoJnNkLT5zX3RpbWVyLCBzX3RpbWVyX2ZuLCBO
VUxMLCBjcHUpOwogICAgIGF0b21pY19zZXQoJnNkLT51cmdlbnRfY291bnQsIDApOwogCkBAIC0x
NjAyLDQwICsxNjU2LDE5IEBAIHN0YXRpYyBpbnQgY3B1X3NjaGVkdWxlX3VwKHVuc2lnbmVkIGlu
dCBjcHUpCiAKICAgICBpZiAoIGlkbGVfdmNwdVtjcHVdID09IE5VTEwgKQogICAgICAgICB2Y3B1
X2NyZWF0ZShpZGxlX3ZjcHVbMF0tPmRvbWFpbiwgY3B1LCBjcHUpOwotICAgIGVsc2UKLSAgICB7
Ci0gICAgICAgIHN0cnVjdCB2Y3B1ICppZGxlID0gaWRsZV92Y3B1W2NwdV07Ci0KLSAgICAgICAg
LyoKLSAgICAgICAgICogRHVyaW5nIChBQ1BJPykgc3VzcGVuZCB0aGUgaWRsZSB2Q1BVIGZvciB0
aGlzIHBDUFUgaXMgbm90IGZyZWVkLAotICAgICAgICAgKiB3aGlsZSBpdHMgc2NoZWR1bGVyIHNw
ZWNpZmljIGRhdGEgKHdoYXQgaXMgcG9pbnRlZCBieSBzY2hlZF9wcml2KQotICAgICAgICAgKiBp
cy4gQWxzbywgYXQgdGhpcyBzdGFnZSBvZiB0aGUgcmVzdW1lIHBhdGgsIHdlIGF0dGFjaCB0aGUg
cENQVQotICAgICAgICAgKiB0byB0aGUgZGVmYXVsdCBzY2hlZHVsZXIsIG5vIG1hdHRlciBpbiB3
aGF0IGNwdXBvb2wgaXQgd2FzIGJlZm9yZQotICAgICAgICAgKiBzdXNwZW5kLiBUbyBhdm9pZCBp
bmNvbnNpc3RlbmN5LCBsZXQncyBhbGxvY2F0ZSBkZWZhdWx0IHNjaGVkdWxlcgotICAgICAgICAg
KiBkYXRhIGZvciB0aGUgaWRsZSB2Q1BVIGhlcmUuIElmIHRoZSBwQ1BVIHdhcyBpbiBhIGRpZmZl
cmVudCBwb29sCi0gICAgICAgICAqIHdpdGggYSBkaWZmZXJlbnQgc2NoZWR1bGVyLCBpdCBpcyBz
Y2hlZHVsZV9jcHVfc3dpdGNoKCksIGludm9rZWQKLSAgICAgICAgICogbGF0ZXIsIHRoYXQgd2ls
bCBzZXQgdGhpbmdzIHVwIGFzIGFwcHJvcHJpYXRlLgotICAgICAgICAgKi8KLSAgICAgICAgQVNT
RVJUKGlkbGUtPnNjaGVkX3ByaXYgPT0gTlVMTCk7CiAKLSAgICAgICAgaWRsZS0+c2NoZWRfcHJp
diA9IHNjaGVkX2FsbG9jX3ZkYXRhKCZvcHMsIGlkbGUsCi0gICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBpZGxlLT5kb21haW4tPnNjaGVkX3ByaXYpOwotICAgICAg
ICBpZiAoIGlkbGUtPnNjaGVkX3ByaXYgPT0gTlVMTCApCi0gICAgICAgICAgICByZXR1cm4gLUVO
T01FTTsKLSAgICB9CiAgICAgaWYgKCBpZGxlX3ZjcHVbY3B1XSA9PSBOVUxMICkKICAgICAgICAg
cmV0dXJuIC1FTk9NRU07CiAKICAgICAvKgotICAgICAqIFdlIGRvbid0IHdhbnQgdG8gcmlzayBj
YWxsaW5nIHhmcmVlKCkgb24gYW4gc2QtPnNjaGVkX3ByaXYKLSAgICAgKiAoZS5nLiwgaW5zaWRl
IGZyZWVfcGRhdGEsIGZyb20gY3B1X3NjaGVkdWxlX2Rvd24oKSBjYWxsZWQKLSAgICAgKiBkdXJp
bmcgQ1BVX1VQX0NBTkNFTExFRCkgdGhhdCBjb250YWlucyBhbiBJU19FUlIgdmFsdWUuCisgICAg
ICogTm8gbmVlZCB0byBhbGxvY2F0ZSBhbnkgc2NoZWR1bGVyIGRhdGEsIGFzIGNwdXMgY29taW5n
IG9ubGluZSBhcmUKKyAgICAgKiBmcmVlIGluaXRpYWxseSBhbmQgdGhlIGlkbGUgc2NoZWR1bGVy
IGRvZXNuJ3QgbmVlZCBhbnkgZGF0YSBhcmVhcworICAgICAqIGFsbG9jYXRlZC4KICAgICAgKi8K
LSAgICBzY2hlZF9wcml2ID0gc2NoZWRfYWxsb2NfcGRhdGEoJm9wcywgY3B1KTsKLSAgICBpZiAo
IElTX0VSUihzY2hlZF9wcml2KSApCi0gICAgICAgIHJldHVybiBQVFJfRVJSKHNjaGVkX3ByaXYp
OwogCi0gICAgc2QtPnNjaGVkX3ByaXYgPSBzY2hlZF9wcml2OworICAgIHNkLT5jdXJyID0gaWRs
ZV92Y3B1W2NwdV07CisKKyAgICBzZC0+c2NoZWRfcHJpdiA9IE5VTEw7CiAKICAgICByZXR1cm4g
MDsKIH0KQEAgLTE2NDMsMTMgKzE2NzYsNiBAQCBzdGF0aWMgaW50IGNwdV9zY2hlZHVsZV91cCh1
bnNpZ25lZCBpbnQgY3B1KQogc3RhdGljIHZvaWQgY3B1X3NjaGVkdWxlX2Rvd24odW5zaWduZWQg
aW50IGNwdSkKIHsKICAgICBzdHJ1Y3Qgc2NoZWR1bGVfZGF0YSAqc2QgPSAmcGVyX2NwdShzY2hl
ZHVsZV9kYXRhLCBjcHUpOwotICAgIHN0cnVjdCBzY2hlZHVsZXIgKnNjaGVkID0gcGVyX2NwdShz
Y2hlZHVsZXIsIGNwdSk7Ci0KLSAgICBzY2hlZF9mcmVlX3BkYXRhKHNjaGVkLCBzZC0+c2NoZWRf
cHJpdiwgY3B1KTsKLSAgICBzY2hlZF9mcmVlX3ZkYXRhKHNjaGVkLCBpZGxlX3ZjcHVbY3B1XS0+
c2NoZWRfcHJpdik7Ci0KLSAgICBpZGxlX3ZjcHVbY3B1XS0+c2NoZWRfcHJpdiA9IE5VTEw7Ci0g
ICAgc2QtPnNjaGVkX3ByaXYgPSBOVUxMOwogCiAgICAga2lsbF90aW1lcigmc2QtPnNfdGltZXIp
OwogfQpAQCAtMTY1NywxNCArMTY4MywxMSBAQCBzdGF0aWMgdm9pZCBjcHVfc2NoZWR1bGVfZG93
bih1bnNpZ25lZCBpbnQgY3B1KQogdm9pZCBzY2hlZF9ybV9jcHUodW5zaWduZWQgaW50IGNwdSkK
IHsKICAgICBpbnQgcmM7Ci0gICAgc3RydWN0IHNjaGVkdWxlX2RhdGEgKnNkID0gJnBlcl9jcHUo
c2NoZWR1bGVfZGF0YSwgY3B1KTsKLSAgICBzdHJ1Y3Qgc2NoZWR1bGVyICpzY2hlZCA9IHBlcl9j
cHUoc2NoZWR1bGVyLCBjcHUpOwogCiAgICAgcmN1X3JlYWRfbG9jaygmZG9tbGlzdF9yZWFkX2xv
Y2spOwogICAgIHJjID0gY3B1X2Rpc2FibGVfc2NoZWR1bGVyKGNwdSk7CiAgICAgQlVHX09OKHJj
KTsKICAgICByY3VfcmVhZF91bmxvY2soJmRvbWxpc3RfcmVhZF9sb2NrKTsKLSAgICBzY2hlZF9k
ZWluaXRfcGRhdGEoc2NoZWQsIHNkLT5zY2hlZF9wcml2LCBjcHUpOwogICAgIGNwdV9zY2hlZHVs
ZV9kb3duKGNwdSk7CiB9CiAKQEAgLTE2NzIsOCArMTY5NSw2IEBAIHN0YXRpYyBpbnQgY3B1X3Nj
aGVkdWxlX2NhbGxiYWNrKAogICAgIHN0cnVjdCBub3RpZmllcl9ibG9jayAqbmZiLCB1bnNpZ25l
ZCBsb25nIGFjdGlvbiwgdm9pZCAqaGNwdSkKIHsKICAgICB1bnNpZ25lZCBpbnQgY3B1ID0gKHVu
c2lnbmVkIGxvbmcpaGNwdTsKLSAgICBzdHJ1Y3Qgc2NoZWR1bGVyICpzY2hlZCA9IHBlcl9jcHUo
c2NoZWR1bGVyLCBjcHUpOwotICAgIHN0cnVjdCBzY2hlZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1
KHNjaGVkdWxlX2RhdGEsIGNwdSk7CiAgICAgaW50IHJjID0gMDsKIAogICAgIC8qCkBAIC0xNjgx
LDM5ICsxNzAyLDI1IEBAIHN0YXRpYyBpbnQgY3B1X3NjaGVkdWxlX2NhbGxiYWNrKAogICAgICAq
IGFsbG9jYXRpbmcgYW5kIGluaXRpYWxpemluZyB0aGUgcGVyLXBDUFUgc2NoZWR1bGVyIHNwZWNp
ZmljIGRhdGEsCiAgICAgICogYXMgd2VsbCBhcyAicmVnaXN0ZXJpbmciIHRoaXMgcENQVSB0byB0
aGUgc2NoZWR1bGVyICh3aGljaCBtYXkKICAgICAgKiBpbnZvbHZlIG1vZGlmeWluZyBzb21lIHNj
aGVkdWxlciB3aWRlIGRhdGEgc3RydWN0dXJlcykuCi0gICAgICogVGhpcyBoYXBwZW5zIGJ5IGNh
bGxpbmcgdGhlIGFsbG9jX3BkYXRhIGFuZCBpbml0X3BkYXRhIGhvb2tzLCBpbgotICAgICAqIHRo
aXMgb3JkZXIuIEEgc2NoZWR1bGVyIHRoYXQgZG9lcyBub3QgbmVlZCB0byBhbGxvY2F0ZSBhbnkg
cGVyLXBDUFUKLSAgICAgKiBkYXRhIGNhbiBhdm9pZCBpbXBsZW1lbnRpbmcgYWxsb2NfcGRhdGEu
IGluaXRfcGRhdGEgbWF5LCBob3dldmVyLCBiZQotICAgICAqIG5lY2Vzc2FyeS91c2VmdWwgaW4g
dGhpcyBjYXNlIHRvbyAoZS5nLiwgaXQgY2FuIGNvbnRhaW4gdGhlICJyZWdpc3RlcgotICAgICAq
IHRoZSBwQ1BVIHRvIHRoZSBzY2hlZHVsZXIiIHBhcnQpLiBhbGxvY19wZGF0YSAoaWYgcHJlc2Vu
dCkgaXMgY2FsbGVkCi0gICAgICogZHVyaW5nIENQVV9VUF9QUkVQQVJFLiBpbml0X3BkYXRhIChp
ZiBwcmVzZW50KSBpcyBjYWxsZWQgZHVyaW5nCi0gICAgICogQ1BVX1NUQVJUSU5HLgorICAgICAq
IEFzIG5ldyBwQ1BVcyBhbHdheXMgc3RhcnQgYXMgImZyZWUiIGNwdXMgd2l0aCB0aGUgbWluaW1h
bCBpZGxlCisgICAgICogc2NoZWR1bGVyIGJlaW5nIGluIGNoYXJnZSwgd2UgZG9uJ3QgbmVlZCBh
bnkgb2YgdGhhdC4KICAgICAgKgogICAgICAqIE9uIHRoZSBvdGhlciBoYW5kLCBhdCB0ZWFyZG93
biwgd2UgbmVlZCB0byByZXZlcnNlIHdoYXQgaGFzIGJlZW4gZG9uZQotICAgICAqIGR1cmluZyBp
bml0aWFsaXphdGlvbiwgYW5kIHRoZW4gZnJlZSB0aGUgcGVyLXBDUFUgc3BlY2lmaWMgZGF0YS4g
VGhpcwotICAgICAqIGhhcHBlbnMgYnkgY2FsbGluZyB0aGUgZGVpbml0X3BkYXRhIGFuZCBmcmVl
X3BkYXRhIGhvb2tzLCBpbiB0aGlzCisgICAgICogZHVyaW5nIGluaXRpYWxpemF0aW9uLCBhbmQg
dGhlbiBmcmVlIHRoZSBwZXItcENQVSBzcGVjaWZpYyBkYXRhLiBBCisgICAgICogcENQVSBicm91
Z2h0IGRvd24gaXMgbm90IGZvcmNlZCB0aHJvdWdoICJmcmVlIiBjcHVzLCBzbyBoZXJlIHdlIG5l
ZWQgdG8KKyAgICAgKiB1c2UgdGhlIGFwcHJvcHJpYXRlIGhvb2tzLgorICAgICAqCisgICAgICog
VGhpcyBoYXBwZW5zIGJ5IGNhbGxpbmcgdGhlIGRlaW5pdF9wZGF0YSBhbmQgZnJlZV9wZGF0YSBo
b29rcywgaW4gdGhpcwogICAgICAqIG9yZGVyLiBJZiBubyBwZXItcENQVSBtZW1vcnkgd2FzIGFs
bG9jYXRlZCwgdGhlcmUgaXMgbm8gbmVlZCB0bwogICAgICAqIHByb3ZpZGUgYW4gaW1wbGVtZW50
YXRpb24gb2YgZnJlZV9wZGF0YS4gZGVpbml0X3BkYXRhIG1heSwgaG93ZXZlciwKICAgICAgKiBi
ZSBuZWNlc3NhcnkvdXNlZnVsIGluIHRoaXMgY2FzZSB0b28gKGUuZy4sIGl0IGNhbiB1bmRvIHNv
bWV0aGluZyBkb25lCiAgICAgICogb24gc2NoZWR1bGVyIHdpZGUgZGF0YSBzdHJ1Y3R1cmUgZHVy
aW5nIGluaXRfcGRhdGEpLiBCb3RoIGRlaW5pdF9wZGF0YQogICAgICAqIGFuZCBmcmVlX3BkYXRh
IGFyZSBjYWxsZWQgZHVyaW5nIENQVV9ERUFELgogICAgICAqCi0gICAgICogSWYgc29tZXRpbmcg
Z29lcyB3cm9uZyBkdXJpbmcgYnJpbmd1cCwgd2UgZ28gdG8gQ1BVX1VQX0NBTkNFTExFRAotICAg
ICAqICpiZWZvcmUqIGhhdmluZyBjYWxsZWQgaW5pdF9wZGF0YS4gSW4gdGhpcyBjYXNlLCBhcyB0
aGVyZSBpcyBubwotICAgICAqIGluaXRpYWxpemF0aW9uIG5lZWRpbmcgdW5kb2luZywgb25seSBm
cmVlX3BkYXRhIHNob3VsZCBiZSBjYWxsZWQuCi0gICAgICogVGhpcyBtZWFucyBpdCBpcyBwb3Nz
aWJsZSB0byBjYWxsIGZyZWVfcGRhdGEganVzdCBhZnRlciBhbGxvY19wZGF0YSwKLSAgICAgKiB3
aXRob3V0IGEgaW5pdF9wZGF0YS9kZWluaXRfcGRhdGEgImN5Y2xlIiBpbiBiZXR3ZWVuIHRoZSB0
d28uCi0gICAgICoKLSAgICAgKiBTbywgaW4gc3VtbWFyeSwgdGhlIHVzYWdlIHBhdHRlcm4gc2hv
dWxkIGxvb2sgZWl0aGVyCi0gICAgICogIC0gYWxsb2NfcGRhdGEtLT5pbml0X3BkYXRhLS0+ZGVp
bml0X3BkYXRhLS0+ZnJlZV9wZGF0YSwgb3IKLSAgICAgKiAgLSBhbGxvY19wZGF0YS0tPmZyZWVf
cGRhdGEuCisgICAgICogSWYgc29tZXRpbmcgZ29lcyB3cm9uZyBkdXJpbmcgYnJpbmd1cCwgd2Ug
Z28gdG8gQ1BVX1VQX0NBTkNFTExFRC4KICAgICAgKi8KICAgICBzd2l0Y2ggKCBhY3Rpb24gKQog
ICAgIHsKLSAgICBjYXNlIENQVV9TVEFSVElORzoKLSAgICAgICAgaWYgKCBzeXN0ZW1fc3RhdGUg
IT0gU1lTX1NUQVRFX3Jlc3VtZSApCi0gICAgICAgICAgICBzY2hlZF9pbml0X3BkYXRhKHNjaGVk
LCBzZC0+c2NoZWRfcHJpdiwgY3B1KTsKLSAgICAgICAgYnJlYWs7CiAgICAgY2FzZSBDUFVfVVBf
UFJFUEFSRToKICAgICAgICAgaWYgKCBzeXN0ZW1fc3RhdGUgIT0gU1lTX1NUQVRFX3Jlc3VtZSAp
CiAgICAgICAgICAgICByYyA9IGNwdV9zY2hlZHVsZV91cChjcHUpOwpAQCAtMTgyNCw5ICsxODMx
LDcgQEAgdm9pZCBfX2luaXQgc2NoZWR1bGVyX2luaXQodm9pZCkKICAgICBpZGxlX2RvbWFpbi0+
bWF4X3ZjcHVzID0gbnJfY3B1X2lkczsKICAgICBpZiAoIHZjcHVfY3JlYXRlKGlkbGVfZG9tYWlu
LCAwLCAwKSA9PSBOVUxMICkKICAgICAgICAgQlVHKCk7Ci0gICAgdGhpc19jcHUoc2NoZWR1bGVf
ZGF0YSkuc2NoZWRfcHJpdiA9IHNjaGVkX2FsbG9jX3BkYXRhKCZvcHMsIDApOwotICAgIEJVR19P
TihJU19FUlIodGhpc19jcHUoc2NoZWR1bGVfZGF0YSkuc2NoZWRfcHJpdikpOwotICAgIHNjaGVk
X2luaXRfcGRhdGEoJm9wcywgdGhpc19jcHUoc2NoZWR1bGVfZGF0YSkuc2NoZWRfcHJpdiwgMCk7
CisgICAgdGhpc19jcHUoc2NoZWR1bGVfZGF0YSkuY3VyciA9IGlkbGVfdmNwdVswXTsKIH0KIAog
LyoKQEAgLTE4MzQsMTggKzE4MzksMTQgQEAgdm9pZCBfX2luaXQgc2NoZWR1bGVyX2luaXQodm9p
ZCkKICAqIGNwdXBvb2wsIG9yIHN1YmplY3QgaXQgdG8gdGhlIHNjaGVkdWxlciBvZiBhIG5ldyBj
cHVwb29sLgogICoKICAqIEZvciB0aGUgcENQVXMgdGhhdCBhcmUgcmVtb3ZlZCBmcm9tIHRoZWly
IGNwdXBvb2wsIHRoZWlyIHNjaGVkdWxlciBiZWNvbWVzCi0gKiAmb3BzICh0aGUgZGVmYXVsdCBz
Y2hlZHVsZXIsIHNlbGVjdGVkIGF0IGJvb3QsIHdoaWNoIGFsc28gc2VydmljZXMgdGhlCi0gKiBk
ZWZhdWx0IGNwdXBvb2wpLiBIb3dldmVyLCBhcyB0aGVzZSBwQ1BVcyBhcmUgbm90IHJlYWxseSBw
YXJ0IG9mIGFueSBwb29sLAotICogdGhlcmUgd29uJ3QgYmUgYW55IHNjaGVkdWxpbmcgZXZlbnQg
b24gdGhlbSwgbm90IGV2ZW4gZnJvbSB0aGUgZGVmYXVsdAotICogc2NoZWR1bGVyLiBCYXNpY2Fs
bHksIHRoZXkgd2lsbCBqdXN0IHNpdCBpZGxlIHVudGlsIHRoZXkgYXJlIGV4cGxpY2l0bHkKLSAq
IGFkZGVkIGJhY2sgdG8gYSBjcHVwb29sLgorICogJnNjaGVkX2lkbGVfb3BzICh0aGUgaWRsZSBz
Y2hlZHVsZXIpLgogICovCiBpbnQgc2NoZWR1bGVfY3B1X3N3aXRjaCh1bnNpZ25lZCBpbnQgY3B1
LCBzdHJ1Y3QgY3B1cG9vbCAqYykKIHsKICAgICBzdHJ1Y3QgdmNwdSAqaWRsZTsKICAgICB2b2lk
ICpwcHJpdiwgKnBwcml2X29sZCwgKnZwcml2LCAqdnByaXZfb2xkOwogICAgIHN0cnVjdCBzY2hl
ZHVsZXIgKm9sZF9vcHMgPSBwZXJfY3B1KHNjaGVkdWxlciwgY3B1KTsKLSAgICBzdHJ1Y3Qgc2No
ZWR1bGVyICpuZXdfb3BzID0gKGMgPT0gTlVMTCkgPyAmb3BzIDogYy0+c2NoZWQ7CisgICAgc3Ry
dWN0IHNjaGVkdWxlciAqbmV3X29wcyA9IChjID09IE5VTEwpID8gJnNjaGVkX2lkbGVfb3BzIDog
Yy0+c2NoZWQ7CiAgICAgc3RydWN0IGNwdXBvb2wgKm9sZF9wb29sID0gcGVyX2NwdShjcHVwb29s
LCBjcHUpOwogICAgIHN0cnVjdCBzY2hlZHVsZV9kYXRhICpzZCA9ICZwZXJfY3B1KHNjaGVkdWxl
X2RhdGEsIGNwdSk7CiAgICAgc3BpbmxvY2tfdCAqb2xkX2xvY2ssICpuZXdfbG9jazsKQEAgLTE4
NjUsOSArMTg2Niw2IEBAIGludCBzY2hlZHVsZV9jcHVfc3dpdGNoKHVuc2lnbmVkIGludCBjcHUs
IHN0cnVjdCBjcHVwb29sICpjKQogICAgIEFTU0VSVCgoYyA9PSBOVUxMICYmICFjcHVtYXNrX3Rl
c3RfY3B1KGNwdSwgb2xkX3Bvb2wtPmNwdV92YWxpZCkpIHx8CiAgICAgICAgICAgIChjICE9IE5V
TEwgJiYgIWNwdW1hc2tfdGVzdF9jcHUoY3B1LCBjLT5jcHVfdmFsaWQpKSk7CiAKLSAgICBpZiAo
IG9sZF9vcHMgPT0gbmV3X29wcyApCi0gICAgICAgIGdvdG8gb3V0OwotCiAgICAgLyoKICAgICAg
KiBUbyBzZXR1cCB0aGUgY3B1IGZvciB0aGUgbmV3IHNjaGVkdWxlciB3ZSBuZWVkOgogICAgICAq
ICAtIGEgdmFsaWQgaW5zdGFuY2Ugb2YgcGVyLUNQVSBzY2hlZHVsZXIgc3BlY2lmaWMgZGF0YSwg
YXMgaXQgaXMKQEAgLTE5MzEsNyArMTkyOSw2IEBAIGludCBzY2hlZHVsZV9jcHVfc3dpdGNoKHVu
c2lnbmVkIGludCBjcHUsIHN0cnVjdCBjcHVwb29sICpjKQogICAgIHNjaGVkX2ZyZWVfdmRhdGEo
b2xkX29wcywgdnByaXZfb2xkKTsKICAgICBzY2hlZF9mcmVlX3BkYXRhKG9sZF9vcHMsIHBwcml2
X29sZCwgY3B1KTsKIAotIG91dDoKICAgICBwZXJfY3B1KGNwdXBvb2wsIGNwdSkgPSBjOwogICAg
IC8qIFdoZW4gYSBjcHUgaXMgYWRkZWQgdG8gYSBwb29sLCB0cmlnZ2VyIGl0IHRvIGdvIHBpY2sg
dXAgc29tZSB3b3JrICovCiAgICAgaWYgKCBjICE9IE5VTEwgKQotLSAKMi4xNi40CgoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVsIG1haWxp
bmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0cy54ZW5w
cm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

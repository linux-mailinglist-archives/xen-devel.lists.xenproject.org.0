Return-Path: <xen-devel-bounces@lists.xenproject.org>
X-Original-To: lists+xen-devel@lfdr.de
Delivered-To: lists+xen-devel@lfdr.de
Received: from lists.xenproject.org (lists.xenproject.org [192.237.175.120])
	by mail.lfdr.de (Postfix) with ESMTPS id 4AE66BFF9F
	for <lists+xen-devel@lfdr.de>; Fri, 27 Sep 2019 09:04:43 +0200 (CEST)
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1iDkGc-0004XY-H4; Fri, 27 Sep 2019 07:02:14 +0000
Received: from us1-rack-iad1.inumbo.com ([172.99.69.81])
 by lists.xenproject.org with esmtp (Exim 4.89)
 (envelope-from <SRS0=Rbpq=XW=suse.com=jgross@srs-us1.protection.inumbo.net>)
 id 1iDkGa-0004V7-RV
 for xen-devel@lists.xenproject.org; Fri, 27 Sep 2019 07:02:12 +0000
X-Inumbo-ID: 93f9d360-e0f4-11e9-bf31-bc764e2007e4
Received: from mx1.suse.de (unknown [195.135.220.15])
 by localhost (Halon) with ESMTPS
 id 93f9d360-e0f4-11e9-bf31-bc764e2007e4;
 Fri, 27 Sep 2019 07:01:07 +0000 (UTC)
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id C52D8B181;
 Fri, 27 Sep 2019 07:01:04 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: xen-devel@lists.xenproject.org
Date: Fri, 27 Sep 2019 09:00:38 +0200
Message-Id: <20190927070050.12405-35-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20190927070050.12405-1-jgross@suse.com>
References: <20190927070050.12405-1-jgross@suse.com>
Subject: [Xen-devel] [PATCH v4 34/46] xen/sched: add fall back to idle vcpu
 when scheduling unit
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Juergen Gross <jgross@suse.com>,
 Stefano Stabellini <sstabellini@kernel.org>, Wei Liu <wl@xen.org>,
 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
 George Dunlap <George.Dunlap@eu.citrix.com>,
 Andrew Cooper <andrew.cooper3@citrix.com>,
 Ian Jackson <ian.jackson@eu.citrix.com>, Tim Deegan <tim@xen.org>,
 Julien Grall <julien.grall@arm.com>, Jan Beulich <jbeulich@suse.com>,
 Dario Faggioli <dfaggioli@suse.com>,
 Volodymyr Babchuk <Volodymyr_Babchuk@epam.com>,
 =?UTF-8?q?Roger=20Pau=20Monn=C3=A9?= <roger.pau@citrix.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: "Xen-devel" <xen-devel-bounces@lists.xenproject.org>

V2hlbiBzY2hlZHVsaW5nIGFuIHVuaXQgd2l0aCBtdWx0aXBsZSB2Y3B1cyB0aGVyZSBpcyBubyBn
dWFyYW50ZWUgYWxsCnZjcHVzIGFyZSBhdmFpbGFibGUgKGUuZy4gYWJvdmUgbWF4dmNwdXMgb3Ig
dmNwdSBvZmZsaW5lKS4gRmFsbCBiYWNrIHRvCmlkbGUgdmNwdSBvZiB0aGUgY3VycmVudCBjcHUg
aW4gdGhhdCBjYXNlLiBUaGlzIHJlcXVpcmVzIHRvIHN0b3JlIHRoZQpjb3JyZWN0IHNjaGVkdWxl
X3VuaXQgcG9pbnRlciBpbiB0aGUgaWRsZSB2Y3B1IGFzIGxvbmcgYXMgaXQgdXNlZCBhcwpmYWxs
YmFjayB2Y3B1LgoKSW4gb3JkZXIgdG8gbW9kaWZ5IHRoZSBydW5zdGF0ZXMgb2YgdGhlIGNvcnJl
Y3QgdmNwdXMgd2hlbiBzd2l0Y2hpbmcKc2NoZWR1bGUgdW5pdHMgbWVyZ2Ugc2NoZWRfdW5pdF9y
dW5zdGF0ZV9jaGFuZ2UoKSBpbnRvCnNjaGVkX3N3aXRjaF91bml0cygpIGFuZCBsb29wIG92ZXIg
dGhlIGFmZmVjdGVkIHBoeXNpY2FsIGNwdXMgaW5zdGVhZApvZiB0aGUgdW5pdCdzIHZjcHVzLiBU
aGlzIGluIHR1cm4gcmVxdWlyZXMgYW4gYWNjZXNzIGZ1bmN0aW9uIHRvIHRoZQpjdXJyZW50IHZh
cmlhYmxlIG9mIG90aGVyIGNwdXMuCgpUb2RheSBjb250ZXh0X3NhdmVkKCkgaXMgY2FsbGVkIGlu
IGNhc2UgcHJldmlvdXMgYW5kIG5leHQgdmNwdXMgZGlmZmVyCndoZW4gZG9pbmcgYSBjb250ZXh0
IHN3aXRjaC4gV2l0aCBhbiBpZGxlIHZjcHUgYmVpbmcgY2FwYWJsZSB0byBiZSBhCnN1YnN0aXR1
dGUgZm9yIGFuIG9mZmxpbmUgdmNwdSB0aGlzIGlzIHByb2JsZW1hdGljIHdoZW4gc3dpdGNoaW5n
IHRvCmFuIGlkbGUgc2NoZWR1bGluZyB1bml0LiBBbiBpZGxlIHByZXZpb3VzIHZjcHUgbGVhdmVz
IHVzIGluIGRvdWJ0IHdoaWNoCnNjaGVkdWxlIHVuaXQgd2FzIGFjdGl2ZSBwcmV2aW91c2x5LCBz
byBzYXZlIHRoZSBwcmV2aW91cyB1bml0IHBvaW50ZXIKaW4gdGhlIHBlci1zY2hlZHVsZSByZXNv
dXJjZSBhcmVhLiBJZiBpdCBpcyBOVUxMIHRoZSB1bml0IGhhcyBub3QKY2hhbmdlZCBhbmQgd2Ug
ZG9uJ3QgaGF2ZSB0byBzZXQgdGhlIHByZXZpb3VzIHVuaXQgdG8gYmUgbm90IHJ1bm5pbmcuCgpX
aGVuIHJ1bm5pbmcgYW4gaWRsZSB2Y3B1IGluIGEgbm9uLWlkbGUgc2NoZWR1bGluZyB1bml0IHVz
ZSBhIHNwZWNpZmljCmd1ZXN0IGlkbGUgbG9vcCBub3QgcGVyZm9ybWluZyBhbnkgbm9uLXNvZnRp
cnEgdGFza2xldHMgYW5kCmxpdmVwYXRjaGluZyBpbiBvcmRlciB0byBhdm9pZCBwb3B1bGF0aW5n
IHRoZSBjcHUgY2FjaGVzIHdpdGggbWVtb3J5CnVzZWQgYnkgb3RoZXIgZG9tYWlucyAoYXMgZmFy
IGFzIHBvc3NpYmxlKS4gU29mdGlycXMgYXJlIGNvbnNpZGVyZWQgdG8KYmUgc2F2ZS4KCkluIG9y
ZGVyIHRvIGF2b2lkIGxpdmVwYXRjaGluZyB3aGVuIGdvaW5nIHRvIGd1ZXN0IGlkbGUgYW5vdGhl
cgp2YXJpYW50IG9mIHJlc2V0X3N0YWNrX2FuZF9qdW1wKCkgbm90IGNhbGxpbmcgY2hlY2tfZm9y
X2xpdmVwYXRjaF93b3JrCmlzIG5lZWRlZC4KClNpZ25lZC1vZmYtYnk6IEp1ZXJnZW4gR3Jvc3Mg
PGpncm9zc0BzdXNlLmNvbT4KQWNrZWQtYnk6IEp1bGllbiBHcmFsbCA8anVsaWVuLmdyYWxsQGFy
bS5jb20+Ci0tLQpSRkMgVjI6Ci0gbmV3IHBhdGNoIChBbmRyZXcgQ29vcGVyKQoKVjE6Ci0gdXNl
IHVyZ2VudF9jb3VudCB0byBzZWxlY3QgY29ycmVjdCBpZGxlIHJvdXRpbmUgKEphbiBCZXVsaWNo
KQoKVjI6Ci0gc2V0IHZjcHUtPmlzX3J1bm5pbmcgaW4gY29udGV4dF9zYXZlZCgpCi0gaW50cm9k
dWNlIHJlc2V0X3N0YWNrX2FuZF9qdW1wX25vbHAoKSAoSmFuIEJldWxpY2gpCi0gcmVhZGQgc2Ny
dWJiaW5nIChKYW4gQmV1bGljaCwgQW5kcmV3IENvb3BlcikKLSBnZXRfY3B1X2N1cnJlbnQoKSBf
Tk9UXyBtb3ZlZCB0byBpbmNsdWRlL2FzbS14ODYvY3VycmVudC5oIGFzIHRoZQogIG5lZWRlZCBy
ZWZlcmVuY2Ugb2Ygc3RhY2tfYmFzZVtdIHJlc3VsdHMgaW4gYSAjaW5jbHVkZSBoZWxsCgpWMzoK
LSBzcGxpdCBjb250ZXh0X3NhdmVkKCkgaW50byB1bml0X2NvbnRleHRfc2F2ZWQoKSBhbmQgdmNw
dV9jb250ZXh0X3NhdmVkKCkKClY0OgotIHJlbmFtZSBzZCAtPiBzciAoSmFuIEJldWxpY2gpCi0g
dXNlIHVuc2lnbmVkIGludCBmb3IgY3B1IChKYW4gQmV1bGljaCkKLSBhZGQgY29tbWVudCBpbiBz
Y2hlZF9jb250ZXh0X3N3aXRjaCgpIChKYW4gQmV1bGljaCkKLSBhZGQgY29tbWVudCBiZWZvcmUg
ZGVmaW5pdGlvbiBvZiBnZXRfY3B1X2N1cnJlbnQoKSAoSmFuIEJldWxpY2gpCi0tLQogeGVuL2Fy
Y2gveDg2L2RvbWFpbi5jICAgICAgICAgfCAgMjMgKysrKysrCiB4ZW4vY29tbW9uL3NjaGVkdWxl
LmMgICAgICAgICB8IDE4OCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0t
LS0KIHhlbi9pbmNsdWRlL2FzbS1hcm0vY3VycmVudC5oIHwgICAxICsKIHhlbi9pbmNsdWRlL2Fz
bS14ODYvY3VycmVudC5oIHwgIDE5ICsrKystCiB4ZW4vaW5jbHVkZS9hc20teDg2L3NtcC5oICAg
ICB8ICAgNyArKwogeGVuL2luY2x1ZGUveGVuL3NjaGVkLWlmLmggICAgfCAgIDQgKy0KIHhlbi9p
bmNsdWRlL3hlbi9zY2hlZC5oICAgICAgIHwgICAxICsKIDcgZmlsZXMgY2hhbmdlZCwgMTgwIGlu
c2VydGlvbnMoKyksIDYzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3hlbi9hcmNoL3g4Ni9k
b21haW4uYyBiL3hlbi9hcmNoL3g4Ni9kb21haW4uYwppbmRleCAyN2Y5OWQzYmNjLi5jOGQ3ZjQ5
MWVhIDEwMDY0NAotLS0gYS94ZW4vYXJjaC94ODYvZG9tYWluLmMKKysrIGIveGVuL2FyY2gveDg2
L2RvbWFpbi5jCkBAIC0xNTksNiArMTU5LDI1IEBAIHN0YXRpYyB2b2lkIGlkbGVfbG9vcCh2b2lk
KQogICAgIH0KIH0KIAorLyoKKyAqIElkbGUgbG9vcCBmb3Igc2libGluZ3MgaW4gYWN0aXZlIHNj
aGVkdWxlIHVuaXRzLgorICogV2UgZG9uJ3QgZG8gYW55IHN0YW5kYXJkIGlkbGUgd29yayBsaWtl
IHRhc2tsZXRzIG9yIGxpdmVwYXRjaGluZy4KKyAqLworc3RhdGljIHZvaWQgZ3Vlc3RfaWRsZV9s
b29wKHZvaWQpCit7CisgICAgdW5zaWduZWQgaW50IGNwdSA9IHNtcF9wcm9jZXNzb3JfaWQoKTsK
KworICAgIGZvciAoIDsgOyApCisgICAgeworICAgICAgICBBU1NFUlQoIWNwdV9pc19vZmZsaW5l
KGNwdSkpOworCisgICAgICAgIGlmICggIXNvZnRpcnFfcGVuZGluZyhjcHUpICYmICFzY3J1Yl9m
cmVlX3BhZ2VzKCkgJiYKKyAgICAgICAgICAgICAhc29mdGlycV9wZW5kaW5nKGNwdSkpCisgICAg
ICAgICAgICBzY2hlZF9ndWVzdF9pZGxlKHBtX2lkbGUsIGNwdSk7CisgICAgICAgIGRvX3NvZnRp
cnEoKTsKKyAgICB9Cit9CisKIHZvaWQgc3RhcnR1cF9jcHVfaWRsZV9sb29wKHZvaWQpCiB7CiAg
ICAgc3RydWN0IHZjcHUgKnYgPSBjdXJyZW50OwpAQCAtMTcyLDYgKzE5MSwxMCBAQCB2b2lkIHN0
YXJ0dXBfY3B1X2lkbGVfbG9vcCh2b2lkKQogCiBzdGF0aWMgdm9pZCBub3JldHVybiBjb250aW51
ZV9pZGxlX2RvbWFpbihzdHJ1Y3QgdmNwdSAqdikKIHsKKyAgICAvKiBJZGxlIHZjcHVzIG1pZ2h0
IGJlIGF0dGFjaGVkIHRvIG5vbi1pZGxlIHVuaXRzISAqLworICAgIGlmICggIWlzX2lkbGVfZG9t
YWluKHYtPnNjaGVkX3VuaXQtPmRvbWFpbikgKQorICAgICAgICByZXNldF9zdGFja19hbmRfanVt
cF9ub2xwKGd1ZXN0X2lkbGVfbG9vcCk7CisKICAgICByZXNldF9zdGFja19hbmRfanVtcChpZGxl
X2xvb3ApOwogfQogCmRpZmYgLS1naXQgYS94ZW4vY29tbW9uL3NjaGVkdWxlLmMgYi94ZW4vY29t
bW9uL3NjaGVkdWxlLmMKaW5kZXggZjc5Y2QyYTVhNi4uODU0ZWYzOWVlMiAxMDA2NDQKLS0tIGEv
eGVuL2NvbW1vbi9zY2hlZHVsZS5jCisrKyBiL3hlbi9jb21tb24vc2NoZWR1bGUuYwpAQCAtMTQz
LDEwICsxNDMsMjEgQEAgc3RhdGljIHN0cnVjdCBzY2hlZHVsZXIgc2NoZWRfaWRsZV9vcHMgPSB7
CiAgICAgLnN3aXRjaF9zY2hlZCAgID0gc2NoZWRfaWRsZV9zd2l0Y2hfc2NoZWQsCiB9OwogCitz
dGF0aWMgaW5saW5lIHN0cnVjdCB2Y3B1ICp1bml0MnZjcHVfY3B1KGNvbnN0IHN0cnVjdCBzY2hl
ZF91bml0ICp1bml0LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1
bnNpZ25lZCBpbnQgY3B1KQoreworICAgIHVuc2lnbmVkIGludCBpZHggPSB1bml0LT51bml0X2lk
ICsgcGVyX2NwdShzY2hlZF9yZXNfaWR4LCBjcHUpOworICAgIGNvbnN0IHN0cnVjdCBkb21haW4g
KmQgPSB1bml0LT5kb21haW47CisKKyAgICByZXR1cm4gKGlkeCA8IGQtPm1heF92Y3B1cykgPyBk
LT52Y3B1W2lkeF0gOiBOVUxMOworfQorCiBzdGF0aWMgaW5saW5lIHN0cnVjdCB2Y3B1ICpzY2hl
ZF91bml0MnZjcHVfY3B1KGNvbnN0IHN0cnVjdCBzY2hlZF91bml0ICp1bml0LAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnNpZ25lZCBpbnQgY3B1KQog
ewotICAgIHJldHVybiB1bml0LT5kb21haW4tPnZjcHVbdW5pdC0+dW5pdF9pZCArIHBlcl9jcHUo
c2NoZWRfcmVzX2lkeCwgY3B1KV07CisgICAgc3RydWN0IHZjcHUgKnYgPSB1bml0MnZjcHVfY3B1
KHVuaXQsIGNwdSk7CisKKyAgICByZXR1cm4gKHYgJiYgdi0+bmV3X3N0YXRlID09IFJVTlNUQVRF
X3J1bm5pbmcpID8gdiA6IGlkbGVfdmNwdVtjcHVdOwogfQogCiBzdGF0aWMgaW5saW5lIHN0cnVj
dCBzY2hlZHVsZXIgKmRvbV9zY2hlZHVsZXIoY29uc3Qgc3RydWN0IGRvbWFpbiAqZCkKQEAgLTI2
Niw4ICsyNzcsMTEgQEAgc3RhdGljIGlubGluZSB2b2lkIHZjcHVfcnVuc3RhdGVfY2hhbmdlKAog
CiAgICAgdHJhY2VfcnVuc3RhdGVfY2hhbmdlKHYsIG5ld19zdGF0ZSk7CiAKLSAgICB1bml0LT5y
dW5zdGF0ZV9jbnRbdi0+cnVuc3RhdGUuc3RhdGVdLS07Ci0gICAgdW5pdC0+cnVuc3RhdGVfY250
W25ld19zdGF0ZV0rKzsKKyAgICBpZiAoICFpc19pZGxlX3ZjcHUodikgKQorICAgIHsKKyAgICAg
ICAgdW5pdC0+cnVuc3RhdGVfY250W3YtPnJ1bnN0YXRlLnN0YXRlXS0tOworICAgICAgICB1bml0
LT5ydW5zdGF0ZV9jbnRbbmV3X3N0YXRlXSsrOworICAgIH0KIAogICAgIGRlbHRhID0gbmV3X2Vu
dHJ5X3RpbWUgLSB2LT5ydW5zdGF0ZS5zdGF0ZV9lbnRyeV90aW1lOwogICAgIGlmICggZGVsdGEg
PiAwICkKQEAgLTI3OSwyMSArMjkzLDExIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB2Y3B1X3J1bnN0
YXRlX2NoYW5nZSgKICAgICB2LT5ydW5zdGF0ZS5zdGF0ZSA9IG5ld19zdGF0ZTsKIH0KIAotc3Rh
dGljIGlubGluZSB2b2lkIHNjaGVkX3VuaXRfcnVuc3RhdGVfY2hhbmdlKHN0cnVjdCBzY2hlZF91
bml0ICp1bml0LAotICAgIGJvb2wgcnVubmluZywgc190aW1lX3QgbmV3X2VudHJ5X3RpbWUpCit2
b2lkIHNjaGVkX2d1ZXN0X2lkbGUodm9pZCAoKmlkbGUpICh2b2lkKSwgdW5zaWduZWQgaW50IGNw
dSkKIHsKLSAgICBzdHJ1Y3QgdmNwdSAqdjsKLQotICAgIGZvcl9lYWNoX3NjaGVkX3VuaXRfdmNw
dSAoIHVuaXQsIHYgKQotICAgIHsKLSAgICAgICAgaWYgKCBydW5uaW5nICkKLSAgICAgICAgICAg
IHZjcHVfcnVuc3RhdGVfY2hhbmdlKHYsIHYtPm5ld19zdGF0ZSwgbmV3X2VudHJ5X3RpbWUpOwot
ICAgICAgICBlbHNlCi0gICAgICAgICAgICB2Y3B1X3J1bnN0YXRlX2NoYW5nZSh2LAotICAgICAg
ICAgICAgICAgICgodi0+cGF1c2VfZmxhZ3MgJiBWUEZfYmxvY2tlZCkgPyBSVU5TVEFURV9ibG9j
a2VkIDoKLSAgICAgICAgICAgICAgICAgKHZjcHVfcnVubmFibGUodikgPyBSVU5TVEFURV9ydW5u
YWJsZSA6IFJVTlNUQVRFX29mZmxpbmUpKSwKLSAgICAgICAgICAgICAgICBuZXdfZW50cnlfdGlt
ZSk7Ci0gICAgfQorICAgIGF0b21pY19pbmMoJnBlcl9jcHUoc2NoZWRfdXJnZW50X2NvdW50LCBj
cHUpKTsKKyAgICBpZGxlKCk7CisgICAgYXRvbWljX2RlYygmcGVyX2NwdShzY2hlZF91cmdlbnRf
Y291bnQsIGNwdSkpOwogfQogCiB2b2lkIHZjcHVfcnVuc3RhdGVfZ2V0KHN0cnVjdCB2Y3B1ICp2
LCBzdHJ1Y3QgdmNwdV9ydW5zdGF0ZV9pbmZvICpydW5zdGF0ZSkKQEAgLTU0Myw2ICs1NDcsNyBA
QCBpbnQgc2NoZWRfaW5pdF92Y3B1KHN0cnVjdCB2Y3B1ICp2KQogICAgIGlmICggaXNfaWRsZV9k
b21haW4oZCkgKQogICAgIHsKICAgICAgICAgZ2V0X3NjaGVkX3Jlcyh2LT5wcm9jZXNzb3IpLT5j
dXJyID0gdW5pdDsKKyAgICAgICAgZ2V0X3NjaGVkX3Jlcyh2LT5wcm9jZXNzb3IpLT5zY2hlZF91
bml0X2lkbGUgPSB1bml0OwogICAgICAgICB2LT5pc19ydW5uaW5nID0gMTsKICAgICAgICAgdW5p
dC0+aXNfcnVubmluZyA9IHRydWU7CiAgICAgICAgIHVuaXQtPnN0YXRlX2VudHJ5X3RpbWUgPSBO
T1coKTsKQEAgLTg3NSw3ICs4ODAsNyBAQCBzdGF0aWMgdm9pZCBzY2hlZF91bml0X21vdmVfbG9j
a2VkKHN0cnVjdCBzY2hlZF91bml0ICp1bml0LAogICoKICAqIHNjaGVkX3VuaXRfbWlncmF0ZV9m
aW5pc2goKSB3aWxsIGRvIHRoZSB3b3JrIG5vdyBpZiBpdCBjYW4sIG9yIHNpbXBseQogICogcmV0
dXJuIGlmIGl0IGNhbid0IChiZWNhdXNlIHVuaXQgaXMgc3RpbGwgcnVubmluZyk7IGluIHRoYXQg
Y2FzZQotICogc2NoZWRfdW5pdF9taWdyYXRlX2ZpbmlzaCgpIHdpbGwgYmUgY2FsbGVkIGJ5IGNv
bnRleHRfc2F2ZWQoKS4KKyAqIHNjaGVkX3VuaXRfbWlncmF0ZV9maW5pc2goKSB3aWxsIGJlIGNh
bGxlZCBieSB1bml0X2NvbnRleHRfc2F2ZWQoKS4KICAqLwogc3RhdGljIHZvaWQgc2NoZWRfdW5p
dF9taWdyYXRlX3N0YXJ0KHN0cnVjdCBzY2hlZF91bml0ICp1bml0KQogewpAQCAtODk4LDcgKzkw
Myw3IEBAIHN0YXRpYyB2b2lkIHNjaGVkX3VuaXRfbWlncmF0ZV9maW5pc2goc3RydWN0IHNjaGVk
X3VuaXQgKnVuaXQpCiAKICAgICAvKgogICAgICAqIElmIHRoZSB1bml0IGlzIGN1cnJlbnRseSBy
dW5uaW5nLCB0aGlzIHdpbGwgYmUgaGFuZGxlZCBieQotICAgICAqIGNvbnRleHRfc2F2ZWQoKTsg
YW5kIGluIGFueSBjYXNlLCBpZiB0aGUgYml0IGlzIGNsZWFyZWQsIHRoZW4KKyAgICAgKiB1bml0
X2NvbnRleHRfc2F2ZWQoKTsgYW5kIGluIGFueSBjYXNlLCBpZiB0aGUgYml0IGlzIGNsZWFyZWQs
IHRoZW4KICAgICAgKiBzb21lb25lIGVsc2UgaGFzIGFscmVhZHkgZG9uZSB0aGUgd29yayBzbyB3
ZSBkb24ndCBuZWVkIHRvLgogICAgICAqLwogICAgIGlmICggdW5pdC0+aXNfcnVubmluZyApCkBA
IC0xNzgzLDMzICsxNzg4LDY2IEBAIHN0YXRpYyB2b2lkIHNjaGVkX3N3aXRjaF91bml0cyhzdHJ1
Y3Qgc2NoZWRfcmVzb3VyY2UgKnNyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0
cnVjdCBzY2hlZF91bml0ICpuZXh0LCBzdHJ1Y3Qgc2NoZWRfdW5pdCAqcHJldiwKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBzX3RpbWVfdCBub3cpCiB7Ci0gICAgc3ItPmN1cnIgPSBu
ZXh0OwotCi0gICAgVFJBQ0VfM0QoVFJDX1NDSEVEX1NXSVRDSF9JTkZQUkVWLCBwcmV2LT5kb21h
aW4tPmRvbWFpbl9pZCwgcHJldi0+dW5pdF9pZCwKLSAgICAgICAgICAgICBub3cgLSBwcmV2LT5z
dGF0ZV9lbnRyeV90aW1lKTsKLSAgICBUUkFDRV80RChUUkNfU0NIRURfU1dJVENIX0lORk5FWFQs
IG5leHQtPmRvbWFpbi0+ZG9tYWluX2lkLCBuZXh0LT51bml0X2lkLAotICAgICAgICAgICAgIChu
ZXh0LT52Y3B1X2xpc3QtPnJ1bnN0YXRlLnN0YXRlID09IFJVTlNUQVRFX3J1bm5hYmxlKSA/Ci0g
ICAgICAgICAgICAgKG5vdyAtIG5leHQtPnN0YXRlX2VudHJ5X3RpbWUpIDogMCwgcHJldi0+bmV4
dF90aW1lKTsKKyAgICB1bnNpZ25lZCBpbnQgY3B1OwogCiAgICAgQVNTRVJUKHVuaXRfcnVubmlu
ZyhwcmV2KSk7CiAKLSAgICBUUkFDRV80RChUUkNfU0NIRURfU1dJVENILCBwcmV2LT5kb21haW4t
PmRvbWFpbl9pZCwgcHJldi0+dW5pdF9pZCwKLSAgICAgICAgICAgICBuZXh0LT5kb21haW4tPmRv
bWFpbl9pZCwgbmV4dC0+dW5pdF9pZCk7CisgICAgaWYgKCBwcmV2ICE9IG5leHQgKQorICAgIHsK
KyAgICAgICAgc3ItPmN1cnIgPSBuZXh0OworICAgICAgICBzci0+cHJldiA9IHByZXY7CiAKLSAg
ICBzY2hlZF91bml0X3J1bnN0YXRlX2NoYW5nZShwcmV2LCBmYWxzZSwgbm93KTsKKyAgICAgICAg
VFJBQ0VfM0QoVFJDX1NDSEVEX1NXSVRDSF9JTkZQUkVWLCBwcmV2LT5kb21haW4tPmRvbWFpbl9p
ZCwKKyAgICAgICAgICAgICAgICAgcHJldi0+dW5pdF9pZCwgbm93IC0gcHJldi0+c3RhdGVfZW50
cnlfdGltZSk7CisgICAgICAgIFRSQUNFXzREKFRSQ19TQ0hFRF9TV0lUQ0hfSU5GTkVYVCwgbmV4
dC0+ZG9tYWluLT5kb21haW5faWQsCisgICAgICAgICAgICAgICAgIG5leHQtPnVuaXRfaWQsCisg
ICAgICAgICAgICAgICAgIChuZXh0LT52Y3B1X2xpc3QtPnJ1bnN0YXRlLnN0YXRlID09IFJVTlNU
QVRFX3J1bm5hYmxlKSA/CisgICAgICAgICAgICAgICAgIChub3cgLSBuZXh0LT5zdGF0ZV9lbnRy
eV90aW1lKSA6IDAsIHByZXYtPm5leHRfdGltZSk7CisgICAgICAgIFRSQUNFXzREKFRSQ19TQ0hF
RF9TV0lUQ0gsIHByZXYtPmRvbWFpbi0+ZG9tYWluX2lkLCBwcmV2LT51bml0X2lkLAorICAgICAg
ICAgICAgICAgICBuZXh0LT5kb21haW4tPmRvbWFpbl9pZCwgbmV4dC0+dW5pdF9pZCk7CiAKLSAg
ICBBU1NFUlQoIXVuaXRfcnVubmluZyhuZXh0KSk7Ci0gICAgc2NoZWRfdW5pdF9ydW5zdGF0ZV9j
aGFuZ2UobmV4dCwgdHJ1ZSwgbm93KTsKKyAgICAgICAgQVNTRVJUKCF1bml0X3J1bm5pbmcobmV4
dCkpOwogCi0gICAgLyoKLSAgICAgKiBOQi4gRG9uJ3QgYWRkIGFueSB0cmFjZSByZWNvcmRzIGZy
b20gaGVyZSB1bnRpbCB0aGUgYWN0dWFsIGNvbnRleHQKLSAgICAgKiBzd2l0Y2gsIGVsc2UgbG9z
dF9yZWNvcmRzIHJlc3VtZSB3aWxsIG5vdCB3b3JrIHByb3Blcmx5LgotICAgICAqLworICAgICAg
ICAvKgorICAgICAgICAgKiBOQi4gRG9uJ3QgYWRkIGFueSB0cmFjZSByZWNvcmRzIGZyb20gaGVy
ZSB1bnRpbCB0aGUgYWN0dWFsIGNvbnRleHQKKyAgICAgICAgICogc3dpdGNoLCBlbHNlIGxvc3Rf
cmVjb3JkcyByZXN1bWUgd2lsbCBub3Qgd29yayBwcm9wZXJseS4KKyAgICAgICAgICovCisKKyAg
ICAgICAgQVNTRVJUKCFuZXh0LT5pc19ydW5uaW5nKTsKKyAgICAgICAgbmV4dC0+aXNfcnVubmlu
ZyA9IHRydWU7CisgICAgICAgIG5leHQtPnN0YXRlX2VudHJ5X3RpbWUgPSBub3c7CisKKyAgICAg
ICAgaWYgKCBpc19pZGxlX3VuaXQocHJldikgKQorICAgICAgICB7CisgICAgICAgICAgICBwcmV2
LT5ydW5zdGF0ZV9jbnRbUlVOU1RBVEVfcnVubmluZ10gPSAwOworICAgICAgICAgICAgcHJldi0+
cnVuc3RhdGVfY250W1JVTlNUQVRFX3J1bm5hYmxlXSA9IHNjaGVkX2dyYW51bGFyaXR5OworICAg
ICAgICB9CisgICAgICAgIGlmICggaXNfaWRsZV91bml0KG5leHQpICkKKyAgICAgICAgeworICAg
ICAgICAgICAgbmV4dC0+cnVuc3RhdGVfY250W1JVTlNUQVRFX3J1bm5pbmddID0gc2NoZWRfZ3Jh
bnVsYXJpdHk7CisgICAgICAgICAgICBuZXh0LT5ydW5zdGF0ZV9jbnRbUlVOU1RBVEVfcnVubmFi
bGVdID0gMDsKKyAgICAgICAgfQorICAgIH0KKworICAgIGZvcl9lYWNoX2NwdSAoIGNwdSwgc3It
PmNwdXMgKQorICAgIHsKKyAgICAgICAgc3RydWN0IHZjcHUgKnZwcmV2ID0gZ2V0X2NwdV9jdXJy
ZW50KGNwdSk7CisgICAgICAgIHN0cnVjdCB2Y3B1ICp2bmV4dCA9IHNjaGVkX3VuaXQydmNwdV9j
cHUobmV4dCwgY3B1KTsKKworICAgICAgICBpZiAoIHZwcmV2ICE9IHZuZXh0IHx8IHZwcmV2LT5y
dW5zdGF0ZS5zdGF0ZSAhPSB2bmV4dC0+bmV3X3N0YXRlICkKKyAgICAgICAgeworICAgICAgICAg
ICAgdmNwdV9ydW5zdGF0ZV9jaGFuZ2UodnByZXYsCisgICAgICAgICAgICAgICAgKCh2cHJldi0+
cGF1c2VfZmxhZ3MgJiBWUEZfYmxvY2tlZCkgPyBSVU5TVEFURV9ibG9ja2VkIDoKKyAgICAgICAg
ICAgICAgICAgKHZjcHVfcnVubmFibGUodnByZXYpID8gUlVOU1RBVEVfcnVubmFibGUgOiBSVU5T
VEFURV9vZmZsaW5lKSksCisgICAgICAgICAgICAgICAgbm93KTsKKyAgICAgICAgICAgIHZjcHVf
cnVuc3RhdGVfY2hhbmdlKHZuZXh0LCB2bmV4dC0+bmV3X3N0YXRlLCBub3cpOworICAgICAgICB9
CisKKyAgICAgICAgdm5leHQtPmlzX3J1bm5pbmcgPSAxOwogCi0gICAgQVNTRVJUKCFuZXh0LT5p
c19ydW5uaW5nKTsKLSAgICBuZXh0LT52Y3B1X2xpc3QtPmlzX3J1bm5pbmcgPSAxOwotICAgIG5l
eHQtPmlzX3J1bm5pbmcgPSB0cnVlOwotICAgIG5leHQtPnN0YXRlX2VudHJ5X3RpbWUgPSBub3c7
CisgICAgICAgIGlmICggaXNfaWRsZV92Y3B1KHZuZXh0KSApCisgICAgICAgICAgICB2bmV4dC0+
c2NoZWRfdW5pdCA9IG5leHQ7CisgICAgfQogfQogCiBzdGF0aWMgYm9vbCBzY2hlZF90YXNrbGV0
X2NoZWNrX2NwdSh1bnNpZ25lZCBpbnQgY3B1KQpAQCAtMTg2NSwyOSArMTkwMywzOSBAQCBzdGF0
aWMgc3RydWN0IHNjaGVkX3VuaXQgKmRvX3NjaGVkdWxlKHN0cnVjdCBzY2hlZF91bml0ICpwcmV2
LCBzX3RpbWVfdCBub3csCiAgICAgaWYgKCBwcmV2LT5uZXh0X3RpbWUgPj0gMCApIC8qIC12ZSBt
ZWFucyBubyBsaW1pdCAqLwogICAgICAgICBzZXRfdGltZXIoJnNyLT5zX3RpbWVyLCBub3cgKyBw
cmV2LT5uZXh0X3RpbWUpOwogCi0gICAgaWYgKCBsaWtlbHkocHJldiAhPSBuZXh0KSApCi0gICAg
ICAgIHNjaGVkX3N3aXRjaF91bml0cyhzciwgbmV4dCwgcHJldiwgbm93KTsKKyAgICBzY2hlZF9z
d2l0Y2hfdW5pdHMoc3IsIG5leHQsIHByZXYsIG5vdyk7CiAKICAgICByZXR1cm4gbmV4dDsKIH0K
IAotc3RhdGljIHZvaWQgY29udGV4dF9zYXZlZChzdHJ1Y3QgdmNwdSAqcHJldikKK3N0YXRpYyB2
b2lkIHZjcHVfY29udGV4dF9zYXZlZChzdHJ1Y3QgdmNwdSAqdnByZXYsIHN0cnVjdCB2Y3B1ICp2
bmV4dCkKIHsKLSAgICBzdHJ1Y3Qgc2NoZWRfdW5pdCAqdW5pdCA9IHByZXYtPnNjaGVkX3VuaXQ7
Ci0KICAgICAvKiBDbGVhciBydW5uaW5nIGZsYWcgL2FmdGVyLyB3cml0aW5nIGNvbnRleHQgdG8g
bWVtb3J5LiAqLwogICAgIHNtcF93bWIoKTsKIAotICAgIHByZXYtPmlzX3J1bm5pbmcgPSAwOwor
ICAgIGlmICggdnByZXYgIT0gdm5leHQgKQorICAgICAgICB2cHJldi0+aXNfcnVubmluZyA9IDA7
Cit9CisKK3N0YXRpYyB2b2lkIHVuaXRfY29udGV4dF9zYXZlZChzdHJ1Y3Qgc2NoZWRfcmVzb3Vy
Y2UgKnNyKQoreworICAgIHN0cnVjdCBzY2hlZF91bml0ICp1bml0ID0gc3ItPnByZXY7CisKKyAg
ICBpZiAoICF1bml0ICkKKyAgICAgICAgcmV0dXJuOworCiAgICAgdW5pdC0+aXNfcnVubmluZyA9
IGZhbHNlOwogICAgIHVuaXQtPnN0YXRlX2VudHJ5X3RpbWUgPSBOT1coKTsKKyAgICBzci0+cHJl
diA9IE5VTEw7CiAKICAgICAvKiBDaGVjayBmb3IgbWlncmF0aW9uIHJlcXVlc3QgL2FmdGVyLyBj
bGVhcmluZyBydW5uaW5nIGZsYWcuICovCiAgICAgc21wX21iKCk7CiAKLSAgICBzY2hlZF9jb250
ZXh0X3NhdmVkKHZjcHVfc2NoZWR1bGVyKHByZXYpLCB1bml0KTsKKyAgICBzY2hlZF9jb250ZXh0
X3NhdmVkKHVuaXRfc2NoZWR1bGVyKHVuaXQpLCB1bml0KTsKIAotICAgIHNjaGVkX3VuaXRfbWln
cmF0ZV9maW5pc2godW5pdCk7CisgICAgLyogSWRsZSBuZXZlciBtaWdyYXRlcyBhbmQgaWRsZSB2
Y3B1cyBtaWdodCBiZWxvbmcgdG8gb3RoZXIgdW5pdHMuICovCisgICAgaWYgKCAhaXNfaWRsZV91
bml0KHVuaXQpICkKKyAgICAgICAgc2NoZWRfdW5pdF9taWdyYXRlX2ZpbmlzaCh1bml0KTsKIH0K
IAogLyoKQEAgLTE4OTcsMzUgKzE5NDUsNDQgQEAgc3RhdGljIHZvaWQgY29udGV4dF9zYXZlZChz
dHJ1Y3QgdmNwdSAqcHJldikKICAqIFRoZSBjb3VudGVyIHdpbGwgYmUgMCBpbiBjYXNlIG5vIHJl
bmRlenZvdXMgaXMgbmVlZGVkLiBGb3IgdGhlIHJlbmRlenZvdXMKICAqIGNhc2UgaXQgaXMgaW5p
dGlhbGlzZWQgdG8gdGhlIG51bWJlciBvZiBjcHVzIHRvIHJlbmRlenZvdXMgcGx1cyAxLiBFYWNo
CiAgKiBtZW1iZXIgZW50ZXJpbmcgZGVjcmVtZW50cyB0aGUgY291bnRlci4gVGhlIGxhc3Qgb25l
IHdpbGwgZGVjcmVtZW50IGl0IHRvCi0gKiAxIGFuZCBwZXJmb3JtIHRoZSBmaW5hbCBuZWVkZWQg
YWN0aW9uIGluIHRoYXQgY2FzZSAoY2FsbCBvZiBjb250ZXh0X3NhdmVkKCkKLSAqIGlmIHZjcHUg
d2FzIHN3aXRjaGVkKSwgYW5kIHRoZW4gc2V0IHRoZSBjb3VudGVyIHRvIHplcm8uIFRoZSBvdGhl
ciBtZW1iZXJzCisgKiAxIGFuZCBwZXJmb3JtIHRoZSBmaW5hbCBuZWVkZWQgYWN0aW9uIGluIHRo
YXQgY2FzZSAoY2FsbCBvZgorICogdW5pdF9jb250ZXh0X3NhdmVkKCkpLCBhbmQgdGhlbiBzZXQg
dGhlIGNvdW50ZXIgdG8gemVyby4gVGhlIG90aGVyIG1lbWJlcnMKICAqIHdpbGwgd2FpdCB1bnRp
bCB0aGUgY291bnRlciBiZWNvbWVzIHplcm8gdW50aWwgdGhleSBwcm9jZWVkLgogICovCiB2b2lk
IHNjaGVkX2NvbnRleHRfc3dpdGNoZWQoc3RydWN0IHZjcHUgKnZwcmV2LCBzdHJ1Y3QgdmNwdSAq
dm5leHQpCiB7CiAgICAgc3RydWN0IHNjaGVkX3VuaXQgKm5leHQgPSB2bmV4dC0+c2NoZWRfdW5p
dDsKKyAgICBzdHJ1Y3Qgc2NoZWRfcmVzb3VyY2UgKnNyID0gZ2V0X3NjaGVkX3JlcyhzbXBfcHJv
Y2Vzc29yX2lkKCkpOwogCiAgICAgaWYgKCBhdG9taWNfcmVhZCgmbmV4dC0+cmVuZGV6dm91c19v
dXRfY250KSApCiAgICAgewogICAgICAgICBpbnQgY250ID0gYXRvbWljX2RlY19yZXR1cm4oJm5l
eHQtPnJlbmRlenZvdXNfb3V0X2NudCk7CiAKLSAgICAgICAgLyogQ2FsbCBjb250ZXh0X3NhdmVk
KCkgYmVmb3JlIHJlbGVhc2luZyBvdGhlciB3YWl0ZXJzLiAqLworICAgICAgICB2Y3B1X2NvbnRl
eHRfc2F2ZWQodnByZXYsIHZuZXh0KTsKKworICAgICAgICAvKiBDYWxsIHVuaXRfY29udGV4dF9z
YXZlZCgpIGJlZm9yZSByZWxlYXNpbmcgb3RoZXIgd2FpdGVycy4gKi8KICAgICAgICAgaWYgKCBj
bnQgPT0gMSApCiAgICAgICAgIHsKLSAgICAgICAgICAgIGlmICggdnByZXYgIT0gdm5leHQgKQot
ICAgICAgICAgICAgICAgIGNvbnRleHRfc2F2ZWQodnByZXYpOworICAgICAgICAgICAgdW5pdF9j
b250ZXh0X3NhdmVkKHNyKTsKICAgICAgICAgICAgIGF0b21pY19zZXQoJm5leHQtPnJlbmRlenZv
dXNfb3V0X2NudCwgMCk7CiAgICAgICAgIH0KICAgICAgICAgZWxzZQogICAgICAgICAgICAgd2hp
bGUgKCBhdG9taWNfcmVhZCgmbmV4dC0+cmVuZGV6dm91c19vdXRfY250KSApCiAgICAgICAgICAg
ICAgICAgY3B1X3JlbGF4KCk7CiAgICAgfQotICAgIGVsc2UgaWYgKCB2cHJldiAhPSB2bmV4dCAm
JiBzY2hlZF9ncmFudWxhcml0eSA9PSAxICkKLSAgICAgICAgY29udGV4dF9zYXZlZCh2cHJldik7
CisgICAgZWxzZQorICAgIHsKKyAgICAgICAgdmNwdV9jb250ZXh0X3NhdmVkKHZwcmV2LCB2bmV4
dCk7CisgICAgICAgIGlmICggc2NoZWRfZ3JhbnVsYXJpdHkgPT0gMSApCisgICAgICAgICAgICB1
bml0X2NvbnRleHRfc2F2ZWQoc3IpOworICAgIH0KKworICAgIGlmICggaXNfaWRsZV92Y3B1KHZw
cmV2KSAmJiB2cHJldiAhPSB2bmV4dCApCisgICAgICAgIHZwcmV2LT5zY2hlZF91bml0ID0gc3It
PnNjaGVkX3VuaXRfaWRsZTsKIH0KIAogc3RhdGljIHZvaWQgc2NoZWRfY29udGV4dF9zd2l0Y2go
c3RydWN0IHZjcHUgKnZwcmV2LCBzdHJ1Y3QgdmNwdSAqdm5leHQsCi0gICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBzX3RpbWVfdCBub3cpCisgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBib29sIHJlc2V0X2lkbGVfdW5pdCwgc190aW1lX3Qgbm93KQogewogICAgIGlmICgg
dW5saWtlbHkodnByZXYgPT0gdm5leHQpICkKICAgICB7CkBAIC0xOTM0LDYgKzE5OTEsMTcgQEAg
c3RhdGljIHZvaWQgc2NoZWRfY29udGV4dF9zd2l0Y2goc3RydWN0IHZjcHUgKnZwcmV2LCBzdHJ1
Y3QgdmNwdSAqdm5leHQsCiAgICAgICAgICAgICAgICAgIG5vdyAtIHZwcmV2LT5ydW5zdGF0ZS5z
dGF0ZV9lbnRyeV90aW1lLAogICAgICAgICAgICAgICAgICB2cHJldi0+c2NoZWRfdW5pdC0+bmV4
dF90aW1lKTsKICAgICAgICAgc2NoZWRfY29udGV4dF9zd2l0Y2hlZCh2cHJldiwgdm5leHQpOwor
CisgICAgICAgIC8qCisgICAgICAgICAqIFdlIGFyZSBzd2l0Y2hpbmcgZnJvbSBhIG5vbi1pZGxl
IHRvIGFuIGlkbGUgdW5pdC4KKyAgICAgICAgICogQSB2Y3B1IG9mIHRoZSBpZGxlIHVuaXQgbWln
aHQgaGF2ZSBiZWVuIHJ1bm5pbmcgYmVmb3JlIGR1ZSB0bworICAgICAgICAgKiB0aGUgZ3Vlc3Qg
dmNwdSBiZWluZyBibG9ja2VkLiBXZSBtdXN0IGFkanVzdCB0aGUgdW5pdCBvZiB0aGUgaWRsZQor
ICAgICAgICAgKiB2Y3B1IHdoaWNoIG1pZ2h0IGhhdmUgYmVlbiBzZXQgdG8gdGhlIGd1ZXN0J3Mg
b25lLgorICAgICAgICAgKi8KKyAgICAgICAgaWYgKCByZXNldF9pZGxlX3VuaXQgKQorICAgICAg
ICAgICAgdm5leHQtPnNjaGVkX3VuaXQgPQorICAgICAgICAgICAgICAgIGdldF9zY2hlZF9yZXMo
c21wX3Byb2Nlc3Nvcl9pZCgpKS0+c2NoZWRfdW5pdF9pZGxlOworCiAgICAgICAgIHRyYWNlX2Nv
bnRpbnVlX3J1bm5pbmcodm5leHQpOwogICAgICAgICByZXR1cm4gY29udGludWVfcnVubmluZyh2
cHJldik7CiAgICAgfQpAQCAtMTk5Miw3ICsyMDYwLDcgQEAgc3RhdGljIHN0cnVjdCBzY2hlZF91
bml0ICpzY2hlZF93YWl0X3JlbmRlenZvdXNfaW4oc3RydWN0IHNjaGVkX3VuaXQgKnByZXYsCiAg
ICAgICAgICAgICBwY3B1X3NjaGVkdWxlX3VubG9ja19pcnEoKmxvY2ssIGNwdSk7CiAKICAgICAg
ICAgICAgIHJhaXNlX3NvZnRpcnEoU0NIRURfU0xBVkVfU09GVElSUSk7Ci0gICAgICAgICAgICBz
Y2hlZF9jb250ZXh0X3N3aXRjaCh2cHJldiwgdnByZXYsIG5vdyk7CisgICAgICAgICAgICBzY2hl
ZF9jb250ZXh0X3N3aXRjaCh2cHJldiwgdnByZXYsIGZhbHNlLCBub3cpOwogCiAgICAgICAgICAg
ICByZXR1cm4gTlVMTDsgICAgICAgICAvKiBBUk0gb25seS4gKi8KICAgICAgICAgfQpAQCAtMjAz
NSw3ICsyMTAzLDggQEAgc3RhdGljIHZvaWQgc2NoZWRfc2xhdmUodm9pZCkKIAogICAgIHBjcHVf
c2NoZWR1bGVfdW5sb2NrX2lycShsb2NrLCBjcHUpOwogCi0gICAgc2NoZWRfY29udGV4dF9zd2l0
Y2godnByZXYsIHNjaGVkX3VuaXQydmNwdV9jcHUobmV4dCwgY3B1KSwgbm93KTsKKyAgICBzY2hl
ZF9jb250ZXh0X3N3aXRjaCh2cHJldiwgc2NoZWRfdW5pdDJ2Y3B1X2NwdShuZXh0LCBjcHUpLAor
ICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2lkbGVfdW5pdChuZXh0KSAmJiAhaXNfaWRsZV91
bml0KHByZXYpLCBub3cpOwogfQogCiAvKgpAQCAtMjA5Nyw3ICsyMTY2LDggQEAgc3RhdGljIHZv
aWQgc2NoZWR1bGUodm9pZCkKICAgICBwY3B1X3NjaGVkdWxlX3VubG9ja19pcnEobG9jaywgY3B1
KTsKIAogICAgIHZuZXh0ID0gc2NoZWRfdW5pdDJ2Y3B1X2NwdShuZXh0LCBjcHUpOwotICAgIHNj
aGVkX2NvbnRleHRfc3dpdGNoKHZwcmV2LCB2bmV4dCwgbm93KTsKKyAgICBzY2hlZF9jb250ZXh0
X3N3aXRjaCh2cHJldiwgdm5leHQsCisgICAgICAgICAgICAgICAgICAgICAgICAgIWlzX2lkbGVf
dW5pdChwcmV2KSAmJiBpc19pZGxlX3VuaXQobmV4dCksIG5vdyk7CiB9CiAKIC8qIFRoZSBzY2hl
ZHVsZXIgdGltZXI6IGZvcmNlIGEgcnVuIHRocm91Z2ggdGhlIHNjaGVkdWxlciAqLwpAQCAtMjE2
OCw2ICsyMjM4LDcgQEAgc3RhdGljIGludCBjcHVfc2NoZWR1bGVfdXAodW5zaWduZWQgaW50IGNw
dSkKICAgICAgKi8KIAogICAgIHNyLT5jdXJyID0gaWRsZV92Y3B1W2NwdV0tPnNjaGVkX3VuaXQ7
CisgICAgc3ItPnNjaGVkX3VuaXRfaWRsZSA9IGlkbGVfdmNwdVtjcHVdLT5zY2hlZF91bml0Owog
CiAgICAgc3ItPnNjaGVkX3ByaXYgPSBOVUxMOwogCkBAIC0yMzM3LDYgKzI0MDgsNyBAQCB2b2lk
IF9faW5pdCBzY2hlZHVsZXJfaW5pdCh2b2lkKQogICAgIGlmICggdmNwdV9jcmVhdGUoaWRsZV9k
b21haW4sIDApID09IE5VTEwgKQogICAgICAgICBCVUcoKTsKICAgICBnZXRfc2NoZWRfcmVzKDAp
LT5jdXJyID0gaWRsZV92Y3B1WzBdLT5zY2hlZF91bml0OworICAgIGdldF9zY2hlZF9yZXMoMCkt
PnNjaGVkX3VuaXRfaWRsZSA9IGlkbGVfdmNwdVswXS0+c2NoZWRfdW5pdDsKIH0KIAogLyoKZGlm
ZiAtLWdpdCBhL3hlbi9pbmNsdWRlL2FzbS1hcm0vY3VycmVudC5oIGIveGVuL2luY2x1ZGUvYXNt
LWFybS9jdXJyZW50LmgKaW5kZXggMTY1M2U4OWQzMC4uODhiZWI0NjQ1YSAxMDA2NDQKLS0tIGEv
eGVuL2luY2x1ZGUvYXNtLWFybS9jdXJyZW50LmgKKysrIGIveGVuL2luY2x1ZGUvYXNtLWFybS9j
dXJyZW50LmgKQEAgLTE4LDYgKzE4LDcgQEAgREVDTEFSRV9QRVJfQ1BVKHN0cnVjdCB2Y3B1ICos
IGN1cnJfdmNwdSk7CiAKICNkZWZpbmUgY3VycmVudCAgICAgICAgICAgICh0aGlzX2NwdShjdXJy
X3ZjcHUpKQogI2RlZmluZSBzZXRfY3VycmVudCh2Y3B1KSAgZG8geyBjdXJyZW50ID0gKHZjcHUp
OyB9IHdoaWxlICgwKQorI2RlZmluZSBnZXRfY3B1X2N1cnJlbnQoY3B1KSAgKHBlcl9jcHUoY3Vy
cl92Y3B1LCBjcHUpKQogCiAvKiBQZXItVkNQVSBzdGF0ZSB0aGF0IGxpdmVzIGF0IHRoZSB0b3Ag
b2YgdGhlIHN0YWNrICovCiBzdHJ1Y3QgY3B1X2luZm8gewpkaWZmIC0tZ2l0IGEveGVuL2luY2x1
ZGUvYXNtLXg4Ni9jdXJyZW50LmggYi94ZW4vaW5jbHVkZS9hc20teDg2L2N1cnJlbnQuaAppbmRl
eCBmMzUwOGMzYzA4Li4wYjQ3NDg1MzM3IDEwMDY0NAotLS0gYS94ZW4vaW5jbHVkZS9hc20teDg2
L2N1cnJlbnQuaAorKysgYi94ZW4vaW5jbHVkZS9hc20teDg2L2N1cnJlbnQuaApAQCAtNzcsNiAr
NzcsMTEgQEAgc3RydWN0IGNwdV9pbmZvIHsKICAgICAvKiBnZXRfc3RhY2tfYm90dG9tKCkgbXVz
dCBiZSAxNi1ieXRlIGFsaWduZWQgKi8KIH07CiAKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGNwdV9p
bmZvICpnZXRfY3B1X2luZm9fZnJvbV9zdGFjayh1bnNpZ25lZCBsb25nIHNwKQoreworICAgIHJl
dHVybiAoc3RydWN0IGNwdV9pbmZvICopKChzcCB8IChTVEFDS19TSVpFIC0gMSkpICsgMSkgLSAx
OworfQorCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBjcHVfaW5mbyAqZ2V0X2NwdV9pbmZvKHZvaWQp
CiB7CiAjaWZkZWYgX19jbGFuZ19fCkBAIC04Nyw3ICs5Miw3IEBAIHN0YXRpYyBpbmxpbmUgc3Ry
dWN0IGNwdV9pbmZvICpnZXRfY3B1X2luZm8odm9pZCkKICAgICByZWdpc3RlciB1bnNpZ25lZCBs
b25nIHNwIGFzbSgicnNwIik7CiAjZW5kaWYKIAotICAgIHJldHVybiAoc3RydWN0IGNwdV9pbmZv
ICopKChzcCB8IChTVEFDS19TSVpFIC0gMSkpICsgMSkgLSAxOworICAgIHJldHVybiBnZXRfY3B1
X2luZm9fZnJvbV9zdGFjayhzcCk7CiB9CiAKICNkZWZpbmUgZ2V0X2N1cnJlbnQoKSAgICAgICAg
IChnZXRfY3B1X2luZm8oKS0+Y3VycmVudF92Y3B1KQpAQCAtMTI0LDE2ICsxMjksMjIgQEAgdW5z
aWduZWQgbG9uZyBnZXRfc3RhY2tfZHVtcF9ib3R0b20gKHVuc2lnbmVkIGxvbmcgc3ApOwogIyBk
ZWZpbmUgQ0hFQ0tfRk9SX0xJVkVQQVRDSF9XT1JLICIiCiAjZW5kaWYKIAotI2RlZmluZSByZXNl
dF9zdGFja19hbmRfanVtcChfX2ZuKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAorI2RlZmluZSBzd2l0Y2hfc3RhY2tfYW5kX2p1bXAoZm4sIGluc3RyKSAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgXAogICAgICh7ICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgICAgICBfX2FzbV9f
IF9fdm9sYXRpbGVfXyAoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
XAogICAgICAgICAgICAgIm1vdiAlMCwlJSJfX09QInNwOyIgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXAotICAgICAgICAgICAgQ0hFQ0tfRk9SX0xJVkVQQVRDSF9XT1JL
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAgICAgICAgICBpbnN0
ciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBc
CiAgICAgICAgICAgICAgImptcCAlYzEiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBcCi0gICAgICAgICAgICA6IDogInIiIChndWVzdF9jcHVfdXNlcl9y
ZWdzKCkpLCAiaSIgKF9fZm4pIDogIm1lbW9yeSIgKTsgICBcCisgICAgICAgICAgICA6IDogInIi
IChndWVzdF9jcHVfdXNlcl9yZWdzKCkpLCAiaSIgKGZuKSA6ICJtZW1vcnkiICk7ICAgICBcCiAg
ICAgICAgIHVucmVhY2hhYmxlKCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBcCiAgICAgfSkKIAorI2RlZmluZSByZXNldF9zdGFja19hbmRfanVtcChm
bikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAorICAgIHN3aXRjaF9z
dGFja19hbmRfanVtcChmbiwgQ0hFQ0tfRk9SX0xJVkVQQVRDSF9XT1JLKQorCisjZGVmaW5lIHJl
c2V0X3N0YWNrX2FuZF9qdW1wX25vbHAoZm4pICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBcCisgICAgc3dpdGNoX3N0YWNrX2FuZF9qdW1wKGZuLCAiIikKKwogLyoKICAqIFdoaWNo
IFZDUFUncyBzdGF0ZSBpcyBjdXJyZW50bHkgcnVubmluZyBvbiBlYWNoIENQVT8KICAqIFRoaXMg
aXMgbm90IG5lY2VzYXNyaWx5IHRoZSBzYW1lIGFzICdjdXJyZW50JyBhcyBhIENQVSBtYXkgYmUK
ZGlmZiAtLWdpdCBhL3hlbi9pbmNsdWRlL2FzbS14ODYvc21wLmggYi94ZW4vaW5jbHVkZS9hc20t
eDg2L3NtcC5oCmluZGV4IDYxNDQ2ZDBlZmQuLmRiZWVkMmZkNDEgMTAwNjQ0Ci0tLSBhL3hlbi9p
bmNsdWRlL2FzbS14ODYvc21wLmgKKysrIGIveGVuL2luY2x1ZGUvYXNtLXg4Ni9zbXAuaApAQCAt
NzcsNiArNzcsMTMgQEAgdm9pZCBzZXRfbnJfc29ja2V0cyh2b2lkKTsKIC8qIFJlcHJlc2VudGlu
ZyBIVCBhbmQgY29yZSBzaWJsaW5ncyBpbiBlYWNoIHNvY2tldC4gKi8KIGV4dGVybiBjcHVtYXNr
X3QgKipzb2NrZXRfY3B1bWFzazsKIAorLyoKKyAqIFRvIGJlIHVzZWQgb25seSB3aGlsZSBubyBj
b250ZXh0IHN3aXRjaCBjYW4gb2NjdXIgb24gdGhlIGNwdSwgaS5lLgorICogYnkgY2VydGFpbiBz
Y2hlZHVsaW5nIGNvZGUgb25seS4KKyAqLworI2RlZmluZSBnZXRfY3B1X2N1cnJlbnQoY3B1KSBc
CisgICAgKGdldF9jcHVfaW5mb19mcm9tX3N0YWNrKCh1bnNpZ25lZCBsb25nKXN0YWNrX2Jhc2Vb
Y3B1XSktPmN1cnJlbnRfdmNwdSkKKwogI2VuZGlmIC8qICFfX0FTU0VNQkxZX18gKi8KIAogI2Vu
ZGlmCmRpZmYgLS1naXQgYS94ZW4vaW5jbHVkZS94ZW4vc2NoZWQtaWYuaCBiL3hlbi9pbmNsdWRl
L3hlbi9zY2hlZC1pZi5oCmluZGV4IDFiMjk2YjE1MGYuLjQxYTEwODNhMDggMTAwNjQ0Ci0tLSBh
L3hlbi9pbmNsdWRlL3hlbi9zY2hlZC1pZi5oCisrKyBiL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC1p
Zi5oCkBAIC0zOSw2ICszOSw4IEBAIHN0cnVjdCBzY2hlZF9yZXNvdXJjZSB7CiAgICAgc3Bpbmxv
Y2tfdCAgICAgICAgICpzY2hlZHVsZV9sb2NrLAogICAgICAgICAgICAgICAgICAgICAgICBfbG9j
azsKICAgICBzdHJ1Y3Qgc2NoZWRfdW5pdCAgKmN1cnI7CisgICAgc3RydWN0IHNjaGVkX3VuaXQg
ICpzY2hlZF91bml0X2lkbGU7CisgICAgc3RydWN0IHNjaGVkX3VuaXQgICpwcmV2OwogICAgIHZv
aWQgICAgICAgICAgICAgICAqc2NoZWRfcHJpdjsKICAgICBzdHJ1Y3QgdGltZXIgICAgICAgIHNf
dGltZXI7ICAgICAgICAvKiBzY2hlZHVsaW5nIHRpbWVyICAgICAgICAgICAgICAgICovCiAKQEAg
LTE5NCw3ICsxOTYsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgc2NoZWRfY2xlYXJfcGF1c2VfZmxh
Z3NfYXRvbWljKHN0cnVjdCBzY2hlZF91bml0ICp1bml0LAogCiBzdGF0aWMgaW5saW5lIHN0cnVj
dCBzY2hlZF91bml0ICpzY2hlZF9pZGxlX3VuaXQodW5zaWduZWQgaW50IGNwdSkKIHsKLSAgICBy
ZXR1cm4gaWRsZV92Y3B1W2NwdV0tPnNjaGVkX3VuaXQ7CisgICAgcmV0dXJuIGdldF9zY2hlZF9y
ZXMoY3B1KS0+c2NoZWRfdW5pdF9pZGxlOwogfQogCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGlu
dCBzY2hlZF9nZXRfcmVzb3VyY2VfY3B1KHVuc2lnbmVkIGludCBjcHUpCmRpZmYgLS1naXQgYS94
ZW4vaW5jbHVkZS94ZW4vc2NoZWQuaCBiL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC5oCmluZGV4IDEy
ZjAwY2Q3OGQuLmNlNDMyOWRiNzIgMTAwNjQ0Ci0tLSBhL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC5o
CisrKyBiL3hlbi9pbmNsdWRlL3hlbi9zY2hlZC5oCkBAIC05MjksNiArOTI5LDcgQEAgdm9pZCBy
ZXN0b3JlX3ZjcHVfYWZmaW5pdHkoc3RydWN0IGRvbWFpbiAqZCk7CiAKIHZvaWQgdmNwdV9ydW5z
dGF0ZV9nZXQoc3RydWN0IHZjcHUgKnYsIHN0cnVjdCB2Y3B1X3J1bnN0YXRlX2luZm8gKnJ1bnN0
YXRlKTsKIHVpbnQ2NF90IGdldF9jcHVfaWRsZV90aW1lKHVuc2lnbmVkIGludCBjcHUpOwordm9p
ZCBzY2hlZF9ndWVzdF9pZGxlKHZvaWQgKCppZGxlKSAodm9pZCksIHVuc2lnbmVkIGludCBjcHUp
OwogCiAvKgogICogVXNlZCBieSBpZGxlIGxvb3AgdG8gZGVjaWRlIHdoZXRoZXIgdGhlcmUgaXMg
d29yayB0byBkbzoKLS0gCjIuMTYuNAoKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fClhlbi1kZXZlbCBtYWlsaW5nIGxpc3QKWGVuLWRldmVsQGxpc3RzLnhl
bnByb2plY3Qub3JnCmh0dHBzOi8vbGlzdHMueGVucHJvamVjdC5vcmcvbWFpbG1hbi9saXN0aW5m
by94ZW4tZGV2ZWw=
